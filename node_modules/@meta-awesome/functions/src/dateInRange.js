import moment from 'moment/moment';

/**
 * @param {Object}  params
 * @param {Date | import('moment').Moment | String} [date = moment()]  Date that will be compared
 * @param {Date | import('moment').Moment | String} startDate  Initial date to compare
 * @param {Date | import('moment').Moment | String} endDate  Final date to compare
 * @return {Object}
 * @property {boolean} isBefore `true` if date is before that start date
 * @property {boolean} isAfter `true` if date is after that end date
 * @property {boolean} isNow `true` if date is between start date and end date
 *
 * @example
 * import dateInRange from '@meta-awesome/functions/src/dateInRange'
 *
 * // comparing today
 * dateInRange({ startDate: '2019-01-01', endDate: '2019-12-01' });
 * // { isBefore: false, isAfter: false, isNow: true }
 *
 * @example
 * dateInRange({ date: '2018-12-20', startDate: '2019-01-01', endDate: '2019-12-01' });
 * // { isBefore: true, isAfter: false, isNow: false }
 *
 * @example
 * dateInRange({ date: '2020-12-20', startDate: '2019-01-01', endDate: '2019-12-01' });
 * // { isBefore: false, isAfter: true, isNow: false }
 * */
const dateInRange = ({ date = moment(), startDate, endDate }) => {
  const startDateMoment = moment(startDate).startOf('day');
  const endDateMoment = moment(endDate).endOf('day');

  const isBefore = date.isBefore(startDateMoment);
  const isAfter = date.isAfter(endDateMoment);
  const isNow = !isBefore && !isAfter;

  return {
    isBefore,
    isAfter,
    isNow
  };
};

export default dateInRange;
