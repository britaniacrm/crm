{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/customers/components/customerFormFilter/CustomerFormFilter.js\";\nimport React, { useMemo, useState, forwardRef, useCallback, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport isEmpty from 'lodash/isEmpty';\nimport isEqual from 'lodash/isEqual';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport * as ENUM_SELECTS from '@britania-crm/constants/customer.constants';\nimport { useFormEffect } from '@britania-crm/forms';\nimport customerFilterSchema, { INITIAL_VALUES } from '@britania-crm/forms/schemas/customer/customer.filter.schema';\nimport I18n, { useT } from '@britania-crm/i18n';\nimport { clients, users, workflows } from '@britania-crm/services/apis/crmApi/resources/routes';\nimport { searchStates } from '@britania-crm/services/apis/ibgeApi';\nimport useCrmApi from '@britania-crm/services/hooks/useCrmApi';\nimport Button from '@britania-crm/web-components/Button';\nimport Form from '@britania-crm/web-components/Form';\nimport InputAutocomplete from '@britania-crm/web-components/InputAutocomplete';\nimport InputCpfCnpj from '@britania-crm/web-components/InputCpfCnpj';\nimport InputDate from '@britania-crm/web-components/InputDate';\nimport InputNumber from '@britania-crm/web-components/InputNumber';\nimport InputSelect from '@britania-crm/web-components/InputSelect';\nimport InputText from '@britania-crm/web-components/InputText';\nimport RadioGroup from '@britania-crm/web-components/RadioGroup';\nimport useStyles from './styles';\nconst CustomerFormFilter = forwardRef(({\n  filters,\n  ...props\n}, formRef) => {\n  const t = useT();\n  const classes = useStyles();\n  const [show, setShow] = useState(false);\n  const [type, setType] = useState('');\n  const [version, setVersion] = useState('');\n  const [registrationType, setRegistrationType] = useState('');\n  const [stateOptions, setStateOptions] = useState([]);\n  const options = useMemo(() => ENUM_SELECTS.getRegimeLetterOptions(t), [t]);\n  const {\n    data: versionFromApi\n  } = useCrmApi(type && workflows.getVersionUrl(type));\n  const getStateOptions = useCallback(async () => {\n    const states = await searchStates();\n    setStateOptions(states);\n  }, []);\n  const onClickAdvancedSearchButton = useCallback(() => {\n    setShow(old => !old);\n    formRef.current.reloadSchema();\n  }, [formRef]);\n  const onChangeWorkflowTypeId = useCallback(() => setType(formRef.current.getFieldValue('workflowTypeId')), [formRef]);\n  const onChangeVersion = useCallback(() => setVersion(formRef.current.getFieldValue('version')), [formRef]);\n  useFormEffect(() => {\n    if (isEmpty(versionFromApi)) {\n      formRef.current.setFieldValue('version', '');\n    }\n  }, [formRef, versionFromApi]);\n  useEffect(() => {\n    getStateOptions();\n  }, [getStateOptions]);\n  useFormEffect(() => {\n    if (!isEmpty(filters) && !isEqual(formRef.current.getData(), filters)) {\n      formRef.current.setData(old => ({ ...filters,\n        clientGroup: old.clientGroup,\n        regionalManager: old.regionalManager\n      }));\n    }\n  }, [filters, formRef]);\n  return /*#__PURE__*/React.createElement(Form, Object.assign({\n    ref: formRef\n  }, props, {\n    schemaConstructor: customerFilterSchema,\n    defaultValues: INITIAL_VALUES,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputSelect, {\n    name: \"clientRegistrationType\",\n    label: t('type of registration'),\n    valueKey: \"name\",\n    idKey: \"id\",\n    options: ENUM_SELECTS.enumTypeRegister,\n    onValueChange: setRegistrationType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputSelect, {\n    name: \"clientRegistrationStatus\",\n    label: t('registration status'),\n    valueKey: \"name\",\n    idKey: \"id\",\n    options: ENUM_SELECTS.enumRegistrationStatus,\n    disabled: !registrationType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputText, {\n    label: t('matrix'),\n    name: \"parentCompany\",\n    disabled: !registrationType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputNumber, {\n    label: t('matrix code', {\n      abbreviation: false\n    }),\n    name: \"parentCompanyCode\",\n    disabled: !registrationType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputSelect, {\n    name: \"creditSituation\",\n    label: t('credit status', {\n      abbreviation: false\n    }),\n    valueKey: \"name\",\n    idKey: \"id\",\n    options: ENUM_SELECTS.enumCreditStatus,\n    disabled: !registrationType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputNumber, {\n    label: t('days without billing', {\n      abbreviation: false\n    }),\n    name: \"daysWithoutBilling\",\n    disabled: !registrationType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputCpfCnpj, {\n    label: t('cnpj'),\n    name: \"cnpj\",\n    mode: \"cnpj\",\n    disabled: !registrationType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.regimeLetterTitle,\n    variant: \"h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 11\n    }\n  }, t('letter of regime', {\n    abbreviation: false\n  })), /*#__PURE__*/React.createElement(RadioGroup, {\n    name: \"regimeLetter\",\n    options: options,\n    clearable: true,\n    disabled: !registrationType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(I18n, {\n    as: Button,\n    onClick: onClickAdvancedSearchButton,\n    color: \"warning\",\n    size: \"small\",\n    variant: show ? 'outlined' : 'contained',\n    startIcon: show ? /*#__PURE__*/React.createElement(ChevronLeft, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 32\n      }\n    }) : null,\n    endIcon: !show ? /*#__PURE__*/React.createElement(ChevronRight, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 31\n      }\n    }) : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 11\n    }\n  }, \"advanced search\"))), show && /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    className: classes.advancedSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputText, {\n    label: t('cd code', {\n      abbreviation: false\n    }),\n    name: \"cdCode\",\n    disabled: !registrationType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputText, {\n    label: t('responsible service'),\n    name: \"responsibleService\",\n    disabled: !registrationType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputAutocomplete, {\n    url: users.regionalManager,\n    paramName: \"description\",\n    valueKey: \"description\",\n    label: t('regional manager'),\n    name: \"regionalManager\",\n    disabled: !registrationType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputText, {\n    label: t('company name'),\n    name: \"companyName\",\n    disabled: !registrationType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputDate, {\n    label: t('inclusion date'),\n    name: \"registrationInclusionDate\",\n    disabled: !registrationType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputDate, {\n    label: t('date of the conclusion'),\n    name: \"registrationConclusionDate\",\n    disabled: !registrationType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputSelect, {\n    name: \"workflowTypeId\",\n    label: t('workflow type'),\n    options: ENUM_SELECTS.enumWorkflowTypeId,\n    valueKey: \"description\",\n    onValueChange: onChangeWorkflowTypeId,\n    disabled: !registrationType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputSelect, {\n    name: \"version\",\n    label: t('version'),\n    valueKey: \"version\",\n    idKey: \"id\",\n    options: versionFromApi,\n    onValueChange: onChangeVersion,\n    disabled: !registrationType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputAutocomplete, {\n    url: version ? workflows.getTasksUrl(version) : '',\n    valueKey: \"title\",\n    label: t('workflow task'),\n    name: \"workflowTaskId\",\n    disabled: !type || !version,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputSelect, {\n    name: \"state\",\n    label: \"UF\",\n    valueKey: \"sigla\",\n    idKey: \"sigla\",\n    options: stateOptions,\n    disabled: !registrationType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputText, {\n    label: t('city', {\n      howMany: 1\n    }),\n    name: \"city\",\n    disabled: !registrationType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputSelect, {\n    label: t('category', {\n      howMany: 1\n    }),\n    name: \"category\",\n    valueKey: \"name\",\n    options: ENUM_SELECTS.category,\n    disabled: !registrationType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputAutocomplete, {\n    url: clients.getGroups,\n    paramName: \"nameClientGroup\",\n    valueKey: \"nameClientGroup\",\n    label: t('customers group'),\n    name: \"clientGroup\",\n    disabled: !registrationType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 13\n    }\n  }))));\n});\nCustomerFormFilter.propTypes = {\n  filters: PropTypes.object.isRequired\n};\nexport default CustomerFormFilter;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/customers/components/customerFormFilter/CustomerFormFilter.js"],"names":["React","useMemo","useState","forwardRef","useCallback","useEffect","PropTypes","isEmpty","isEqual","Grid","Typography","ChevronLeft","ChevronRight","ENUM_SELECTS","useFormEffect","customerFilterSchema","INITIAL_VALUES","I18n","useT","clients","users","workflows","searchStates","useCrmApi","Button","Form","InputAutocomplete","InputCpfCnpj","InputDate","InputNumber","InputSelect","InputText","RadioGroup","useStyles","CustomerFormFilter","filters","props","formRef","t","classes","show","setShow","type","setType","version","setVersion","registrationType","setRegistrationType","stateOptions","setStateOptions","options","getRegimeLetterOptions","data","versionFromApi","getVersionUrl","getStateOptions","states","onClickAdvancedSearchButton","old","current","reloadSchema","onChangeWorkflowTypeId","getFieldValue","onChangeVersion","setFieldValue","getData","setData","clientGroup","regionalManager","enumTypeRegister","enumRegistrationStatus","abbreviation","enumCreditStatus","regimeLetterTitle","advancedSearch","enumWorkflowTypeId","getTasksUrl","howMany","category","getGroups","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, {\n  useMemo,\n  useState,\n  forwardRef,\n  useCallback,\n  useEffect\n} from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport isEmpty from 'lodash/isEmpty'\nimport isEqual from 'lodash/isEqual'\n\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport ChevronLeft from '@material-ui/icons/ChevronLeft'\nimport ChevronRight from '@material-ui/icons/ChevronRight'\n\nimport * as ENUM_SELECTS from '@britania-crm/constants/customer.constants'\nimport { useFormEffect } from '@britania-crm/forms'\nimport customerFilterSchema, { INITIAL_VALUES } from '@britania-crm/forms/schemas/customer/customer.filter.schema'\nimport I18n, { useT } from '@britania-crm/i18n'\nimport {\n  clients,\n  users,\n  workflows\n} from '@britania-crm/services/apis/crmApi/resources/routes'\nimport { searchStates } from '@britania-crm/services/apis/ibgeApi'\nimport useCrmApi from '@britania-crm/services/hooks/useCrmApi'\nimport Button from '@britania-crm/web-components/Button'\nimport Form from '@britania-crm/web-components/Form'\nimport InputAutocomplete from '@britania-crm/web-components/InputAutocomplete'\nimport InputCpfCnpj from '@britania-crm/web-components/InputCpfCnpj'\nimport InputDate from '@britania-crm/web-components/InputDate'\nimport InputNumber from '@britania-crm/web-components/InputNumber'\nimport InputSelect from '@britania-crm/web-components/InputSelect'\nimport InputText from '@britania-crm/web-components/InputText'\nimport RadioGroup from '@britania-crm/web-components/RadioGroup'\n\nimport useStyles from './styles'\n\nconst CustomerFormFilter = forwardRef(({ filters, ...props }, formRef) => {\n  const t = useT()\n  const classes = useStyles()\n\n  const [show, setShow] = useState(false)\n  const [type, setType] = useState('')\n  const [version, setVersion] = useState('')\n  const [registrationType, setRegistrationType] = useState('')\n  const [stateOptions, setStateOptions] = useState([])\n\n  const options = useMemo(() => ENUM_SELECTS.getRegimeLetterOptions(t), [t])\n\n  const { data: versionFromApi } = useCrmApi(type && workflows.getVersionUrl(type))\n\n  const getStateOptions = useCallback(\n    async () => {\n      const states = await searchStates()\n      setStateOptions(states)\n    },\n    []\n  )\n\n  const onClickAdvancedSearchButton = useCallback(\n    () => {\n      setShow((old) => !old)\n      formRef.current.reloadSchema()\n    },\n    [formRef]\n  )\n\n  const onChangeWorkflowTypeId = useCallback(\n    () =>\n      setType(formRef.current.getFieldValue('workflowTypeId'))\n    ,\n    [formRef]\n  )\n\n  const onChangeVersion = useCallback(\n    () =>\n      setVersion(formRef.current.getFieldValue('version'))\n    ,\n    [formRef]\n  )\n\n  useFormEffect(\n    () => {\n      if (isEmpty(versionFromApi)) {\n        formRef.current.setFieldValue('version', '')\n      }\n    }, [formRef, versionFromApi])\n\n  useEffect(() => {\n    getStateOptions()\n  }, [getStateOptions])\n\n  useFormEffect(\n    () => {\n      if (\n        !isEmpty(filters) &&\n        !isEqual(formRef.current.getData(), filters)\n      ) {\n        formRef.current.setData((old) => ({\n          ...filters,\n          clientGroup: old.clientGroup,\n          regionalManager: old.regionalManager\n        }))\n      }\n    },\n    [filters, formRef]\n  )\n\n  return (\n    <Form\n      ref={ formRef }\n      { ...props }\n      schemaConstructor={ customerFilterSchema }\n      defaultValues={ INITIAL_VALUES }\n    >\n      <Grid container spacing={ 1 }>\n        <Grid item xs={ 12 } md={ 3 }>\n          <InputSelect\n            name=\"clientRegistrationType\"\n            label={ t('type of registration') }\n            valueKey= \"name\"\n            idKey=\"id\"\n            options={ ENUM_SELECTS.enumTypeRegister }\n            onValueChange={ setRegistrationType }\n          />\n        </Grid>\n        <Grid item xs={ 12 } md={ 3 }>\n          <InputSelect\n            name=\"clientRegistrationStatus\"\n            label={ t('registration status') }\n            valueKey=\"name\"\n            idKey= \"id\"\n            options={ ENUM_SELECTS.enumRegistrationStatus }\n            disabled={ !registrationType }\n          />\n        </Grid>\n        <Grid item xs={ 12 } md={ 6 }>\n          <InputText\n            label={ t('matrix') }\n            name=\"parentCompany\"\n            disabled={ !registrationType }\n          />\n        </Grid>\n        <Grid item xs={ 12 } md={ 3 }>\n          <InputNumber\n            label={ t('matrix code', { abbreviation: false }) }\n            name=\"parentCompanyCode\"\n            disabled={ !registrationType }\n          />\n        </Grid>\n        <Grid item xs={ 12 } md={ 3 }>\n          <InputSelect\n            name=\"creditSituation\"\n            label={ t('credit status', { abbreviation: false }) }\n            valueKey=\"name\"\n            idKey=\"id\"\n            options={ ENUM_SELECTS.enumCreditStatus }\n            disabled={ !registrationType }\n          />\n        </Grid>\n        <Grid item xs={ 12 } md={ 3 }>\n          <InputNumber\n            label={ t('days without billing', { abbreviation: false }) }\n            name=\"daysWithoutBilling\"\n            disabled={ !registrationType }\n          />\n        </Grid>\n        <Grid item xs={ 12 } md={ 3 }>\n          <InputCpfCnpj\n            label={ t('cnpj') }\n            name=\"cnpj\"\n            mode=\"cnpj\"\n            disabled={ !registrationType }\n          />\n        </Grid>\n        <Grid item xs={ 12 } md={ 12 }>\n          <Typography className={ classes.regimeLetterTitle } variant=\"h4\">\n            {t('letter of regime', { abbreviation: false })}\n          </Typography>\n          <RadioGroup\n            name=\"regimeLetter\"\n            options={ options }\n            clearable\n            disabled={ !registrationType }\n          />\n        </Grid>\n        <Grid item xs={ 4 } md={ 4 } >\n          <I18n as={ Button }\n            onClick={ onClickAdvancedSearchButton }\n            color=\"warning\"\n            size=\"small\"\n            variant={ show ? 'outlined' : 'contained' }\n            startIcon={ show ? <ChevronLeft /> : null }\n            endIcon={ !show ? <ChevronRight /> : null }\n          >\n            advanced search\n          </I18n>\n        </Grid>\n      </Grid>\n      {show && (\n        <Grid container spacing={ 1 } className={ classes.advancedSearch }>\n          <Grid item xs={ 12 } md={ 3 }>\n            <InputText\n              label={ t('cd code', { abbreviation: false }) }\n              name=\"cdCode\"\n              disabled={ !registrationType }\n            />\n          </Grid>\n          <Grid item xs={ 12 } md={ 3 }>\n            <InputText\n              label={ t('responsible service') }\n              name=\"responsibleService\"\n              disabled={ !registrationType }\n            />\n          </Grid>\n          <Grid item xs={ 12 } md={ 3 }>\n            <InputAutocomplete\n              url={ users.regionalManager }\n              paramName=\"description\"\n              valueKey=\"description\"\n              label={ t('regional manager') }\n              name=\"regionalManager\"\n              disabled={ !registrationType }\n            />\n          </Grid>\n          <Grid item xs={ 12 } md={ 3 }>\n          </Grid>\n          <Grid item xs={ 12 } md={ 6 }>\n            <InputText\n              label={ t('company name') }\n              name=\"companyName\"\n              disabled={ !registrationType }\n            />\n          </Grid>\n          <Grid item xs={ 12 } md={ 3 }>\n            <InputDate\n              label={ t('inclusion date') }\n              name=\"registrationInclusionDate\"\n              disabled={ !registrationType }\n            />\n          </Grid>\n          <Grid item xs={ 12 } md={ 3 }>\n            <InputDate\n              label={ t('date of the conclusion') }\n              name=\"registrationConclusionDate\"\n              disabled={ !registrationType }\n            />\n          </Grid>\n          <Grid item xs={ 12 } md={ 3 }>\n            <InputSelect\n              name=\"workflowTypeId\"\n              label={ t('workflow type') }\n              options={ ENUM_SELECTS.enumWorkflowTypeId }\n              valueKey=\"description\"\n              onValueChange={ onChangeWorkflowTypeId }\n              disabled={ !registrationType }\n            />\n          </Grid>\n          <Grid item xs={ 12 } md={ 3 }>\n            <InputSelect\n              name=\"version\"\n              label={ t('version') }\n              valueKey= \"version\"\n              idKey=\"id\"\n              options={ versionFromApi }\n              onValueChange={ onChangeVersion }\n              disabled={ !registrationType }\n            />\n          </Grid>\n          <Grid item xs={ 12 } md={ 3 }>\n            <InputAutocomplete\n              url={ version ? workflows.getTasksUrl(version) : '' }\n              valueKey=\"title\"\n              label= { t('workflow task') }\n              name=\"workflowTaskId\"\n              disabled={ !type || !version }\n            />\n          </Grid>\n          <Grid item xs={ 12 } md={ 3 }>\n            <InputSelect\n              name=\"state\"\n              label=\"UF\"\n              valueKey=\"sigla\"\n              idKey=\"sigla\"\n              options={ stateOptions }\n              disabled={ !registrationType }\n            />\n          </Grid>\n          <Grid item xs={ 12 } md={ 3 }>\n            <InputText\n              label={ t('city', { howMany: 1 }) }\n              name=\"city\"\n              disabled={ !registrationType }\n            />\n          </Grid>\n          <Grid item xs={ 12 } md={ 3 }>\n            <InputSelect\n              label={ t('category', { howMany: 1 }) }\n              name=\"category\"\n              valueKey= \"name\"\n              options={ ENUM_SELECTS.category }\n              disabled={ !registrationType }\n            />\n          </Grid>\n          <Grid item xs={ 12 } md={ 3 }>\n            <InputAutocomplete\n              url={ clients.getGroups }\n              paramName=\"nameClientGroup\"\n              valueKey=\"nameClientGroup\"\n              label={ t('customers group') }\n              name=\"clientGroup\"\n              disabled={ !registrationType }\n            />\n          </Grid>\n        </Grid>\n      )}\n    </Form>\n  )\n})\n\nCustomerFormFilter.propTypes = { filters: PropTypes.object.isRequired }\n\nexport default CustomerFormFilter\n"]},"metadata":{},"sourceType":"module"}