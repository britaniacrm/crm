{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/components/TextField/TextField.js\";\nimport React, { forwardRef, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport TextFieldForm from './TextFieldForm';\nimport TextFieldStyled from './TextFieldStyled';\nconst TextField = forwardRef((props, ref) => {\n  const {\n    detached,\n    value,\n    setMask,\n    ...rest\n  } = props;\n  const Input = useMemo(() => detached ? TextFieldStyled : TextFieldForm, [detached]);\n  const mask = useMemo(() => {\n    if (detached && setMask) {\n      return setMask(value, rest);\n    }\n\n    return undefined;\n  }, [detached, rest, setMask, value]);\n  return /*#__PURE__*/React.createElement(Input, Object.assign({\n    ref: ref,\n    value: value,\n    setMask: setMask,\n    mask: mask\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }));\n});\nTextField.propTypes = {\n  detached: PropTypes.bool,\n  setMask: PropTypes.func,\n  value: PropTypes.any\n};\nTextField.defaultProps = {\n  detached: false,\n  setMask: undefined,\n  value: ''\n};\nexport default TextField;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/components/TextField/TextField.js"],"names":["React","forwardRef","useMemo","PropTypes","TextFieldForm","TextFieldStyled","TextField","props","ref","detached","value","setMask","rest","Input","mask","undefined","propTypes","bool","func","any","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IACEC,UADF,EAEEC,OAFF,QAGO,OAHP;AAKA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AAEA,MAAMC,SAAS,GAAGL,UAAU,CAAC,CAACM,KAAD,EAAQC,GAAR,KAAgB;AAC3C,QAAM;AACJC,IAAAA,QADI;AAEJC,IAAAA,KAFI;AAGJC,IAAAA,OAHI;AAIJ,OAAGC;AAJC,MAKFL,KALJ;AAOA,QAAMM,KAAK,GAAGX,OAAO,CACnB,MAAMO,QAAQ,GAAGJ,eAAH,GAAqBD,aADhB,EAEnB,CAACK,QAAD,CAFmB,CAArB;AAKA,QAAMK,IAAI,GAAGZ,OAAO,CAClB,MAAM;AACJ,QAAIO,QAAQ,IAAIE,OAAhB,EAAyB;AACvB,aAAOA,OAAO,CAACD,KAAD,EAAQE,IAAR,CAAd;AACD;;AACD,WAAOG,SAAP;AACD,GANiB,EAOlB,CAACN,QAAD,EAAWG,IAAX,EAAiBD,OAAjB,EAA0BD,KAA1B,CAPkB,CAApB;AAUA,sBACE,oBAAC,KAAD;AACE,IAAA,GAAG,EAAGF,GADR;AAEE,IAAA,KAAK,EAAGE,KAFV;AAGE,IAAA,OAAO,EAAGC,OAHZ;AAIE,IAAA,IAAI,EAAGG;AAJT,KAKOF,IALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AASD,CAhC2B,CAA5B;AAkCAN,SAAS,CAACU,SAAV,GAAsB;AACpBP,EAAAA,QAAQ,EAAEN,SAAS,CAACc,IADA;AAEpBN,EAAAA,OAAO,EAAER,SAAS,CAACe,IAFC;AAGpBR,EAAAA,KAAK,EAAEP,SAAS,CAACgB;AAHG,CAAtB;AAMAb,SAAS,CAACc,YAAV,GAAyB;AACvBX,EAAAA,QAAQ,EAAE,KADa;AAEvBE,EAAAA,OAAO,EAAEI,SAFc;AAGvBL,EAAAA,KAAK,EAAE;AAHgB,CAAzB;AAMA,eAAeJ,SAAf","sourcesContent":["import React, {\n  forwardRef,\n  useMemo\n} from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport TextFieldForm from './TextFieldForm'\nimport TextFieldStyled from './TextFieldStyled'\n\nconst TextField = forwardRef((props, ref) => {\n  const {\n    detached,\n    value,\n    setMask,\n    ...rest\n  } = props\n\n  const Input = useMemo(\n    () => detached ? TextFieldStyled : TextFieldForm,\n    [detached]\n  )\n\n  const mask = useMemo(\n    () => {\n      if (detached && setMask) {\n        return setMask(value, rest)\n      }\n      return undefined\n    },\n    [detached, rest, setMask, value]\n  )\n\n  return (\n    <Input\n      ref={ ref }\n      value={ value }\n      setMask={ setMask }\n      mask={ mask }\n      { ...rest }\n    />\n  )\n})\n\nTextField.propTypes = {\n  detached: PropTypes.bool,\n  setMask: PropTypes.func,\n  value: PropTypes.any\n}\n\nTextField.defaultProps = {\n  detached: false,\n  setMask: undefined,\n  value: ''\n}\n\nexport default TextField\n"]},"metadata":{},"sourceType":"module"}