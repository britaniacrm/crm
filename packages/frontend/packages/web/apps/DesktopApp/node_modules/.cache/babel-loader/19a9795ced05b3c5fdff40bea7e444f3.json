{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/core/forms/src/providers/FieldComponent.js\";\nimport React, { useState, useEffect, useRef, useMemo, forwardRef, useImperativeHandle } from 'react';\nimport PropTypes from 'prop-types';\nimport useField from '../hooks/useField';\nconst FieldComponent = forwardRef((props, fieldRef) => {\n  const {\n    Component,\n    transformValue,\n    onValueChange,\n    touchOnChange,\n    defaultValue,\n    transformRender,\n    ...rest\n  } = props;\n  const {\n    id,\n    setTouched,\n    handleChangeNative,\n    imperativeHandles,\n    required\n  } = useField();\n  const [value, setValue] = useState(defaultValue);\n  const mounted = useRef(null);\n  const inputRef = useRef(null);\n  const transformedValue = useMemo(() => transformRender(value), [value, transformRender]);\n  useEffect(() => {\n    const newValue = transformValue(value);\n    const originalMounted = mounted.current;\n\n    if (mounted.current) {\n      if (touchOnChange) {\n        setTouched(true);\n      }\n\n      handleChangeNative(newValue);\n    } else {\n      mounted.current = true;\n    }\n\n    onValueChange(newValue, originalMounted); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [value]);\n  useImperativeHandle(fieldRef, () => ({ ...inputRef.current,\n    ...imperativeHandles,\n    value,\n    setValue\n  }), [imperativeHandles, value, setValue]);\n  return /*#__PURE__*/React.createElement(Component, Object.assign({\n    id: id,\n    required: required\n  }, rest, {\n    value: transformedValue,\n    setValue: setValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }));\n});\nFieldComponent.propTypes = {\n  Component: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n  defaultValue: PropTypes.any,\n  transformValue: PropTypes.func,\n  transformRender: PropTypes.func,\n  onValueChange: PropTypes.func,\n  touchOnChange: PropTypes.bool\n};\nFieldComponent.defaultProps = {\n  Component: () => null,\n  defaultValue: undefined,\n  transformValue: v => v,\n  transformRender: v => v,\n\n  onValueChange() {},\n\n  touchOnChange: false\n};\nexport default FieldComponent;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/core/forms/src/providers/FieldComponent.js"],"names":["React","useState","useEffect","useRef","useMemo","forwardRef","useImperativeHandle","PropTypes","useField","FieldComponent","props","fieldRef","Component","transformValue","onValueChange","touchOnChange","defaultValue","transformRender","rest","id","setTouched","handleChangeNative","imperativeHandles","required","value","setValue","mounted","inputRef","transformedValue","newValue","originalMounted","current","propTypes","oneOfType","object","func","isRequired","any","bool","defaultProps","undefined","v"],"mappings":"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","sourcesContent":["import React, {\n  useState,\n  useEffect,\n  useRef,\n  useMemo,\n  forwardRef,\n  useImperativeHandle\n} from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport useField from '../hooks/useField'\n\nconst FieldComponent = forwardRef((props, fieldRef) => {\n  const {\n    Component,\n    transformValue,\n    onValueChange,\n    touchOnChange,\n    defaultValue,\n    transformRender,\n    ...rest\n  } = props\n\n  const {\n    id,\n    setTouched,\n    handleChangeNative,\n    imperativeHandles,\n    required\n  } = useField()\n\n  const [value, setValue] = useState(defaultValue)\n\n  const mounted = useRef(null)\n  const inputRef = useRef(null)\n\n  const transformedValue = useMemo(\n    () => transformRender(value),\n    [value, transformRender]\n  )\n\n  useEffect(() => {\n    const newValue = transformValue(value)\n    const originalMounted = mounted.current\n    if (mounted.current) {\n      if (touchOnChange) {\n        setTouched(true)\n      }\n      handleChangeNative(newValue)\n    } else {\n      mounted.current = true\n    }\n    onValueChange(newValue, originalMounted)\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [value])\n\n  useImperativeHandle(fieldRef, () => ({\n    ...inputRef.current,\n    ...imperativeHandles,\n    value,\n    setValue\n  }), [imperativeHandles, value, setValue])\n\n  return (\n    <Component\n      id={ id }\n      required={ required }\n      { ...rest }\n      value={ transformedValue }\n      setValue={ setValue }\n    />\n  )\n})\n\nFieldComponent.propTypes = {\n  Component: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.func\n  ]).isRequired,\n  defaultValue: PropTypes.any,\n  transformValue: PropTypes.func,\n  transformRender: PropTypes.func,\n  onValueChange: PropTypes.func,\n  touchOnChange: PropTypes.bool\n}\n\nFieldComponent.defaultProps = {\n  Component: () => null,\n  defaultValue: undefined,\n  transformValue: (v) => v,\n  transformRender: (v) => v,\n  onValueChange () {},\n  touchOnChange: false\n}\n\nexport default FieldComponent\n"]},"metadata":{},"sourceType":"module"}