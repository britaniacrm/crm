{"ast":null,"code":"'use strict';\n\nfunction _interopDefault(ex) {\n  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;\n}\n\nvar React = require('react');\n\nvar React__default = _interopDefault(React);\n\nvar reactDom = require('react-dom');\n\nvar PropTypes = _interopDefault(require('prop-types'));\n\nvar invariant = _interopDefault(require('invariant'));\n\nvar warning = _interopDefault(require('warning'));\n\nfunction _defaults2(obj, defaults) {\n  var keys = Object.getOwnPropertyNames(defaults);\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var value = Object.getOwnPropertyDescriptor(defaults, key);\n\n    if (value && value.configurable && obj[key] === undefined) {\n      Object.defineProperty(obj, key, value);\n    }\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _defaults2(subClass, superClass);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction defer(fn) {\n  return requestAnimationFrame(fn);\n}\n\nfunction cancelDefer(deferId) {\n  cancelAnimationFrame(deferId);\n}\n\nfunction setInputSelection(input, start, end) {\n  if (end === undefined) {\n    end = start;\n  }\n\n  input.setSelectionRange(start, end);\n}\n\nfunction getInputSelection(input) {\n  var start = input.selectionStart;\n  var end = input.selectionEnd;\n  return {\n    start: start,\n    end: end,\n    length: end - start\n  };\n}\n\nfunction isInputFocused(input) {\n  var inputDocument = input.ownerDocument;\n  return inputDocument.hasFocus() && inputDocument.activeElement === input;\n} // Element's window may differ from the one within React instance\n// if element rendered within iframe.\n// See https://github.com/sanniassin/react-input-mask/issues/182\n\n\nfunction getElementDocument(element) {\n  return element == null ? void 0 : element.ownerDocument;\n}\n\nfunction getElementWindow(element) {\n  var _getElementDocument;\n\n  return (_getElementDocument = getElementDocument(element)) == null ? void 0 : _getElementDocument.defaultView;\n}\n\nfunction isDOMElement(element) {\n  var elementWindow = getElementWindow(element);\n  return !!elementWindow && element instanceof elementWindow.HTMLElement;\n}\n\nfunction isFunction(value) {\n  return typeof value === \"function\";\n}\n\nfunction findLastIndex(array, predicate) {\n  for (var i = array.length - 1; i >= 0; i--) {\n    var x = array[i];\n\n    if (predicate(x, i)) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nfunction repeat(string, n) {\n  if (n === void 0) {\n    n = 1;\n  }\n\n  var result = \"\";\n\n  for (var i = 0; i < n; i++) {\n    result += string;\n  }\n\n  return result;\n}\n\nfunction toString(value) {\n  return \"\" + value;\n}\n\nfunction useInputElement(inputRef) {\n  return React.useCallback(function () {\n    var input = inputRef.current;\n    var isDOMNode = typeof window !== \"undefined\" && isDOMElement(input); // workaround for react-test-renderer\n    // https://github.com/sanniassin/react-input-mask/issues/147\n\n    if (!input || !isDOMNode) {\n      return null;\n    }\n\n    if (input.nodeName !== \"INPUT\") {\n      input = input.querySelector(\"input\");\n    }\n\n    if (!input) {\n      throw new Error(\"react-input-mask: inputComponent doesn't contain input node\");\n    }\n\n    return input;\n  }, [inputRef]);\n}\n\nfunction useDeferLoop(callback) {\n  var deferIdRef = React.useRef(null);\n  var runLoop = React.useCallback(function () {\n    // If there are simulated focus events, runLoop could be\n    // called multiple times without blur or re-render\n    if (deferIdRef.current !== null) {\n      return;\n    }\n\n    function loop() {\n      callback();\n      deferIdRef.current = defer(loop);\n    }\n\n    loop();\n  }, [callback]);\n  var stopLoop = React.useCallback(function () {\n    cancelDefer(deferIdRef.current);\n    deferIdRef.current = null;\n  }, []);\n  React.useEffect(function () {\n    if (deferIdRef.current) {\n      stopLoop();\n      runLoop();\n    }\n  }, [runLoop, stopLoop]);\n  React.useEffect(cancelDefer, []);\n  return [runLoop, stopLoop];\n}\n\nfunction useSelection(inputRef, isMasked) {\n  var selectionRef = React.useRef({\n    start: null,\n    end: null\n  });\n  var getInputElement = useInputElement(inputRef);\n  var getSelection = React.useCallback(function () {\n    var input = getInputElement();\n    return getInputSelection(input);\n  }, [getInputElement]);\n  var getLastSelection = React.useCallback(function () {\n    return selectionRef.current;\n  }, []);\n  var setSelection = React.useCallback(function (selection) {\n    var input = getInputElement(); // Don't change selection on unfocused input\n    // because Safari sets focus on selection change (#154)\n\n    if (!input || !isInputFocused(input)) {\n      return;\n    }\n\n    setInputSelection(input, selection.start, selection.end); // Use actual selection in case the requested one was out of range\n\n    selectionRef.current = getSelection();\n  }, [getInputElement, getSelection]);\n  var selectionLoop = React.useCallback(function () {\n    selectionRef.current = getSelection();\n  }, [getSelection]);\n\n  var _useDeferLoop = useDeferLoop(selectionLoop),\n      runSelectionLoop = _useDeferLoop[0],\n      stopSelectionLoop = _useDeferLoop[1];\n\n  React.useLayoutEffect(function () {\n    if (!isMasked) {\n      return;\n    }\n\n    var input = getInputElement();\n    input.addEventListener(\"focus\", runSelectionLoop);\n    input.addEventListener(\"blur\", stopSelectionLoop);\n\n    if (isInputFocused(input)) {\n      runSelectionLoop();\n    }\n\n    return function () {\n      input.removeEventListener(\"focus\", runSelectionLoop);\n      input.removeEventListener(\"blur\", stopSelectionLoop);\n      stopSelectionLoop();\n    };\n  });\n  return {\n    getSelection: getSelection,\n    getLastSelection: getLastSelection,\n    setSelection: setSelection\n  };\n}\n\nfunction useValue(inputRef, initialValue) {\n  var getInputElement = useInputElement(inputRef);\n  var valueRef = React.useRef(initialValue);\n  var getValue = React.useCallback(function () {\n    var input = getInputElement();\n    return input.value;\n  }, [getInputElement]);\n  var getLastValue = React.useCallback(function () {\n    return valueRef.current;\n  }, []);\n  var setValue = React.useCallback(function (newValue) {\n    valueRef.current = newValue;\n    var input = getInputElement();\n\n    if (input) {\n      input.value = newValue;\n    }\n  }, [getInputElement]);\n  return {\n    getValue: getValue,\n    getLastValue: getLastValue,\n    setValue: setValue\n  };\n}\n\nfunction useInputState(initialValue, isMasked) {\n  var inputRef = React.useRef();\n\n  var _useSelection = useSelection(inputRef, isMasked),\n      getSelection = _useSelection.getSelection,\n      getLastSelection = _useSelection.getLastSelection,\n      setSelection = _useSelection.setSelection;\n\n  var _useValue = useValue(inputRef, initialValue),\n      getValue = _useValue.getValue,\n      getLastValue = _useValue.getLastValue,\n      setValue = _useValue.setValue;\n\n  function getLastInputState() {\n    return {\n      value: getLastValue(),\n      selection: getLastSelection()\n    };\n  }\n\n  function getInputState() {\n    return {\n      value: getValue(),\n      selection: getSelection()\n    };\n  }\n\n  function setInputState(_ref) {\n    var value = _ref.value,\n        selection = _ref.selection;\n    setValue(value);\n    setSelection(selection);\n  }\n\n  return {\n    inputRef: inputRef,\n    getInputState: getInputState,\n    getLastInputState: getLastInputState,\n    setInputState: setInputState\n  };\n}\n\nfunction usePrevious(value) {\n  var ref = React.useRef();\n  React.useEffect(function () {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nvar CONTROLLED_PROPS = [\"disabled\", \"onBlur\", \"onChange\", \"onFocus\", \"onMouseDown\", \"readOnly\", \"value\"];\nvar defaultFormatChars = {\n  \"9\": /[0-9]/,\n  a: /[A-Za-z]/,\n  \"*\": /[A-Za-z0-9]/\n};\n\nfunction validateMaxLength(props) {\n  process.env.NODE_ENV !== \"production\" ? warning(!props.maxLength || !props.mask, \"react-input-mask: maxLength property shouldn't be passed to the masked input. It breaks masking and unnecessary because length is limited by the mask length.\") : void 0;\n}\n\nfunction validateMaskPlaceholder(props) {\n  var mask = props.mask,\n      maskPlaceholder = props.maskPlaceholder;\n  !(!mask || !maskPlaceholder || maskPlaceholder.length === 1 || maskPlaceholder.length === mask.length) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"react-input-mask: maskPlaceholder should either be a single character or have the same length as the mask:\\n\" + (\"mask: \" + mask + \"\\n\") + (\"maskPlaceholder: \" + maskPlaceholder)) : invariant(false) : void 0;\n}\n\nfunction validateChildren(props, inputElement) {\n  var conflictProps = CONTROLLED_PROPS.filter(function (propId) {\n    return inputElement.props[propId] != null && inputElement.props[propId] !== props[propId];\n  });\n  !!conflictProps.length ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"react-input-mask: the following props should be passed to the InputMask component, not to children: \" + conflictProps.join(\",\")) : invariant(false) : void 0;\n}\n\nfunction parseMask(_ref) {\n  var mask = _ref.mask,\n      maskPlaceholder = _ref.maskPlaceholder;\n  var permanents = [];\n\n  if (!mask) {\n    return {\n      maskPlaceholder: null,\n      mask: null,\n      prefix: null,\n      lastEditablePosition: null,\n      permanents: []\n    };\n  }\n\n  if (typeof mask === \"string\") {\n    var isPermanent = false;\n    var parsedMaskString = \"\";\n    mask.split(\"\").forEach(function (character) {\n      if (!isPermanent && character === \"\\\\\") {\n        isPermanent = true;\n      } else {\n        if (isPermanent || !defaultFormatChars[character]) {\n          permanents.push(parsedMaskString.length);\n        }\n\n        parsedMaskString += character;\n        isPermanent = false;\n      }\n    });\n    mask = parsedMaskString.split(\"\").map(function (character, index) {\n      if (permanents.indexOf(index) === -1) {\n        return defaultFormatChars[character];\n      }\n\n      return character;\n    });\n  } else {\n    mask.forEach(function (character, index) {\n      if (typeof character === \"string\") {\n        permanents.push(index);\n      }\n    });\n  }\n\n  if (maskPlaceholder) {\n    if (maskPlaceholder.length === 1) {\n      maskPlaceholder = mask.map(function (character, index) {\n        if (permanents.indexOf(index) !== -1) {\n          return character;\n        }\n\n        return maskPlaceholder;\n      });\n    } else {\n      maskPlaceholder = maskPlaceholder.split(\"\");\n    }\n\n    permanents.forEach(function (position) {\n      maskPlaceholder[position] = mask[position];\n    });\n    maskPlaceholder = maskPlaceholder.join(\"\");\n  }\n\n  var prefix = permanents.filter(function (position, index) {\n    return position === index;\n  }).map(function (position) {\n    return mask[position];\n  }).join(\"\");\n  var lastEditablePosition = mask.length - 1;\n\n  while (permanents.indexOf(lastEditablePosition) !== -1) {\n    lastEditablePosition--;\n  }\n\n  return {\n    maskPlaceholder: maskPlaceholder,\n    prefix: prefix,\n    mask: mask,\n    lastEditablePosition: lastEditablePosition,\n    permanents: permanents\n  };\n}\n/* eslint no-use-before-define: [\"error\", { functions: false }] */\n\n\nvar MaskUtils = function MaskUtils(options) {\n  var _this = this;\n\n  this.isCharacterAllowedAtPosition = function (character, position) {\n    var maskPlaceholder = _this.maskOptions.maskPlaceholder;\n\n    if (_this.isCharacterFillingPosition(character, position)) {\n      return true;\n    }\n\n    if (!maskPlaceholder) {\n      return false;\n    }\n\n    return maskPlaceholder[position] === character;\n  };\n\n  this.isCharacterFillingPosition = function (character, position) {\n    var mask = _this.maskOptions.mask;\n\n    if (!character || position >= mask.length) {\n      return false;\n    }\n\n    if (!_this.isPositionEditable(position)) {\n      return mask[position] === character;\n    }\n\n    var charRule = mask[position];\n    return new RegExp(charRule).test(character);\n  };\n\n  this.isPositionEditable = function (position) {\n    var _this$maskOptions = _this.maskOptions,\n        mask = _this$maskOptions.mask,\n        permanents = _this$maskOptions.permanents;\n    return position < mask.length && permanents.indexOf(position) === -1;\n  };\n\n  this.isValueEmpty = function (value) {\n    return value.split(\"\").every(function (character, position) {\n      return !_this.isPositionEditable(position) || !_this.isCharacterFillingPosition(character, position);\n    });\n  };\n\n  this.isValueFilled = function (value) {\n    return _this.getFilledLength(value) === _this.maskOptions.lastEditablePosition + 1;\n  };\n\n  this.getDefaultSelectionForValue = function (value) {\n    var filledLength = _this.getFilledLength(value);\n\n    var cursorPosition = _this.getRightEditablePosition(filledLength);\n\n    return {\n      start: cursorPosition,\n      end: cursorPosition\n    };\n  };\n\n  this.getFilledLength = function (value) {\n    var characters = value.split(\"\");\n    var lastFilledIndex = findLastIndex(characters, function (character, position) {\n      return _this.isPositionEditable(position) && _this.isCharacterFillingPosition(character, position);\n    });\n    return lastFilledIndex + 1;\n  };\n\n  this.getStringFillingLengthAtPosition = function (string, position) {\n    var characters = string.split(\"\");\n    var insertedValue = characters.reduce(function (value, character) {\n      return _this.insertCharacterAtPosition(value, character, value.length);\n    }, repeat(\" \", position));\n    return insertedValue.length - position;\n  };\n\n  this.getLeftEditablePosition = function (position) {\n    for (var i = position; i >= 0; i--) {\n      if (_this.isPositionEditable(i)) {\n        return i;\n      }\n    }\n\n    return null;\n  };\n\n  this.getRightEditablePosition = function (position) {\n    var mask = _this.maskOptions.mask;\n\n    for (var i = position; i < mask.length; i++) {\n      if (_this.isPositionEditable(i)) {\n        return i;\n      }\n    }\n\n    return null;\n  };\n\n  this.formatValue = function (value) {\n    var _this$maskOptions2 = _this.maskOptions,\n        maskPlaceholder = _this$maskOptions2.maskPlaceholder,\n        mask = _this$maskOptions2.mask;\n\n    if (!maskPlaceholder) {\n      value = _this.insertStringAtPosition(\"\", value, 0);\n\n      while (value.length < mask.length && !_this.isPositionEditable(value.length)) {\n        value += mask[value.length];\n      }\n\n      return value;\n    }\n\n    return _this.insertStringAtPosition(maskPlaceholder, value, 0);\n  };\n\n  this.clearRange = function (value, start, len) {\n    if (!len) {\n      return value;\n    }\n\n    var end = start + len;\n    var _this$maskOptions3 = _this.maskOptions,\n        maskPlaceholder = _this$maskOptions3.maskPlaceholder,\n        mask = _this$maskOptions3.mask;\n    var clearedValue = value.split(\"\").map(function (character, i) {\n      var isEditable = _this.isPositionEditable(i);\n\n      if (!maskPlaceholder && i >= end && !isEditable) {\n        return \"\";\n      }\n\n      if (i < start || i >= end) {\n        return character;\n      }\n\n      if (!isEditable) {\n        return mask[i];\n      }\n\n      if (maskPlaceholder) {\n        return maskPlaceholder[i];\n      }\n\n      return \"\";\n    }).join(\"\");\n    return _this.formatValue(clearedValue);\n  };\n\n  this.insertCharacterAtPosition = function (value, character, position) {\n    var _this$maskOptions4 = _this.maskOptions,\n        mask = _this$maskOptions4.mask,\n        maskPlaceholder = _this$maskOptions4.maskPlaceholder;\n\n    if (position >= mask.length) {\n      return value;\n    }\n\n    var isAllowed = _this.isCharacterAllowedAtPosition(character, position);\n\n    var isEditable = _this.isPositionEditable(position);\n\n    var nextEditablePosition = _this.getRightEditablePosition(position);\n\n    var isNextPlaceholder = maskPlaceholder && nextEditablePosition ? character === maskPlaceholder[nextEditablePosition] : null;\n    var valueBefore = value.slice(0, position);\n\n    if (isAllowed || !isEditable) {\n      var insertedCharacter = isAllowed ? character : mask[position];\n      value = valueBefore + insertedCharacter;\n    }\n\n    if (!isAllowed && !isEditable && !isNextPlaceholder) {\n      value = _this.insertCharacterAtPosition(value, character, position + 1);\n    }\n\n    return value;\n  };\n\n  this.insertStringAtPosition = function (value, string, position) {\n    var _this$maskOptions5 = _this.maskOptions,\n        mask = _this$maskOptions5.mask,\n        maskPlaceholder = _this$maskOptions5.maskPlaceholder;\n\n    if (!string || position >= mask.length) {\n      return value;\n    }\n\n    var characters = string.split(\"\");\n    var isFixedLength = _this.isValueFilled(value) || !!maskPlaceholder;\n    var valueAfter = value.slice(position);\n    value = characters.reduce(function (value, character) {\n      return _this.insertCharacterAtPosition(value, character, value.length);\n    }, value.slice(0, position));\n\n    if (isFixedLength) {\n      value += valueAfter.slice(value.length - position);\n    } else if (_this.isValueFilled(value)) {\n      value += mask.slice(value.length).join(\"\");\n    } else {\n      var editableCharactersAfter = valueAfter.split(\"\").filter(function (character, i) {\n        return _this.isPositionEditable(position + i);\n      });\n      value = editableCharactersAfter.reduce(function (value, character) {\n        var nextEditablePosition = _this.getRightEditablePosition(value.length);\n\n        if (nextEditablePosition === null) {\n          return value;\n        }\n\n        if (!_this.isPositionEditable(value.length)) {\n          value += mask.slice(value.length, nextEditablePosition).join(\"\");\n        }\n\n        return _this.insertCharacterAtPosition(value, character, value.length);\n      }, value);\n    }\n\n    return value;\n  };\n\n  this.processChange = function (currentState, previousState) {\n    var _this$maskOptions6 = _this.maskOptions,\n        mask = _this$maskOptions6.mask,\n        prefix = _this$maskOptions6.prefix,\n        lastEditablePosition = _this$maskOptions6.lastEditablePosition;\n    var value = currentState.value,\n        selection = currentState.selection;\n    var previousValue = previousState.value;\n    var previousSelection = previousState.selection;\n    var newValue = value;\n    var enteredString = \"\";\n    var formattedEnteredStringLength = 0;\n    var removedLength = 0;\n    var cursorPosition = Math.min(previousSelection.start, selection.start);\n\n    if (selection.end > previousSelection.start) {\n      enteredString = newValue.slice(previousSelection.start, selection.end);\n      formattedEnteredStringLength = _this.getStringFillingLengthAtPosition(enteredString, cursorPosition);\n\n      if (!formattedEnteredStringLength) {\n        removedLength = 0;\n      } else {\n        removedLength = previousSelection.length;\n      }\n    } else if (newValue.length < previousValue.length) {\n      removedLength = previousValue.length - newValue.length;\n    }\n\n    newValue = previousValue;\n\n    if (removedLength) {\n      if (removedLength === 1 && !previousSelection.length) {\n        var deleteFromRight = previousSelection.start === selection.start;\n        cursorPosition = deleteFromRight ? _this.getRightEditablePosition(selection.start) : _this.getLeftEditablePosition(selection.start);\n      }\n\n      newValue = _this.clearRange(newValue, cursorPosition, removedLength);\n    }\n\n    newValue = _this.insertStringAtPosition(newValue, enteredString, cursorPosition);\n    cursorPosition += formattedEnteredStringLength;\n\n    if (cursorPosition >= mask.length) {\n      cursorPosition = mask.length;\n    } else if (cursorPosition < prefix.length && !formattedEnteredStringLength) {\n      cursorPosition = prefix.length;\n    } else if (cursorPosition >= prefix.length && cursorPosition < lastEditablePosition && formattedEnteredStringLength) {\n      cursorPosition = _this.getRightEditablePosition(cursorPosition);\n    }\n\n    newValue = _this.formatValue(newValue);\n    return {\n      value: newValue,\n      enteredString: enteredString,\n      selection: {\n        start: cursorPosition,\n        end: cursorPosition\n      }\n    };\n  };\n\n  this.maskOptions = parseMask(options);\n};\n\nvar InputMaskChildrenWrapper = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(InputMaskChildrenWrapper, _React$Component);\n\n  function InputMaskChildrenWrapper() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = InputMaskChildrenWrapper.prototype;\n\n  _proto.render = function render() {\n    // eslint-disable-next-line react/prop-types\n    var _this$props = this.props,\n        children = _this$props.children,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"children\"]);\n\n    return React__default.cloneElement(children, props);\n  };\n\n  return InputMaskChildrenWrapper;\n}(React__default.Component);\n\nvar InputMask = React.forwardRef(function InputMask(props, forwardedRef) {\n  var alwaysShowMask = props.alwaysShowMask,\n      children = props.children,\n      mask = props.mask,\n      maskPlaceholder = props.maskPlaceholder,\n      beforeMaskedStateChange = props.beforeMaskedStateChange,\n      restProps = _objectWithoutPropertiesLoose(props, [\"alwaysShowMask\", \"children\", \"mask\", \"maskPlaceholder\", \"beforeMaskedStateChange\"]);\n\n  validateMaxLength(props);\n  validateMaskPlaceholder(props);\n  var maskUtils = new MaskUtils({\n    mask: mask,\n    maskPlaceholder: maskPlaceholder\n  });\n  var isMasked = !!mask;\n  var isEditable = !restProps.disabled && !restProps.readOnly;\n  var isControlled = props.value !== null && props.value !== undefined;\n  var previousIsMasked = usePrevious(isMasked);\n  var initialValue = toString((isControlled ? props.value : props.defaultValue) || \"\");\n\n  var _useInputState = useInputState(initialValue, isMasked),\n      inputRef = _useInputState.inputRef,\n      getInputState = _useInputState.getInputState,\n      setInputState = _useInputState.setInputState,\n      getLastInputState = _useInputState.getLastInputState;\n\n  var getInputElement = useInputElement(inputRef);\n\n  function onChange(event) {\n    var currentState = getInputState();\n    var previousState = getLastInputState();\n    var newInputState = maskUtils.processChange(currentState, previousState);\n\n    if (beforeMaskedStateChange) {\n      newInputState = beforeMaskedStateChange({\n        currentState: currentState,\n        previousState: previousState,\n        nextState: newInputState\n      });\n    }\n\n    setInputState(newInputState);\n\n    if (props.onChange) {\n      props.onChange(event);\n    }\n  }\n\n  function onFocus(event) {\n    // If autoFocus property is set, focus event fires before the ref handler gets called\n    inputRef.current = event.target;\n    var currentValue = getInputState().value;\n\n    if (isMasked && !maskUtils.isValueFilled(currentValue)) {\n      var newValue = maskUtils.formatValue(currentValue);\n      var newSelection = maskUtils.getDefaultSelectionForValue(newValue);\n      var newInputState = {\n        value: newValue,\n        selection: newSelection\n      };\n\n      if (beforeMaskedStateChange) {\n        newInputState = beforeMaskedStateChange({\n          currentState: getInputState(),\n          nextState: newInputState\n        });\n        newValue = newInputState.value;\n        newSelection = newInputState.selection;\n      }\n\n      setInputState(newInputState);\n\n      if (newValue !== currentValue && props.onChange) {\n        props.onChange(event);\n      } // Chrome resets selection after focus event,\n      // so we want to restore it later\n\n\n      defer(function () {\n        setInputState(getLastInputState());\n      });\n    }\n\n    if (props.onFocus) {\n      props.onFocus(event);\n    }\n  }\n\n  function onBlur(event) {\n    var currentValue = getInputState().value;\n    var lastValue = getLastInputState().value;\n\n    if (isMasked && !alwaysShowMask && maskUtils.isValueEmpty(lastValue)) {\n      var newValue = \"\";\n      var newInputState = {\n        value: newValue,\n        selection: {\n          start: null,\n          end: null\n        }\n      };\n\n      if (beforeMaskedStateChange) {\n        newInputState = beforeMaskedStateChange({\n          currentState: getInputState(),\n          nextState: newInputState\n        });\n        newValue = newInputState.value;\n      }\n\n      setInputState(newInputState);\n\n      if (newValue !== currentValue && props.onChange) {\n        props.onChange(event);\n      }\n    }\n\n    if (props.onBlur) {\n      props.onBlur(event);\n    }\n  } // Tiny unintentional mouse movements can break cursor\n  // position on focus, so we have to restore it in that case\n  //\n  // https://github.com/sanniassin/react-input-mask/issues/108\n\n\n  function onMouseDown(event) {\n    var input = getInputElement();\n\n    var _getInputState = getInputState(),\n        value = _getInputState.value;\n\n    var inputDocument = getElementDocument(input);\n\n    if (!isInputFocused(input) && !maskUtils.isValueFilled(value)) {\n      var mouseDownX = event.clientX;\n      var mouseDownY = event.clientY;\n      var mouseDownTime = new Date().getTime();\n\n      var mouseUpHandler = function mouseUpHandler(mouseUpEvent) {\n        inputDocument.removeEventListener(\"mouseup\", mouseUpHandler);\n\n        if (!isInputFocused(input)) {\n          return;\n        }\n\n        var deltaX = Math.abs(mouseUpEvent.clientX - mouseDownX);\n        var deltaY = Math.abs(mouseUpEvent.clientY - mouseDownY);\n        var axisDelta = Math.max(deltaX, deltaY);\n        var timeDelta = new Date().getTime() - mouseDownTime;\n\n        if (axisDelta <= 10 && timeDelta <= 200 || axisDelta <= 5 && timeDelta <= 300) {\n          var _lastState = getLastInputState();\n\n          var newSelection = maskUtils.getDefaultSelectionForValue(_lastState.value);\n\n          var newState = _extends({}, _lastState, {\n            selection: newSelection\n          });\n\n          setInputState(newState);\n        }\n      };\n\n      inputDocument.addEventListener(\"mouseup\", mouseUpHandler);\n    }\n\n    if (props.onMouseDown) {\n      props.onMouseDown(event);\n    }\n  } // For controlled inputs we want to provide properly formatted\n  // value prop\n\n\n  if (isMasked && isControlled) {\n    var input = getInputElement();\n    var isFocused = input && isInputFocused(input);\n    var newValue = isFocused || alwaysShowMask || props.value ? maskUtils.formatValue(props.value) : props.value;\n\n    if (beforeMaskedStateChange) {\n      newValue = beforeMaskedStateChange({\n        nextState: {\n          value: newValue,\n          selection: {\n            start: null,\n            end: null\n          }\n        }\n      }).value;\n    }\n\n    setInputState(_extends({}, getLastInputState(), {\n      value: newValue\n    }));\n  }\n\n  var lastState = getLastInputState();\n  var lastSelection = lastState.selection;\n  var lastValue = lastState.value;\n  React.useLayoutEffect(function () {\n    if (!isMasked) {\n      return;\n    }\n\n    var input = getInputElement();\n    var isFocused = isInputFocused(input);\n    var previousSelection = lastSelection;\n    var currentState = getInputState();\n\n    var newInputState = _extends({}, currentState); // Update value for uncontrolled inputs to make sure\n    // it's always in sync with mask props\n\n\n    if (!isControlled) {\n      var currentValue = currentState.value;\n      var formattedValue = maskUtils.formatValue(currentValue);\n      var isValueEmpty = maskUtils.isValueEmpty(formattedValue);\n      var shouldFormatValue = !isValueEmpty || isFocused || alwaysShowMask;\n\n      if (shouldFormatValue) {\n        newInputState.value = formattedValue;\n      } else if (isValueEmpty && !isFocused) {\n        newInputState.value = \"\";\n      }\n    }\n\n    if (isFocused && !previousIsMasked) {\n      // Adjust selection if input got masked while being focused\n      newInputState.selection = maskUtils.getDefaultSelectionForValue(newInputState.value);\n    } else if (isControlled && isFocused && previousSelection) {\n      // Restore cursor position if value has changed outside change event\n      if (previousSelection.start !== null && previousSelection.end !== null) {\n        newInputState.selection = previousSelection;\n      }\n    }\n\n    if (beforeMaskedStateChange) {\n      newInputState = beforeMaskedStateChange({\n        currentState: currentState,\n        nextState: newInputState\n      });\n    }\n\n    setInputState(newInputState);\n  });\n\n  var inputProps = _extends({}, restProps, {\n    onFocus: onFocus,\n    onBlur: onBlur,\n    onChange: isMasked && isEditable ? onChange : props.onChange,\n    onMouseDown: isMasked && isEditable ? onMouseDown : props.onMouseDown,\n    ref: function ref(_ref) {\n      inputRef.current = reactDom.findDOMNode(_ref);\n\n      if (isFunction(forwardedRef)) {\n        forwardedRef(_ref);\n      } else if (forwardedRef !== null && typeof forwardedRef === \"object\") {\n        forwardedRef.current = _ref;\n      }\n    },\n    value: isMasked && isControlled ? lastValue : props.value\n  });\n\n  if (children) {\n    validateChildren(props, children); // We wrap children into a class component to be able to find\n    // their input element using findDOMNode\n\n    return React__default.createElement(InputMaskChildrenWrapper, inputProps, children);\n  }\n\n  return React__default.createElement(\"input\", inputProps);\n});\nInputMask.displayName = \"InputMask\";\nInputMask.defaultProps = {\n  alwaysShowMask: false,\n  maskPlaceholder: \"_\"\n};\nInputMask.propTypes = {\n  alwaysShowMask: PropTypes.bool,\n  beforeMaskedStateChange: PropTypes.func,\n  children: PropTypes.element,\n  mask: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.instanceOf(RegExp)]))]),\n  maskPlaceholder: PropTypes.string,\n  onFocus: PropTypes.func,\n  onBlur: PropTypes.func,\n  onChange: PropTypes.func,\n  onMouseDown: PropTypes.func\n};\nmodule.exports = InputMask;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/node_modules/react-input-mask/lib/react-input-mask.development.js"],"names":["_interopDefault","ex","React","require","React__default","reactDom","PropTypes","invariant","warning","_defaults2","obj","defaults","keys","Object","getOwnPropertyNames","i","length","key","value","getOwnPropertyDescriptor","configurable","undefined","defineProperty","_extends","assign","target","arguments","source","prototype","hasOwnProperty","call","apply","_inheritsLoose","subClass","superClass","create","constructor","_objectWithoutPropertiesLoose","excluded","sourceKeys","indexOf","defer","fn","requestAnimationFrame","cancelDefer","deferId","cancelAnimationFrame","setInputSelection","input","start","end","setSelectionRange","getInputSelection","selectionStart","selectionEnd","isInputFocused","inputDocument","ownerDocument","hasFocus","activeElement","getElementDocument","element","getElementWindow","_getElementDocument","defaultView","isDOMElement","elementWindow","HTMLElement","isFunction","findLastIndex","array","predicate","x","repeat","string","n","result","toString","useInputElement","inputRef","useCallback","current","isDOMNode","window","nodeName","querySelector","Error","useDeferLoop","callback","deferIdRef","useRef","runLoop","loop","stopLoop","useEffect","useSelection","isMasked","selectionRef","getInputElement","getSelection","getLastSelection","setSelection","selection","selectionLoop","_useDeferLoop","runSelectionLoop","stopSelectionLoop","useLayoutEffect","addEventListener","removeEventListener","useValue","initialValue","valueRef","getValue","getLastValue","setValue","newValue","useInputState","_useSelection","_useValue","getLastInputState","getInputState","setInputState","_ref","usePrevious","ref","CONTROLLED_PROPS","defaultFormatChars","a","validateMaxLength","props","process","env","NODE_ENV","maxLength","mask","validateMaskPlaceholder","maskPlaceholder","validateChildren","inputElement","conflictProps","filter","propId","join","parseMask","permanents","prefix","lastEditablePosition","isPermanent","parsedMaskString","split","forEach","character","push","map","index","position","MaskUtils","options","_this","isCharacterAllowedAtPosition","maskOptions","isCharacterFillingPosition","isPositionEditable","charRule","RegExp","test","_this$maskOptions","isValueEmpty","every","isValueFilled","getFilledLength","getDefaultSelectionForValue","filledLength","cursorPosition","getRightEditablePosition","characters","lastFilledIndex","getStringFillingLengthAtPosition","insertedValue","reduce","insertCharacterAtPosition","getLeftEditablePosition","formatValue","_this$maskOptions2","insertStringAtPosition","clearRange","len","_this$maskOptions3","clearedValue","isEditable","_this$maskOptions4","isAllowed","nextEditablePosition","isNextPlaceholder","valueBefore","slice","insertedCharacter","_this$maskOptions5","isFixedLength","valueAfter","editableCharactersAfter","processChange","currentState","previousState","_this$maskOptions6","previousValue","previousSelection","enteredString","formattedEnteredStringLength","removedLength","Math","min","deleteFromRight","InputMaskChildrenWrapper","_React$Component","_proto","render","_this$props","children","cloneElement","Component","InputMask","forwardRef","forwardedRef","alwaysShowMask","beforeMaskedStateChange","restProps","maskUtils","disabled","readOnly","isControlled","previousIsMasked","defaultValue","_useInputState","onChange","event","newInputState","nextState","onFocus","currentValue","newSelection","onBlur","lastValue","onMouseDown","_getInputState","mouseDownX","clientX","mouseDownY","clientY","mouseDownTime","Date","getTime","mouseUpHandler","mouseUpEvent","deltaX","abs","deltaY","axisDelta","max","timeDelta","_lastState","newState","isFocused","lastState","lastSelection","formattedValue","shouldFormatValue","inputProps","findDOMNode","createElement","displayName","defaultProps","propTypes","bool","func","oneOfType","arrayOf","instanceOf","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar React = require('react');\nvar React__default = _interopDefault(React);\nvar reactDom = require('react-dom');\nvar PropTypes = _interopDefault(require('prop-types'));\nvar invariant = _interopDefault(require('invariant'));\nvar warning = _interopDefault(require('warning'));\n\nfunction _defaults2(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _defaults2(subClass, superClass);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction defer(fn) {\n  return requestAnimationFrame(fn);\n}\nfunction cancelDefer(deferId) {\n  cancelAnimationFrame(deferId);\n}\n\nfunction setInputSelection(input, start, end) {\n  if (end === undefined) {\n    end = start;\n  }\n\n  input.setSelectionRange(start, end);\n}\nfunction getInputSelection(input) {\n  var start = input.selectionStart;\n  var end = input.selectionEnd;\n  return {\n    start: start,\n    end: end,\n    length: end - start\n  };\n}\nfunction isInputFocused(input) {\n  var inputDocument = input.ownerDocument;\n  return inputDocument.hasFocus() && inputDocument.activeElement === input;\n}\n\n// Element's window may differ from the one within React instance\n// if element rendered within iframe.\n// See https://github.com/sanniassin/react-input-mask/issues/182\nfunction getElementDocument(element) {\n  return element == null ? void 0 : element.ownerDocument;\n}\nfunction getElementWindow(element) {\n  var _getElementDocument;\n\n  return (_getElementDocument = getElementDocument(element)) == null ? void 0 : _getElementDocument.defaultView;\n}\nfunction isDOMElement(element) {\n  var elementWindow = getElementWindow(element);\n  return !!elementWindow && element instanceof elementWindow.HTMLElement;\n}\nfunction isFunction(value) {\n  return typeof value === \"function\";\n}\nfunction findLastIndex(array, predicate) {\n  for (var i = array.length - 1; i >= 0; i--) {\n    var x = array[i];\n\n    if (predicate(x, i)) {\n      return i;\n    }\n  }\n\n  return -1;\n}\nfunction repeat(string, n) {\n  if (n === void 0) {\n    n = 1;\n  }\n\n  var result = \"\";\n\n  for (var i = 0; i < n; i++) {\n    result += string;\n  }\n\n  return result;\n}\nfunction toString(value) {\n  return \"\" + value;\n}\n\nfunction useInputElement(inputRef) {\n  return React.useCallback(function () {\n    var input = inputRef.current;\n    var isDOMNode = typeof window !== \"undefined\" && isDOMElement(input); // workaround for react-test-renderer\n    // https://github.com/sanniassin/react-input-mask/issues/147\n\n    if (!input || !isDOMNode) {\n      return null;\n    }\n\n    if (input.nodeName !== \"INPUT\") {\n      input = input.querySelector(\"input\");\n    }\n\n    if (!input) {\n      throw new Error(\"react-input-mask: inputComponent doesn't contain input node\");\n    }\n\n    return input;\n  }, [inputRef]);\n}\n\nfunction useDeferLoop(callback) {\n  var deferIdRef = React.useRef(null);\n  var runLoop = React.useCallback(function () {\n    // If there are simulated focus events, runLoop could be\n    // called multiple times without blur or re-render\n    if (deferIdRef.current !== null) {\n      return;\n    }\n\n    function loop() {\n      callback();\n      deferIdRef.current = defer(loop);\n    }\n\n    loop();\n  }, [callback]);\n  var stopLoop = React.useCallback(function () {\n    cancelDefer(deferIdRef.current);\n    deferIdRef.current = null;\n  }, []);\n  React.useEffect(function () {\n    if (deferIdRef.current) {\n      stopLoop();\n      runLoop();\n    }\n  }, [runLoop, stopLoop]);\n  React.useEffect(cancelDefer, []);\n  return [runLoop, stopLoop];\n}\n\nfunction useSelection(inputRef, isMasked) {\n  var selectionRef = React.useRef({\n    start: null,\n    end: null\n  });\n  var getInputElement = useInputElement(inputRef);\n  var getSelection = React.useCallback(function () {\n    var input = getInputElement();\n    return getInputSelection(input);\n  }, [getInputElement]);\n  var getLastSelection = React.useCallback(function () {\n    return selectionRef.current;\n  }, []);\n  var setSelection = React.useCallback(function (selection) {\n    var input = getInputElement(); // Don't change selection on unfocused input\n    // because Safari sets focus on selection change (#154)\n\n    if (!input || !isInputFocused(input)) {\n      return;\n    }\n\n    setInputSelection(input, selection.start, selection.end); // Use actual selection in case the requested one was out of range\n\n    selectionRef.current = getSelection();\n  }, [getInputElement, getSelection]);\n  var selectionLoop = React.useCallback(function () {\n    selectionRef.current = getSelection();\n  }, [getSelection]);\n\n  var _useDeferLoop = useDeferLoop(selectionLoop),\n      runSelectionLoop = _useDeferLoop[0],\n      stopSelectionLoop = _useDeferLoop[1];\n\n  React.useLayoutEffect(function () {\n    if (!isMasked) {\n      return;\n    }\n\n    var input = getInputElement();\n    input.addEventListener(\"focus\", runSelectionLoop);\n    input.addEventListener(\"blur\", stopSelectionLoop);\n\n    if (isInputFocused(input)) {\n      runSelectionLoop();\n    }\n\n    return function () {\n      input.removeEventListener(\"focus\", runSelectionLoop);\n      input.removeEventListener(\"blur\", stopSelectionLoop);\n      stopSelectionLoop();\n    };\n  });\n  return {\n    getSelection: getSelection,\n    getLastSelection: getLastSelection,\n    setSelection: setSelection\n  };\n}\n\nfunction useValue(inputRef, initialValue) {\n  var getInputElement = useInputElement(inputRef);\n  var valueRef = React.useRef(initialValue);\n  var getValue = React.useCallback(function () {\n    var input = getInputElement();\n    return input.value;\n  }, [getInputElement]);\n  var getLastValue = React.useCallback(function () {\n    return valueRef.current;\n  }, []);\n  var setValue = React.useCallback(function (newValue) {\n    valueRef.current = newValue;\n    var input = getInputElement();\n\n    if (input) {\n      input.value = newValue;\n    }\n  }, [getInputElement]);\n  return {\n    getValue: getValue,\n    getLastValue: getLastValue,\n    setValue: setValue\n  };\n}\n\nfunction useInputState(initialValue, isMasked) {\n  var inputRef = React.useRef();\n\n  var _useSelection = useSelection(inputRef, isMasked),\n      getSelection = _useSelection.getSelection,\n      getLastSelection = _useSelection.getLastSelection,\n      setSelection = _useSelection.setSelection;\n\n  var _useValue = useValue(inputRef, initialValue),\n      getValue = _useValue.getValue,\n      getLastValue = _useValue.getLastValue,\n      setValue = _useValue.setValue;\n\n  function getLastInputState() {\n    return {\n      value: getLastValue(),\n      selection: getLastSelection()\n    };\n  }\n\n  function getInputState() {\n    return {\n      value: getValue(),\n      selection: getSelection()\n    };\n  }\n\n  function setInputState(_ref) {\n    var value = _ref.value,\n        selection = _ref.selection;\n    setValue(value);\n    setSelection(selection);\n  }\n\n  return {\n    inputRef: inputRef,\n    getInputState: getInputState,\n    getLastInputState: getLastInputState,\n    setInputState: setInputState\n  };\n}\nfunction usePrevious(value) {\n  var ref = React.useRef();\n  React.useEffect(function () {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nvar CONTROLLED_PROPS = [\"disabled\", \"onBlur\", \"onChange\", \"onFocus\", \"onMouseDown\", \"readOnly\", \"value\"];\nvar defaultFormatChars = {\n  \"9\": /[0-9]/,\n  a: /[A-Za-z]/,\n  \"*\": /[A-Za-z0-9]/\n};\n\nfunction validateMaxLength(props) {\n  process.env.NODE_ENV !== \"production\" ? warning(!props.maxLength || !props.mask, \"react-input-mask: maxLength property shouldn't be passed to the masked input. It breaks masking and unnecessary because length is limited by the mask length.\") : void 0;\n}\nfunction validateMaskPlaceholder(props) {\n  var mask = props.mask,\n      maskPlaceholder = props.maskPlaceholder;\n  !(!mask || !maskPlaceholder || maskPlaceholder.length === 1 || maskPlaceholder.length === mask.length) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"react-input-mask: maskPlaceholder should either be a single character or have the same length as the mask:\\n\" + (\"mask: \" + mask + \"\\n\") + (\"maskPlaceholder: \" + maskPlaceholder)) : invariant(false) : void 0;\n}\nfunction validateChildren(props, inputElement) {\n  var conflictProps = CONTROLLED_PROPS.filter(function (propId) {\n    return inputElement.props[propId] != null && inputElement.props[propId] !== props[propId];\n  });\n  !!conflictProps.length ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"react-input-mask: the following props should be passed to the InputMask component, not to children: \" + conflictProps.join(\",\")) : invariant(false) : void 0;\n}\n\nfunction parseMask (_ref) {\n  var mask = _ref.mask,\n      maskPlaceholder = _ref.maskPlaceholder;\n  var permanents = [];\n\n  if (!mask) {\n    return {\n      maskPlaceholder: null,\n      mask: null,\n      prefix: null,\n      lastEditablePosition: null,\n      permanents: []\n    };\n  }\n\n  if (typeof mask === \"string\") {\n    var isPermanent = false;\n    var parsedMaskString = \"\";\n    mask.split(\"\").forEach(function (character) {\n      if (!isPermanent && character === \"\\\\\") {\n        isPermanent = true;\n      } else {\n        if (isPermanent || !defaultFormatChars[character]) {\n          permanents.push(parsedMaskString.length);\n        }\n\n        parsedMaskString += character;\n        isPermanent = false;\n      }\n    });\n    mask = parsedMaskString.split(\"\").map(function (character, index) {\n      if (permanents.indexOf(index) === -1) {\n        return defaultFormatChars[character];\n      }\n\n      return character;\n    });\n  } else {\n    mask.forEach(function (character, index) {\n      if (typeof character === \"string\") {\n        permanents.push(index);\n      }\n    });\n  }\n\n  if (maskPlaceholder) {\n    if (maskPlaceholder.length === 1) {\n      maskPlaceholder = mask.map(function (character, index) {\n        if (permanents.indexOf(index) !== -1) {\n          return character;\n        }\n\n        return maskPlaceholder;\n      });\n    } else {\n      maskPlaceholder = maskPlaceholder.split(\"\");\n    }\n\n    permanents.forEach(function (position) {\n      maskPlaceholder[position] = mask[position];\n    });\n    maskPlaceholder = maskPlaceholder.join(\"\");\n  }\n\n  var prefix = permanents.filter(function (position, index) {\n    return position === index;\n  }).map(function (position) {\n    return mask[position];\n  }).join(\"\");\n  var lastEditablePosition = mask.length - 1;\n\n  while (permanents.indexOf(lastEditablePosition) !== -1) {\n    lastEditablePosition--;\n  }\n\n  return {\n    maskPlaceholder: maskPlaceholder,\n    prefix: prefix,\n    mask: mask,\n    lastEditablePosition: lastEditablePosition,\n    permanents: permanents\n  };\n}\n\n/* eslint no-use-before-define: [\"error\", { functions: false }] */\n\nvar MaskUtils = function MaskUtils(options) {\n  var _this = this;\n\n  this.isCharacterAllowedAtPosition = function (character, position) {\n    var maskPlaceholder = _this.maskOptions.maskPlaceholder;\n\n    if (_this.isCharacterFillingPosition(character, position)) {\n      return true;\n    }\n\n    if (!maskPlaceholder) {\n      return false;\n    }\n\n    return maskPlaceholder[position] === character;\n  };\n\n  this.isCharacterFillingPosition = function (character, position) {\n    var mask = _this.maskOptions.mask;\n\n    if (!character || position >= mask.length) {\n      return false;\n    }\n\n    if (!_this.isPositionEditable(position)) {\n      return mask[position] === character;\n    }\n\n    var charRule = mask[position];\n    return new RegExp(charRule).test(character);\n  };\n\n  this.isPositionEditable = function (position) {\n    var _this$maskOptions = _this.maskOptions,\n        mask = _this$maskOptions.mask,\n        permanents = _this$maskOptions.permanents;\n    return position < mask.length && permanents.indexOf(position) === -1;\n  };\n\n  this.isValueEmpty = function (value) {\n    return value.split(\"\").every(function (character, position) {\n      return !_this.isPositionEditable(position) || !_this.isCharacterFillingPosition(character, position);\n    });\n  };\n\n  this.isValueFilled = function (value) {\n    return _this.getFilledLength(value) === _this.maskOptions.lastEditablePosition + 1;\n  };\n\n  this.getDefaultSelectionForValue = function (value) {\n    var filledLength = _this.getFilledLength(value);\n\n    var cursorPosition = _this.getRightEditablePosition(filledLength);\n\n    return {\n      start: cursorPosition,\n      end: cursorPosition\n    };\n  };\n\n  this.getFilledLength = function (value) {\n    var characters = value.split(\"\");\n    var lastFilledIndex = findLastIndex(characters, function (character, position) {\n      return _this.isPositionEditable(position) && _this.isCharacterFillingPosition(character, position);\n    });\n    return lastFilledIndex + 1;\n  };\n\n  this.getStringFillingLengthAtPosition = function (string, position) {\n    var characters = string.split(\"\");\n    var insertedValue = characters.reduce(function (value, character) {\n      return _this.insertCharacterAtPosition(value, character, value.length);\n    }, repeat(\" \", position));\n    return insertedValue.length - position;\n  };\n\n  this.getLeftEditablePosition = function (position) {\n    for (var i = position; i >= 0; i--) {\n      if (_this.isPositionEditable(i)) {\n        return i;\n      }\n    }\n\n    return null;\n  };\n\n  this.getRightEditablePosition = function (position) {\n    var mask = _this.maskOptions.mask;\n\n    for (var i = position; i < mask.length; i++) {\n      if (_this.isPositionEditable(i)) {\n        return i;\n      }\n    }\n\n    return null;\n  };\n\n  this.formatValue = function (value) {\n    var _this$maskOptions2 = _this.maskOptions,\n        maskPlaceholder = _this$maskOptions2.maskPlaceholder,\n        mask = _this$maskOptions2.mask;\n\n    if (!maskPlaceholder) {\n      value = _this.insertStringAtPosition(\"\", value, 0);\n\n      while (value.length < mask.length && !_this.isPositionEditable(value.length)) {\n        value += mask[value.length];\n      }\n\n      return value;\n    }\n\n    return _this.insertStringAtPosition(maskPlaceholder, value, 0);\n  };\n\n  this.clearRange = function (value, start, len) {\n    if (!len) {\n      return value;\n    }\n\n    var end = start + len;\n    var _this$maskOptions3 = _this.maskOptions,\n        maskPlaceholder = _this$maskOptions3.maskPlaceholder,\n        mask = _this$maskOptions3.mask;\n    var clearedValue = value.split(\"\").map(function (character, i) {\n      var isEditable = _this.isPositionEditable(i);\n\n      if (!maskPlaceholder && i >= end && !isEditable) {\n        return \"\";\n      }\n\n      if (i < start || i >= end) {\n        return character;\n      }\n\n      if (!isEditable) {\n        return mask[i];\n      }\n\n      if (maskPlaceholder) {\n        return maskPlaceholder[i];\n      }\n\n      return \"\";\n    }).join(\"\");\n    return _this.formatValue(clearedValue);\n  };\n\n  this.insertCharacterAtPosition = function (value, character, position) {\n    var _this$maskOptions4 = _this.maskOptions,\n        mask = _this$maskOptions4.mask,\n        maskPlaceholder = _this$maskOptions4.maskPlaceholder;\n\n    if (position >= mask.length) {\n      return value;\n    }\n\n    var isAllowed = _this.isCharacterAllowedAtPosition(character, position);\n\n    var isEditable = _this.isPositionEditable(position);\n\n    var nextEditablePosition = _this.getRightEditablePosition(position);\n\n    var isNextPlaceholder = maskPlaceholder && nextEditablePosition ? character === maskPlaceholder[nextEditablePosition] : null;\n    var valueBefore = value.slice(0, position);\n\n    if (isAllowed || !isEditable) {\n      var insertedCharacter = isAllowed ? character : mask[position];\n      value = valueBefore + insertedCharacter;\n    }\n\n    if (!isAllowed && !isEditable && !isNextPlaceholder) {\n      value = _this.insertCharacterAtPosition(value, character, position + 1);\n    }\n\n    return value;\n  };\n\n  this.insertStringAtPosition = function (value, string, position) {\n    var _this$maskOptions5 = _this.maskOptions,\n        mask = _this$maskOptions5.mask,\n        maskPlaceholder = _this$maskOptions5.maskPlaceholder;\n\n    if (!string || position >= mask.length) {\n      return value;\n    }\n\n    var characters = string.split(\"\");\n    var isFixedLength = _this.isValueFilled(value) || !!maskPlaceholder;\n    var valueAfter = value.slice(position);\n    value = characters.reduce(function (value, character) {\n      return _this.insertCharacterAtPosition(value, character, value.length);\n    }, value.slice(0, position));\n\n    if (isFixedLength) {\n      value += valueAfter.slice(value.length - position);\n    } else if (_this.isValueFilled(value)) {\n      value += mask.slice(value.length).join(\"\");\n    } else {\n      var editableCharactersAfter = valueAfter.split(\"\").filter(function (character, i) {\n        return _this.isPositionEditable(position + i);\n      });\n      value = editableCharactersAfter.reduce(function (value, character) {\n        var nextEditablePosition = _this.getRightEditablePosition(value.length);\n\n        if (nextEditablePosition === null) {\n          return value;\n        }\n\n        if (!_this.isPositionEditable(value.length)) {\n          value += mask.slice(value.length, nextEditablePosition).join(\"\");\n        }\n\n        return _this.insertCharacterAtPosition(value, character, value.length);\n      }, value);\n    }\n\n    return value;\n  };\n\n  this.processChange = function (currentState, previousState) {\n    var _this$maskOptions6 = _this.maskOptions,\n        mask = _this$maskOptions6.mask,\n        prefix = _this$maskOptions6.prefix,\n        lastEditablePosition = _this$maskOptions6.lastEditablePosition;\n    var value = currentState.value,\n        selection = currentState.selection;\n    var previousValue = previousState.value;\n    var previousSelection = previousState.selection;\n    var newValue = value;\n    var enteredString = \"\";\n    var formattedEnteredStringLength = 0;\n    var removedLength = 0;\n    var cursorPosition = Math.min(previousSelection.start, selection.start);\n\n    if (selection.end > previousSelection.start) {\n      enteredString = newValue.slice(previousSelection.start, selection.end);\n      formattedEnteredStringLength = _this.getStringFillingLengthAtPosition(enteredString, cursorPosition);\n\n      if (!formattedEnteredStringLength) {\n        removedLength = 0;\n      } else {\n        removedLength = previousSelection.length;\n      }\n    } else if (newValue.length < previousValue.length) {\n      removedLength = previousValue.length - newValue.length;\n    }\n\n    newValue = previousValue;\n\n    if (removedLength) {\n      if (removedLength === 1 && !previousSelection.length) {\n        var deleteFromRight = previousSelection.start === selection.start;\n        cursorPosition = deleteFromRight ? _this.getRightEditablePosition(selection.start) : _this.getLeftEditablePosition(selection.start);\n      }\n\n      newValue = _this.clearRange(newValue, cursorPosition, removedLength);\n    }\n\n    newValue = _this.insertStringAtPosition(newValue, enteredString, cursorPosition);\n    cursorPosition += formattedEnteredStringLength;\n\n    if (cursorPosition >= mask.length) {\n      cursorPosition = mask.length;\n    } else if (cursorPosition < prefix.length && !formattedEnteredStringLength) {\n      cursorPosition = prefix.length;\n    } else if (cursorPosition >= prefix.length && cursorPosition < lastEditablePosition && formattedEnteredStringLength) {\n      cursorPosition = _this.getRightEditablePosition(cursorPosition);\n    }\n\n    newValue = _this.formatValue(newValue);\n    return {\n      value: newValue,\n      enteredString: enteredString,\n      selection: {\n        start: cursorPosition,\n        end: cursorPosition\n      }\n    };\n  };\n\n  this.maskOptions = parseMask(options);\n};\n\nvar InputMaskChildrenWrapper =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(InputMaskChildrenWrapper, _React$Component);\n\n  function InputMaskChildrenWrapper() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = InputMaskChildrenWrapper.prototype;\n\n  _proto.render = function render() {\n    // eslint-disable-next-line react/prop-types\n    var _this$props = this.props,\n        children = _this$props.children,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"children\"]);\n\n    return React__default.cloneElement(children, props);\n  };\n\n  return InputMaskChildrenWrapper;\n}(React__default.Component);\n\nvar InputMask = React.forwardRef(function InputMask(props, forwardedRef) {\n  var alwaysShowMask = props.alwaysShowMask,\n      children = props.children,\n      mask = props.mask,\n      maskPlaceholder = props.maskPlaceholder,\n      beforeMaskedStateChange = props.beforeMaskedStateChange,\n      restProps = _objectWithoutPropertiesLoose(props, [\"alwaysShowMask\", \"children\", \"mask\", \"maskPlaceholder\", \"beforeMaskedStateChange\"]);\n\n  validateMaxLength(props);\n  validateMaskPlaceholder(props);\n  var maskUtils = new MaskUtils({\n    mask: mask,\n    maskPlaceholder: maskPlaceholder\n  });\n  var isMasked = !!mask;\n  var isEditable = !restProps.disabled && !restProps.readOnly;\n  var isControlled = props.value !== null && props.value !== undefined;\n  var previousIsMasked = usePrevious(isMasked);\n  var initialValue = toString((isControlled ? props.value : props.defaultValue) || \"\");\n\n  var _useInputState = useInputState(initialValue, isMasked),\n      inputRef = _useInputState.inputRef,\n      getInputState = _useInputState.getInputState,\n      setInputState = _useInputState.setInputState,\n      getLastInputState = _useInputState.getLastInputState;\n\n  var getInputElement = useInputElement(inputRef);\n\n  function onChange(event) {\n    var currentState = getInputState();\n    var previousState = getLastInputState();\n    var newInputState = maskUtils.processChange(currentState, previousState);\n\n    if (beforeMaskedStateChange) {\n      newInputState = beforeMaskedStateChange({\n        currentState: currentState,\n        previousState: previousState,\n        nextState: newInputState\n      });\n    }\n\n    setInputState(newInputState);\n\n    if (props.onChange) {\n      props.onChange(event);\n    }\n  }\n\n  function onFocus(event) {\n    // If autoFocus property is set, focus event fires before the ref handler gets called\n    inputRef.current = event.target;\n    var currentValue = getInputState().value;\n\n    if (isMasked && !maskUtils.isValueFilled(currentValue)) {\n      var newValue = maskUtils.formatValue(currentValue);\n      var newSelection = maskUtils.getDefaultSelectionForValue(newValue);\n      var newInputState = {\n        value: newValue,\n        selection: newSelection\n      };\n\n      if (beforeMaskedStateChange) {\n        newInputState = beforeMaskedStateChange({\n          currentState: getInputState(),\n          nextState: newInputState\n        });\n        newValue = newInputState.value;\n        newSelection = newInputState.selection;\n      }\n\n      setInputState(newInputState);\n\n      if (newValue !== currentValue && props.onChange) {\n        props.onChange(event);\n      } // Chrome resets selection after focus event,\n      // so we want to restore it later\n\n\n      defer(function () {\n        setInputState(getLastInputState());\n      });\n    }\n\n    if (props.onFocus) {\n      props.onFocus(event);\n    }\n  }\n\n  function onBlur(event) {\n    var currentValue = getInputState().value;\n    var lastValue = getLastInputState().value;\n\n    if (isMasked && !alwaysShowMask && maskUtils.isValueEmpty(lastValue)) {\n      var newValue = \"\";\n      var newInputState = {\n        value: newValue,\n        selection: {\n          start: null,\n          end: null\n        }\n      };\n\n      if (beforeMaskedStateChange) {\n        newInputState = beforeMaskedStateChange({\n          currentState: getInputState(),\n          nextState: newInputState\n        });\n        newValue = newInputState.value;\n      }\n\n      setInputState(newInputState);\n\n      if (newValue !== currentValue && props.onChange) {\n        props.onChange(event);\n      }\n    }\n\n    if (props.onBlur) {\n      props.onBlur(event);\n    }\n  } // Tiny unintentional mouse movements can break cursor\n  // position on focus, so we have to restore it in that case\n  //\n  // https://github.com/sanniassin/react-input-mask/issues/108\n\n\n  function onMouseDown(event) {\n    var input = getInputElement();\n\n    var _getInputState = getInputState(),\n        value = _getInputState.value;\n\n    var inputDocument = getElementDocument(input);\n\n    if (!isInputFocused(input) && !maskUtils.isValueFilled(value)) {\n      var mouseDownX = event.clientX;\n      var mouseDownY = event.clientY;\n      var mouseDownTime = new Date().getTime();\n\n      var mouseUpHandler = function mouseUpHandler(mouseUpEvent) {\n        inputDocument.removeEventListener(\"mouseup\", mouseUpHandler);\n\n        if (!isInputFocused(input)) {\n          return;\n        }\n\n        var deltaX = Math.abs(mouseUpEvent.clientX - mouseDownX);\n        var deltaY = Math.abs(mouseUpEvent.clientY - mouseDownY);\n        var axisDelta = Math.max(deltaX, deltaY);\n        var timeDelta = new Date().getTime() - mouseDownTime;\n\n        if (axisDelta <= 10 && timeDelta <= 200 || axisDelta <= 5 && timeDelta <= 300) {\n          var _lastState = getLastInputState();\n\n          var newSelection = maskUtils.getDefaultSelectionForValue(_lastState.value);\n\n          var newState = _extends({}, _lastState, {\n            selection: newSelection\n          });\n\n          setInputState(newState);\n        }\n      };\n\n      inputDocument.addEventListener(\"mouseup\", mouseUpHandler);\n    }\n\n    if (props.onMouseDown) {\n      props.onMouseDown(event);\n    }\n  } // For controlled inputs we want to provide properly formatted\n  // value prop\n\n\n  if (isMasked && isControlled) {\n    var input = getInputElement();\n    var isFocused = input && isInputFocused(input);\n    var newValue = isFocused || alwaysShowMask || props.value ? maskUtils.formatValue(props.value) : props.value;\n\n    if (beforeMaskedStateChange) {\n      newValue = beforeMaskedStateChange({\n        nextState: {\n          value: newValue,\n          selection: {\n            start: null,\n            end: null\n          }\n        }\n      }).value;\n    }\n\n    setInputState(_extends({}, getLastInputState(), {\n      value: newValue\n    }));\n  }\n\n  var lastState = getLastInputState();\n  var lastSelection = lastState.selection;\n  var lastValue = lastState.value;\n  React.useLayoutEffect(function () {\n    if (!isMasked) {\n      return;\n    }\n\n    var input = getInputElement();\n    var isFocused = isInputFocused(input);\n    var previousSelection = lastSelection;\n    var currentState = getInputState();\n\n    var newInputState = _extends({}, currentState); // Update value for uncontrolled inputs to make sure\n    // it's always in sync with mask props\n\n\n    if (!isControlled) {\n      var currentValue = currentState.value;\n      var formattedValue = maskUtils.formatValue(currentValue);\n      var isValueEmpty = maskUtils.isValueEmpty(formattedValue);\n      var shouldFormatValue = !isValueEmpty || isFocused || alwaysShowMask;\n\n      if (shouldFormatValue) {\n        newInputState.value = formattedValue;\n      } else if (isValueEmpty && !isFocused) {\n        newInputState.value = \"\";\n      }\n    }\n\n    if (isFocused && !previousIsMasked) {\n      // Adjust selection if input got masked while being focused\n      newInputState.selection = maskUtils.getDefaultSelectionForValue(newInputState.value);\n    } else if (isControlled && isFocused && previousSelection) {\n      // Restore cursor position if value has changed outside change event\n      if (previousSelection.start !== null && previousSelection.end !== null) {\n        newInputState.selection = previousSelection;\n      }\n    }\n\n    if (beforeMaskedStateChange) {\n      newInputState = beforeMaskedStateChange({\n        currentState: currentState,\n        nextState: newInputState\n      });\n    }\n\n    setInputState(newInputState);\n  });\n\n  var inputProps = _extends({}, restProps, {\n    onFocus: onFocus,\n    onBlur: onBlur,\n    onChange: isMasked && isEditable ? onChange : props.onChange,\n    onMouseDown: isMasked && isEditable ? onMouseDown : props.onMouseDown,\n    ref: function ref(_ref) {\n      inputRef.current = reactDom.findDOMNode(_ref);\n\n      if (isFunction(forwardedRef)) {\n        forwardedRef(_ref);\n      } else if (forwardedRef !== null && typeof forwardedRef === \"object\") {\n        forwardedRef.current = _ref;\n      }\n    },\n    value: isMasked && isControlled ? lastValue : props.value\n  });\n\n  if (children) {\n    validateChildren(props, children); // We wrap children into a class component to be able to find\n    // their input element using findDOMNode\n\n    return React__default.createElement(InputMaskChildrenWrapper, inputProps, children);\n  }\n\n  return React__default.createElement(\"input\", inputProps);\n});\nInputMask.displayName = \"InputMask\";\nInputMask.defaultProps = {\n  alwaysShowMask: false,\n  maskPlaceholder: \"_\"\n};\nInputMask.propTypes = {\n  alwaysShowMask: PropTypes.bool,\n  beforeMaskedStateChange: PropTypes.func,\n  children: PropTypes.element,\n  mask: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.instanceOf(RegExp)]))]),\n  maskPlaceholder: PropTypes.string,\n  onFocus: PropTypes.func,\n  onBlur: PropTypes.func,\n  onChange: PropTypes.func,\n  onMouseDown: PropTypes.func\n};\n\nmodule.exports = InputMask;\n"]},"metadata":{},"sourceType":"script"}