{"ast":null,"code":"import * as Yup from 'yup';\nimport flow from 'lodash/fp/flow';\nimport cep from '@britania-crm/forms/validators/cep.validator';\nimport cpfCnpj from '@britania-crm/forms/validators/cpfCnpj.validator';\nimport dayMonth from '@britania-crm/forms/validators/dayMonth.validator';\nimport email from '@britania-crm/forms/validators/email.validator';\nimport maxLength from '@britania-crm/forms/validators/maxLength.validator';\nimport number from '@britania-crm/forms/validators/number.validator';\nimport phone from '@britania-crm/forms/validators/phone.validator';\nimport required from '@britania-crm/forms/validators/required.validator';\nconst addressInitialValues = {\n  street: '',\n  number: '',\n  district: '',\n  city: '',\n  uf: '',\n  cep: '',\n  complement: ''\n};\nexport const INITIAL_VALUES = {\n  cpf: '',\n  name: '',\n  category: '',\n  voltage: '110',\n  role: '',\n  birthday: '',\n  email: '',\n  telephone: '',\n  linesFamilies: [],\n  active: false,\n  parentCompanyAddress: addressInitialValues,\n  buyerAddress: addressInitialValues,\n  clientTotvsDescription: {},\n  clientTotvsCode: {},\n  responsible: {},\n  regionalManager: {}\n};\nexport default (({\n  t\n}) => {\n  const addressSchema = () => Yup.object().shape({\n    street: maxLength({\n      t,\n      length: 70,\n      type: t('characters', {\n        howMany: 1\n      }),\n      field: t('public place', {\n        howMany: 1\n      })\n    })(Yup.string()),\n    number: flow(maxLength({\n      t,\n      length: 10,\n      type: t('digits'),\n      field: t('number', {\n        howMany: 1\n      })\n    }), number({\n      t\n    }))(Yup.string()),\n    district: maxLength({\n      t,\n      length: 40,\n      type: t('characters', {\n        howMany: 1\n      }),\n      field: t('district', {\n        howMany: 1\n      })\n    })(Yup.string()),\n    cep: cep({\n      t\n    })(Yup.string()),\n    city: maxLength({\n      t,\n      length: 40,\n      type: t('characters', {\n        howMany: 1\n      }),\n      field: t('city', {\n        howMany: 1\n      })\n    })(Yup.string()),\n    uf: Yup.string(),\n    complement: maxLength({\n      t,\n      length: 70,\n      type: t('characters', {\n        howMany: 1\n      }),\n      field: t('city', {\n        howMany: 1\n      })\n    })(Yup.string())\n  });\n\n  return Yup.object().shape({\n    active: Yup.bool(),\n    cpf: flow(cpfCnpj({\n      t\n    }), required({\n      t\n    }))(Yup.string()),\n    name: required({\n      t\n    })(Yup.string()),\n    category: required({\n      t\n    })(Yup.string()),\n    linesFamilies: required({\n      t,\n      isNotText: true\n    })(Yup.array()),\n    email: flow(email({\n      t\n    }), required({\n      t\n    }))(Yup.string()),\n    telephone: flow(phone({\n      t\n    }), required({\n      t\n    }))(Yup.string()),\n    voltage: Yup.string(),\n    birthday: dayMonth({\n      t\n    })(Yup.string()),\n    role: Yup.string(),\n    parentCompanyAddress: addressSchema(),\n    buyerAddress: addressSchema(),\n    clientTotvsCode: required({\n      t,\n      isNotText: true\n    })(Yup.object()),\n    clientTotvsDescription: required({\n      t,\n      isNotText: true\n    })(Yup.object()),\n    responsible: Yup.object(),\n    regionalManager: Yup.object()\n  });\n});","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/core/forms/schemas/buyer/buyer.schema.js"],"names":["Yup","flow","cep","cpfCnpj","dayMonth","email","maxLength","number","phone","required","addressInitialValues","street","district","city","uf","complement","INITIAL_VALUES","cpf","name","category","voltage","role","birthday","telephone","linesFamilies","active","parentCompanyAddress","buyerAddress","clientTotvsDescription","clientTotvsCode","responsible","regionalManager","t","addressSchema","object","shape","length","type","howMany","field","string","bool","isNotText","array"],"mappings":"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","sourcesContent":["import * as Yup from 'yup'\n\nimport flow from 'lodash/fp/flow'\n\nimport cep from '@britania-crm/forms/validators/cep.validator'\nimport cpfCnpj from '@britania-crm/forms/validators/cpfCnpj.validator'\nimport dayMonth from '@britania-crm/forms/validators/dayMonth.validator'\nimport email from '@britania-crm/forms/validators/email.validator'\nimport maxLength from '@britania-crm/forms/validators/maxLength.validator'\nimport number from '@britania-crm/forms/validators/number.validator'\nimport phone from '@britania-crm/forms/validators/phone.validator'\nimport required from '@britania-crm/forms/validators/required.validator'\n\nconst addressInitialValues = {\n  street: '',\n  number: '',\n  district: '',\n  city: '',\n  uf: '',\n  cep: '',\n  complement: ''\n}\n\nexport const INITIAL_VALUES = {\n  cpf: '',\n  name: '',\n  category: '',\n  voltage: '110',\n  role: '',\n  birthday: '',\n  email: '',\n  telephone: '',\n  linesFamilies: [],\n  active: false,\n  parentCompanyAddress: addressInitialValues,\n  buyerAddress: addressInitialValues,\n  clientTotvsDescription: {},\n  clientTotvsCode: {},\n  responsible: {},\n  regionalManager: {}\n}\n\nexport default ({ t }) => {\n  const addressSchema = () => Yup.object().shape({\n    street: maxLength({\n      t,\n      length: 70,\n      type: t('characters', { howMany: 1 }),\n      field: t('public place', { howMany: 1 })\n    })(Yup.string()),\n    number: flow(\n      maxLength({\n        t,\n        length: 10,\n        type: t('digits'),\n        field: t('number', { howMany: 1 })\n      }),\n      number({ t }))((Yup.string())),\n    district: maxLength({\n      t,\n      length: 40,\n      type: t('characters', { howMany: 1 }),\n      field: t('district', { howMany: 1 })\n    })(Yup.string()),\n    cep: cep({ t })(Yup.string()),\n    city: maxLength({\n      t,\n      length: 40,\n      type: t('characters', { howMany: 1 }),\n      field: t('city', { howMany: 1 })\n    })(Yup.string()),\n    uf: Yup.string(),\n    complement: maxLength({\n      t,\n      length: 70,\n      type: t('characters', { howMany: 1 }),\n      field: t('city', { howMany: 1 })\n    })(Yup.string())\n  })\n\n  return Yup.object().shape({\n    active: Yup.bool(),\n    cpf: flow(\n      cpfCnpj({ t }),\n      required({ t })\n    )(Yup.string()),\n    name: required({ t })(Yup.string()),\n    category: required({ t })(Yup.string()),\n    linesFamilies: required({ t, isNotText: true })(Yup.array()),\n    email: flow(\n      email({ t }),\n      required({ t })\n    )(Yup.string()),\n    telephone: flow(\n      phone({ t }),\n      required({ t })\n    )(Yup.string()),\n    voltage: Yup.string(),\n    birthday: dayMonth({ t })(Yup.string()),\n    role: Yup.string(),\n    parentCompanyAddress: addressSchema(),\n    buyerAddress: addressSchema(),\n    clientTotvsCode: required({ t, isNotText: true })(Yup.object()),\n    clientTotvsDescription: required({ t, isNotText: true })(Yup.object()),\n    responsible: Yup.object(),\n    regionalManager: Yup.object()\n  })\n}\n"]},"metadata":{},"sourceType":"module"}