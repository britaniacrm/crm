{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/components/InputSelect/InputSelectForm.js\";\nimport React, { forwardRef, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { FieldProvider, useField } from '@britania-crm/forms';\nimport InputSelectStyled from './InputSelectStyled';\n\nconst InputSelectForm = props => {\n  const {\n    setValue,\n    ...rest\n  } = props;\n  const {\n    fieldRef,\n    error\n  } = useField();\n  const handleChange = useCallback(event => {\n    setValue(event.target.value);\n  }, [setValue]);\n  return /*#__PURE__*/React.createElement(InputSelectStyled, Object.assign({\n    ref: fieldRef\n  }, rest, {\n    onChange: handleChange,\n    error: error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }));\n};\n\nInputSelectForm.propTypes = {\n  setValue: PropTypes.func.isRequired\n};\nconst Field = forwardRef(({\n  path,\n  ...props\n}, ref) => /*#__PURE__*/React.createElement(FieldProvider, Object.assign({\n  ref: ref\n}, props, {\n  registerFieldOptions: {\n    path\n  },\n  FieldComponent: InputSelectForm,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 3\n  }\n})));\nField.propTypes = {\n  name: PropTypes.string.isRequired,\n  disabled: PropTypes.bool,\n  onChange: PropTypes.func,\n  onBlur: PropTypes.func,\n  onValueChange: PropTypes.func,\n  path: PropTypes.string,\n  defaultValue: PropTypes.any,\n  helperText: PropTypes.string\n};\nField.defaultProps = {\n  disabled: false,\n\n  onChange() {},\n\n  onValueChange() {},\n\n  onBlur() {},\n\n  path: 'value',\n  defaultValue: '',\n  helperText: null\n};\nexport default Field;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/components/InputSelect/InputSelectForm.js"],"names":["React","forwardRef","useCallback","PropTypes","FieldProvider","useField","InputSelectStyled","InputSelectForm","props","setValue","rest","fieldRef","error","handleChange","event","target","value","propTypes","func","isRequired","Field","path","ref","name","string","disabled","bool","onChange","onBlur","onValueChange","defaultValue","any","helperText","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IACEC,UADF,EAEEC,WAFF,QAGO,OAHP;AAKA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SACEC,aADF,EAEEC,QAFF,QAGO,qBAHP;AAKA,OAAOC,iBAAP,MAA8B,qBAA9B;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,QAAM;AACJC,IAAAA,QADI;AAEJ,OAAGC;AAFC,MAGFF,KAHJ;AAKA,QAAM;AAAEG,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAsBP,QAAQ,EAApC;AAEA,QAAMQ,YAAY,GAAGX,WAAW,CAC7BY,KAAD,IAAW;AACTL,IAAAA,QAAQ,CAACK,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;AACD,GAH6B,EAI9B,CAACP,QAAD,CAJ8B,CAAhC;AAOA,sBACE,oBAAC,iBAAD;AACE,IAAA,GAAG,EAAGE;AADR,KAEOD,IAFP;AAGE,IAAA,QAAQ,EAAGG,YAHb;AAIE,IAAA,KAAK,EAAGD,KAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAQD,CAvBD;;AAyBAL,eAAe,CAACU,SAAhB,GAA4B;AAAER,EAAAA,QAAQ,EAAEN,SAAS,CAACe,IAAV,CAAeC;AAA3B,CAA5B;AAEA,MAAMC,KAAK,GAAGnB,UAAU,CAAC,CAAC;AAAEoB,EAAAA,IAAF;AAAQ,KAAGb;AAAX,CAAD,EAAqBc,GAArB,kBACvB,oBAAC,aAAD;AACE,EAAA,GAAG,EAAGA;AADR,GAEOd,KAFP;AAGE,EAAA,oBAAoB,EAAG;AAAEa,IAAAA;AAAF,GAHzB;AAIE,EAAA,cAAc,EAAGd,eAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADsB,CAAxB;AASAa,KAAK,CAACH,SAAN,GAAkB;AAChBM,EAAAA,IAAI,EAAEpB,SAAS,CAACqB,MAAV,CAAiBL,UADP;AAEhBM,EAAAA,QAAQ,EAAEtB,SAAS,CAACuB,IAFJ;AAGhBC,EAAAA,QAAQ,EAAExB,SAAS,CAACe,IAHJ;AAIhBU,EAAAA,MAAM,EAAEzB,SAAS,CAACe,IAJF;AAKhBW,EAAAA,aAAa,EAAE1B,SAAS,CAACe,IALT;AAMhBG,EAAAA,IAAI,EAAElB,SAAS,CAACqB,MANA;AAOhBM,EAAAA,YAAY,EAAE3B,SAAS,CAAC4B,GAPR;AAQhBC,EAAAA,UAAU,EAAE7B,SAAS,CAACqB;AARN,CAAlB;AAWAJ,KAAK,CAACa,YAAN,GAAqB;AACnBR,EAAAA,QAAQ,EAAE,KADS;;AAEnBE,EAAAA,QAAQ,GAAI,CAAE,CAFK;;AAGnBE,EAAAA,aAAa,GAAI,CAAE,CAHA;;AAInBD,EAAAA,MAAM,GAAI,CAAE,CAJO;;AAKnBP,EAAAA,IAAI,EAAE,OALa;AAMnBS,EAAAA,YAAY,EAAE,EANK;AAOnBE,EAAAA,UAAU,EAAE;AAPO,CAArB;AAUA,eAAeZ,KAAf","sourcesContent":["import React, {\n  forwardRef,\n  useCallback\n} from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport {\n  FieldProvider,\n  useField\n} from '@britania-crm/forms'\n\nimport InputSelectStyled from './InputSelectStyled'\n\nconst InputSelectForm = (props) => {\n  const {\n    setValue,\n    ...rest\n  } = props\n\n  const { fieldRef, error } = useField()\n\n  const handleChange = useCallback(\n    (event) => {\n      setValue(event.target.value)\n    },\n    [setValue]\n  )\n\n  return (\n    <InputSelectStyled\n      ref={ fieldRef }\n      { ...rest }\n      onChange={ handleChange }\n      error={ error }\n    />\n  )\n}\n\nInputSelectForm.propTypes = { setValue: PropTypes.func.isRequired }\n\nconst Field = forwardRef(({ path, ...props }, ref) => (\n  <FieldProvider\n    ref={ ref }\n    { ...props }\n    registerFieldOptions={ { path } }\n    FieldComponent={ InputSelectForm }\n  />\n))\n\nField.propTypes = {\n  name: PropTypes.string.isRequired,\n  disabled: PropTypes.bool,\n  onChange: PropTypes.func,\n  onBlur: PropTypes.func,\n  onValueChange: PropTypes.func,\n  path: PropTypes.string,\n  defaultValue: PropTypes.any,\n  helperText: PropTypes.string\n}\n\nField.defaultProps = {\n  disabled: false,\n  onChange () {},\n  onValueChange () {},\n  onBlur () {},\n  path: 'value',\n  defaultValue: '',\n  helperText: null\n}\n\nexport default Field\n"]},"metadata":{},"sourceType":"module"}