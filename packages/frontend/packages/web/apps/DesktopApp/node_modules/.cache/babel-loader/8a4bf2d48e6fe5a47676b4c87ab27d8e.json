{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/customers/containers/CompanyHoldingParticipationTable/CompanyHoldingParticipationTable.js\";\nimport React, { useMemo, useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport filter from 'lodash/filter';\nimport map from 'lodash/map';\nimport { useDialog } from '@britania-crm/dialog';\nimport { useT } from '@britania-crm/i18n';\nimport DataTable from '@britania-crm/web-components/DataTable';\nimport InputHidden from '@britania-crm/web-components/InputHidden';\nimport ConfirmModal from '@britania-crm/web-components/Modal/ConfirmModal';\nimport NewCompanyHoldingParticipationModal from '@britania-crm/web-src/modules/customers/modals/NewCompanyHoldingParticipationModal';\n\nconst CompanyHoldingParticipationTable = ({\n  disabled,\n  formRef\n}) => {\n  const t = useT();\n  const {\n    createDialog\n  } = useDialog();\n  const [participations, setParticipations] = useState([]);\n  const columns = useMemo(() => [{\n    title: t('company name'),\n    field: 'name'\n  }, {\n    title: 'UF',\n    field: 'state'\n  }, {\n    title: t('city', {\n      howMany: 1\n    }),\n    field: 'city'\n  }, {\n    title: t('activity branch', {\n      howMany: 1\n    }),\n    field: 'branch'\n  }, {\n    title: t('participation', {\n      howMany: 1\n    }),\n    field: 'participationPercent',\n    render: row => `${row.participationPercent}%`\n  }], [t]);\n  const onAddClick = useCallback(() => createDialog({\n    id: 'modal-add-new-participation',\n    Component: NewCompanyHoldingParticipationModal,\n    props: {\n      onSubmit(participation) {\n        formRef.current.setFieldValue('additionalInformation.participationsCompany', old => [...old, participation]);\n      }\n\n    }\n  }), [createDialog, formRef]);\n  const onEditClick = useCallback((_, row) => createDialog({\n    id: 'modal-edit-participation',\n    Component: NewCompanyHoldingParticipationModal,\n    props: {\n      participation: row,\n\n      onSubmit(participation) {\n        formRef.current.setFieldValue('additionalInformation.participationsCompany', old => map(old, (item, index) => index === row.tableData.id ? {\n          id: row.id,\n          ...participation\n        } : item));\n      }\n\n    }\n  }), [createDialog, formRef]);\n  const onDeleteClick = useCallback((_, row) => createDialog({\n    id: 'modal-delete-participation',\n    Component: ConfirmModal,\n    props: {\n      onConfirm() {\n        formRef.current.setFieldValue('additionalInformation.participationsCompany', old => filter(old, (item, index) => index !== row.tableData.id));\n      }\n\n    }\n  }), [createDialog, formRef]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DataTable, {\n    options: {\n      search: false\n    },\n    data: participations,\n    columns: columns,\n    title: t('companies holding participation'),\n    titleProps: {\n      variant: 'h6'\n    },\n    minimalistToolbar: true,\n    addTitle: t('add new {this}', {\n      this: t('participation', {\n        howMany: 1\n      }),\n      gender: 'female'\n    }),\n    onAddClick: !disabled && onAddClick,\n    onEditClick: !disabled && onEditClick,\n    onDeleteClick: !disabled && onDeleteClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }), formRef && /*#__PURE__*/React.createElement(InputHidden, {\n    name: \"participationsCompany\",\n    showError: true,\n    onValueChange: setParticipations,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }));\n};\n\nCompanyHoldingParticipationTable.propTypes = {\n  formRef: PropTypes.any.isRequired,\n  disabled: PropTypes.bool.isRequired\n};\nexport default CompanyHoldingParticipationTable;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/customers/containers/CompanyHoldingParticipationTable/CompanyHoldingParticipationTable.js"],"names":["React","useMemo","useCallback","useState","PropTypes","filter","map","useDialog","useT","DataTable","InputHidden","ConfirmModal","NewCompanyHoldingParticipationModal","CompanyHoldingParticipationTable","disabled","formRef","t","createDialog","participations","setParticipations","columns","title","field","howMany","render","row","participationPercent","onAddClick","id","Component","props","onSubmit","participation","current","setFieldValue","old","onEditClick","_","item","index","tableData","onDeleteClick","onConfirm","search","variant","this","gender","propTypes","any","isRequired","bool"],"mappings":"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","sourcesContent":["import React, {\n  useMemo,\n  useCallback,\n  useState\n} from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport filter from 'lodash/filter'\nimport map from 'lodash/map'\n\nimport { useDialog } from '@britania-crm/dialog'\nimport { useT } from '@britania-crm/i18n'\nimport DataTable from '@britania-crm/web-components/DataTable'\nimport InputHidden from '@britania-crm/web-components/InputHidden'\nimport ConfirmModal from '@britania-crm/web-components/Modal/ConfirmModal'\nimport NewCompanyHoldingParticipationModal from '@britania-crm/web-src/modules/customers/modals/NewCompanyHoldingParticipationModal'\n\nconst CompanyHoldingParticipationTable = ({ disabled, formRef }) => {\n  const t = useT()\n  const { createDialog } = useDialog()\n\n  const [participations, setParticipations] = useState([])\n\n  const columns = useMemo(\n    () => [\n      {\n        title: t('company name'),\n        field: 'name'\n      },\n      {\n        title: 'UF',\n        field: 'state'\n      },\n      {\n        title: t('city', { howMany: 1 }),\n        field: 'city'\n      },\n      {\n        title: t('activity branch', { howMany: 1 }),\n        field: 'branch'\n      },\n      {\n        title: t('participation', { howMany: 1 }),\n        field: 'participationPercent',\n        render: (row) => `${ row.participationPercent }%`\n      }\n    ],\n    [t]\n  )\n\n  const onAddClick = useCallback(\n    () => createDialog({\n      id: 'modal-add-new-participation',\n      Component: NewCompanyHoldingParticipationModal,\n      props: {\n        onSubmit (participation) {\n          formRef.current.setFieldValue('additionalInformation.participationsCompany', (old) => [...old, participation])\n        }\n      }\n    }),\n    [createDialog, formRef]\n  )\n\n  const onEditClick = useCallback(\n    (_, row) => createDialog({\n      id: 'modal-edit-participation',\n      Component: NewCompanyHoldingParticipationModal,\n      props: {\n        participation: row,\n        onSubmit (participation) {\n          formRef.current.setFieldValue(\n            'additionalInformation.participationsCompany',\n            (old) => map(old, (item, index) => index === row.tableData.id ? { id: row.id, ...participation } : item)\n          )\n        }\n      }\n    }),\n    [createDialog, formRef]\n  )\n\n  const onDeleteClick = useCallback(\n    (_, row) => createDialog({\n      id: 'modal-delete-participation',\n      Component: ConfirmModal,\n      props: {\n        onConfirm () {\n          formRef.current.setFieldValue(\n            'additionalInformation.participationsCompany',\n            (old) => filter(old, (item, index) => index !== row.tableData.id)\n          )\n        }\n      }\n    }),\n    [createDialog, formRef]\n  )\n\n  return (\n    <>\n      <DataTable\n        options={ { search: false } }\n        data={ participations }\n        columns={ columns }\n        title={ t('companies holding participation') }\n        titleProps={ { variant: 'h6' } }\n        minimalistToolbar\n        addTitle={ t('add new {this}', {\n          this: t('participation', { howMany: 1 }),\n          gender: 'female'\n        }) }\n        onAddClick={ !disabled && onAddClick }\n        onEditClick={ !disabled && onEditClick }\n        onDeleteClick={ !disabled && onDeleteClick }\n      />\n      {formRef && (\n        <InputHidden\n          name=\"participationsCompany\"\n          showError\n          onValueChange={ setParticipations }\n        />\n      )}\n    </>\n  )\n}\n\nCompanyHoldingParticipationTable.propTypes = {\n  formRef: PropTypes.any.isRequired,\n  disabled: PropTypes.bool.isRequired\n}\n\nexport default CompanyHoldingParticipationTable\n"]},"metadata":{},"sourceType":"module"}