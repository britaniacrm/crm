{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/workflowPanel/screens/WorkflowPanelCreateScreen/Historic/Historic.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport map from 'lodash/map';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { useT } from '@britania-crm/i18n';\nimport { formatBackDateTimeToFriendlyFormat } from '@britania-crm/utils/date';\nimport CustomAccordion from '@britania-crm/web-components/CustomAccordion';\nimport { useStyles } from '../styled';\n\nconst HistoricAccordion = ({\n  workflow\n}) => {\n  const t = useT();\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(CustomAccordion, {\n    header: t('historic'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    dense: false,\n    className: classes.list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    className: classes.listItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: t('changed by'),\n    className: classes.infoUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: t('edition date'),\n    className: classes.infoDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: t('changed field'),\n    className: classes.infoChanges,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  })), map(workflow === null || workflow === void 0 ? void 0 : workflow.histories, ({\n    updatedBy,\n    updatedAt,\n    updatedFields,\n    version\n  }) => /*#__PURE__*/React.createElement(ListItem, {\n    key: version,\n    className: classes.listItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: updatedBy,\n    className: classes.infoUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: formatBackDateTimeToFriendlyFormat(updatedAt),\n    className: classes.infoDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: updatedFields,\n    className: classes.infoChanges,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  })))));\n};\n\nHistoricAccordion.propTypes = {\n  workflow: PropTypes.object.isRequired\n};\nexport default HistoricAccordion;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/workflowPanel/screens/WorkflowPanelCreateScreen/Historic/Historic.js"],"names":["React","PropTypes","map","List","ListItem","ListItemText","useT","formatBackDateTimeToFriendlyFormat","CustomAccordion","useStyles","HistoricAccordion","workflow","t","classes","list","listItem","infoUser","infoDate","infoChanges","histories","updatedBy","updatedAt","updatedFields","version","propTypes","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,GAAP,MAAgB,YAAhB;AAEA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AAEA,SAASC,IAAT,QAAqB,oBAArB;AACA,SAASC,kCAAT,QAAmD,0BAAnD;AACA,OAAOC,eAAP,MAA4B,8CAA5B;AAEA,SAASC,SAAT,QAA0B,WAA1B;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC1C,QAAMC,CAAC,GAAGN,IAAI,EAAd;AAEA,QAAMO,OAAO,GAAGJ,SAAS,EAAzB;AAEA,sBACE,oBAAC,eAAD;AAAiB,IAAA,MAAM,EAAGG,CAAC,CAAC,UAAD,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAG,KAAd;AAAsB,IAAA,SAAS,EAAGC,OAAO,CAACC,IAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAGD,OAAO,CAACE,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AACE,IAAA,OAAO,EAAGH,CAAC,CAAC,YAAD,CADb;AAEE,IAAA,SAAS,EAAGC,OAAO,CAACG,QAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAKE,oBAAC,YAAD;AACE,IAAA,OAAO,EAAGJ,CAAC,CAAC,cAAD,CADb;AAEE,IAAA,SAAS,EAAGC,OAAO,CAACI,QAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eASE,oBAAC,YAAD;AACE,IAAA,OAAO,EAAGL,CAAC,CAAC,eAAD,CADb;AAEE,IAAA,SAAS,EAAGC,OAAO,CAACK,WAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF,EAgBIhB,GAAG,CAACS,QAAD,aAACA,QAAD,uBAACA,QAAQ,CAAEQ,SAAX,EAAsB,CAAC;AACxBC,IAAAA,SADwB;AACbC,IAAAA,SADa;AACFC,IAAAA,aADE;AACaC,IAAAA;AADb,GAAD,kBAGvB,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAGA,OAAhB;AAA0B,IAAA,SAAS,EAAGV,OAAO,CAACE,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AACE,IAAA,OAAO,EAAGK,SADZ;AAEE,IAAA,SAAS,EAAGP,OAAO,CAACG,QAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAKE,oBAAC,YAAD;AACE,IAAA,OAAO,EAAGT,kCAAkC,CAACc,SAAD,CAD9C;AAEE,IAAA,SAAS,EAAGR,OAAO,CAACI,QAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eASE,oBAAC,YAAD;AACE,IAAA,OAAO,EAAGK,aADZ;AAEE,IAAA,SAAS,EAAGT,OAAO,CAACK,WAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CAHC,CAhBP,CADF,CADF;AAwCD,CA7CD;;AA+CAR,iBAAiB,CAACc,SAAlB,GAA8B;AAAEb,EAAAA,QAAQ,EAAEV,SAAS,CAACwB,MAAV,CAAiBC;AAA7B,CAA9B;AAEA,eAAehB,iBAAf","sourcesContent":["import React from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport map from 'lodash/map'\n\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\n\nimport { useT } from '@britania-crm/i18n'\nimport { formatBackDateTimeToFriendlyFormat } from '@britania-crm/utils/date'\nimport CustomAccordion from '@britania-crm/web-components/CustomAccordion'\n\nimport { useStyles } from '../styled'\n\nconst HistoricAccordion = ({ workflow }) => {\n  const t = useT()\n\n  const classes = useStyles()\n\n  return (\n    <CustomAccordion header={ t('historic') }>\n      <List dense={ false } className={ classes.list }>\n        <ListItem className={ classes.listItem }>\n          <ListItemText\n            primary={ t('changed by') }\n            className={ classes.infoUser }\n          />\n          <ListItemText\n            primary={ t('edition date') }\n            className={ classes.infoDate }\n          />\n          <ListItemText\n            primary={ t('changed field') }\n            className={ classes.infoChanges }\n          />\n        </ListItem>\n        {\n          map(workflow?.histories, ({\n            updatedBy, updatedAt, updatedFields, version\n          }) => (\n            <ListItem key={ version } className={ classes.listItem }>\n              <ListItemText\n                primary={ updatedBy }\n                className={ classes.infoUser }\n              />\n              <ListItemText\n                primary={ formatBackDateTimeToFriendlyFormat(updatedAt) }\n                className={ classes.infoDate }\n              />\n              <ListItemText\n                primary={ updatedFields }\n                className={ classes.infoChanges }\n              />\n            </ListItem>\n          ))\n        }\n      </List>\n    </CustomAccordion>\n  )\n}\n\nHistoricAccordion.propTypes = { workflow: PropTypes.object.isRequired }\n\nexport default HistoricAccordion\n"]},"metadata":{},"sourceType":"module"}