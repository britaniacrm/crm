{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/components/TreeView/ResponseAndConditionCards/ResponseCard/ResponseCard.js\";\nimport React, { useMemo, useState, useCallback, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport filter from 'lodash/filter';\nimport isNumber from 'lodash/isNumber';\nimport map from 'lodash/map';\nimport Grid from '@material-ui/core/Grid';\nimport { useT } from '@britania-crm/i18n';\nimport Checkbox from '@britania-crm/web-components/Checkbox';\nimport InputSelect from '@britania-crm/web-components/InputSelect';\nimport InputText from '@britania-crm/web-components/InputText';\nimport RadioGroup from '@britania-crm/web-components/RadioGroup';\nimport DeleteButton from '../DeleteButton';\nimport { Container, RadioContainer } from '../styles';\n\nconst ResponseCard = ({\n  onPropChange,\n  treeIndex,\n  items,\n  readOnly,\n  deleteNode,\n  allTasks,\n  task\n}) => {\n  const t = useT();\n  const currentNodeState = useMemo(() => items[treeIndex], [items, treeIndex]);\n  const [finishWorkflowValue, setFinishWorkflowValue] = useState('');\n  const options = useMemo(() => [{\n    id: 'finishWorkflowWithError',\n    name: t('end with error')\n  }, {\n    id: 'finishWorkflowSuccessfully',\n    name: t('end with success')\n  }], [t]);\n  const nextTaskOptions = useMemo(() => {\n    const otherTasks = filter(allTasks, item => item.id !== task.id);\n    return map(otherTasks, item => ({\n      id: item.id,\n      name: item.title\n    }));\n  }, [allTasks, task]);\n  const nextTaskOrder = useMemo(() => {\n    if (isNumber(currentNodeState.nextTaskOrder)) {\n      var _allTasks;\n\n      return allTasks === null || allTasks === void 0 ? void 0 : (_allTasks = allTasks[currentNodeState.nextTaskOrder - 1]) === null || _allTasks === void 0 ? void 0 : _allTasks.id;\n    }\n\n    return currentNodeState.nextTaskOrder || '';\n  }, [currentNodeState.nextTaskOrder, allTasks]);\n  useEffect(() => {\n    if (currentNodeState.finishWorkflowWithError) {\n      setFinishWorkflowValue('finishWorkflowWithError');\n    } else if (currentNodeState.finishWorkflowSuccessfully) {\n      setFinishWorkflowValue('finishWorkflowSuccessfully');\n    } else {\n      setFinishWorkflowValue('');\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, []);\n  const handleChangeFinishWorkflowValue = useCallback(event => {\n    const [finishWorkflowWithError, finishWorkflowSuccessfully] = options;\n\n    if (event.target.value === finishWorkflowWithError.value) {\n      onPropChange('finishWorkflowWithError', treeIndex)(true);\n      onPropChange('finishWorkflowSuccessfully', treeIndex)(false);\n    } else if (event.target.value === finishWorkflowSuccessfully.value) {\n      onPropChange('finishWorkflowSuccessfully', treeIndex)(true);\n      onPropChange('finishWorkflowWithError', treeIndex)(false);\n    } else {\n      onPropChange('finishWorkflowWithError', treeIndex)(false);\n      onPropChange('finishWorkflowSuccessfully', treeIndex)(false);\n    }\n\n    setFinishWorkflowValue(event.target.value);\n  }, [onPropChange, options, treeIndex]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputText, {\n    detached: true,\n    onChange: onPropChange('title', treeIndex),\n    name: \"title\",\n    label: t('response name'),\n    value: currentNodeState.title,\n    required: true,\n    readOnly: readOnly,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputSelect, {\n    detached: true,\n    disabled: !!finishWorkflowValue,\n    onChange: onPropChange('nextTaskOrder', treeIndex),\n    name: \"nextTask\",\n    label: t('next task'),\n    value: nextTaskOrder,\n    options: nextTaskOptions,\n    readOnly: readOnly,\n    clearable: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 3,\n    style: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    detached: true,\n    onClick: onPropChange('requiresJustification', treeIndex, 'checked'),\n    name: \"requiresJustification\",\n    label: t('demands justification'),\n    value: currentNodeState.requiresJustification,\n    readOnly: readOnly,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }), !readOnly && /*#__PURE__*/React.createElement(DeleteButton, {\n    node: currentNodeState,\n    onDelete: deleteNode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(RadioContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(RadioGroup, {\n    detached: true,\n    clearable: true,\n    name: \"finishWorkflowValue\",\n    value: finishWorkflowValue,\n    onChange: handleChangeFinishWorkflowValue,\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  })));\n};\n\nResponseCard.propTypes = {\n  onPropChange: PropTypes.func.isRequired,\n  treeIndex: PropTypes.number.isRequired,\n  items: PropTypes.array.isRequired,\n  readOnly: PropTypes.bool.isRequired,\n  deleteNode: PropTypes.func.isRequired,\n  task: PropTypes.object.isRequired,\n  allTasks: PropTypes.array.isRequired\n};\nexport default ResponseCard;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/components/TreeView/ResponseAndConditionCards/ResponseCard/ResponseCard.js"],"names":["React","useMemo","useState","useCallback","useEffect","PropTypes","filter","isNumber","map","Grid","useT","Checkbox","InputSelect","InputText","RadioGroup","DeleteButton","Container","RadioContainer","ResponseCard","onPropChange","treeIndex","items","readOnly","deleteNode","allTasks","task","t","currentNodeState","finishWorkflowValue","setFinishWorkflowValue","options","id","name","nextTaskOptions","otherTasks","item","title","nextTaskOrder","finishWorkflowWithError","finishWorkflowSuccessfully","handleChangeFinishWorkflowValue","event","target","value","display","alignItems","requiresJustification","propTypes","func","isRequired","number","array","bool","object"],"mappings":";AAAA,OAAOA,KAAP,IACEC,OADF,EAEEC,QAFF,EAGEC,WAHF,EAIEC,SAJF,QAKO,OALP;AAOA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,GAAP,MAAgB,YAAhB;AAEA,OAAOC,IAAP,MAAiB,wBAAjB;AAEA,SAASC,IAAT,QAAqB,oBAArB;AACA,OAAOC,QAAP,MAAqB,uCAArB;AACA,OAAOC,WAAP,MAAwB,0CAAxB;AACA,OAAOC,SAAP,MAAsB,wCAAtB;AACA,OAAOC,UAAP,MAAuB,yCAAvB;AAEA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,SACEC,SADF,EAEEC,cAFF,QAGO,WAHP;;AAKA,MAAMC,YAAY,GAAG,CAAC;AACpBC,EAAAA,YADoB;AAEpBC,EAAAA,SAFoB;AAGpBC,EAAAA,KAHoB;AAIpBC,EAAAA,QAJoB;AAKpBC,EAAAA,UALoB;AAMpBC,EAAAA,QANoB;AAOpBC,EAAAA;AAPoB,CAAD,KAQf;AACJ,QAAMC,CAAC,GAAGhB,IAAI,EAAd;AAEA,QAAMiB,gBAAgB,GAAG1B,OAAO,CAAC,MAAMoB,KAAK,CAACD,SAAD,CAAZ,EAAyB,CAACC,KAAD,EAAQD,SAAR,CAAzB,CAAhC;AAEA,QAAM,CAACQ,mBAAD,EAAsBC,sBAAtB,IAAgD3B,QAAQ,CAAC,EAAD,CAA9D;AAEA,QAAM4B,OAAO,GAAG7B,OAAO,CAAC,MAAM,CAC5B;AACE8B,IAAAA,EAAE,EAAE,yBADN;AAEEC,IAAAA,IAAI,EAAEN,CAAC,CAAC,gBAAD;AAFT,GAD4B,EAK5B;AACEK,IAAAA,EAAE,EAAE,4BADN;AAEEC,IAAAA,IAAI,EAAEN,CAAC,CAAC,kBAAD;AAFT,GAL4B,CAAP,EASpB,CAACA,CAAD,CAToB,CAAvB;AAWA,QAAMO,eAAe,GAAGhC,OAAO,CAC7B,MAAM;AACJ,UAAMiC,UAAU,GAAG5B,MAAM,CAACkB,QAAD,EAAYW,IAAD,IAAUA,IAAI,CAACJ,EAAL,KAAYN,IAAI,CAACM,EAAtC,CAAzB;AACA,WAAOvB,GAAG,CAAC0B,UAAD,EAAcC,IAAD,KAAW;AAChCJ,MAAAA,EAAE,EAAEI,IAAI,CAACJ,EADuB;AAEhCC,MAAAA,IAAI,EAAEG,IAAI,CAACC;AAFqB,KAAX,CAAb,CAAV;AAID,GAP4B,EAQ7B,CAACZ,QAAD,EAAWC,IAAX,CAR6B,CAA/B;AAWA,QAAMY,aAAa,GAAGpC,OAAO,CAC3B,MAAM;AACJ,QAAIM,QAAQ,CAACoB,gBAAgB,CAACU,aAAlB,CAAZ,EAA8C;AAAA;;AAC5C,aAAOb,QAAP,aAAOA,QAAP,oCAAOA,QAAQ,CAAGG,gBAAgB,CAACU,aAAjB,GAAiC,CAApC,CAAf,8CAAO,UAAgDN,EAAvD;AACD;;AACD,WAAOJ,gBAAgB,CAACU,aAAjB,IAAkC,EAAzC;AACD,GAN0B,EAO3B,CAACV,gBAAgB,CAACU,aAAlB,EAAiCb,QAAjC,CAP2B,CAA7B;AAUApB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIuB,gBAAgB,CAACW,uBAArB,EAA8C;AAC5CT,MAAAA,sBAAsB,CAAC,yBAAD,CAAtB;AACD,KAFD,MAEO,IAAIF,gBAAgB,CAACY,0BAArB,EAAiD;AACtDV,MAAAA,sBAAsB,CAAC,4BAAD,CAAtB;AACD,KAFM,MAEA;AACLA,MAAAA,sBAAsB,CAAC,EAAD,CAAtB;AACD,KAPa,CAQd;;AACD,GATQ,EASN,EATM,CAAT;AAWA,QAAMW,+BAA+B,GAAGrC,WAAW,CAAEsC,KAAD,IAAW;AAC7D,UAAM,CAACH,uBAAD,EAA0BC,0BAA1B,IAAwDT,OAA9D;;AACA,QAAIW,KAAK,CAACC,MAAN,CAAaC,KAAb,KAAuBL,uBAAuB,CAACK,KAAnD,EAA0D;AACxDxB,MAAAA,YAAY,CAAC,yBAAD,EAA4BC,SAA5B,CAAZ,CAAmD,IAAnD;AACAD,MAAAA,YAAY,CAAC,4BAAD,EAA+BC,SAA/B,CAAZ,CAAsD,KAAtD;AACD,KAHD,MAGO,IAAIqB,KAAK,CAACC,MAAN,CAAaC,KAAb,KAAuBJ,0BAA0B,CAACI,KAAtD,EAA6D;AAClExB,MAAAA,YAAY,CAAC,4BAAD,EAA+BC,SAA/B,CAAZ,CAAsD,IAAtD;AACAD,MAAAA,YAAY,CAAC,yBAAD,EAA4BC,SAA5B,CAAZ,CAAmD,KAAnD;AACD,KAHM,MAGA;AACLD,MAAAA,YAAY,CAAC,yBAAD,EAA4BC,SAA5B,CAAZ,CAAmD,KAAnD;AACAD,MAAAA,YAAY,CAAC,4BAAD,EAA+BC,SAA/B,CAAZ,CAAsD,KAAtD;AACD;;AACDS,IAAAA,sBAAsB,CAACY,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAtB;AACD,GAbkD,EAahD,CAACxB,YAAD,EAAeW,OAAf,EAAwBV,SAAxB,CAbgD,CAAnD;AAeA,sBACE,uDACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAG,CAA1B;AAA8B,IAAA,UAAU,EAAC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAG,EAAhB;AAAqB,IAAA,EAAE,EAAG,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,QAAQ,EAAGD,YAAY,CAAC,OAAD,EAAUC,SAAV,CAFzB;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,KAAK,EAAGM,CAAC,CAAC,eAAD,CAJX;AAKE,IAAA,KAAK,EAAGC,gBAAgB,CAACS,KAL3B;AAME,IAAA,QAAQ,MANV;AAOE,IAAA,QAAQ,EAAGd,QAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,eAcE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAG,EAAhB;AAAqB,IAAA,EAAE,EAAG,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,QAAQ,EAAG,CAAC,CAACM,mBAFf;AAGE,IAAA,QAAQ,EAAGT,YAAY,CAAC,eAAD,EAAkBC,SAAlB,CAHzB;AAIE,IAAA,IAAI,EAAC,UAJP;AAKE,IAAA,KAAK,EAAGM,CAAC,CAAC,WAAD,CALX;AAME,IAAA,KAAK,EAAGW,aANV;AAOE,IAAA,OAAO,EAAGJ,eAPZ;AAQE,IAAA,QAAQ,EAAGX,QARb;AASE,IAAA,SAAS,MATX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAdF,eA4BE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAG,EAAhB;AAAqB,IAAA,EAAE,EAAG,CAA1B;AAA8B,IAAA,KAAK,EAAG;AAAEsB,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,UAAU,EAAE;AAA/B,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,OAAO,EAAG1B,YAAY,CAAC,uBAAD,EAA0BC,SAA1B,EAAqC,SAArC,CAFxB;AAGE,IAAA,IAAI,EAAC,uBAHP;AAIE,IAAA,KAAK,EAAGM,CAAC,CAAC,uBAAD,CAJX;AAKE,IAAA,KAAK,EAAGC,gBAAgB,CAACmB,qBAL3B;AAME,IAAA,QAAQ,EAAGxB,QANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASG,CAACA,QAAD,iBACC,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAGK,gBAArB;AAAwC,IAAA,QAAQ,EAAGJ,UAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,CA5BF,CAFF,CADF,eAgDE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,IAAI,EAAC,qBAHP;AAIE,IAAA,KAAK,EAAGK,mBAJV;AAKE,IAAA,QAAQ,EAAGY,+BALb;AAME,IAAA,OAAO,EAAGV,OANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAhDF,CADF;AA6DD,CAtID;;AAwIAZ,YAAY,CAAC6B,SAAb,GAAyB;AACvB5B,EAAAA,YAAY,EAAEd,SAAS,CAAC2C,IAAV,CAAeC,UADN;AAEvB7B,EAAAA,SAAS,EAAEf,SAAS,CAAC6C,MAAV,CAAiBD,UAFL;AAGvB5B,EAAAA,KAAK,EAAEhB,SAAS,CAAC8C,KAAV,CAAgBF,UAHA;AAIvB3B,EAAAA,QAAQ,EAAEjB,SAAS,CAAC+C,IAAV,CAAeH,UAJF;AAKvB1B,EAAAA,UAAU,EAAElB,SAAS,CAAC2C,IAAV,CAAeC,UALJ;AAMvBxB,EAAAA,IAAI,EAAEpB,SAAS,CAACgD,MAAV,CAAiBJ,UANA;AAOvBzB,EAAAA,QAAQ,EAAEnB,SAAS,CAAC8C,KAAV,CAAgBF;AAPH,CAAzB;AAUA,eAAe/B,YAAf","sourcesContent":["import React, {\n  useMemo,\n  useState,\n  useCallback,\n  useEffect\n} from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport filter from 'lodash/filter'\nimport isNumber from 'lodash/isNumber'\nimport map from 'lodash/map'\n\nimport Grid from '@material-ui/core/Grid'\n\nimport { useT } from '@britania-crm/i18n'\nimport Checkbox from '@britania-crm/web-components/Checkbox'\nimport InputSelect from '@britania-crm/web-components/InputSelect'\nimport InputText from '@britania-crm/web-components/InputText'\nimport RadioGroup from '@britania-crm/web-components/RadioGroup'\n\nimport DeleteButton from '../DeleteButton'\nimport {\n  Container,\n  RadioContainer\n} from '../styles'\n\nconst ResponseCard = ({\n  onPropChange,\n  treeIndex,\n  items,\n  readOnly,\n  deleteNode,\n  allTasks,\n  task\n}) => {\n  const t = useT()\n\n  const currentNodeState = useMemo(() => items[treeIndex], [items, treeIndex])\n\n  const [finishWorkflowValue, setFinishWorkflowValue] = useState('')\n\n  const options = useMemo(() => [\n    {\n      id: 'finishWorkflowWithError',\n      name: t('end with error')\n    },\n    {\n      id: 'finishWorkflowSuccessfully',\n      name: t('end with success')\n    }\n  ], [t])\n\n  const nextTaskOptions = useMemo(\n    () => {\n      const otherTasks = filter(allTasks, (item) => item.id !== task.id)\n      return map(otherTasks, (item) => ({\n        id: item.id,\n        name: item.title\n      }))\n    },\n    [allTasks, task]\n  )\n\n  const nextTaskOrder = useMemo(\n    () => {\n      if (isNumber(currentNodeState.nextTaskOrder)) {\n        return allTasks?.[currentNodeState.nextTaskOrder - 1]?.id\n      }\n      return currentNodeState.nextTaskOrder || ''\n    },\n    [currentNodeState.nextTaskOrder, allTasks]\n  )\n\n  useEffect(() => {\n    if (currentNodeState.finishWorkflowWithError) {\n      setFinishWorkflowValue('finishWorkflowWithError')\n    } else if (currentNodeState.finishWorkflowSuccessfully) {\n      setFinishWorkflowValue('finishWorkflowSuccessfully')\n    } else {\n      setFinishWorkflowValue('')\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const handleChangeFinishWorkflowValue = useCallback((event) => {\n    const [finishWorkflowWithError, finishWorkflowSuccessfully] = options\n    if (event.target.value === finishWorkflowWithError.value) {\n      onPropChange('finishWorkflowWithError', treeIndex)(true)\n      onPropChange('finishWorkflowSuccessfully', treeIndex)(false)\n    } else if (event.target.value === finishWorkflowSuccessfully.value) {\n      onPropChange('finishWorkflowSuccessfully', treeIndex)(true)\n      onPropChange('finishWorkflowWithError', treeIndex)(false)\n    } else {\n      onPropChange('finishWorkflowWithError', treeIndex)(false)\n      onPropChange('finishWorkflowSuccessfully', treeIndex)(false)\n    }\n    setFinishWorkflowValue(event.target.value)\n  }, [onPropChange, options, treeIndex])\n\n  return (\n    <>\n      <Container>\n\n        <Grid container spacing={ 1 } alignItems=\"center\">\n\n          <Grid item sm={ 12 } md={ 6 }>\n            <InputText\n              detached\n              onChange={ onPropChange('title', treeIndex) }\n              name=\"title\"\n              label={ t('response name') }\n              value={ currentNodeState.title }\n              required\n              readOnly={ readOnly }\n            />\n          </Grid>\n\n          <Grid item sm={ 12 } md={ 3 }>\n            <InputSelect\n              detached\n              disabled={ !!finishWorkflowValue }\n              onChange={ onPropChange('nextTaskOrder', treeIndex) }\n              name=\"nextTask\"\n              label={ t('next task') }\n              value={ nextTaskOrder }\n              options={ nextTaskOptions }\n              readOnly={ readOnly }\n              clearable\n            />\n          </Grid>\n\n          <Grid item sm={ 12 } md={ 3 } style={ { display: 'flex', alignItems: 'center' } }>\n            <Checkbox\n              detached\n              onClick={ onPropChange('requiresJustification', treeIndex, 'checked') }\n              name=\"requiresJustification\"\n              label={ t('demands justification') }\n              value={ currentNodeState.requiresJustification }\n              readOnly={ readOnly }\n            />\n            {!readOnly && (\n              <DeleteButton node={ currentNodeState } onDelete={ deleteNode }/>\n            )}\n          </Grid>\n\n        </Grid>\n      </Container>\n\n      <RadioContainer>\n        <RadioGroup\n          detached\n          clearable\n          name=\"finishWorkflowValue\"\n          value={ finishWorkflowValue }\n          onChange={ handleChangeFinishWorkflowValue }\n          options={ options }\n        />\n      </RadioContainer>\n    </>\n  )\n}\n\nResponseCard.propTypes = {\n  onPropChange: PropTypes.func.isRequired,\n  treeIndex: PropTypes.number.isRequired,\n  items: PropTypes.array.isRequired,\n  readOnly: PropTypes.bool.isRequired,\n  deleteNode: PropTypes.func.isRequired,\n  task: PropTypes.object.isRequired,\n  allTasks: PropTypes.array.isRequired\n}\n\nexport default ResponseCard\n"]},"metadata":{},"sourceType":"module"}