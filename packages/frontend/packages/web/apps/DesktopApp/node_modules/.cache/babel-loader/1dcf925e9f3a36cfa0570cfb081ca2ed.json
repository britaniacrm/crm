{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/components/TreeView/Buttons/Buttons.js\";\nimport React, { useEffect, useState } from 'react';\nimport I18n from '@meta-react/i18n';\nimport PropTypes from 'prop-types';\nimport find from 'lodash/find';\nimport isEmpty from 'lodash/isEmpty';\nimport AddIcon from '@material-ui/icons/Add';\nimport colors from '@britania-crm/styles/colors';\nimport Button from '@britania-crm/web-components/Button';\nimport { ConditionIcon, ResponseIcon } from '@britania-crm/web-components/Icons';\nimport { Container, NoTasksText, TaskButtonContainer } from './styles';\n\nconst Buttons = ({\n  id,\n  onAddNewConditionOrResponse,\n  isTaskView,\n  onAddTask,\n  amountOfTasks\n}) => {\n  const [height, setHeight] = useState();\n  useEffect(() => {\n    const callback = mutations => {\n      var _node$target, _parentNode$target;\n\n      if (!mutations || isEmpty(mutations)) return;\n      if (height >= 480) return;\n      const className = 'ReactVirtualized__Grid__innerScrollContainer';\n      const node = find(mutations, mutation => {\n        var _mutation$target, _mutation$target$clas;\n\n        return mutation === null || mutation === void 0 ? void 0 : (_mutation$target = mutation.target) === null || _mutation$target === void 0 ? void 0 : (_mutation$target$clas = _mutation$target.classList) === null || _mutation$target$clas === void 0 ? void 0 : _mutation$target$clas.contains(className);\n      });\n      if (node) return setHeight(node === null || node === void 0 ? void 0 : (_node$target = node.target) === null || _node$target === void 0 ? void 0 : _node$target.clientHeight);\n      const parentNode = find(mutations, mutation => {\n        var _mutation$target2, _mutation$target2$fir, _mutation$target2$fir2;\n\n        return mutation === null || mutation === void 0 ? void 0 : (_mutation$target2 = mutation.target) === null || _mutation$target2 === void 0 ? void 0 : (_mutation$target2$fir = _mutation$target2.firstChild) === null || _mutation$target2$fir === void 0 ? void 0 : (_mutation$target2$fir2 = _mutation$target2$fir.classList) === null || _mutation$target2$fir2 === void 0 ? void 0 : _mutation$target2$fir2.contains(className);\n      });\n      if (!parentNode) return;\n      const treeViewContainer = parentNode === null || parentNode === void 0 ? void 0 : (_parentNode$target = parentNode.target) === null || _parentNode$target === void 0 ? void 0 : _parentNode$target.firstChild;\n      setHeight(treeViewContainer === null || treeViewContainer === void 0 ? void 0 : treeViewContainer.clientHeight);\n    };\n\n    const targetNode = document.getElementById(id);\n    const config = {\n      attributes: true,\n      subtree: true\n    };\n    const observer = new MutationObserver(callback);\n    observer.observe(targetNode, config);\n    return () => observer.disconnect();\n  }, [height, id]);\n  useEffect(() => {\n    if (height > 480) setHeight(480);\n  }, [height]);\n  return /*#__PURE__*/React.createElement(Container, {\n    top: height,\n    hasTasks: amountOfTasks !== 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, !isTaskView ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    startIcon: /*#__PURE__*/React.createElement(ConditionIcon, {\n      color: colors.white,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }\n    }),\n    style: {\n      background: colors.orange.base\n    },\n    onClick: onAddNewConditionOrResponse('condition'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(I18n, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, \"add conditional\")), /*#__PURE__*/React.createElement(Button, {\n    startIcon: /*#__PURE__*/React.createElement(ResponseIcon, {\n      color: colors.white,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }\n    }),\n    style: {\n      background: colors.lightBlue\n    },\n    onClick: onAddNewConditionOrResponse('response'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(I18n, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, \"add response\"))) : /*#__PURE__*/React.createElement(TaskButtonContainer, {\n    hasTasks: amountOfTasks !== 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, amountOfTasks === 0 && /*#__PURE__*/React.createElement(I18n, {\n    as: NoTasksText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 35\n    }\n  }, \"no tasks added yet\"), /*#__PURE__*/React.createElement(Button, {\n    startIcon: /*#__PURE__*/React.createElement(AddIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 25\n      }\n    }),\n    style: {\n      background: colors.britSecondary.base\n    },\n    onClick: () => onAddTask(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(I18n, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, \"add task\"))));\n};\n\nButtons.propTypes = {\n  id: PropTypes.string.isRequired,\n  onAddNewConditionOrResponse: PropTypes.func.isRequired,\n  isTaskView: PropTypes.bool,\n  onAddTask: PropTypes.func,\n  amountOfTasks: PropTypes.number.isRequired\n};\nButtons.defaultProps = {\n  isTaskView: false,\n\n  onAddTask() {}\n\n};\nexport default Buttons;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/components/TreeView/Buttons/Buttons.js"],"names":["React","useEffect","useState","I18n","PropTypes","find","isEmpty","AddIcon","colors","Button","ConditionIcon","ResponseIcon","Container","NoTasksText","TaskButtonContainer","Buttons","id","onAddNewConditionOrResponse","isTaskView","onAddTask","amountOfTasks","height","setHeight","callback","mutations","className","node","mutation","target","classList","contains","clientHeight","parentNode","firstChild","treeViewContainer","targetNode","document","getElementById","config","attributes","subtree","observer","MutationObserver","observe","disconnect","white","background","orange","base","lightBlue","britSecondary","propTypes","string","isRequired","func","bool","number","defaultProps"],"mappings":"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","sourcesContent":["import React, {\n  useEffect,\n  useState\n} from 'react'\n\nimport I18n from '@meta-react/i18n'\nimport PropTypes from 'prop-types'\n\nimport find from 'lodash/find'\nimport isEmpty from 'lodash/isEmpty'\n\nimport AddIcon from '@material-ui/icons/Add'\n\nimport colors from '@britania-crm/styles/colors'\nimport Button from '@britania-crm/web-components/Button'\nimport {\n  ConditionIcon,\n  ResponseIcon\n} from '@britania-crm/web-components/Icons'\n\nimport {\n  Container,\n  NoTasksText,\n  TaskButtonContainer\n} from './styles'\n\nconst Buttons = ({\n  id, onAddNewConditionOrResponse, isTaskView, onAddTask, amountOfTasks\n}) => {\n  const [height, setHeight] = useState()\n\n  useEffect(() => {\n    const callback = (mutations) => {\n      if (!mutations || isEmpty(mutations)) return\n\n      if (height >= 480) return\n\n      const className = 'ReactVirtualized__Grid__innerScrollContainer'\n\n      const node = find(mutations, (mutation) => mutation?.target?.classList?.contains(className))\n      if (node) return setHeight(node?.target?.clientHeight)\n\n      const parentNode = find(mutations, (mutation) => mutation?.target?.firstChild?.classList?.contains(className))\n      if (!parentNode) return\n\n      const treeViewContainer = parentNode?.target?.firstChild\n      setHeight(treeViewContainer?.clientHeight)\n    }\n\n    const targetNode = document.getElementById(id)\n\n    const config = {\n      attributes: true,\n      subtree: true\n    }\n\n    const observer = new MutationObserver(callback)\n    observer.observe(targetNode, config)\n\n    return () => observer.disconnect()\n  }, [height, id])\n\n  useEffect(() => {\n    if (height > 480) setHeight(480)\n  }, [height])\n\n  return (\n    <Container top={ height } hasTasks={ amountOfTasks !== 0 }>\n      { !isTaskView ? (\n        <>\n          <Button\n            startIcon={ <ConditionIcon color={ colors.white } /> }\n            style={ { background: colors.orange.base } }\n            onClick={ onAddNewConditionOrResponse('condition') }\n          >\n            <I18n>add conditional</I18n>\n          </Button>\n          <Button\n            startIcon={ <ResponseIcon color={ colors.white } /> }\n            style={ { background: colors.lightBlue } }\n            onClick={ onAddNewConditionOrResponse('response') }\n          >\n            <I18n>add response</I18n>\n          </Button>\n        </>\n      ) : (\n        <TaskButtonContainer hasTasks={ amountOfTasks !== 0 }>\n          {amountOfTasks === 0 && <I18n as={ NoTasksText }>no tasks added yet</I18n>}\n          <Button\n            startIcon={ <AddIcon /> }\n            style={ { background: colors.britSecondary.base } }\n            onClick={ () => onAddTask() }\n          >\n            <I18n>add task</I18n>\n          </Button>\n        </TaskButtonContainer>\n      )}\n    </Container>\n  )\n}\n\nButtons.propTypes = {\n  id: PropTypes.string.isRequired,\n  onAddNewConditionOrResponse: PropTypes.func.isRequired,\n  isTaskView: PropTypes.bool,\n  onAddTask: PropTypes.func,\n  amountOfTasks: PropTypes.number.isRequired\n}\n\nButtons.defaultProps = { isTaskView: false, onAddTask () {} }\n\nexport default Buttons\n"]},"metadata":{},"sourceType":"module"}