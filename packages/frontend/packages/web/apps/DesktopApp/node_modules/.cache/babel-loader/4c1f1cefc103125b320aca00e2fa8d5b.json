{"ast":null,"code":"import api from '../api';\nimport { workflows } from './routes';\nexport const getAllWorkflows = async params => {\n  const {\n    data\n  } = await api.get(workflows.getAll, {\n    params\n  });\n  return data;\n};\nexport const getOneWorkflow = async id => {\n  const {\n    data\n  } = await api.get(`${workflows.getOne}/${id}`);\n  return data;\n};\nexport const getWorkflowTypes = async () => {\n  const {\n    data\n  } = await api.get(workflows.getTypes);\n  return data;\n};\nexport const createWorkflow = async params => {\n  const {\n    status\n  } = await api.post(workflows.create, params);\n  return status;\n};\nexport const updateWorkflow = async (params, id) => {\n  const {\n    data\n  } = await api.put(`${workflows.update}/${id}`, params);\n  return data;\n};\nexport const deactivateWorkflow = async id => {\n  const {\n    data\n  } = await api.put(`${workflows.deactivate}/${id}/deactivate`);\n  return data;\n};","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/core/services/apis/crmApi/resources/workflow.service.js"],"names":["api","workflows","getAllWorkflows","params","data","get","getAll","getOneWorkflow","id","getOne","getWorkflowTypes","getTypes","createWorkflow","status","post","create","updateWorkflow","put","update","deactivateWorkflow","deactivate"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,QAAhB;AACA,SAASC,SAAT,QAA0B,UAA1B;AAEA,OAAO,MAAMC,eAAe,GAAG,MAAOC,MAAP,IAAkB;AAC/C,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMJ,GAAG,CAACK,GAAJ,CAAQJ,SAAS,CAACK,MAAlB,EAA0B;AAAEH,IAAAA;AAAF,GAA1B,CAAvB;AACA,SAAOC,IAAP;AACD,CAHM;AAKP,OAAO,MAAMG,cAAc,GAAG,MAAOC,EAAP,IAAc;AAC1C,QAAM;AAAEJ,IAAAA;AAAF,MAAW,MAAMJ,GAAG,CAACK,GAAJ,CAAS,GAAGJ,SAAS,CAACQ,MAAQ,IAAID,EAAI,EAAtC,CAAvB;AACA,SAAOJ,IAAP;AACD,CAHM;AAKP,OAAO,MAAMM,gBAAgB,GAAG,YAAY;AAC1C,QAAM;AAAEN,IAAAA;AAAF,MAAW,MAAMJ,GAAG,CAACK,GAAJ,CAAQJ,SAAS,CAACU,QAAlB,CAAvB;AACA,SAAOP,IAAP;AACD,CAHM;AAKP,OAAO,MAAMQ,cAAc,GAAG,MAAOT,MAAP,IAAkB;AAC9C,QAAM;AAAEU,IAAAA;AAAF,MAAa,MAAMb,GAAG,CAACc,IAAJ,CAASb,SAAS,CAACc,MAAnB,EAA2BZ,MAA3B,CAAzB;AACA,SAAOU,MAAP;AACD,CAHM;AAKP,OAAO,MAAMG,cAAc,GAAG,OAAOb,MAAP,EAAeK,EAAf,KAAsB;AAClD,QAAM;AAAEJ,IAAAA;AAAF,MAAW,MAAMJ,GAAG,CAACiB,GAAJ,CAAS,GAAGhB,SAAS,CAACiB,MAAQ,IAAIV,EAAI,EAAtC,EAAyCL,MAAzC,CAAvB;AACA,SAAOC,IAAP;AACD,CAHM;AAKP,OAAO,MAAMe,kBAAkB,GAAG,MAAOX,EAAP,IAAc;AAC9C,QAAM;AAAEJ,IAAAA;AAAF,MAAW,MAAMJ,GAAG,CAACiB,GAAJ,CAAS,GAAGhB,SAAS,CAACmB,UAAY,IAAIZ,EAAI,aAA1C,CAAvB;AACA,SAAOJ,IAAP;AACD,CAHM","sourcesContent":["import api from '../api'\nimport { workflows } from './routes'\n\nexport const getAllWorkflows = async (params) => {\n  const { data } = await api.get(workflows.getAll, { params })\n  return data\n}\n\nexport const getOneWorkflow = async (id) => {\n  const { data } = await api.get(`${ workflows.getOne }/${ id }`)\n  return data\n}\n\nexport const getWorkflowTypes = async () => {\n  const { data } = await api.get(workflows.getTypes)\n  return data\n}\n\nexport const createWorkflow = async (params) => {\n  const { status } = await api.post(workflows.create, params)\n  return status\n}\n\nexport const updateWorkflow = async (params, id) => {\n  const { data } = await api.put(`${ workflows.update }/${ id }`, params)\n  return data\n}\n\nexport const deactivateWorkflow = async (id) => {\n  const { data } = await api.put(`${ workflows.deactivate }/${ id }/deactivate`)\n  return data\n}\n"]},"metadata":{},"sourceType":"module"}