{"ast":null,"code":"import * as Yup from 'yup';\nimport flow from 'lodash/fp/flow';\nimport mapValues from 'lodash/mapValues';\nimport cep from '@britania-crm/forms/validators/cep.validator';\nimport cpfCnpj from '@britania-crm/forms/validators/cpfCnpj.validator';\nimport date from '@britania-crm/forms/validators/date.validator';\nimport email from '@britania-crm/forms/validators/email.validator';\nimport maxLength from '@britania-crm/forms/validators/maxLength.validator';\nimport minLength from '@britania-crm/forms/validators/minLength.validator';\nimport phone from '@britania-crm/forms/validators/phone.validator';\nimport required from '@britania-crm/forms/validators/required.validator';\nimport stateRegistration from '@britania-crm/forms/validators/stateRegistration.validator';\nimport url from '@britania-crm/forms/validators/url.validator';\nimport { INITIAL_VALUES as CFOP_INITIAL_VALUES } from './customerPreRegistration.cfops/customerPreRegistration.cfop.schema';\nimport { INITIAL_VALUES as CFOP_AGSC_INITIAL_VALUES } from './customerPreRegistration.cfops/customerPreRegistration.cfopAgsc.schema';\nimport { INITIAL_VALUES as CFOP_AGSP_INITIAL_VALUES } from './customerPreRegistration.cfops/customerPreRegistration.cfopAgsp.schema';\nimport { INITIAL_VALUES as CFOP_MANAUS_INITIAL_VALUES } from './customerPreRegistration.cfops/customerPreRegistration.cfopManaus.schema';\nimport { INITIAL_VALUES as CFOP_ST_INITIAL_VALUES } from './customerPreRegistration.cfops/customerPreRegistration.cfopSt.schema';\nimport { documentsSchema, INITIAL_VALUES_DOCUMENTS } from './documents.schema';\nconst MAIN_DATA_INITIAL_VALUES = {\n  responsibleCode: {},\n  responsibleName: {},\n  companyName: '',\n  cnpj: '',\n  stateRegistration: '',\n  suframa: '',\n  commercialPhone: '',\n  billingPhone: '',\n  cellphone: '',\n  shoppingPhone: '',\n  billingEmail: '',\n  invoiceShippingEmail: '',\n  businessEmail: '',\n  site: '',\n  publicPlace: '',\n  complement: '',\n  number: '',\n  district: '',\n  city: '',\n  country: 'Brasil',\n  state: '',\n  zipCode: '',\n  parentCompanyName: {},\n  parentCompanyCnpj: ''\n};\nconst ADDITIONAL_INFORMATION_INITIAL_VALUES = {\n  initialContact: '',\n  numbersOfEmployes: '',\n  suggestedLimit: '',\n  observation: '',\n  shareCapital: '',\n  revenues: [],\n  commercialReferences: [],\n  participationsCompany: [],\n  bankReferences: [],\n  counter: {\n    counter: '',\n    counterPhone: '',\n    counterCrc: '',\n    shareCapital: '',\n    description: '',\n    localization: '',\n    values: []\n  }\n};\nconst FISCAL_INFORMATION_INITIAL_VALUES = {\n  specialTaxSubstitutionRegime: false,\n  clientFromMatoGrosso: false,\n  taxRegime: ''\n};\nconst REGISTRATION_INFORMATION_INITIAL_VALUES = {\n  representativeCode: '',\n  representativeName: ''\n};\nconst FINANCIAL_INITIAL_VALUES = {\n  issueBankSlip: '',\n  gerenatesDebitNotice: '',\n  calculatesFine: '',\n  receives_nfe: '',\n  simpleClient: '',\n  receivesSciInformation: '',\n  standardIncome: '',\n  carrier: '',\n  bankInstruction: ''\n};\nconst CADASTRAL_CHECK_INITIAL_VALUES = {\n  cadastralCheck: false,\n  newClient: false,\n  riskClass: ''\n};\nconst PARAMETRIZATION_INITIAL_VALUES = {\n  clientGroupCode: '',\n  shortName: '',\n  parentCompanyCode: '',\n  parentCompany: '',\n  historic: '',\n  intermediary: false\n};\nconst PRICE_LIST_INITIAL_VALUES = {\n  establishment128CdEsCode: {},\n  establishment22Code: {},\n  establishment15Code: {},\n  establishment31ManausCode: {},\n  establishment31AgScCode: {},\n  establishment128CdSpCode: {},\n  establishment305CdPe: {}\n};\nconst FISCAL_PARAMETRIZATION_INITIAL_VALUES = {\n  doNotRetainIcms: false,\n  icmsSubstitute: false,\n  icmsTaxpayer: false,\n  optingSuspensionsIpi: false,\n  buysPhilco: false,\n  withholdTax: false,\n  retentionAgent: false,\n  fullNonAcumulative: false,\n  expirationDate: ''\n};\nconst FISCAL_PARAMETRIZATION_CFOP_INITIAL_VALUES = {\n  cfop: CFOP_INITIAL_VALUES,\n  agsc: CFOP_AGSC_INITIAL_VALUES,\n  agsp: CFOP_AGSP_INITIAL_VALUES,\n  manaus: CFOP_MANAUS_INITIAL_VALUES,\n  st: CFOP_ST_INITIAL_VALUES\n};\nexport const INITIAL_VALUES = { ...MAIN_DATA_INITIAL_VALUES,\n  financial: FINANCIAL_INITIAL_VALUES,\n  cadastralCheck: CADASTRAL_CHECK_INITIAL_VALUES,\n  parametrization: PARAMETRIZATION_INITIAL_VALUES,\n  priceList: PRICE_LIST_INITIAL_VALUES,\n  fiscalParametrization: FISCAL_PARAMETRIZATION_INITIAL_VALUES,\n  documents: INITIAL_VALUES_DOCUMENTS,\n  additionalInformation: ADDITIONAL_INFORMATION_INITIAL_VALUES,\n  fiscalInformation: FISCAL_INFORMATION_INITIAL_VALUES,\n  registrationInformation: REGISTRATION_INFORMATION_INITIAL_VALUES,\n  fiscalParametrizationCfop: FISCAL_PARAMETRIZATION_CFOP_INITIAL_VALUES\n};\nexport default (({\n  t,\n  data\n}) => {\n  const mainData = {\n    responsibleCode: Yup.object(),\n    responsibleName: Yup.object(),\n    companyName: flow(maxLength({\n      t,\n      field: t('company name'),\n      type: t('characters', {\n        howMany: 1\n      }),\n      length: 70\n    }), required({\n      t\n    }))(Yup.string()),\n    cnpj: flow(cpfCnpj({\n      t,\n      mode: 'cnpj'\n    }), required({\n      t\n    }))(Yup.string()),\n    stateRegistration: stateRegistration({\n      t\n    })(Yup.string()),\n    suframa: maxLength({\n      t,\n      field: t('suframa'),\n      type: t('digits'),\n      length: 14\n    })(Yup.string()),\n    commercialPhone: flow(phone({\n      t\n    }), required({\n      t\n    }))(Yup.string()),\n    billingPhone: phone({\n      t\n    })(Yup.string()),\n    cellphone: phone({\n      t\n    })(Yup.string()),\n    shoppingPhone: phone({\n      t\n    })(Yup.string()),\n    billingEmail: flow(maxLength({\n      t,\n      field: t('billing email'),\n      type: t('characters', {\n        howMany: 1\n      }),\n      length: 70\n    }), email({\n      t\n    }), required({\n      t\n    }))(Yup.string()),\n    invoiceShippingEmail: flow(maxLength({\n      t,\n      field: t('invoice shipping email'),\n      type: t('characters', {\n        howMany: 1\n      }),\n      length: 70\n    }), email({\n      t\n    }), required({\n      t\n    }))(Yup.string()),\n    businessEmail: flow(maxLength({\n      t,\n      field: t('business email'),\n      type: t('characters', {\n        howMany: 1\n      }),\n      length: 70\n    }), email({\n      t\n    }))(Yup.string()),\n    country: flow(maxLength({\n      t,\n      field: t('country'),\n      type: t('characters', {\n        howMany: 1\n      }),\n      length: 40\n    }), required({\n      t\n    }))(Yup.string()),\n    site: flow(maxLength({\n      t,\n      field: t('site'),\n      type: t('characters', {\n        howMany: 1\n      }),\n      length: 40\n    }), url({\n      t\n    }))(Yup.string()),\n    zipCode: required({\n      t\n    })(cep({\n      t\n    })(Yup.string())),\n    state: Yup.string(),\n    city: flow(maxLength({\n      t,\n      field: t('city', {\n        howMany: 1\n      }),\n      type: t('characters', {\n        howMany: 1\n      }),\n      length: 40\n    }), required({\n      t\n    }))(Yup.string()),\n    district: flow(maxLength({\n      t,\n      field: t('district', {\n        howMany: 1\n      }),\n      type: t('characters', {\n        howMany: 1\n      }),\n      length: 40\n    }), required({\n      t\n    }))(Yup.string()),\n    publicPlace: flow(maxLength({\n      t,\n      field: t('public place'),\n      type: t('characters', {\n        howMany: 1\n      }),\n      length: 70\n    }), required({\n      t\n    }))(Yup.string()),\n    number: required({\n      t\n    })(Yup.string()),\n    complement: maxLength({\n      t,\n      field: t('complement', {\n        howMany: 1\n      }),\n      type: t('characters', {\n        howMany: 1\n      }),\n      length: 70\n    })(Yup.string()),\n    parentCompanyName: Yup.object(),\n    parentCompanyCnpj: cpfCnpj({\n      t,\n      mode: 'cnpj'\n    })(Yup.string())\n  };\n  const additionalInformation = Yup.object().shape({\n    initialContact: required({\n      t\n    })(Yup.string()),\n    numbersOfEmployes: flow(maxLength({\n      t,\n      field: t('number of employers'),\n      type: t('digits'),\n      length: 6\n    }), required({\n      t\n    }))(Yup.string()),\n    suggestedLimit: required({\n      t\n    })(Yup.string()),\n    shareCapital: required({\n      t\n    })(Yup.string()),\n    observation: Yup.string(),\n    revenues: Yup.array(),\n    counter: Yup.object().shape({\n      counter: Yup.string(),\n      counterPhone: phone({\n        t\n      })(Yup.string()),\n      counterCrc: Yup.string(),\n      values: Yup.array()\n    }),\n    commercialReferences: minLength({\n      t,\n      length: 3,\n      type: t('item', {\n        howMany: 2\n      }),\n      field: t('commercial reference', {\n        howMany: 2\n      })\n    })(Yup.array()),\n    bankReferences: required({\n      t,\n      isNotText: true\n    })(Yup.array()),\n    participationsCompany: Yup.array()\n  });\n  const fiscalInformation = Yup.object().shape({\n    specialTaxSubstitutionRegime: required({\n      t,\n      isNotText: true\n    })(Yup.bool()),\n    clientFromMatoGrosso: required({\n      t,\n      isNotText: true\n    })(Yup.bool()),\n    taxRegime: required({\n      t\n    })(Yup.string())\n  });\n  const financial = Yup.object().shape({\n    issueBankSlip: Yup.string(),\n    // Feito\n    gerenatesDebitNotice: Yup.string(),\n    // Feito\n    calculatesFine: Yup.string(),\n    // Feito\n    receives_nfe: Yup.string(),\n    // Feito\n    simpleClient: Yup.string(),\n    // Feito\n    receivesSciInformation: Yup.string(),\n    // Feito\n    standardIncome: flow(maxLength({\n      t,\n      field: t('standard income'),\n      type: t('characters', {\n        howMany: 1\n      }),\n      length: 5\n    }), required({\n      t\n    }))(Yup.string()),\n    carrier: flow(maxLength({\n      t,\n      field: t('carrier'),\n      type: t('characters', {\n        howMany: 1\n      }),\n      length: 8\n    }), required({\n      t\n    }))(Yup.string()),\n    bankInstruction: flow(maxLength({\n      t,\n      field: t('bank instruction'),\n      type: t('characters', {\n        howMany: 1\n      }),\n      length: 5\n    }), required({\n      t\n    }))(Yup.string())\n  });\n  const cadastralCheck = Yup.object().shape({\n    cadastralCheck: required({\n      t\n    })(Yup.string()),\n    newClient: required({\n      t\n    })(Yup.string()),\n    riskClass: required({\n      t\n    })(Yup.string()) // TODO: Validar\n\n  });\n  const parametrization = Yup.object().shape({\n    clientGroupCode: Yup.string(),\n    shortName: flow(maxLength({\n      t,\n      length: 70,\n      type: t('characters', {\n        howMany: 1\n      }),\n      field: t('short name')\n    }), required({\n      t\n    }))(Yup.string()),\n    parentCompanyCode: Yup.string(),\n    // TODO: Necessário validar com a Dani o funcionamento\n    parentCompany: flow(maxLength({\n      t,\n      length: 70,\n      type: t('characters', {\n        howMany: 1\n      }),\n      field: t('matrix')\n    }), required({\n      t\n    }))(Yup.string()),\n    historic: required({\n      t\n    })(Yup.string()),\n    intermediary: Yup.string()\n  });\n  const priceList = Yup.object().shape({\n    establishment128CdEsCode: Yup.object(),\n    establishment22Code: Yup.object(),\n    establishment15Code: Yup.object(),\n    establishment31ManausCode: Yup.object(),\n    establishment31AgScCode: Yup.object(),\n    establishment31AgSpCode: Yup.object(),\n    establishment305CdPe: Yup.object()\n  });\n  const fiscalParametrization = Yup.object().shape({\n    doNotRetainIcms: Yup.bool(),\n    icmsSubstitute: Yup.bool(),\n    icmsTaxpayer: Yup.bool(),\n    optingSuspensionsIpi: Yup.bool(),\n    buysPhilco: Yup.bool(),\n    withholdTax: Yup.bool(),\n    retentionAgent: Yup.bool(),\n    fullNonAcumulative: Yup.string(),\n    expirationDate: (() => {\n      var _data$fiscalParametri;\n\n      if (data === null || data === void 0 ? void 0 : (_data$fiscalParametri = data.fiscalParametrization) === null || _data$fiscalParametri === void 0 ? void 0 : _data$fiscalParametri.fullNonAcumulative) {\n        return flow(date({\n          t\n        }), required({\n          t\n        }))(Yup.string());\n      }\n\n      return date({\n        t\n      })(Yup.string());\n    })()\n  });\n  const fiscalParametrizationCfop = Yup.object().shape(mapValues(FISCAL_PARAMETRIZATION_CFOP_INITIAL_VALUES, () => Yup.object()));\n  const documents = documentsSchema({\n    t\n  });\n  return Yup.object().shape({ ...mainData,\n    additionalInformation,\n    fiscalInformation,\n    financial,\n    cadastralCheck,\n    parametrization,\n    priceList,\n    fiscalParametrization,\n    fiscalParametrizationCfop,\n    documents\n  });\n});","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/core/forms/schemas/customer/customerPreRegistration.schema.js"],"names":["Yup","flow","mapValues","cep","cpfCnpj","date","email","maxLength","minLength","phone","required","stateRegistration","url","INITIAL_VALUES","CFOP_INITIAL_VALUES","CFOP_AGSC_INITIAL_VALUES","CFOP_AGSP_INITIAL_VALUES","CFOP_MANAUS_INITIAL_VALUES","CFOP_ST_INITIAL_VALUES","documentsSchema","INITIAL_VALUES_DOCUMENTS","MAIN_DATA_INITIAL_VALUES","responsibleCode","responsibleName","companyName","cnpj","suframa","commercialPhone","billingPhone","cellphone","shoppingPhone","billingEmail","invoiceShippingEmail","businessEmail","site","publicPlace","complement","number","district","city","country","state","zipCode","parentCompanyName","parentCompanyCnpj","ADDITIONAL_INFORMATION_INITIAL_VALUES","initialContact","numbersOfEmployes","suggestedLimit","observation","shareCapital","revenues","commercialReferences","participationsCompany","bankReferences","counter","counterPhone","counterCrc","description","localization","values","FISCAL_INFORMATION_INITIAL_VALUES","specialTaxSubstitutionRegime","clientFromMatoGrosso","taxRegime","REGISTRATION_INFORMATION_INITIAL_VALUES","representativeCode","representativeName","FINANCIAL_INITIAL_VALUES","issueBankSlip","gerenatesDebitNotice","calculatesFine","receives_nfe","simpleClient","receivesSciInformation","standardIncome","carrier","bankInstruction","CADASTRAL_CHECK_INITIAL_VALUES","cadastralCheck","newClient","riskClass","PARAMETRIZATION_INITIAL_VALUES","clientGroupCode","shortName","parentCompanyCode","parentCompany","historic","intermediary","PRICE_LIST_INITIAL_VALUES","establishment128CdEsCode","establishment22Code","establishment15Code","establishment31ManausCode","establishment31AgScCode","establishment128CdSpCode","establishment305CdPe","FISCAL_PARAMETRIZATION_INITIAL_VALUES","doNotRetainIcms","icmsSubstitute","icmsTaxpayer","optingSuspensionsIpi","buysPhilco","withholdTax","retentionAgent","fullNonAcumulative","expirationDate","FISCAL_PARAMETRIZATION_CFOP_INITIAL_VALUES","cfop","agsc","agsp","manaus","st","financial","parametrization","priceList","fiscalParametrization","documents","additionalInformation","fiscalInformation","registrationInformation","fiscalParametrizationCfop","t","data","mainData","object","field","type","howMany","length","string","mode","shape","array","isNotText","bool","establishment31AgSpCode"],"mappings":"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","sourcesContent":["import * as Yup from 'yup'\n\nimport flow from 'lodash/fp/flow'\nimport mapValues from 'lodash/mapValues'\n\nimport cep from '@britania-crm/forms/validators/cep.validator'\nimport cpfCnpj from '@britania-crm/forms/validators/cpfCnpj.validator'\nimport date from '@britania-crm/forms/validators/date.validator'\nimport email from '@britania-crm/forms/validators/email.validator'\nimport maxLength from '@britania-crm/forms/validators/maxLength.validator'\nimport minLength from '@britania-crm/forms/validators/minLength.validator'\nimport phone from '@britania-crm/forms/validators/phone.validator'\nimport required from '@britania-crm/forms/validators/required.validator'\nimport stateRegistration from '@britania-crm/forms/validators/stateRegistration.validator'\nimport url from '@britania-crm/forms/validators/url.validator'\n\nimport { INITIAL_VALUES as CFOP_INITIAL_VALUES } from './customerPreRegistration.cfops/customerPreRegistration.cfop.schema'\nimport { INITIAL_VALUES as CFOP_AGSC_INITIAL_VALUES } from './customerPreRegistration.cfops/customerPreRegistration.cfopAgsc.schema'\nimport { INITIAL_VALUES as CFOP_AGSP_INITIAL_VALUES } from './customerPreRegistration.cfops/customerPreRegistration.cfopAgsp.schema'\nimport { INITIAL_VALUES as CFOP_MANAUS_INITIAL_VALUES } from './customerPreRegistration.cfops/customerPreRegistration.cfopManaus.schema'\nimport { INITIAL_VALUES as CFOP_ST_INITIAL_VALUES } from './customerPreRegistration.cfops/customerPreRegistration.cfopSt.schema'\nimport {\n  documentsSchema,\n  INITIAL_VALUES_DOCUMENTS\n} from './documents.schema'\n\nconst MAIN_DATA_INITIAL_VALUES = {\n  responsibleCode: {},\n  responsibleName: {},\n  companyName: '',\n  cnpj: '',\n  stateRegistration: '',\n  suframa: '',\n  commercialPhone: '',\n  billingPhone: '',\n  cellphone: '',\n  shoppingPhone: '',\n  billingEmail: '',\n  invoiceShippingEmail: '',\n  businessEmail: '',\n  site: '',\n  publicPlace: '',\n  complement: '',\n  number: '',\n  district: '',\n  city: '',\n  country: 'Brasil',\n  state: '',\n  zipCode: '',\n  parentCompanyName: {},\n  parentCompanyCnpj: ''\n}\n\nconst ADDITIONAL_INFORMATION_INITIAL_VALUES = {\n  initialContact: '',\n  numbersOfEmployes: '',\n  suggestedLimit: '',\n  observation: '',\n  shareCapital: '',\n  revenues: [],\n  commercialReferences: [],\n  participationsCompany: [],\n  bankReferences: [],\n  counter: {\n    counter: '',\n    counterPhone: '',\n    counterCrc: '',\n    shareCapital: '',\n    description: '',\n    localization: '',\n    values: []\n  }\n}\n\nconst FISCAL_INFORMATION_INITIAL_VALUES = {\n  specialTaxSubstitutionRegime: false,\n  clientFromMatoGrosso: false,\n  taxRegime: ''\n}\n\nconst REGISTRATION_INFORMATION_INITIAL_VALUES = {\n  representativeCode: '',\n  representativeName: ''\n}\n\nconst FINANCIAL_INITIAL_VALUES = {\n  issueBankSlip: '',\n  gerenatesDebitNotice: '',\n  calculatesFine: '',\n  receives_nfe: '',\n  simpleClient: '',\n  receivesSciInformation: '',\n  standardIncome: '',\n  carrier: '',\n  bankInstruction: ''\n}\n\nconst CADASTRAL_CHECK_INITIAL_VALUES = {\n  cadastralCheck: false,\n  newClient: false,\n  riskClass: ''\n}\n\nconst PARAMETRIZATION_INITIAL_VALUES = {\n  clientGroupCode: '',\n  shortName: '',\n  parentCompanyCode: '',\n  parentCompany: '',\n  historic: '',\n  intermediary: false\n}\n\nconst PRICE_LIST_INITIAL_VALUES = {\n  establishment128CdEsCode: {},\n  establishment22Code: {},\n  establishment15Code: {},\n  establishment31ManausCode: {},\n  establishment31AgScCode: {},\n  establishment128CdSpCode: {},\n  establishment305CdPe: {}\n}\n\nconst FISCAL_PARAMETRIZATION_INITIAL_VALUES = {\n  doNotRetainIcms: false,\n  icmsSubstitute: false,\n  icmsTaxpayer: false,\n  optingSuspensionsIpi: false,\n  buysPhilco: false,\n  withholdTax: false,\n  retentionAgent: false,\n  fullNonAcumulative: false,\n  expirationDate: ''\n}\n\nconst FISCAL_PARAMETRIZATION_CFOP_INITIAL_VALUES = {\n  cfop: CFOP_INITIAL_VALUES,\n  agsc: CFOP_AGSC_INITIAL_VALUES,\n  agsp: CFOP_AGSP_INITIAL_VALUES,\n  manaus: CFOP_MANAUS_INITIAL_VALUES,\n  st: CFOP_ST_INITIAL_VALUES\n}\n\nexport const INITIAL_VALUES = {\n  ...MAIN_DATA_INITIAL_VALUES,\n  financial: FINANCIAL_INITIAL_VALUES,\n  cadastralCheck: CADASTRAL_CHECK_INITIAL_VALUES,\n  parametrization: PARAMETRIZATION_INITIAL_VALUES,\n  priceList: PRICE_LIST_INITIAL_VALUES,\n  fiscalParametrization: FISCAL_PARAMETRIZATION_INITIAL_VALUES,\n  documents: INITIAL_VALUES_DOCUMENTS,\n\n  additionalInformation: ADDITIONAL_INFORMATION_INITIAL_VALUES,\n  fiscalInformation: FISCAL_INFORMATION_INITIAL_VALUES,\n  registrationInformation: REGISTRATION_INFORMATION_INITIAL_VALUES,\n  fiscalParametrizationCfop: FISCAL_PARAMETRIZATION_CFOP_INITIAL_VALUES\n}\n\nexport default ({ t, data }) => {\n  const mainData = {\n    responsibleCode: Yup.object(),\n    responsibleName: Yup.object(),\n    companyName: flow(\n      maxLength({\n        t,\n        field: t('company name'),\n        type: t('characters', { howMany: 1 }),\n        length: 70\n      }),\n      required({ t }))(Yup.string()),\n    cnpj: flow(\n      cpfCnpj({ t, mode: 'cnpj' }),\n      required({ t })\n    )(Yup.string()),\n    stateRegistration: stateRegistration({ t })(Yup.string()),\n    suframa: maxLength({\n      t,\n      field: t('suframa'),\n      type: t('digits'),\n      length: 14\n    })(Yup.string()),\n    commercialPhone: flow(\n      phone({ t }),\n      required({ t })\n    )(Yup.string()),\n    billingPhone: phone({ t })(Yup.string()),\n    cellphone: phone({ t })(Yup.string()),\n    shoppingPhone: phone({ t })(Yup.string()),\n    billingEmail: flow(\n      maxLength({\n        t,\n        field: t('billing email'),\n        type: t('characters', { howMany: 1 }),\n        length: 70\n      }),\n      email({ t }),\n      required({ t })\n    )(Yup.string()),\n    invoiceShippingEmail: flow(\n      maxLength({\n        t,\n        field: t('invoice shipping email'),\n        type: t('characters', { howMany: 1 }),\n        length: 70\n      }),\n      email({ t }),\n      required({ t })\n    )(Yup.string()),\n    businessEmail: flow(\n      maxLength({\n        t,\n        field: t('business email'),\n        type: t('characters', { howMany: 1 }),\n        length: 70\n      }),\n      email({ t })\n    )(Yup.string()),\n    country: flow(\n      maxLength({\n        t,\n        field: t('country'),\n        type: t('characters', { howMany: 1 }),\n        length: 40\n      }),\n      required({ t })\n    )(Yup.string()),\n    site: flow(\n      maxLength({\n        t,\n        field: t('site'),\n        type: t('characters', { howMany: 1 }),\n        length: 40\n      }),\n      url({ t })\n    )(Yup.string()),\n    zipCode: required({ t })(cep({ t })(Yup.string())),\n    state: Yup.string(),\n    city: flow(\n      maxLength({\n        t,\n        field: t('city', { howMany: 1 }),\n        type: t('characters', { howMany: 1 }),\n        length: 40\n      }),\n      required({ t })\n    )(Yup.string()),\n    district: flow(\n      maxLength({\n        t,\n        field: t('district', { howMany: 1 }),\n        type: t('characters', { howMany: 1 }),\n        length: 40\n      }),\n      required({ t })\n    )(Yup.string()),\n    publicPlace: flow(\n      maxLength({\n        t,\n        field: t('public place'),\n        type: t('characters', { howMany: 1 }),\n        length: 70\n      }),\n      required({ t })\n    )(Yup.string()),\n    number: required({ t })(Yup.string()),\n    complement: maxLength({\n      t,\n      field: t('complement', { howMany: 1 }),\n      type: t('characters', { howMany: 1 }),\n      length: 70\n    })(Yup.string()),\n    parentCompanyName: (Yup.object()),\n    parentCompanyCnpj: cpfCnpj({ t, mode: 'cnpj' })(Yup.string())\n  }\n\n  const additionalInformation = Yup.object().shape({\n    initialContact: required({ t })(Yup.string()),\n    numbersOfEmployes: flow(\n      maxLength({\n        t,\n        field: t('number of employers'),\n        type: t('digits'),\n        length: 6\n      }),\n      required({ t }))(Yup.string()),\n    suggestedLimit: required({ t })(Yup.string()),\n    shareCapital: required({ t })(Yup.string()),\n    observation: Yup.string(),\n    revenues: Yup.array(),\n    counter: Yup.object().shape({\n      counter: Yup.string(),\n      counterPhone: phone({ t })(Yup.string()),\n      counterCrc: Yup.string(),\n      values: Yup.array()\n    }),\n    commercialReferences: minLength({\n      t,\n      length: 3,\n      type: t('item', { howMany: 2 }),\n      field: t('commercial reference', { howMany: 2 })\n    })(Yup.array()),\n    bankReferences: required({ t, isNotText: true })(Yup.array()),\n    participationsCompany: Yup.array()\n  })\n\n  const fiscalInformation = Yup.object().shape({\n    specialTaxSubstitutionRegime: required({ t, isNotText: true })(Yup.bool()),\n    clientFromMatoGrosso: required({ t, isNotText: true })(Yup.bool()),\n    taxRegime: required({ t })(Yup.string())\n  })\n\n  const financial = Yup.object().shape({\n    issueBankSlip: Yup.string(), // Feito\n    gerenatesDebitNotice: Yup.string(), // Feito\n    calculatesFine: Yup.string(), // Feito\n    receives_nfe: Yup.string(), // Feito\n    simpleClient: Yup.string(), // Feito\n    receivesSciInformation: Yup.string(), // Feito\n    standardIncome: flow(\n      maxLength({\n        t,\n        field: t('standard income'),\n        type: t('characters', { howMany: 1 }),\n        length: 5\n      }),\n      required({ t })\n    )(Yup.string()),\n    carrier: flow(\n      maxLength({\n        t,\n        field: t('carrier'),\n        type: t('characters', { howMany: 1 }),\n        length: 8\n      }),\n      required({ t })\n    )(Yup.string()),\n    bankInstruction: flow(\n      maxLength({\n        t,\n        field: t('bank instruction'),\n        type: t('characters', { howMany: 1 }),\n        length: 5\n      }),\n      required({ t })\n    )(Yup.string())\n  })\n\n  const cadastralCheck = Yup.object().shape({\n    cadastralCheck: required({ t })(Yup.string()),\n    newClient: required({ t })(Yup.string()),\n    riskClass: required({ t })(Yup.string()) // TODO: Validar\n  })\n\n  const parametrization = Yup.object().shape({\n    clientGroupCode: Yup.string(),\n    shortName: flow(\n      maxLength({\n        t,\n        length: 70,\n        type: t('characters', { howMany: 1 }),\n        field: t('short name')\n      }),\n      required({ t })\n    )(Yup.string()),\n    parentCompanyCode: Yup.string(), // TODO: Necessário validar com a Dani o funcionamento\n    parentCompany: flow(\n      maxLength({\n        t,\n        length: 70,\n        type: t('characters', { howMany: 1 }),\n        field: t('matrix')\n      }),\n      required({ t })\n    )(Yup.string()),\n    historic: required({ t })(Yup.string()),\n    intermediary: Yup.string()\n  })\n\n  const priceList = Yup.object().shape({\n    establishment128CdEsCode: Yup.object(),\n    establishment22Code: Yup.object(),\n    establishment15Code: Yup.object(),\n    establishment31ManausCode: Yup.object(),\n    establishment31AgScCode: Yup.object(),\n    establishment31AgSpCode: Yup.object(),\n    establishment305CdPe: Yup.object()\n  })\n\n  const fiscalParametrization = Yup.object().shape({\n    doNotRetainIcms: Yup.bool(),\n    icmsSubstitute: Yup.bool(),\n    icmsTaxpayer: Yup.bool(),\n    optingSuspensionsIpi: Yup.bool(),\n    buysPhilco: Yup.bool(),\n    withholdTax: Yup.bool(),\n    retentionAgent: Yup.bool(),\n    fullNonAcumulative: Yup.string(),\n    expirationDate: (() => {\n      if (data?.fiscalParametrization?.fullNonAcumulative) {\n        return flow(\n          date({ t }),\n          required({ t })\n        )(Yup.string())\n      }\n      return date({ t })(Yup.string())\n    })()\n  })\n\n  const fiscalParametrizationCfop = Yup.object().shape(\n    mapValues(\n      FISCAL_PARAMETRIZATION_CFOP_INITIAL_VALUES,\n      () => Yup.object()\n    )\n  )\n\n  const documents = documentsSchema({ t })\n\n  return Yup.object().shape({\n    ...mainData,\n    additionalInformation,\n    fiscalInformation,\n    financial,\n    cadastralCheck,\n    parametrization,\n    priceList,\n    fiscalParametrization,\n    fiscalParametrizationCfop,\n    documents\n  })\n}\n"]},"metadata":{},"sourceType":"module"}