{"ast":null,"code":"import { useState, useEffect, useMemo } from 'react';\nexport const formatPathToCloudStorageUrl = path => path && `${process.env.REACT_APP_API_BASE_URL}/services/files/${encodeURIComponent(path)}`;\nexport const useImageLoaded = ({\n  src,\n  srcSet\n}) => {\n  const [loaded, setLoaded] = useState(false);\n  useEffect(() => {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n\n    setLoaded(false);\n    let active = true;\n    const image = new Image();\n    image.src = src;\n    image.srcSet = srcSet;\n\n    image.onload = () => {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('loaded');\n    };\n\n    image.onerror = () => {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('error');\n    };\n\n    return () => {\n      active = false;\n    };\n  }, [src, srcSet]);\n  const success = useMemo(() => {\n    const hasImg = src || srcSet;\n    return hasImg && loaded !== 'error';\n  }, [loaded, src, srcSet]);\n  return success;\n};","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/core/utils/files.js"],"names":["useState","useEffect","useMemo","formatPathToCloudStorageUrl","path","process","env","REACT_APP_API_BASE_URL","encodeURIComponent","useImageLoaded","src","srcSet","loaded","setLoaded","undefined","active","image","Image","onload","onerror","success","hasImg"],"mappings":"AAAA,SACEA,QADF,EAEEC,SAFF,EAGEC,OAHF,QAIO,OAJP;AAMA,OAAO,MAAMC,2BAA2B,GAAIC,IAAD,IAAUA,IAAI,IAAK,GAAGC,OAAO,CAACC,GAAR,CAAYC,sBAAwB,mBAAmBC,kBAAkB,CAACJ,IAAD,CAAQ,EAA3I;AAEP,OAAO,MAAMK,cAAc,GAAG,CAAC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAAD,KAAqB;AACjD,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,KAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACS,GAAD,IAAQ,CAACC,MAAb,EAAqB;AACnB,aAAOG,SAAP;AACD;;AAEDD,IAAAA,SAAS,CAAC,KAAD,CAAT;AAEA,QAAIE,MAAM,GAAG,IAAb;AACA,UAAMC,KAAK,GAAG,IAAIC,KAAJ,EAAd;AACAD,IAAAA,KAAK,CAACN,GAAN,GAAYA,GAAZ;AACAM,IAAAA,KAAK,CAACL,MAAN,GAAeA,MAAf;;AACAK,IAAAA,KAAK,CAACE,MAAN,GAAe,MAAM;AACnB,UAAI,CAACH,MAAL,EAAa;AACX;AACD;;AACDF,MAAAA,SAAS,CAAC,QAAD,CAAT;AACD,KALD;;AAMAG,IAAAA,KAAK,CAACG,OAAN,GAAgB,MAAM;AACpB,UAAI,CAACJ,MAAL,EAAa;AACX;AACD;;AACDF,MAAAA,SAAS,CAAC,OAAD,CAAT;AACD,KALD;;AAOA,WAAO,MAAM;AACXE,MAAAA,MAAM,GAAG,KAAT;AACD,KAFD;AAGD,GA3BQ,EA2BN,CAACL,GAAD,EAAMC,MAAN,CA3BM,CAAT;AA6BA,QAAMS,OAAO,GAAGlB,OAAO,CACrB,MAAM;AACJ,UAAMmB,MAAM,GAAGX,GAAG,IAAIC,MAAtB;AACA,WAAOU,MAAM,IAAIT,MAAM,KAAK,OAA5B;AACD,GAJoB,EAKrB,CAACA,MAAD,EAASF,GAAT,EAAcC,MAAd,CALqB,CAAvB;AAQA,SAAOS,OAAP;AACD,CAzCM","sourcesContent":["import {\n  useState,\n  useEffect,\n  useMemo\n} from 'react'\n\nexport const formatPathToCloudStorageUrl = (path) => path && `${ process.env.REACT_APP_API_BASE_URL }/services/files/${ encodeURIComponent(path) }`\n\nexport const useImageLoaded = ({ src, srcSet }) => {\n  const [loaded, setLoaded] = useState(false)\n\n  useEffect(() => {\n    if (!src && !srcSet) {\n      return undefined\n    }\n\n    setLoaded(false)\n\n    let active = true\n    const image = new Image()\n    image.src = src\n    image.srcSet = srcSet\n    image.onload = () => {\n      if (!active) {\n        return\n      }\n      setLoaded('loaded')\n    }\n    image.onerror = () => {\n      if (!active) {\n        return\n      }\n      setLoaded('error')\n    }\n\n    return () => {\n      active = false\n    }\n  }, [src, srcSet])\n\n  const success = useMemo(\n    () => {\n      const hasImg = src || srcSet\n      return hasImg && loaded !== 'error'\n    },\n    [loaded, src, srcSet]\n  )\n\n  return success\n}\n"]},"metadata":{},"sourceType":"module"}