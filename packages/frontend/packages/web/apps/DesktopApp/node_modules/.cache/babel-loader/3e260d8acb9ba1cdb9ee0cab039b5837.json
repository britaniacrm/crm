{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/workflow/containers/WorkFlowExecution/WorkFlowExecution.js\";\nimport React, { memo, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport isEmpty from 'lodash/isEmpty';\nimport { useDialog } from '@britania-crm/dialog';\nimport I18n from '@britania-crm/i18n';\nimport CardRounded from '@britania-crm/web-components/CardRounded';\nimport WorkFlowHistoryModal from '../../modals/WorkFlowHistoryModal/WorkFlowHistoryModal';\nimport WorkFlowProgress from '../WorkFlowProgress/WorkFlowProgress';\nimport WorkFlowTaskExecution from '../WorkFlowTaskExecution/WorkFlowTaskExecution';\nimport { Title, Button } from './styles';\n\nconst WorkFlowExecution = props => {\n  const {\n    taskInProgress,\n    workflowInProgress,\n    baseUrl,\n    fieldDescription\n  } = props;\n  const isReadOnly = taskInProgress === null || taskInProgress === void 0 ? void 0 : taskInProgress.isReadOnly;\n  const {\n    createDialog\n  } = useDialog();\n  const handleOpenWorkflowHistoryModal = useCallback(() => createDialog({\n    id: 'WorkFlowModal',\n    Component: WorkFlowHistoryModal,\n    props: {\n      baseUrl\n    }\n  }), [createDialog, baseUrl]);\n  return /*#__PURE__*/React.createElement(CardRounded, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(I18n, {\n    as: Title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, \"workflow execution\"), !isEmpty(workflowInProgress) && /*#__PURE__*/React.createElement(WorkFlowProgress, {\n    workflowInProgress: workflowInProgress,\n    fieldDescription: fieldDescription,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }), !isEmpty(taskInProgress) && /*#__PURE__*/React.createElement(WorkFlowTaskExecution, {\n    baseUrl: baseUrl,\n    taskInProgress: taskInProgress,\n    isReadOnly: isReadOnly,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(I18n, {\n    as: Button,\n    onClick: handleOpenWorkflowHistoryModal,\n    color: \"default\",\n    variant: \"outlined\",\n    style: {\n      marginTop: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, \"workflow history\"));\n};\n\nWorkFlowExecution.propTypes = {\n  taskInProgress: PropTypes.object,\n  workflowInProgress: PropTypes.object,\n  baseUrl: PropTypes.string,\n  fieldDescription: PropTypes.string,\n  isReadOnly: PropTypes.bool\n};\nWorkFlowExecution.defaultProps = {\n  taskInProgress: {},\n  workflowInProgress: {},\n  baseUrl: null,\n  fieldDescription: null,\n  isReadOnly: true\n};\nexport default memo(WorkFlowExecution);","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/workflow/containers/WorkFlowExecution/WorkFlowExecution.js"],"names":["React","memo","useCallback","PropTypes","isEmpty","useDialog","I18n","CardRounded","WorkFlowHistoryModal","WorkFlowProgress","WorkFlowTaskExecution","Title","Button","WorkFlowExecution","props","taskInProgress","workflowInProgress","baseUrl","fieldDescription","isReadOnly","createDialog","handleOpenWorkflowHistoryModal","id","Component","marginTop","propTypes","object","string","bool","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IACEC,IADF,EAEEC,WAFF,QAGO,OAHP;AAKA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,OAAP,MAAoB,gBAApB;AAEA,SAASC,SAAT,QAA0B,sBAA1B;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,WAAP,MAAwB,0CAAxB;AAEA,OAAOC,oBAAP,MAAiC,wDAAjC;AACA,OAAOC,gBAAP,MAA6B,sCAA7B;AACA,OAAOC,qBAAP,MAAkC,gDAAlC;AACA,SACEC,KADF,EAEEC,MAFF,QAGO,UAHP;;AAKA,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AACnC,QAAM;AACJC,IAAAA,cADI;AAEJC,IAAAA,kBAFI;AAGJC,IAAAA,OAHI;AAIJC,IAAAA;AAJI,MAKFJ,KALJ;AAMA,QAAMK,UAAU,GAAGJ,cAAH,aAAGA,cAAH,uBAAGA,cAAc,CAAEI,UAAnC;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAmBf,SAAS,EAAlC;AAEA,QAAMgB,8BAA8B,GAAGnB,WAAW,CAChD,MAAMkB,YAAY,CAAC;AACjBE,IAAAA,EAAE,EAAE,eADa;AAEjBC,IAAAA,SAAS,EAAEf,oBAFM;AAGjBM,IAAAA,KAAK,EAAE;AAAEG,MAAAA;AAAF;AAHU,GAAD,CAD8B,EAMhD,CAACG,YAAD,EAAeH,OAAf,CANgD,CAAlD;AASA,sBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAGN,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAKG,CAACP,OAAO,CAACY,kBAAD,CAAR,iBACC,oBAAC,gBAAD;AACE,IAAA,kBAAkB,EAAGA,kBADvB;AAEE,IAAA,gBAAgB,EAAGE,gBAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,EAYG,CAACd,OAAO,CAACW,cAAD,CAAR,iBACC,oBAAC,qBAAD;AAAuB,IAAA,OAAO,EAAGE,OAAjC;AAA2C,IAAA,cAAc,EAAGF,cAA5D;AAA6E,IAAA,UAAU,EAAGI,UAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbJ,eAgBE,oBAAC,IAAD;AACE,IAAA,EAAE,EAAGP,MADP;AAEE,IAAA,OAAO,EAAGS,8BAFZ;AAGE,IAAA,KAAK,EAAC,SAHR;AAIE,IAAA,OAAO,EAAC,UAJV;AAKE,IAAA,KAAK,EAAG;AAAEG,MAAAA,SAAS,EAAE;AAAb,KALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAhBF,CADF;AA4BD,CAhDD;;AAkDAX,iBAAiB,CAACY,SAAlB,GAA8B;AAC5BV,EAAAA,cAAc,EAAEZ,SAAS,CAACuB,MADE;AAE5BV,EAAAA,kBAAkB,EAAEb,SAAS,CAACuB,MAFF;AAG5BT,EAAAA,OAAO,EAAEd,SAAS,CAACwB,MAHS;AAI5BT,EAAAA,gBAAgB,EAAEf,SAAS,CAACwB,MAJA;AAK5BR,EAAAA,UAAU,EAAEhB,SAAS,CAACyB;AALM,CAA9B;AAQAf,iBAAiB,CAACgB,YAAlB,GAAiC;AAC/Bd,EAAAA,cAAc,EAAE,EADe;AAE/BC,EAAAA,kBAAkB,EAAE,EAFW;AAG/BC,EAAAA,OAAO,EAAE,IAHsB;AAI/BC,EAAAA,gBAAgB,EAAE,IAJa;AAK/BC,EAAAA,UAAU,EAAE;AALmB,CAAjC;AAQA,eAAelB,IAAI,CAACY,iBAAD,CAAnB","sourcesContent":["import React, {\n  memo,\n  useCallback\n} from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport isEmpty from 'lodash/isEmpty'\n\nimport { useDialog } from '@britania-crm/dialog'\nimport I18n from '@britania-crm/i18n'\nimport CardRounded from '@britania-crm/web-components/CardRounded'\n\nimport WorkFlowHistoryModal from '../../modals/WorkFlowHistoryModal/WorkFlowHistoryModal'\nimport WorkFlowProgress from '../WorkFlowProgress/WorkFlowProgress'\nimport WorkFlowTaskExecution from '../WorkFlowTaskExecution/WorkFlowTaskExecution'\nimport {\n  Title,\n  Button\n} from './styles'\n\nconst WorkFlowExecution = (props) => {\n  const {\n    taskInProgress,\n    workflowInProgress,\n    baseUrl,\n    fieldDescription\n  } = props\n  const isReadOnly = taskInProgress?.isReadOnly\n\n  const { createDialog } = useDialog()\n\n  const handleOpenWorkflowHistoryModal = useCallback(\n    () => createDialog({\n      id: 'WorkFlowModal',\n      Component: WorkFlowHistoryModal,\n      props: { baseUrl }\n    }),\n    [createDialog, baseUrl]\n  )\n\n  return (\n    <CardRounded>\n      <I18n as={ Title }>\n          workflow execution\n      </I18n>\n\n      {!isEmpty(workflowInProgress) && (\n        <WorkFlowProgress\n          workflowInProgress={ workflowInProgress }\n          fieldDescription={ fieldDescription }\n        />\n      )}\n\n      {!isEmpty(taskInProgress) && (\n        <WorkFlowTaskExecution baseUrl={ baseUrl } taskInProgress={ taskInProgress } isReadOnly={ isReadOnly } />\n      )}\n\n      <I18n\n        as={ Button }\n        onClick={ handleOpenWorkflowHistoryModal }\n        color=\"default\"\n        variant=\"outlined\"\n        style={ { marginTop: 10 } }\n      >\n          workflow history\n      </I18n>\n    </CardRounded>\n  )\n}\n\nWorkFlowExecution.propTypes = {\n  taskInProgress: PropTypes.object,\n  workflowInProgress: PropTypes.object,\n  baseUrl: PropTypes.string,\n  fieldDescription: PropTypes.string,\n  isReadOnly: PropTypes.bool\n}\n\nWorkFlowExecution.defaultProps = {\n  taskInProgress: {},\n  workflowInProgress: {},\n  baseUrl: null,\n  fieldDescription: null,\n  isReadOnly: true\n}\n\nexport default memo(WorkFlowExecution)\n"]},"metadata":{},"sourceType":"module"}