{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/components/UploadImage/UploadImageForm.js\";\nimport React, { forwardRef, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { FieldProvider, useField } from '@britania-crm/forms';\nimport UploadImageStyled from './UploadImageStyled';\n\nconst UploadImageForm = props => {\n  const {\n    setValue,\n    ...rest\n  } = props;\n  const {\n    error,\n    handleBlur,\n    required\n  } = useField();\n  const handleChange = useCallback(val => setValue(val), [setValue]);\n  return /*#__PURE__*/React.createElement(UploadImageStyled, Object.assign({}, rest, {\n    onChange: handleChange,\n    onBlur: handleBlur,\n    error: error,\n    required: required,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }));\n};\n\nUploadImageForm.propTypes = {\n  setValue: PropTypes.func.isRequired\n};\nconst Field = forwardRef(({\n  path,\n  ...props\n}, ref) => /*#__PURE__*/React.createElement(FieldProvider, Object.assign({\n  ref: ref\n}, props, {\n  registerFieldOptions: {\n    path\n  },\n  FieldComponent: UploadImageForm,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 3\n  }\n})));\nField.propTypes = {\n  name: PropTypes.string.isRequired,\n  disabled: PropTypes.bool,\n  onChange: PropTypes.func,\n  onBlur: PropTypes.func,\n  onValueChange: PropTypes.func,\n  path: PropTypes.string,\n  defaultValue: PropTypes.any,\n  helperText: PropTypes.string\n};\nField.defaultProps = {\n  disabled: false,\n\n  onChange() {},\n\n  transformValue: v => v,\n\n  onValueChange() {},\n\n  onBlur() {},\n\n  path: 'value',\n  defaultValue: '',\n  helperText: null\n};\nexport default Field;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/components/UploadImage/UploadImageForm.js"],"names":["React","forwardRef","useCallback","PropTypes","FieldProvider","useField","UploadImageStyled","UploadImageForm","props","setValue","rest","error","handleBlur","required","handleChange","val","propTypes","func","isRequired","Field","path","ref","name","string","disabled","bool","onChange","onBlur","onValueChange","defaultValue","any","helperText","defaultProps","transformValue","v"],"mappings":";AAAA,OAAOA,KAAP,IACEC,UADF,EAEEC,WAFF,QAGO,OAHP;AAKA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SACEC,aADF,EAEEC,QAFF,QAGO,qBAHP;AAKA,OAAOC,iBAAP,MAA8B,qBAA9B;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,QAAM;AACJC,IAAAA,QADI;AAEJ,OAAGC;AAFC,MAGFF,KAHJ;AAKA,QAAM;AACJG,IAAAA,KADI;AAEJC,IAAAA,UAFI;AAGJC,IAAAA;AAHI,MAIFR,QAAQ,EAJZ;AAMA,QAAMS,YAAY,GAAGZ,WAAW,CAC7Ba,GAAD,IAASN,QAAQ,CAACM,GAAD,CADa,EAE9B,CAACN,QAAD,CAF8B,CAAhC;AAKA,sBACE,oBAAC,iBAAD,oBACOC,IADP;AAEE,IAAA,QAAQ,EAAGI,YAFb;AAGE,IAAA,MAAM,EAAGF,UAHX;AAIE,IAAA,KAAK,EAAGD,KAJV;AAKE,IAAA,QAAQ,EAAGE,QALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AASD,CA1BD;;AA4BAN,eAAe,CAACS,SAAhB,GAA4B;AAAEP,EAAAA,QAAQ,EAAEN,SAAS,CAACc,IAAV,CAAeC;AAA3B,CAA5B;AAEA,MAAMC,KAAK,GAAGlB,UAAU,CAAC,CAAC;AAAEmB,EAAAA,IAAF;AAAQ,KAAGZ;AAAX,CAAD,EAAqBa,GAArB,kBACvB,oBAAC,aAAD;AACE,EAAA,GAAG,EAAGA;AADR,GAEOb,KAFP;AAGE,EAAA,oBAAoB,EAAG;AAAEY,IAAAA;AAAF,GAHzB;AAIE,EAAA,cAAc,EAAGb,eAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADsB,CAAxB;AASAY,KAAK,CAACH,SAAN,GAAkB;AAChBM,EAAAA,IAAI,EAAEnB,SAAS,CAACoB,MAAV,CAAiBL,UADP;AAEhBM,EAAAA,QAAQ,EAAErB,SAAS,CAACsB,IAFJ;AAGhBC,EAAAA,QAAQ,EAAEvB,SAAS,CAACc,IAHJ;AAIhBU,EAAAA,MAAM,EAAExB,SAAS,CAACc,IAJF;AAKhBW,EAAAA,aAAa,EAAEzB,SAAS,CAACc,IALT;AAMhBG,EAAAA,IAAI,EAAEjB,SAAS,CAACoB,MANA;AAOhBM,EAAAA,YAAY,EAAE1B,SAAS,CAAC2B,GAPR;AAQhBC,EAAAA,UAAU,EAAE5B,SAAS,CAACoB;AARN,CAAlB;AAWAJ,KAAK,CAACa,YAAN,GAAqB;AACnBR,EAAAA,QAAQ,EAAE,KADS;;AAEnBE,EAAAA,QAAQ,GAAI,CAAE,CAFK;;AAGnBO,EAAAA,cAAc,EAAGC,CAAD,IAAOA,CAHJ;;AAInBN,EAAAA,aAAa,GAAI,CAAE,CAJA;;AAKnBD,EAAAA,MAAM,GAAI,CAAE,CALO;;AAMnBP,EAAAA,IAAI,EAAE,OANa;AAOnBS,EAAAA,YAAY,EAAE,EAPK;AAQnBE,EAAAA,UAAU,EAAE;AARO,CAArB;AAWA,eAAeZ,KAAf","sourcesContent":["import React, {\n  forwardRef,\n  useCallback\n} from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport {\n  FieldProvider,\n  useField\n} from '@britania-crm/forms'\n\nimport UploadImageStyled from './UploadImageStyled'\n\nconst UploadImageForm = (props) => {\n  const {\n    setValue,\n    ...rest\n  } = props\n\n  const {\n    error,\n    handleBlur,\n    required\n  } = useField()\n\n  const handleChange = useCallback(\n    (val) => setValue(val),\n    [setValue]\n  )\n\n  return (\n    <UploadImageStyled\n      { ...rest }\n      onChange={ handleChange }\n      onBlur={ handleBlur }\n      error={ error }\n      required={ required }\n    />\n  )\n}\n\nUploadImageForm.propTypes = { setValue: PropTypes.func.isRequired }\n\nconst Field = forwardRef(({ path, ...props }, ref) => (\n  <FieldProvider\n    ref={ ref }\n    { ...props }\n    registerFieldOptions={ { path } }\n    FieldComponent={ UploadImageForm }\n  />\n))\n\nField.propTypes = {\n  name: PropTypes.string.isRequired,\n  disabled: PropTypes.bool,\n  onChange: PropTypes.func,\n  onBlur: PropTypes.func,\n  onValueChange: PropTypes.func,\n  path: PropTypes.string,\n  defaultValue: PropTypes.any,\n  helperText: PropTypes.string\n}\n\nField.defaultProps = {\n  disabled: false,\n  onChange () {},\n  transformValue: (v) => v,\n  onValueChange () {},\n  onBlur () {},\n  path: 'value',\n  defaultValue: '',\n  helperText: null\n}\n\nexport default Field\n"]},"metadata":{},"sourceType":"module"}