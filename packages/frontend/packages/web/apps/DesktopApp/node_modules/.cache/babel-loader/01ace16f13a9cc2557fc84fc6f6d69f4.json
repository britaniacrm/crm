{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/node_modules/@meta-react/i18n/src/I18nProvider.js\";\nimport React, { Suspense, useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\n/* fix android polyfill https://stackoverflow.com/questions/41736735/react-native-and-intl-polyfill-required-on-android-device */\n\nimport 'intl';\nimport get from \"lodash/get\";\nimport mapValues from \"lodash/mapValues\";\nimport { addLocaleData, IntlProvider } from \"react-intl\";\nimport en from \"react-intl/locale-data/en\";\nimport pt from \"react-intl/locale-data/pt\";\nimport es from \"react-intl/locale-data/es\";\nimport localeEn from \"@meta-awesome/i18n/locales/en\";\nimport localePtBR from \"@meta-awesome/i18n/locales/pt-BR\";\nimport { I18nContextProvider } from \"./I18nContext\";\n\nconst I18nProvider = props => {\n  const {\n    language,\n    children,\n    dictionaries: additionalDictionaries,\n    additionalsLocaleData,\n    fallbackComponent,\n    textComponent: DefaultTextComponent,\n    ...otherReactIntlProps\n  } = props;\n  const [mounted, setMounted] = useState(false);\n  const [messages, setMessages] = useState({});\n  const [locales] = useState({\n    en: localeEn,\n    \"pt-BR\": localePtBR\n  });\n  useEffect(() => {\n    addLocaleData([...en, ...pt, ...es, ...additionalsLocaleData]);\n\n    if (!mounted) {\n      setMounted(true);\n    }\n  }, [additionalsLocaleData]);\n  useEffect(() => {\n    const dictionaries = { ...additionalDictionaries,\n      ...mapValues(locales, (translations, locale) => ({ ...translations,\n        ...get(additionalDictionaries, locale, {})\n      }))\n    };\n    setMessages(get(dictionaries, language, {}));\n  }, [language, additionalDictionaries]);\n  return mounted && /*#__PURE__*/React.createElement(Suspense, {\n    fallback: fallbackComponent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IntlProvider, Object.assign({\n    locale: language,\n    messages: messages,\n    key: language\n  }, otherReactIntlProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(I18nContextProvider, {\n    DefaultTextComponent: DefaultTextComponent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, children)));\n};\n\nI18nProvider.propTypes = {\n  language: PropTypes.string,\n  children: PropTypes.element,\n  dictionaries: PropTypes.shape({\n    en: PropTypes.object,\n    \"pt-BR\": PropTypes.object\n  }),\n  additionalsLocaleData: PropTypes.array,\n  fallbackComponent: PropTypes.element,\n  textComponent: PropTypes.oneOfType([PropTypes.string, PropTypes.func, PropTypes.object])\n};\nI18nProvider.defaultProps = {\n  language: \"pt-BR\",\n  children: null,\n  dictionaries: {},\n  additionalsLocaleData: [],\n  fallbackComponent: /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 22\n    }\n  }),\n  textComponent: 'span'\n};\nexport default I18nProvider;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/node_modules/@meta-react/i18n/src/I18nProvider.js"],"names":["React","Suspense","useEffect","useState","PropTypes","get","mapValues","addLocaleData","IntlProvider","en","pt","es","localeEn","localePtBR","I18nContextProvider","I18nProvider","props","language","children","dictionaries","additionalDictionaries","additionalsLocaleData","fallbackComponent","textComponent","DefaultTextComponent","otherReactIntlProps","mounted","setMounted","messages","setMessages","locales","translations","locale","propTypes","string","element","shape","object","array","oneOfType","func","defaultProps"],"mappings":"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","sourcesContent":["import React, { Suspense, useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\n/* fix android polyfill https://stackoverflow.com/questions/41736735/react-native-and-intl-polyfill-required-on-android-device */\nimport 'intl';\n\nimport get from \"lodash/get\";\nimport mapValues from \"lodash/mapValues\";\nimport { addLocaleData, IntlProvider } from \"react-intl\";\nimport en from \"react-intl/locale-data/en\";\nimport pt from \"react-intl/locale-data/pt\";\nimport es from \"react-intl/locale-data/es\";\nimport localeEn from \"@meta-awesome/i18n/locales/en\";\nimport localePtBR from \"@meta-awesome/i18n/locales/pt-BR\";\nimport { I18nContextProvider } from \"./I18nContext\";\n\nconst I18nProvider = props => {\n  const {\n    language,\n    children,\n    dictionaries: additionalDictionaries,\n    additionalsLocaleData,\n    fallbackComponent,\n    textComponent: DefaultTextComponent,\n    ...otherReactIntlProps\n  } = props;\n\n  const [mounted, setMounted] = useState(false);\n  const [messages, setMessages] = useState({});\n  const [locales] = useState({\n    en: localeEn,\n    \"pt-BR\": localePtBR\n  });\n\n  useEffect(() => {\n    addLocaleData([...en, ...pt, ...es, ...additionalsLocaleData]);\n    if (!mounted) {\n      setMounted(true);\n    }\n  }, [additionalsLocaleData]);\n\n  useEffect(() => {\n    const dictionaries = {\n      ...additionalDictionaries,\n      ...mapValues(locales, (translations, locale) => ({\n        ...translations,\n        ...get(additionalDictionaries, locale, {})\n      }))\n    };\n\n    setMessages(get(dictionaries, language, {}));\n  }, [language, additionalDictionaries]);\n\n  return (\n    mounted && (\n      <Suspense fallback={fallbackComponent}>\n        <IntlProvider\n          locale={language}\n          messages={messages}\n          key={language}\n          {...otherReactIntlProps}\n        >\n          <I18nContextProvider DefaultTextComponent={DefaultTextComponent}>\n            {children}\n          </I18nContextProvider>\n        </IntlProvider>\n      </Suspense>\n    )\n  );\n};\n\nI18nProvider.propTypes = {\n  language: PropTypes.string,\n  children: PropTypes.element,\n  dictionaries: PropTypes.shape({\n    en: PropTypes.object,\n    \"pt-BR\": PropTypes.object\n  }),\n  additionalsLocaleData: PropTypes.array,\n  fallbackComponent: PropTypes.element,\n  textComponent: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.func,\n    PropTypes.object\n  ])\n};\n\nI18nProvider.defaultProps = {\n  language: \"pt-BR\",\n  children: null,\n  dictionaries: {},\n  additionalsLocaleData: [],\n  fallbackComponent: <div />,\n  textComponent: 'span'\n};\n\nexport default I18nProvider;\n"]},"metadata":{},"sourceType":"module"}