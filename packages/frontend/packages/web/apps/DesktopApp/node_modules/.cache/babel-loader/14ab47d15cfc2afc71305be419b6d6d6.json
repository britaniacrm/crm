{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/components/AssociatedDataList/AssociatedDataListForm.js\";\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { FieldProvider, useField } from '@britania-crm/forms';\nimport AssociatedDataListStyled from './AssociatedDataListStyled';\n\nconst AssociatedDataListForm = props => {\n  const {\n    zIndex,\n    setValue,\n    value,\n    ...rest\n  } = props;\n  const {\n    error,\n    required\n  } = useField();\n  return /*#__PURE__*/React.createElement(AssociatedDataListStyled, Object.assign({}, rest, {\n    value: value,\n    error: error,\n    required: required,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }));\n};\n\nAssociatedDataListForm.propTypes = {\n  setValue: PropTypes.func.isRequired,\n  zIndex: PropTypes.number,\n  value: PropTypes.any\n};\nAssociatedDataListForm.defaultProps = {\n  zIndex: undefined,\n  value: []\n};\nconst Field = forwardRef(({\n  path,\n  ...props\n}, ref) => /*#__PURE__*/React.createElement(FieldProvider, Object.assign({\n  ref: ref\n}, props, {\n  registerFieldOptions: {\n    path\n  },\n  FieldComponent: AssociatedDataListForm,\n  touchOnChange: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 3\n  }\n})));\nField.propTypes = {\n  name: PropTypes.string.isRequired,\n  disabled: PropTypes.bool,\n  onChange: PropTypes.func,\n  onBlur: PropTypes.func,\n  path: PropTypes.string,\n  defaultValue: PropTypes.any,\n  numberFormatProps: PropTypes.object,\n  helperText: PropTypes.string,\n  validateOnBlur: PropTypes.bool\n};\nField.defaultProps = {\n  disabled: false,\n\n  onChange() {},\n\n  onValueChange() {},\n\n  onBlur() {},\n\n  path: 'value',\n  defaultValue: [],\n  numberFormatProps: undefined,\n  helperText: null,\n  validateOnBlur: true\n};\nexport default Field;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/components/AssociatedDataList/AssociatedDataListForm.js"],"names":["React","forwardRef","PropTypes","FieldProvider","useField","AssociatedDataListStyled","AssociatedDataListForm","props","zIndex","setValue","value","rest","error","required","propTypes","func","isRequired","number","any","defaultProps","undefined","Field","path","ref","name","string","disabled","bool","onChange","onBlur","defaultValue","numberFormatProps","object","helperText","validateOnBlur","onValueChange"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SACEC,aADF,EAEEC,QAFF,QAGO,qBAHP;AAKA,OAAOC,wBAAP,MAAqC,4BAArC;;AAEA,MAAMC,sBAAsB,GAAIC,KAAD,IAAW;AACxC,QAAM;AACJC,IAAAA,MADI;AAEJC,IAAAA,QAFI;AAGJC,IAAAA,KAHI;AAIJ,OAAGC;AAJC,MAKFJ,KALJ;AAOA,QAAM;AACJK,IAAAA,KADI;AAEJC,IAAAA;AAFI,MAGFT,QAAQ,EAHZ;AAKA,sBACE,oBAAC,wBAAD,oBACOO,IADP;AAEE,IAAA,KAAK,EAAGD,KAFV;AAGE,IAAA,KAAK,EAAGE,KAHV;AAIE,IAAA,QAAQ,EAAGC,QAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAQD,CArBD;;AAuBAP,sBAAsB,CAACQ,SAAvB,GAAmC;AACjCL,EAAAA,QAAQ,EAAEP,SAAS,CAACa,IAAV,CAAeC,UADQ;AAEjCR,EAAAA,MAAM,EAAEN,SAAS,CAACe,MAFe;AAGjCP,EAAAA,KAAK,EAAER,SAAS,CAACgB;AAHgB,CAAnC;AAMAZ,sBAAsB,CAACa,YAAvB,GAAsC;AACpCX,EAAAA,MAAM,EAAEY,SAD4B;AAEpCV,EAAAA,KAAK,EAAE;AAF6B,CAAtC;AAKA,MAAMW,KAAK,GAAGpB,UAAU,CAAC,CAAC;AAAEqB,EAAAA,IAAF;AAAQ,KAAGf;AAAX,CAAD,EAAqBgB,GAArB,kBACvB,oBAAC,aAAD;AACE,EAAA,GAAG,EAAGA;AADR,GAEOhB,KAFP;AAGE,EAAA,oBAAoB,EAAG;AAAEe,IAAAA;AAAF,GAHzB;AAIE,EAAA,cAAc,EAAGhB,sBAJnB;AAKE,EAAA,aAAa,MALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADsB,CAAxB;AAUAe,KAAK,CAACP,SAAN,GAAkB;AAChBU,EAAAA,IAAI,EAAEtB,SAAS,CAACuB,MAAV,CAAiBT,UADP;AAEhBU,EAAAA,QAAQ,EAAExB,SAAS,CAACyB,IAFJ;AAGhBC,EAAAA,QAAQ,EAAE1B,SAAS,CAACa,IAHJ;AAIhBc,EAAAA,MAAM,EAAE3B,SAAS,CAACa,IAJF;AAKhBO,EAAAA,IAAI,EAAEpB,SAAS,CAACuB,MALA;AAMhBK,EAAAA,YAAY,EAAE5B,SAAS,CAACgB,GANR;AAOhBa,EAAAA,iBAAiB,EAAE7B,SAAS,CAAC8B,MAPb;AAQhBC,EAAAA,UAAU,EAAE/B,SAAS,CAACuB,MARN;AAShBS,EAAAA,cAAc,EAAEhC,SAAS,CAACyB;AATV,CAAlB;AAYAN,KAAK,CAACF,YAAN,GAAqB;AACnBO,EAAAA,QAAQ,EAAE,KADS;;AAEnBE,EAAAA,QAAQ,GAAI,CAAE,CAFK;;AAGnBO,EAAAA,aAAa,GAAI,CAAE,CAHA;;AAInBN,EAAAA,MAAM,GAAI,CAAE,CAJO;;AAKnBP,EAAAA,IAAI,EAAE,OALa;AAMnBQ,EAAAA,YAAY,EAAE,EANK;AAOnBC,EAAAA,iBAAiB,EAAEX,SAPA;AAQnBa,EAAAA,UAAU,EAAE,IARO;AASnBC,EAAAA,cAAc,EAAE;AATG,CAArB;AAYA,eAAeb,KAAf","sourcesContent":["import React, { forwardRef } from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport {\n  FieldProvider,\n  useField\n} from '@britania-crm/forms'\n\nimport AssociatedDataListStyled from './AssociatedDataListStyled'\n\nconst AssociatedDataListForm = (props) => {\n  const {\n    zIndex,\n    setValue,\n    value,\n    ...rest\n  } = props\n\n  const {\n    error,\n    required\n  } = useField()\n\n  return (\n    <AssociatedDataListStyled\n      { ...rest }\n      value={ value }\n      error={ error }\n      required={ required }\n    />\n  )\n}\n\nAssociatedDataListForm.propTypes = {\n  setValue: PropTypes.func.isRequired,\n  zIndex: PropTypes.number,\n  value: PropTypes.any\n}\n\nAssociatedDataListForm.defaultProps = {\n  zIndex: undefined,\n  value: []\n}\n\nconst Field = forwardRef(({ path, ...props }, ref) => (\n  <FieldProvider\n    ref={ ref }\n    { ...props }\n    registerFieldOptions={ { path } }\n    FieldComponent={ AssociatedDataListForm }\n    touchOnChange\n  />\n))\n\nField.propTypes = {\n  name: PropTypes.string.isRequired,\n  disabled: PropTypes.bool,\n  onChange: PropTypes.func,\n  onBlur: PropTypes.func,\n  path: PropTypes.string,\n  defaultValue: PropTypes.any,\n  numberFormatProps: PropTypes.object,\n  helperText: PropTypes.string,\n  validateOnBlur: PropTypes.bool\n}\n\nField.defaultProps = {\n  disabled: false,\n  onChange () {},\n  onValueChange () {},\n  onBlur () {},\n  path: 'value',\n  defaultValue: [],\n  numberFormatProps: undefined,\n  helperText: null,\n  validateOnBlur: true\n}\n\nexport default Field\n"]},"metadata":{},"sourceType":"module"}