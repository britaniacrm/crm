{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/src/layouts/MainLayout/components/RightDrawer/RightDrawer.js\";\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport isEmpty from 'lodash/isEmpty';\nimport map from 'lodash/map';\nimport Drawer from '@material-ui/core/Drawer';\nimport IconButton from '@material-ui/core/IconButton';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport FeedbackIcon from '@material-ui/icons/Feedback';\nimport ForumIcon from '@material-ui/icons/Forum';\nimport I18n, { useT } from '@britania-crm/i18n'; // import { selectHasAccessToMessageBoard } from '@britania-crm/stores/auth/auth.selectors'\n\nimport { sla as SlaRoutes } from '@britania-crm/services/apis/crmApi/resources/routes';\nimport useCrmApi from '@britania-crm/services/hooks/useCrmApi';\nimport { MessageActions } from '@britania-crm/stores/message';\nimport { getLastFiveMessage, getOneMessage, getAllFilterMessage } from '@britania-crm/stores/message/message.selectors';\nimport { ProfilesActions } from '@britania-crm/stores/profiles';\nimport { getAllProfiles } from '@britania-crm/stores/profiles/profiles.selectors';\nimport colors from '@britania-crm/styles/colors';\nimport { formatBackDateToFriendlyFormat } from '@britania-crm/utils/date';\nimport Button from '@britania-crm/web-components/Button';\nimport FilterMessage from '@britania-crm/web-components/FilterMessage/FilterMessage';\nimport { Shape, RightEar } from '@britania-crm/web-components/Icons';\nimport InputSelect from '@britania-crm/web-components/InputSelect';\nimport LightTooltip from '@britania-crm/web-components/LightTooltip';\nimport Popup from '@britania-crm/web-components/Popup';\nimport PreviewMessageboard from '@britania-crm/web-components/PreviewMessageboard';\nimport { useRoutes } from '@britania-crm/web-src/routes/authenticated.routes';\nimport useStyles, { Title, Container, SectionItem, SubTitle, ListPost, PostItem, Divider, Icons, GridContainer, ListSla, ItemSla, Content, StatusChatList, StatusChatItem, ItemChat, SubtitleText, Expiration, Workflow, ExpirationDate, WorkflowType, Company, TimeIndicator, CleanSlaFilter, FilterButton, SelectTheme } from './styles';\n\nconst RightDrawer = ({\n  openRightDrawer,\n  handleRightDrawerOpen\n}) => {\n  var _useCrmApi$data;\n\n  const classes = useStyles();\n  const history = useHistory();\n  const {\n    routes\n  } = useRoutes();\n  const dispatch = useCallback(useDispatch(), []);\n  const t = useT();\n  const [openPopup, setOpenPopup] = useState(false);\n  const [openPopupFilter, setOpenPopupFilter] = useState(false);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [anchorElFilter, setAnchorElFilter] = useState(null);\n  const [messageSelected, setMessageSelected] = useState({});\n  const [optionSelected, setOptionSelected] = useState(0);\n  const [slaFilter, setSlaFilter] = useState({\n    orderBy: 'dueDate',\n    sort: 'ASC',\n    page: 1,\n    pageSize: 5\n  });\n  const hasAccessToMessageBoard = true; // useSelector(selectHasAccessToMessageBoard)\n\n  const allMessages = useSelector(getLastFiveMessage);\n  const profiles = useSelector(getAllProfiles);\n  const oneMessage = useSelector(getOneMessage);\n  const allFilterMessage = useSelector(getAllFilterMessage);\n  const fetchMessage = useCallback(id => {\n    dispatch(MessageActions.getOneMessage(id));\n  }, [dispatch]);\n\n  const indicatorColor = color => {\n    switch (color) {\n      case 'GREEN':\n        return colors.success.main;\n\n      case 'YELLOW':\n        return colors.warning.main;\n\n      default:\n        return colors.error.main;\n    }\n  };\n\n  const workflowType = type => {\n    switch (type) {\n      case 'VPC':\n        return 'VPC';\n\n      case 'PCC':\n        return 'Pré Cadastro de Cliente';\n\n      case 'PCR':\n        return 'Pré Cadastro de Representante';\n\n      case 'AP':\n        return 'Aprovação de Pedido';\n\n      case 'ACdC':\n        return 'Atualização de Cadastro de Cliente';\n\n      case 'ARC':\n        return 'Alteração de Ranking de Cliente';\n\n      case 'EP':\n        return 'Equalização de Preço';\n\n      case 'APE':\n        return 'Aprovação de Pedido de Equalização';\n\n      case 'ACtC':\n        return 'Alteração de Categoria do Cliente';\n\n      case 'AN':\n        return 'Aprovação de Negociação';\n\n      default:\n        return '';\n    }\n  };\n\n  const slas = (_useCrmApi$data = useCrmApi([SlaRoutes.getAll, slaFilter], {\n    params: slaFilter\n  }).data) === null || _useCrmApi$data === void 0 ? void 0 : _useCrmApi$data.data;\n  const previewSlas = useCrmApi([SlaRoutes.getPreview]).data; // executa a busca de recados de acordo com os filtros\n\n  const fetchMessageFilter = useCallback(filter => {\n    dispatch(MessageActions.getFilteredMessages(filter));\n  }, [dispatch]);\n  const messages = useMemo(() => !isEmpty(allFilterMessage) ? allFilterMessage : allMessages, [allFilterMessage, allMessages]); // chama a função que busca os recados e passa o filtro com o perfil selecionado\n\n  useEffect(() => {\n    fetchMessageFilter({\n      profiles: optionSelected > 0 ? optionSelected : null\n    });\n  }, [fetchMessageFilter, optionSelected]);\n  useEffect(() => {\n    setMessageSelected(oneMessage);\n  }, [oneMessage]); // Função para carregar a lista de recados no primeiro carregamento da tela\n\n  useEffect(() => {\n    dispatch(ProfilesActions.getAllProfiles());\n  }, [dispatch]);\n  return /*#__PURE__*/React.createElement(Drawer, {\n    anchor: \"right\",\n    variant: \"permanent\",\n    className: clsx(classes.drawer, {\n      [classes.drawerOpen]: openRightDrawer,\n      [classes.drawerClose]: !openRightDrawer\n    }),\n    classes: {\n      paper: clsx(classes.switcher, {\n        [classes.drawerOpen]: openRightDrawer,\n        [classes.drawerClose]: !openRightDrawer\n      })\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(GridContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.arrowRightIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleRightDrawerOpen,\n    style: {\n      padding: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(RightEar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SectionItem, {\n    closeRighDrawer: !openRightDrawer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    closeRighDrawer: !openRightDrawer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FeedbackIcon, {\n    fontSize: \"inherit\",\n    htmlColor: colors.britSupport2.base,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 15\n    }\n  }, \"SLA\")), /*#__PURE__*/React.createElement(StatusChatList, {\n    closeRighDrawer: !openRightDrawer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(StatusChatItem, {\n    status: \"failed\",\n    onClick: () => setSlaFilter({ ...slaFilter,\n      expirationIndicator: 'RED'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FeedbackIcon, {\n    fontSize: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ItemChat, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 17\n    }\n  }, (previewSlas === null || previewSlas === void 0 ? void 0 : previewSlas.red) || 0)), /*#__PURE__*/React.createElement(StatusChatItem, {\n    onClick: () => setSlaFilter({ ...slaFilter,\n      expirationIndicator: 'YELLOW'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FeedbackIcon, {\n    fontSize: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ItemChat, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 17\n    }\n  }, (previewSlas === null || previewSlas === void 0 ? void 0 : previewSlas.yellow) || 0)), /*#__PURE__*/React.createElement(StatusChatItem, {\n    status: \"success\",\n    onClick: () => setSlaFilter({ ...slaFilter,\n      expirationIndicator: 'GREEN'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FeedbackIcon, {\n    fontSize: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ItemChat, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 17\n    }\n  }, (previewSlas === null || previewSlas === void 0 ? void 0 : previewSlas.green) || 0))), openRightDrawer ? /*#__PURE__*/React.createElement(CleanSlaFilter, {\n    onClick: () => setSlaFilter({ ...slaFilter,\n      expirationIndicator: null\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SubtitleText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 19\n    }\n  }, \"\\xDAltimos SLAs\"), /*#__PURE__*/React.createElement(ExpandMoreIcon, {\n    htmlColor: \"#fff\",\n    fontSize: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 19\n    }\n  })) : /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ListSla, {\n    closeRighDrawer: !openRightDrawer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }\n  }, map(slas, item => openRightDrawer ? /*#__PURE__*/React.createElement(ItemSla, {\n    status: \"success\",\n    closeRighDrawer: !openRightDrawer,\n    key: item.workflowIdentifier,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Expiration, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(AccessTimeIcon, {\n    fontSize: \"small\",\n    htmlColor: indicatorColor(item.expirationTime),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(ExpirationDate, {\n    color: indicatorColor(item.expirationTime),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 23\n    }\n  }, formatBackDateToFriendlyFormat(item.dueDate))), /*#__PURE__*/React.createElement(Workflow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(LightTooltip, {\n    title: workflowType(item.workflowTypeAlias),\n    arrow: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(WorkflowType, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 25\n    }\n  }, item.workflowTypeAlias)), /*#__PURE__*/React.createElement(Company, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 23\n    }\n  }, item.parentCompanyName))) : /*#__PURE__*/React.createElement(TimeIndicator, {\n    key: item.workflowIdentifier,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(AccessTimeIcon, {\n    fontSize: \"small\",\n    htmlColor: indicatorColor(item.expirationTime),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 21\n    }\n  })))), openRightDrawer && /*#__PURE__*/React.createElement(I18n, {\n    as: Button,\n    color: \"warning\",\n    variant: \"contained\",\n    onClick: () => history.push(routes.sla.path),\n    className: classes.btn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 15\n    }\n  }, \"all slas\")), hasAccessToMessageBoard && /*#__PURE__*/React.createElement(SectionItem, {\n    closeRighDrawer: !openRightDrawer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    closeRighDrawer: !openRightDrawer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ForumIcon, {\n    fontSize: \"inherit\",\n    htmlColor: colors.britSupport2.base,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(I18n, {\n    as: Title,\n    params: {\n      howMany: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 17\n    }\n  }, openRightDrawer ? 'message boards' : 'messages')), openRightDrawer ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SubTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(InputSelect, {\n    detached: true,\n    label: t('last message'),\n    name: \"select-message\",\n    options: profiles,\n    onChange: event => {\n      setOptionSelected(event.target.value);\n    },\n    value: optionSelected,\n    variant: \"standard\",\n    theme: SelectTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(FilterButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"close\",\n    className: classes.closeButton,\n    onClick: event => {\n      setAnchorElFilter(event.currentTarget);\n      setOpenPopupFilter(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Shape, {\n    color: colors.britSecondary.base,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 27\n    }\n  })))), /*#__PURE__*/React.createElement(ListPost, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 21\n    }\n  }, map(messages, item => {\n    var _item$messageProfile$, _item$messageProfile$2;\n\n    return /*#__PURE__*/React.createElement(PostItem, {\n      key: item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      onClick: event => {\n        setAnchorEl(event.currentTarget);\n        setOpenPopup(true);\n        fetchMessage(item.id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 29\n      }\n    }, \" \", item.title)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 29\n      }\n    }, (_item$messageProfile$ = item.messageProfile[0]) === null || _item$messageProfile$ === void 0 ? void 0 : (_item$messageProfile$2 = _item$messageProfile$.profile[0]) === null || _item$messageProfile$2 === void 0 ? void 0 : _item$messageProfile$2.name), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 29\n      }\n    }, formatBackDateToFriendlyFormat(item.expirationDate), \" \")));\n  }), !isEmpty(messageSelected) && /*#__PURE__*/React.createElement(Popup, {\n    open: openPopup,\n    anchorEl: anchorEl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(PreviewMessageboard, {\n    item: messageSelected,\n    handlePopoverClose: () => {\n      setOpenPopup(false);\n      setAnchorEl(null);\n      setMessageSelected({});\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Popup, {\n    open: openPopupFilter,\n    anchorEl: anchorElFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(FilterMessage, {\n    options: profiles,\n    handlePopoverClose: () => {\n      setOpenPopupFilter(false);\n      setAnchorElFilter(null);\n      setMessageSelected({});\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(I18n, {\n    as: Button,\n    color: \"warning\",\n    variant: \"contained\",\n    onClick: () => history.push(routes.messageboard.path),\n    className: classes.btn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 21\n    }\n  }, \"all message board\")) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Icons, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(ForumIcon, {\n    fontSize: \"small\",\n    htmlColor: colors.britPrimary2.lighter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Divider, {\n    style: {\n      marginTop: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 21\n    }\n  }))))));\n};\n\nRightDrawer.propTypes = {\n  openRightDrawer: PropTypes.bool.isRequired,\n  handleRightDrawerOpen: PropTypes.func.isRequired\n};\nexport default RightDrawer;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/src/layouts/MainLayout/components/RightDrawer/RightDrawer.js"],"names":["React","useState","useEffect","useCallback","useMemo","useDispatch","useSelector","useHistory","clsx","PropTypes","isEmpty","map","Drawer","IconButton","AccessTimeIcon","ExpandMoreIcon","FeedbackIcon","ForumIcon","I18n","useT","sla","SlaRoutes","useCrmApi","MessageActions","getLastFiveMessage","getOneMessage","getAllFilterMessage","ProfilesActions","getAllProfiles","colors","formatBackDateToFriendlyFormat","Button","FilterMessage","Shape","RightEar","InputSelect","LightTooltip","Popup","PreviewMessageboard","useRoutes","useStyles","Title","Container","SectionItem","SubTitle","ListPost","PostItem","Divider","Icons","GridContainer","ListSla","ItemSla","Content","StatusChatList","StatusChatItem","ItemChat","SubtitleText","Expiration","Workflow","ExpirationDate","WorkflowType","Company","TimeIndicator","CleanSlaFilter","FilterButton","SelectTheme","RightDrawer","openRightDrawer","handleRightDrawerOpen","classes","history","routes","dispatch","t","openPopup","setOpenPopup","openPopupFilter","setOpenPopupFilter","anchorEl","setAnchorEl","anchorElFilter","setAnchorElFilter","messageSelected","setMessageSelected","optionSelected","setOptionSelected","slaFilter","setSlaFilter","orderBy","sort","page","pageSize","hasAccessToMessageBoard","allMessages","profiles","oneMessage","allFilterMessage","fetchMessage","id","indicatorColor","color","success","main","warning","error","workflowType","type","slas","getAll","params","data","previewSlas","getPreview","fetchMessageFilter","filter","getFilteredMessages","messages","drawer","drawerOpen","drawerClose","paper","switcher","arrowRightIcon","padding","britSupport2","base","expirationIndicator","red","yellow","green","item","workflowIdentifier","expirationTime","dueDate","workflowTypeAlias","parentCompanyName","push","path","btn","howMany","event","target","value","closeButton","currentTarget","britSecondary","title","messageProfile","profile","name","expirationDate","messageboard","britPrimary2","lighter","marginTop","propTypes","bool","isRequired","func"],"mappings":"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","sourcesContent":["import React, {\n  useState,\n  useEffect,\n  useCallback,\n  useMemo\n} from 'react'\nimport {\n  useDispatch,\n  useSelector\n} from 'react-redux'\nimport { useHistory } from 'react-router-dom'\n\nimport clsx from 'clsx'\nimport PropTypes from 'prop-types'\n\nimport isEmpty from 'lodash/isEmpty'\nimport map from 'lodash/map'\n\nimport Drawer from '@material-ui/core/Drawer'\nimport IconButton from '@material-ui/core/IconButton'\nimport AccessTimeIcon from '@material-ui/icons/AccessTime'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport FeedbackIcon from '@material-ui/icons/Feedback'\nimport ForumIcon from '@material-ui/icons/Forum'\n\nimport I18n, { useT } from '@britania-crm/i18n'\n// import { selectHasAccessToMessageBoard } from '@britania-crm/stores/auth/auth.selectors'\nimport { sla as SlaRoutes } from '@britania-crm/services/apis/crmApi/resources/routes'\nimport useCrmApi from '@britania-crm/services/hooks/useCrmApi'\nimport { MessageActions } from '@britania-crm/stores/message'\nimport {\n  getLastFiveMessage,\n  getOneMessage,\n  getAllFilterMessage\n} from '@britania-crm/stores/message/message.selectors'\nimport { ProfilesActions } from '@britania-crm/stores/profiles'\nimport { getAllProfiles } from '@britania-crm/stores/profiles/profiles.selectors'\nimport colors from '@britania-crm/styles/colors'\nimport { formatBackDateToFriendlyFormat } from '@britania-crm/utils/date'\nimport Button from '@britania-crm/web-components/Button'\nimport FilterMessage from '@britania-crm/web-components/FilterMessage/FilterMessage'\nimport {\n  Shape,\n  RightEar\n} from '@britania-crm/web-components/Icons'\nimport InputSelect from '@britania-crm/web-components/InputSelect'\nimport LightTooltip from '@britania-crm/web-components/LightTooltip'\nimport Popup from '@britania-crm/web-components/Popup'\nimport PreviewMessageboard from '@britania-crm/web-components/PreviewMessageboard'\nimport { useRoutes } from '@britania-crm/web-src/routes/authenticated.routes'\n\nimport useStyles, {\n  Title,\n  Container,\n  SectionItem,\n  SubTitle,\n  ListPost,\n  PostItem,\n  Divider,\n  Icons,\n  GridContainer,\n  ListSla,\n  ItemSla,\n  Content,\n  StatusChatList,\n  StatusChatItem,\n  ItemChat,\n  SubtitleText,\n  Expiration,\n  Workflow,\n  ExpirationDate,\n  WorkflowType,\n  Company,\n  TimeIndicator,\n  CleanSlaFilter,\n  FilterButton,\n  SelectTheme\n} from './styles'\n\nconst RightDrawer = ({ openRightDrawer, handleRightDrawerOpen }) => {\n  const classes = useStyles()\n  const history = useHistory()\n  const { routes } = useRoutes()\n  const dispatch = useCallback(useDispatch(), [])\n  const t = useT()\n\n  const [openPopup, setOpenPopup] = useState(false)\n  const [openPopupFilter, setOpenPopupFilter] = useState(false)\n  const [anchorEl, setAnchorEl] = useState(null)\n  const [anchorElFilter, setAnchorElFilter] = useState(null)\n  const [messageSelected, setMessageSelected] = useState({})\n  const [optionSelected, setOptionSelected] = useState(0)\n  const [slaFilter, setSlaFilter] = useState({\n    orderBy: 'dueDate',\n    sort: 'ASC',\n    page: 1,\n    pageSize: 5\n  })\n\n  const hasAccessToMessageBoard = true // useSelector(selectHasAccessToMessageBoard)\n  const allMessages = useSelector(getLastFiveMessage)\n  const profiles = useSelector(getAllProfiles)\n  const oneMessage = useSelector(getOneMessage)\n  const allFilterMessage = useSelector(getAllFilterMessage)\n\n  const fetchMessage = useCallback((id) => {\n    dispatch(MessageActions.getOneMessage(id))\n  }, [dispatch])\n\n  const indicatorColor = (color) => {\n    switch (color) {\n      case 'GREEN': return colors.success.main\n      case 'YELLOW': return colors.warning.main\n      default: return colors.error.main\n    }\n  }\n  const workflowType = (type) => {\n    switch (type) {\n      case 'VPC': return 'VPC'\n      case 'PCC': return 'Pré Cadastro de Cliente'\n      case 'PCR': return 'Pré Cadastro de Representante'\n      case 'AP': return 'Aprovação de Pedido'\n      case 'ACdC': return 'Atualização de Cadastro de Cliente'\n      case 'ARC': return 'Alteração de Ranking de Cliente'\n      case 'EP': return 'Equalização de Preço'\n      case 'APE': return 'Aprovação de Pedido de Equalização'\n      case 'ACtC': return 'Alteração de Categoria do Cliente'\n      case 'AN': return 'Aprovação de Negociação'\n      default: return ''\n    }\n  }\n\n  const slas = useCrmApi([SlaRoutes.getAll, slaFilter], { params: slaFilter }).data?.data\n  const previewSlas = useCrmApi([SlaRoutes.getPreview]).data\n\n  // executa a busca de recados de acordo com os filtros\n  const fetchMessageFilter = useCallback((filter) => {\n    dispatch(MessageActions.getFilteredMessages(filter))\n  }, [dispatch])\n\n  const messages = useMemo(() => !isEmpty(allFilterMessage) ? allFilterMessage : allMessages, [allFilterMessage, allMessages])\n\n  // chama a função que busca os recados e passa o filtro com o perfil selecionado\n  useEffect(() => {\n    fetchMessageFilter({ profiles: optionSelected > 0 ? optionSelected : null })\n  }, [fetchMessageFilter, optionSelected])\n\n  useEffect(() => {\n    setMessageSelected(oneMessage)\n  }, [oneMessage])\n\n  // Função para carregar a lista de recados no primeiro carregamento da tela\n  useEffect(() => {\n    dispatch(ProfilesActions.getAllProfiles())\n  }, [dispatch])\n\n  return (\n    <Drawer\n      anchor=\"right\"\n      variant=\"permanent\"\n      className={ clsx(classes.drawer, {\n        [classes.drawerOpen]: openRightDrawer,\n        [classes.drawerClose]: !openRightDrawer\n      }) }\n      classes={ {\n        paper: clsx(classes.switcher, {\n          [classes.drawerOpen]: openRightDrawer,\n          [classes.drawerClose]: !openRightDrawer\n        })\n      } }\n    >\n\n      <GridContainer>\n        <div className={ classes.arrowRightIcon }>\n          <IconButton onClick={ handleRightDrawerOpen } style={ { padding: 0 } }>\n            <RightEar />\n          </IconButton>\n        </div>\n\n        <Content>\n          <SectionItem closeRighDrawer={ !openRightDrawer }>\n            <Container closeRighDrawer={ !openRightDrawer }>\n              <FeedbackIcon fontSize=\"inherit\" htmlColor={ colors.britSupport2.base } />\n              <Title>SLA</Title>\n            </Container>\n\n            <StatusChatList closeRighDrawer={ !openRightDrawer }>\n              <StatusChatItem status=\"failed\" onClick={ () => setSlaFilter({ ...slaFilter, expirationIndicator: 'RED' }) }>\n                <FeedbackIcon fontSize=\"small\" />\n                <ItemChat>{previewSlas?.red || 0}</ItemChat>\n              </StatusChatItem>\n\n              <StatusChatItem onClick={ () => setSlaFilter({ ...slaFilter, expirationIndicator: 'YELLOW' }) }>\n                <FeedbackIcon fontSize=\"small\" />\n                <ItemChat>{previewSlas?.yellow || 0}</ItemChat>\n              </StatusChatItem>\n\n              <StatusChatItem status=\"success\" onClick={ () => setSlaFilter({ ...slaFilter, expirationIndicator: 'GREEN' }) }>\n                <FeedbackIcon fontSize=\"small\" />\n                <ItemChat>{previewSlas?.green || 0}</ItemChat>\n              </StatusChatItem>\n            </StatusChatList>\n            {openRightDrawer\n              ? (\n                <CleanSlaFilter onClick={ () => setSlaFilter({ ...slaFilter, expirationIndicator: null }) }>\n                  <SubtitleText>Últimos SLAs</SubtitleText>\n                  <ExpandMoreIcon htmlColor=\"#fff\" fontSize=\"small\" />\n                </CleanSlaFilter>\n              )\n              : (\n                <Divider />\n              )}\n\n            <ListSla closeRighDrawer={ !openRightDrawer }>\n              {map(slas, (item) => openRightDrawer\n                ? (\n                  <ItemSla\n                    status=\"success\"\n                    closeRighDrawer={ !openRightDrawer }\n                    key={ item.workflowIdentifier }\n                  >\n                    <Expiration>\n                      <AccessTimeIcon fontSize=\"small\" htmlColor={ indicatorColor(item.expirationTime) } />\n                      <ExpirationDate color={ indicatorColor(item.expirationTime) }>{formatBackDateToFriendlyFormat(item.dueDate)}</ExpirationDate>\n                    </Expiration>\n\n                    <Workflow>\n                      <LightTooltip title={ workflowType(item.workflowTypeAlias) } arrow>\n                        <WorkflowType>{item.workflowTypeAlias}</WorkflowType>\n                      </LightTooltip>\n                      <Company>{item.parentCompanyName}</Company>\n                    </Workflow>\n                  </ItemSla>\n                )\n                : (\n                  <TimeIndicator key={ item.workflowIdentifier }>\n                    <AccessTimeIcon fontSize=\"small\" htmlColor={ indicatorColor(item.expirationTime) } />\n                  </TimeIndicator>\n                ))}\n            </ListSla>\n            {openRightDrawer &&\n              <I18n\n                as={ Button }\n                color=\"warning\"\n                variant=\"contained\"\n                onClick={ () => history.push(routes.sla.path) }\n                className={ classes.btn }\n              >\n            all slas\n              </I18n> }\n          </SectionItem>\n\n          {hasAccessToMessageBoard && (\n            <SectionItem closeRighDrawer={ !openRightDrawer }>\n              <Container closeRighDrawer={ !openRightDrawer }>\n                <ForumIcon fontSize=\"inherit\" htmlColor={ colors.britSupport2.base }/>\n                <I18n as={ Title } params={ { howMany: 2 } }>\n                  {openRightDrawer ? 'message boards' : 'messages'}\n                </I18n>\n\n              </Container>\n              {openRightDrawer\n                ? (\n                  <>\n                    <SubTitle>\n                      <InputSelect\n                        detached\n                        label={ t('last message') }\n                        name=\"select-message\"\n                        options={ profiles }\n                        onChange={ (event) => { setOptionSelected(event.target.value) } }\n                        value={ optionSelected }\n                        variant=\"standard\"\n                        theme={ SelectTheme }\n                      />\n                      <FilterButton>\n                        <IconButton\n                          aria-label=\"close\" className={ classes.closeButton } onClick={ (event) => {\n                            setAnchorElFilter(event.currentTarget)\n                            setOpenPopupFilter(true)\n                          } }\n                        >\n                          <Shape color={ colors.britSecondary.base } />\n                        </IconButton>\n                      </FilterButton>\n                    </SubTitle>\n                    <ListPost>\n                      {map(messages, (item) => (\n                        <PostItem\n                          key={ item.id }\n                        >\n                          <div onClick={ (event) => {\n                            setAnchorEl(event.currentTarget)\n                            setOpenPopup(true)\n                            fetchMessage(item.id)\n                          } }\n                          >\n                            <span> {item.title}</span>\n                          </div>\n                          <div>\n                            <span>{item.messageProfile[0]?.profile[0]?.name}</span>\n                            <span>{formatBackDateToFriendlyFormat(item.expirationDate)} </span>\n                          </div>\n                        </PostItem>\n                      ))}\n\n                      {\n                        !isEmpty(messageSelected) && (\n                          <Popup\n                            open={ openPopup }\n                            anchorEl={ anchorEl }\n                          >\n                            <PreviewMessageboard\n                              item={ messageSelected } handlePopoverClose={ () => {\n                                setOpenPopup(false)\n                                setAnchorEl(null)\n                                setMessageSelected({})\n                              } }\n                            />\n                          </Popup>\n                        )}\n                      <Popup\n                        open={ openPopupFilter }\n                        anchorEl={ anchorElFilter }\n                      >\n                        <FilterMessage\n                          options={ profiles }\n                          handlePopoverClose={ () => {\n                            setOpenPopupFilter(false)\n                            setAnchorElFilter(null)\n                            setMessageSelected({})\n                          } }\n                        />\n                      </Popup>\n                    </ListPost>\n                    <I18n\n                      as={ Button }\n                      color=\"warning\"\n                      variant=\"contained\"\n                      onClick={ () => history.push(routes.messageboard.path) }\n                      className={ classes.btn }\n                    >\n                  all message board\n                    </I18n>\n                  </>\n                )\n                : (\n                  <>\n                    <Icons>\n                      <div>\n                        <ForumIcon fontSize=\"small\" htmlColor={ colors.britPrimary2.lighter } />\n                      </div>\n                    </Icons>\n\n                    <Divider style={ { marginTop: '10px' } } />\n                  </>\n                )}\n            </SectionItem>\n          )}\n        </Content>\n\n      </GridContainer>\n    </Drawer>\n  )\n}\n\nRightDrawer.propTypes = {\n  openRightDrawer: PropTypes.bool.isRequired,\n  handleRightDrawerOpen: PropTypes.func.isRequired\n}\n\nexport default RightDrawer\n"]},"metadata":{},"sourceType":"module"}