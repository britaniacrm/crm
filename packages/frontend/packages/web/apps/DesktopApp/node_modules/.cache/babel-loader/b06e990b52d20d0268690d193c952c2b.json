{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/profiles/screens/ProfilesListScreen/ProfilesListScreen.js\";\n\n/* eslint-disable react/display-name */\nimport React, { useState, useCallback, useMemo } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { useDialog } from '@britania-crm/dialog';\nimport { useT } from '@britania-crm/i18n';\nimport { profiles as profilesCrmRoutes } from '@britania-crm/services/apis/crmApi/resources/routes';\nimport useCrmApi from '@britania-crm/services/hooks/useCrmApi';\nimport { ProfilesActions } from '@britania-crm/stores/profiles';\nimport DataTable from '@britania-crm/web-components/DataTable';\nimport ConfirmModal from '@britania-crm/web-components/Modal/ConfirmModal';\nimport StatusSwitch from '@britania-crm/web-components/StatusSwitch';\nimport { useRoutes } from '@britania-crm/web-src/routes/authenticated.routes';\nimport LinkProfileUserModal from '../../modals/LinkProfileUserModal';\nimport { Container } from './styles';\n\nconst ProfilesListScreen = () => {\n  const t = useT();\n  const dispatch = useCallback(useDispatch(), []);\n  const {\n    createDialog\n  } = useDialog();\n  const {\n    routes,\n    currentRoutePermissions\n  } = useRoutes();\n  const history = useHistory();\n  const [loadingState, setLoading] = useState(false);\n  const {\n    data,\n    loading: loadingHook,\n    mutate\n  } = useCrmApi([profilesCrmRoutes.list]);\n  const loading = useMemo(() => loadingState || loadingHook, [loadingHook, loadingState]);\n  const handleUpdateStatus = useCallback(id => {\n    setLoading(true);\n    dispatch(ProfilesActions.patchProfileStatus(id, () => {\n      mutate();\n      setLoading(false);\n    }));\n  }, [dispatch, mutate]);\n  const columns = useMemo(() => [{\n    title: t('profile', {\n      howMany: 1\n    }),\n    field: 'name',\n    defaultSort: 'asc'\n  }, {\n    sorting: false,\n    title: t('status'),\n    field: 'active',\n    render: row => /*#__PURE__*/React.createElement(StatusSwitch, {\n      detached: true,\n      name: \"status\",\n      value: row.active,\n      onChange: () => handleUpdateStatus(row.id),\n      disabled: !currentRoutePermissions.INATIVAR,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    })\n  }], [currentRoutePermissions.INATIVAR, handleUpdateStatus, t]);\n  const handleDelete = useCallback(id => {\n    setLoading(true);\n    dispatch(ProfilesActions.deleteProfile(id, () => {\n      mutate();\n      setLoading(false);\n    }));\n  }, [dispatch, mutate]);\n  const onAddClick = useCallback(() => history.push(routes.newProfile.path), [history, routes.newProfile]);\n  const onBindClick = useCallback((event, row) => {\n    createDialog({\n      id: 'link-profile-modal',\n      Component: LinkProfileUserModal,\n      props: {\n        profileId: row.id,\n        profileName: row.name,\n        enableLoading: true\n      }\n    });\n  }, [createDialog]);\n  const onEditClick = useCallback((event, row) => {\n    history.push(routes.editProfile.path, {\n      profileId: row.id\n    });\n  }, [history, routes.editProfile.path]);\n  const onDeleteClick = useCallback((event, row) => createDialog({\n    id: 'delete-profile-modal',\n    Component: ConfirmModal,\n    props: {\n      onConfirm() {\n        handleDelete(row.id);\n      }\n\n    }\n  }), [createDialog, handleDelete]);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DataTable, {\n    data: data,\n    columns: columns,\n    searchPlaceholder: t('search by {this}', {\n      this: t('profile', {\n        howMany: 1\n      })\n    }),\n    loading: loading,\n    title: t('profiles control'),\n    addTitle: t('add new profile'),\n    onAddClick: currentRoutePermissions.INCLUIR && onAddClick,\n    onBindClick: currentRoutePermissions.EDITAR && onBindClick,\n    onEditClick: currentRoutePermissions.EDITAR && onEditClick,\n    onDeleteClick: currentRoutePermissions.EXCLUIR && onDeleteClick,\n    onGoBack: history.goBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ProfilesListScreen;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/profiles/screens/ProfilesListScreen/ProfilesListScreen.js"],"names":["React","useState","useCallback","useMemo","useDispatch","useHistory","useDialog","useT","profiles","profilesCrmRoutes","useCrmApi","ProfilesActions","DataTable","ConfirmModal","StatusSwitch","useRoutes","LinkProfileUserModal","Container","ProfilesListScreen","t","dispatch","createDialog","routes","currentRoutePermissions","history","loadingState","setLoading","data","loading","loadingHook","mutate","list","handleUpdateStatus","id","patchProfileStatus","columns","title","howMany","field","defaultSort","sorting","render","row","active","INATIVAR","handleDelete","deleteProfile","onAddClick","push","newProfile","path","onBindClick","event","Component","props","profileId","profileName","name","enableLoading","onEditClick","editProfile","onDeleteClick","onConfirm","this","INCLUIR","EDITAR","EXCLUIR","goBack"],"mappings":"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","sourcesContent":["/* eslint-disable react/display-name */\nimport React, {\n  useState,\n  useCallback,\n  useMemo\n} from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\n\nimport { useDialog } from '@britania-crm/dialog'\nimport { useT } from '@britania-crm/i18n'\nimport { profiles as profilesCrmRoutes } from '@britania-crm/services/apis/crmApi/resources/routes'\nimport useCrmApi from '@britania-crm/services/hooks/useCrmApi'\nimport { ProfilesActions } from '@britania-crm/stores/profiles'\nimport DataTable from '@britania-crm/web-components/DataTable'\nimport ConfirmModal from '@britania-crm/web-components/Modal/ConfirmModal'\nimport StatusSwitch from '@britania-crm/web-components/StatusSwitch'\nimport { useRoutes } from '@britania-crm/web-src/routes/authenticated.routes'\n\nimport LinkProfileUserModal from '../../modals/LinkProfileUserModal'\nimport { Container } from './styles'\n\nconst ProfilesListScreen = () => {\n  const t = useT()\n  const dispatch = useCallback(useDispatch(), [])\n  const { createDialog } = useDialog()\n  const { routes, currentRoutePermissions } = useRoutes()\n  const history = useHistory()\n\n  const [loadingState, setLoading] = useState(false)\n\n  const {\n    data,\n    loading: loadingHook,\n    mutate\n  } = useCrmApi([profilesCrmRoutes.list])\n\n  const loading = useMemo(() => loadingState || loadingHook, [loadingHook, loadingState])\n\n  const handleUpdateStatus = useCallback((id) => {\n    setLoading(true)\n    dispatch(ProfilesActions.patchProfileStatus(id, () => {\n      mutate()\n      setLoading(false)\n    }))\n  }, [dispatch, mutate])\n\n  const columns = useMemo(() => [\n    {\n      title: t('profile', { howMany: 1 }),\n      field: 'name',\n      defaultSort: 'asc'\n    },\n    {\n      sorting: false,\n      title: t('status'),\n      field: 'active',\n      render: (row) => (\n        <StatusSwitch\n          detached\n          name=\"status\"\n          value={ row.active }\n          onChange={ () => handleUpdateStatus(row.id) }\n          disabled={ !currentRoutePermissions.INATIVAR }\n        />\n      )\n    }\n  ], [currentRoutePermissions.INATIVAR, handleUpdateStatus, t])\n\n  const handleDelete = useCallback((id) => {\n    setLoading(true)\n    dispatch(ProfilesActions.deleteProfile(id, () => {\n      mutate()\n      setLoading(false)\n    }))\n  }, [dispatch, mutate])\n\n  const onAddClick = useCallback(\n    () => history.push(routes.newProfile.path),\n    [history, routes.newProfile]\n  )\n\n  const onBindClick = useCallback((event, row) => {\n    createDialog({\n      id: 'link-profile-modal',\n      Component: LinkProfileUserModal,\n      props: {\n        profileId: row.id,\n        profileName: row.name,\n        enableLoading: true\n      }\n    })\n  }, [createDialog])\n\n  const onEditClick = useCallback((event, row) => {\n    history.push(routes.editProfile.path, { profileId: row.id })\n  }, [history, routes.editProfile.path])\n\n  const onDeleteClick = useCallback(\n    (event, row) => createDialog({\n      id: 'delete-profile-modal',\n      Component: ConfirmModal,\n      props: {\n        onConfirm () {\n          handleDelete(row.id)\n        }\n      }\n    }),\n    [createDialog, handleDelete]\n  )\n\n  return (\n    <Container>\n      <DataTable\n        data={ data }\n        columns={ columns }\n        searchPlaceholder={ t('search by {this}', { this: t('profile', { howMany: 1 }) }) }\n        loading={ loading }\n        title={ t('profiles control') }\n        addTitle={ t('add new profile') }\n        onAddClick={ currentRoutePermissions.INCLUIR && onAddClick }\n        onBindClick={ currentRoutePermissions.EDITAR && onBindClick }\n        onEditClick={ currentRoutePermissions.EDITAR && onEditClick }\n        onDeleteClick={ currentRoutePermissions.EXCLUIR && onDeleteClick }\n        onGoBack={ history.goBack }\n      />\n    </Container>\n  )\n}\n\nexport default ProfilesListScreen\n"]},"metadata":{},"sourceType":"module"}