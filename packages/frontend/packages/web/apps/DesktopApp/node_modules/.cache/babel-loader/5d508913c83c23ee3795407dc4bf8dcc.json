{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/src/layouts/MainLayout/components/Navbar/UserMenu/UserMenu.js\";\nimport React, { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { useT } from '@britania-crm/i18n';\nimport { AuthActions } from '@britania-crm/stores/auth';\nimport LogoutIcon from '@britania-crm/web-components/Icons/LogoutIcon';\nimport useStyles from './styles';\n\nconst UserMenu = props => {\n  const {\n    onClosePopup\n  } = props;\n  const dispatch = useCallback(useDispatch(), []);\n  const classes = useStyles();\n  const t = useT();\n  const handleClick = useCallback(onClick => {\n    onClick();\n    onClosePopup();\n  }, [onClosePopup]);\n  const createOption = useCallback(({\n    icon,\n    text,\n    onClick\n  }) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListItem, {\n    className: classes.item,\n    button: true,\n    onClick: () => handleClick(onClick),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    classes: {\n      root: classes.listItemIcon\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, icon), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Divider, {\n    style: {\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  })), [handleClick, classes]);\n  return /*#__PURE__*/React.createElement(List, {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, createOption({\n    icon: /*#__PURE__*/React.createElement(LogoutIcon, {\n      size: 18,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }\n    }),\n    text: t('logout'),\n\n    onClick() {\n      dispatch(AuthActions.logout());\n    }\n\n  }));\n};\n\nUserMenu.propTypes = {\n  onClosePopup: PropTypes.func\n};\nUserMenu.defaultProps = {\n  onClosePopup() {}\n\n};\nexport default UserMenu;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/src/layouts/MainLayout/components/Navbar/UserMenu/UserMenu.js"],"names":["React","useCallback","useDispatch","PropTypes","Divider","List","ListItem","ListItemIcon","ListItemText","useT","AuthActions","LogoutIcon","useStyles","UserMenu","props","onClosePopup","dispatch","classes","t","handleClick","onClick","createOption","icon","text","item","root","listItemIcon","margin","container","logout","propTypes","func","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AAEA,SAASC,IAAT,QAAqB,oBAArB;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,OAAOC,UAAP,MAAuB,+CAAvB;AAEA,OAAOC,SAAP,MAAsB,UAAtB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,QAAM;AAAEC,IAAAA;AAAF,MAAmBD,KAAzB;AAEA,QAAME,QAAQ,GAAGf,WAAW,CAACC,WAAW,EAAZ,EAAgB,EAAhB,CAA5B;AAEA,QAAMe,OAAO,GAAGL,SAAS,EAAzB;AAEA,QAAMM,CAAC,GAAGT,IAAI,EAAd;AAEA,QAAMU,WAAW,GAAGlB,WAAW,CAC5BmB,OAAD,IAAa;AACXA,IAAAA,OAAO;AACPL,IAAAA,YAAY;AACb,GAJ4B,EAK7B,CAACA,YAAD,CAL6B,CAA/B;AAQA,QAAMM,YAAY,GAAGpB,WAAW,CAC9B,CAAC;AACCqB,IAAAA,IADD;AACOC,IAAAA,IADP;AACaH,IAAAA;AADb,GAAD,kBAGE,uDACE,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAGH,OAAO,CAACO,IAA9B;AAAqC,IAAA,MAAM,MAA3C;AAA4C,IAAA,OAAO,EAAG,MAAML,WAAW,CAACC,OAAD,CAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAG;AAAEK,MAAAA,IAAI,EAAER,OAAO,CAACS;AAAhB,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,IADH,CADF,eAIE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAGC,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,eAOE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAG;AAAEI,MAAAA,MAAM,EAAE;AAAV,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CAJ4B,EAc9B,CAACR,WAAD,EAAcF,OAAd,CAd8B,CAAhC;AAiBA,sBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAGA,OAAO,CAACW,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,YAAY,CAAC;AACZC,IAAAA,IAAI,eAAE,oBAAC,UAAD;AAAY,MAAA,IAAI,EAAG,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADM;AAEZC,IAAAA,IAAI,EAAEL,CAAC,CAAC,QAAD,CAFK;;AAGZE,IAAAA,OAAO,GAAI;AACTJ,MAAAA,QAAQ,CAACN,WAAW,CAACmB,MAAZ,EAAD,CAAR;AACD;;AALW,GAAD,CADf,CADF;AAWD,CA7CD;;AA+CAhB,QAAQ,CAACiB,SAAT,GAAqB;AAAEf,EAAAA,YAAY,EAAEZ,SAAS,CAAC4B;AAA1B,CAArB;AAEAlB,QAAQ,CAACmB,YAAT,GAAwB;AAAEjB,EAAAA,YAAY,GAAI,CAAE;;AAApB,CAAxB;AAEA,eAAeF,QAAf","sourcesContent":["import React, { useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\n\nimport PropTypes from 'prop-types'\n\nimport Divider from '@material-ui/core/Divider'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\n\nimport { useT } from '@britania-crm/i18n'\nimport { AuthActions } from '@britania-crm/stores/auth'\nimport LogoutIcon from '@britania-crm/web-components/Icons/LogoutIcon'\n\nimport useStyles from './styles'\n\nconst UserMenu = (props) => {\n  const { onClosePopup } = props\n\n  const dispatch = useCallback(useDispatch(), [])\n\n  const classes = useStyles()\n\n  const t = useT()\n\n  const handleClick = useCallback(\n    (onClick) => {\n      onClick()\n      onClosePopup()\n    },\n    [onClosePopup]\n  )\n\n  const createOption = useCallback(\n    ({\n      icon, text, onClick\n    }) => (\n      <>\n        <ListItem className={ classes.item } button onClick={ () => handleClick(onClick) }>\n          <ListItemIcon classes={ { root: classes.listItemIcon } }>\n            {icon}\n          </ListItemIcon>\n          <ListItemText primary={ text } />\n        </ListItem>\n        <Divider style={ { margin: 0 } } />\n      </>\n    ),\n    [handleClick, classes]\n  )\n\n  return (\n    <List className={ classes.container }>\n      {createOption({\n        icon: <LogoutIcon size={ 18 } />,\n        text: t('logout'),\n        onClick () {\n          dispatch(AuthActions.logout())\n        }\n      })}\n    </List>\n  )\n}\n\nUserMenu.propTypes = { onClosePopup: PropTypes.func }\n\nUserMenu.defaultProps = { onClosePopup () {} }\n\nexport default UserMenu\n"]},"metadata":{},"sourceType":"module"}