{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/components/RadioGroup/RadioGroupStyled.js\";\nimport React, { forwardRef, useCallback, memo } from 'react';\nimport PropTypes from 'prop-types';\nimport isBoolean from 'lodash/isBoolean';\nimport map from 'lodash/map';\nimport Box from '@material-ui/core/Box';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Brightness1Icon from '@material-ui/icons/Brightness1';\nimport CircleCheckedFilled from '@material-ui/icons/CheckCircle';\nimport InfoIcon from '@material-ui/icons/Info';\nimport { colors } from '@britania-crm/styles';\nimport { areEqual } from '@britania-crm/utils/memo';\nimport { Container, Label, FormControlLabelStyled, RadioStyled } from './styles';\nconst RadioGroupStyled = forwardRef((props, fieldRef) => {\n  const {\n    label,\n    value,\n    options,\n    onChange,\n    clearable,\n    idKey,\n    valueKey,\n    row,\n    error,\n    required,\n    disabled,\n    ...rest\n  } = props;\n  const handleChange = useCallback(event => {\n    if (isBoolean(event.target.checked)) {\n      let eventValue = event.target.value;\n      const booleanAsString = eventValue === 'true' || eventValue === 'false';\n\n      if (booleanAsString) {\n        eventValue = eventValue === 'true';\n      }\n\n      if (clearable && value === eventValue) {\n        onChange({ ...event,\n          target: { ...event.target,\n            value: booleanAsString ? null : ''\n          }\n        });\n      } else {\n        onChange({ ...event,\n          target: { ...event.target,\n            value: eventValue\n          }\n        });\n      }\n    }\n  }, [clearable, onChange, value]);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, label && /*#__PURE__*/React.createElement(Label, {\n    color: error ? 'error' : undefined,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, label, required ? /*#__PURE__*/React.createElement(Label, {\n    component: \"span\",\n    color: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 28\n    }\n  }, \" *\") : ''), /*#__PURE__*/React.createElement(RadioGroup, Object.assign({\n    ref: fieldRef,\n    row: row,\n    value: String(value),\n    onClick: handleChange\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }), map(options, option => /*#__PURE__*/React.createElement(FormControlLabelStyled, {\n    value: String(option[idKey]),\n    label: option[valueKey],\n    key: `option-${option[idKey]}`,\n    disabled: disabled,\n    control: /*#__PURE__*/React.createElement(RadioStyled, {\n      color: \"primary\",\n      icon: /*#__PURE__*/React.createElement(Brightness1Icon, {\n        htmlColor: colors.grey4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 24\n        }\n      }),\n      checkedIcon: /*#__PURE__*/React.createElement(CircleCheckedFilled, {\n        htmlColor: colors.primary.main,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 31\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }))), !!error && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginBottom: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormHelperText, {\n    error: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    style: {\n      color: colors.error.main\n    },\n    component: \"span\",\n    display: \"flex\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InfoIcon, {\n    fontSize: \"small\",\n    style: {\n      marginRight: '8px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }), ' ', error))));\n});\nRadioGroupStyled.propTypes = {\n  label: PropTypes.string,\n  value: PropTypes.any,\n  options: PropTypes.array,\n  row: PropTypes.bool,\n  clearable: PropTypes.bool,\n  onChange: PropTypes.func,\n  idKey: PropTypes.string,\n  valueKey: PropTypes.string,\n  error: PropTypes.string,\n  required: PropTypes.bool,\n  disabled: PropTypes.bool\n};\nRadioGroupStyled.defaultProps = {\n  label: null,\n  value: false,\n  options: [],\n  row: true,\n  clearable: false,\n\n  onChange() {},\n\n  idKey: 'id',\n  valueKey: 'name',\n  error: null,\n  required: false,\n  disabled: false\n};\nexport default memo(RadioGroupStyled, areEqual);","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/components/RadioGroup/RadioGroupStyled.js"],"names":["React","forwardRef","useCallback","memo","PropTypes","isBoolean","map","Box","FormHelperText","RadioGroup","Brightness1Icon","CircleCheckedFilled","InfoIcon","colors","areEqual","Container","Label","FormControlLabelStyled","RadioStyled","RadioGroupStyled","props","fieldRef","label","value","options","onChange","clearable","idKey","valueKey","row","error","required","disabled","rest","handleChange","event","target","checked","eventValue","booleanAsString","undefined","String","option","grey4","primary","main","marginBottom","color","marginRight","propTypes","string","any","array","bool","func","defaultProps"],"mappings":"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","sourcesContent":["import React, {\n  forwardRef,\n  useCallback,\n  memo\n} from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport isBoolean from 'lodash/isBoolean'\nimport map from 'lodash/map'\n\nimport Box from '@material-ui/core/Box'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport Brightness1Icon from '@material-ui/icons/Brightness1'\nimport CircleCheckedFilled from '@material-ui/icons/CheckCircle'\nimport InfoIcon from '@material-ui/icons/Info'\n\nimport { colors } from '@britania-crm/styles'\nimport { areEqual } from '@britania-crm/utils/memo'\n\nimport {\n  Container,\n  Label,\n  FormControlLabelStyled,\n  RadioStyled\n} from './styles'\n\nconst RadioGroupStyled = forwardRef((props, fieldRef) => {\n  const {\n    label,\n    value,\n    options,\n    onChange,\n    clearable,\n    idKey,\n    valueKey,\n    row,\n    error,\n    required,\n    disabled,\n    ...rest\n  } = props\n\n  const handleChange = useCallback((event) => {\n    if (isBoolean(event.target.checked)) {\n      let eventValue = event.target.value\n\n      const booleanAsString = eventValue === 'true' || eventValue === 'false'\n      if (booleanAsString) {\n        eventValue = eventValue === 'true'\n      }\n\n      if (clearable && value === eventValue) {\n        onChange({ ...event, target: { ...event.target, value: booleanAsString ? null : '' } })\n      } else {\n        onChange({ ...event, target: { ...event.target, value: eventValue } })\n      }\n    }\n  }, [clearable, onChange, value])\n\n  return (\n    <Container>\n      {label && <Label color={ error ? 'error' : undefined }>\n        {label}{required ? <Label component=\"span\" color=\"error\"> *</Label> : ''}\n      </Label>}\n      <RadioGroup\n        ref={ fieldRef }\n        row={ row }\n        value={ String(value) }\n        onClick={ handleChange }\n        { ...rest }\n      >\n        {map(options, (option) =>\n          <FormControlLabelStyled\n            value={ String(option[idKey]) }\n            label={ option[valueKey] }\n            key={ `option-${ option[idKey] }` }\n            disabled={ disabled }\n            control={ (\n              <RadioStyled\n                color=\"primary\"\n                icon={ <Brightness1Icon htmlColor={ colors.grey4 } /> }\n                checkedIcon={ <CircleCheckedFilled htmlColor={ colors.primary.main } /> }\n              />\n            ) }\n          />\n        ) }\n      </RadioGroup>\n      {!!error && (\n        <div style={ { marginBottom: 10 } }>\n          <FormHelperText error>\n            <Box style={ { color: colors.error.main } } component=\"span\" display=\"flex\" alignItems=\"center\">\n              <InfoIcon fontSize=\"small\" style={ { marginRight: '8px' } } />\n              {' '}{ error }\n            </Box>\n          </FormHelperText>\n        </div>\n      )}\n    </Container>\n  )\n})\n\nRadioGroupStyled.propTypes = {\n  label: PropTypes.string,\n  value: PropTypes.any,\n  options: PropTypes.array,\n  row: PropTypes.bool,\n  clearable: PropTypes.bool,\n  onChange: PropTypes.func,\n  idKey: PropTypes.string,\n  valueKey: PropTypes.string,\n  error: PropTypes.string,\n  required: PropTypes.bool,\n  disabled: PropTypes.bool\n}\n\nRadioGroupStyled.defaultProps = {\n  label: null,\n  value: false,\n  options: [],\n  row: true,\n  clearable: false,\n  onChange () {},\n  idKey: 'id',\n  valueKey: 'name',\n  error: null,\n  required: false,\n  disabled: false\n}\n\nexport default memo(RadioGroupStyled, areEqual)\n"]},"metadata":{},"sourceType":"module"}