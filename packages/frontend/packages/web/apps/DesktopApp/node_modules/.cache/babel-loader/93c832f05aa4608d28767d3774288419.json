{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nexports.default = getConfig;\n/**\n * Default config for the offline queue.\n *\n * @param {String} stateName Redux store key for offline queue state.\n * @param {Array<String>} additionalTriggers An array of action types\n * that will trigger the offline queue to dispatch its actions if possible.\n */\n\nvar DEFAULT_CONFIG = {\n  stateName: 'offline',\n  additionalTriggers: []\n  /**\n   * Returns a configuration options with passed config or default values.\n   *\n   * @param {Object} userConfig A config object that can be used to override default values.\n   */\n\n};\n\nfunction getConfig() {\n  var userConfig = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return _extends({}, DEFAULT_CONFIG, userConfig);\n}","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/node_modules/redux-offline-queue/lib/config.js"],"names":["Object","defineProperty","exports","value","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","default","getConfig","DEFAULT_CONFIG","stateName","additionalTriggers","userConfig","undefined"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;;AAIA,IAAIC,QAAQ,GAAGJ,MAAM,CAACK,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAAE,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,QAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,SAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,UAAIV,MAAM,CAACY,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEL,QAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,SAAOL,MAAP;AAAgB,CAAhQ;;AAEAJ,OAAO,CAACa,OAAR,GAAkBC,SAAlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,cAAc,GAAG;AACnBC,EAAAA,SAAS,EAAE,SADQ;AAEnBC,EAAAA,kBAAkB,EAAE;AAEpB;AACF;AACA;AACA;AACA;;AARqB,CAArB;;AASE,SAASH,SAAT,GAAqB;AACrB,MAAII,UAAU,GAAGZ,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBa,SAAzC,GAAqDb,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAArF;AAEA,SAAOJ,QAAQ,CAAC,EAAD,EAAKa,cAAL,EAAqBG,UAArB,CAAf;AACD","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.default = getConfig;\n/**\n * Default config for the offline queue.\n *\n * @param {String} stateName Redux store key for offline queue state.\n * @param {Array<String>} additionalTriggers An array of action types\n * that will trigger the offline queue to dispatch its actions if possible.\n */\nvar DEFAULT_CONFIG = {\n  stateName: 'offline',\n  additionalTriggers: []\n\n  /**\n   * Returns a configuration options with passed config or default values.\n   *\n   * @param {Object} userConfig A config object that can be used to override default values.\n   */\n};function getConfig() {\n  var userConfig = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  return _extends({}, DEFAULT_CONFIG, userConfig);\n}"]},"metadata":{},"sourceType":"script"}