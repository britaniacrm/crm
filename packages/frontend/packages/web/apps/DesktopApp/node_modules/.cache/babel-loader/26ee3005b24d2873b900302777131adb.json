{"ast":null,"code":"import { useMemo } from 'react';\nimport axios from 'axios';\nimport filter from 'lodash/fp/filter';\nimport flow from 'lodash/fp/flow';\nimport map from 'lodash/fp/map';\nimport useFetch from '../../hooks/useFetch';\nconst api = axios.create({\n  baseURL: 'https://olinda.bcb.gov.br/olinda/servico/CCR/versao/v1/odata/'\n});\n\nconst useBancoCentralApi = (url, axiosParams, swrConfigs) => useFetch(api, url, axiosParams, swrConfigs);\n\nconst useBanksList = () => {\n  const {\n    data,\n    ...rest\n  } = useBancoCentralApi('InstituicoesFinanceirasAutorizadas', {\n    params: {\n      '%24format': 'json'\n    }\n  }, {\n    revalidateOnFocus: false\n  });\n  const formatted = useMemo(() => flow(filter(item => item.Pais === 'Brasil'), map(item => ({ ...item,\n    label: `${item.CodigoSicap} - ${item.Nome}`\n  })))(data === null || data === void 0 ? void 0 : data.value), [data]);\n  return {\n    data: formatted,\n    ...rest\n  };\n};\n\nexport { useBanksList };\nexport default api;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/core/services/apis/bancoCentralApi/api.js"],"names":["useMemo","axios","filter","flow","map","useFetch","api","create","baseURL","useBancoCentralApi","url","axiosParams","swrConfigs","useBanksList","data","rest","params","revalidateOnFocus","formatted","item","Pais","label","CodigoSicap","Nome","value"],"mappings":"AAAA,SAASA,OAAT,QAAwB,OAAxB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,OAAOC,GAAP,MAAgB,eAAhB;AAEA,OAAOC,QAAP,MAAqB,sBAArB;AAEA,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAN,CAAa;AAAEC,EAAAA,OAAO,EAAE;AAAX,CAAb,CAAZ;;AAEA,MAAMC,kBAAkB,GAAG,CAACC,GAAD,EAAMC,WAAN,EAAmBC,UAAnB,KAAkCP,QAAQ,CAACC,GAAD,EAAMI,GAAN,EAAWC,WAAX,EAAwBC,UAAxB,CAArE;;AAEA,MAAMC,YAAY,GAAG,MAAM;AACzB,QAAM;AAAEC,IAAAA,IAAF;AAAQ,OAAGC;AAAX,MAAoBN,kBAAkB,CAC1C,oCAD0C,EAE1C;AAAEO,IAAAA,MAAM,EAAE;AAAE,mBAAa;AAAf;AAAV,GAF0C,EAG1C;AAAEC,IAAAA,iBAAiB,EAAE;AAArB,GAH0C,CAA5C;AAMA,QAAMC,SAAS,GAAGlB,OAAO,CACvB,MAAMG,IAAI,CACRD,MAAM,CAAEiB,IAAD,IAAUA,IAAI,CAACC,IAAL,KAAc,QAAzB,CADE,EAERhB,GAAG,CAAEe,IAAD,KAAW,EACb,GAAGA,IADU;AAEbE,IAAAA,KAAK,EAAG,GAAGF,IAAI,CAACG,WAAa,MAAMH,IAAI,CAACI,IAAM;AAFjC,GAAX,CAAD,CAFK,CAAJ,CAMJT,IANI,aAMJA,IANI,uBAMJA,IAAI,CAAEU,KANF,CADiB,EAQvB,CAACV,IAAD,CARuB,CAAzB;AAWA,SAAO;AAAEA,IAAAA,IAAI,EAAEI,SAAR;AAAmB,OAAGH;AAAtB,GAAP;AACD,CAnBD;;AAqBA,SAASF,YAAT;AAEA,eAAeP,GAAf","sourcesContent":["import { useMemo } from 'react'\n\nimport axios from 'axios'\n\nimport filter from 'lodash/fp/filter'\nimport flow from 'lodash/fp/flow'\nimport map from 'lodash/fp/map'\n\nimport useFetch from '../../hooks/useFetch'\n\nconst api = axios.create({ baseURL: 'https://olinda.bcb.gov.br/olinda/servico/CCR/versao/v1/odata/' })\n\nconst useBancoCentralApi = (url, axiosParams, swrConfigs) => useFetch(api, url, axiosParams, swrConfigs)\n\nconst useBanksList = () => {\n  const { data, ...rest } = useBancoCentralApi(\n    'InstituicoesFinanceirasAutorizadas',\n    { params: { '%24format': 'json' } },\n    { revalidateOnFocus: false }\n  )\n\n  const formatted = useMemo(\n    () => flow(\n      filter((item) => item.Pais === 'Brasil'),\n      map((item) => ({\n        ...item,\n        label: `${ item.CodigoSicap } - ${ item.Nome }`\n      }))\n    )(data?.value),\n    [data]\n  )\n\n  return { data: formatted, ...rest }\n}\n\nexport { useBanksList }\n\nexport default api\n"]},"metadata":{},"sourceType":"module"}