{"ast":null,"code":"import { put, call, takeLatest } from 'redux-saga/effects';\nimport { MSG022, MSG023, MSG024, MSG003, MSG004, MSG028, MSG032, MSG0271 } from '@britania-crm/constants/feedbackMessages.constants';\nimport { errorTypes } from '@britania-crm/constants/workflow.constants';\nimport api from '@britania-crm/services/apis/crmApi';\nimport { getAllWorkflows, getOneWorkflow, getWorkflowTypes, createWorkflow, deactivateWorkflow, updateWorkflow } from '@britania-crm/services/apis/crmApi/resources/workflow.service';\nimport { AppActions } from '../app/app.actions';\nimport { WorkflowTypes, WorkflowActions } from './workflow.actions';\n\nfunction* doGetAllWorkflows({\n  params\n}) {\n  try {\n    const response = yield call(getAllWorkflows, params);\n    yield put(WorkflowActions.setAllWorkflowsSuccess(response));\n  } catch (error) {\n    yield put(AppActions.addAlert({\n      type: 'error',\n      message: MSG022\n    }));\n    console.error(error);\n  }\n}\n\nfunction* doGetOneWorkflow({\n  id\n}) {\n  try {\n    const response = yield call(getOneWorkflow, id);\n    yield put(WorkflowActions.setOneWorkflowSuccess(response));\n  } catch (error) {\n    yield put(AppActions.addAlert({\n      type: 'error',\n      message: MSG023\n    }));\n  }\n}\n\nfunction* doGetWorkflowTypes() {\n  try {\n    const response = yield call(getWorkflowTypes);\n    yield put(WorkflowActions.setWorkflowTypes(response));\n  } catch (error) {\n    yield put(AppActions.addAlert({\n      type: 'error',\n      message: MSG024\n    }));\n  }\n}\n\nfunction* doCreateWorkflow({\n  params,\n  onSuccess\n}) {\n  try {\n    yield call(createWorkflow, params);\n    yield put(AppActions.addAlert({\n      type: 'success',\n      message: MSG003\n    }));\n    yield call(onSuccess);\n  } catch ({\n    response\n  }) {\n    var _response$data;\n\n    yield put(AppActions.addAlert({\n      type: 'error',\n      message: errorTypes[response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.errorCode] || MSG028\n    }));\n  }\n}\n\nfunction* doUpdateWorkflow({\n  params,\n  id,\n  onSuccess\n}) {\n  try {\n    yield put(WorkflowActions.updateLoaderState(true, 'save'));\n    yield call(updateWorkflow, params, id);\n    yield put(AppActions.addAlert({\n      type: 'success',\n      message: MSG004\n    }));\n    yield call(onSuccess);\n  } catch ({\n    response\n  }) {\n    var _response$data2;\n\n    yield put(AppActions.addAlert({\n      type: 'error',\n      message: errorTypes[response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.errorCode] || MSG028\n    }));\n  } finally {\n    yield put(WorkflowActions.updateLoaderState(false, 'save'));\n  }\n}\n\nfunction* doDeactivateWorkflow({\n  id,\n  onSuccess\n}) {\n  try {\n    yield put(WorkflowActions.updateLoaderState(true, 'inactivate'));\n    yield call(deactivateWorkflow, id);\n    yield call(onSuccess);\n    yield put(AppActions.addAlert({\n      type: 'success',\n      message: MSG004\n    }));\n  } catch (error) {\n    yield put(AppActions.addAlert({\n      type: 'error',\n      message: MSG032\n    }));\n  } finally {\n    yield put(WorkflowActions.updateLoaderState(false, 'inactivate'));\n  }\n}\n\nfunction* doAnswerWorkflow({\n  baseUrl,\n  answer,\n  onSuccess = () => {},\n  onError = () => {}\n}) {\n  try {\n    yield call(api.put, `${baseUrl}/workflow`, answer);\n    yield call(onSuccess);\n    yield put(AppActions.addAlert({\n      type: 'success',\n      message: MSG004\n    }));\n  } catch (error) {\n    var _error$response;\n\n    if ((error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) !== 403) {\n      var _error$response2, _error$response2$data;\n\n      yield put(AppActions.addAlert({\n        type: 'error',\n        message: error === null || error === void 0 ? void 0 : (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message\n      }));\n    } else {\n      yield put(AppActions.addAlert({\n        type: 'error',\n        message: MSG0271\n      }));\n    }\n\n    yield call(onError, error);\n  }\n}\n\nexport default [takeLatest(WorkflowTypes.GET_ALL_WORKFLOWS, doGetAllWorkflows), takeLatest(WorkflowTypes.GET_ONE_WORKFLOW, doGetOneWorkflow), takeLatest(WorkflowTypes.GET_WORKFLOW_TYPES, doGetWorkflowTypes), takeLatest(WorkflowTypes.CREATE_WORKFLOW, doCreateWorkflow), takeLatest(WorkflowTypes.DEACTIVATE_WORKFLOW, doDeactivateWorkflow), takeLatest(WorkflowTypes.UPDATE_WORKFLOW, doUpdateWorkflow), takeLatest(WorkflowTypes.ANSWER_WORKFLOW, doAnswerWorkflow)];","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/core/stores/workflow/workflow.sagas.js"],"names":["put","call","takeLatest","MSG022","MSG023","MSG024","MSG003","MSG004","MSG028","MSG032","MSG0271","errorTypes","api","getAllWorkflows","getOneWorkflow","getWorkflowTypes","createWorkflow","deactivateWorkflow","updateWorkflow","AppActions","WorkflowTypes","WorkflowActions","doGetAllWorkflows","params","response","setAllWorkflowsSuccess","error","addAlert","type","message","console","doGetOneWorkflow","id","setOneWorkflowSuccess","doGetWorkflowTypes","setWorkflowTypes","doCreateWorkflow","onSuccess","data","errorCode","doUpdateWorkflow","updateLoaderState","doDeactivateWorkflow","doAnswerWorkflow","baseUrl","answer","onError","status","GET_ALL_WORKFLOWS","GET_ONE_WORKFLOW","GET_WORKFLOW_TYPES","CREATE_WORKFLOW","DEACTIVATE_WORKFLOW","UPDATE_WORKFLOW","ANSWER_WORKFLOW"],"mappings":"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","sourcesContent":["import {\n  put,\n  call,\n  takeLatest\n} from 'redux-saga/effects'\n\nimport {\n  MSG022,\n  MSG023,\n  MSG024,\n  MSG003,\n  MSG004,\n  MSG028,\n  MSG032,\n  MSG0271\n} from '@britania-crm/constants/feedbackMessages.constants'\nimport { errorTypes } from '@britania-crm/constants/workflow.constants'\nimport api from '@britania-crm/services/apis/crmApi'\nimport {\n  getAllWorkflows,\n  getOneWorkflow,\n  getWorkflowTypes,\n  createWorkflow,\n  deactivateWorkflow,\n  updateWorkflow\n} from '@britania-crm/services/apis/crmApi/resources/workflow.service'\n\nimport { AppActions } from '../app/app.actions'\nimport {\n  WorkflowTypes,\n  WorkflowActions\n} from './workflow.actions'\n\nfunction* doGetAllWorkflows ({ params }) {\n  try {\n    const response = yield call(getAllWorkflows, params)\n\n    yield put(WorkflowActions.setAllWorkflowsSuccess(response))\n  } catch (error) {\n    yield put(AppActions.addAlert({ type: 'error', message: MSG022 }))\n    console.error(error)\n  }\n}\n\nfunction* doGetOneWorkflow ({ id }) {\n  try {\n    const response = yield call(getOneWorkflow, id)\n\n    yield put(WorkflowActions.setOneWorkflowSuccess(response))\n  } catch (error) {\n    yield put(AppActions.addAlert({ type: 'error', message: MSG023 }))\n  }\n}\n\nfunction* doGetWorkflowTypes () {\n  try {\n    const response = yield call(getWorkflowTypes)\n\n    yield put(WorkflowActions.setWorkflowTypes(response))\n  } catch (error) {\n    yield put(AppActions.addAlert({ type: 'error', message: MSG024 }))\n  }\n}\n\nfunction* doCreateWorkflow ({ params, onSuccess }) {\n  try {\n    yield call(createWorkflow, params)\n\n    yield put(AppActions.addAlert({ type: 'success', message: MSG003 }))\n\n    yield call(onSuccess)\n  } catch ({ response }) {\n    yield put(AppActions.addAlert({ type: 'error', message: errorTypes[response?.data?.errorCode] || MSG028 }))\n  }\n}\n\nfunction* doUpdateWorkflow ({\n  params, id, onSuccess\n}) {\n  try {\n    yield put(WorkflowActions.updateLoaderState(true, 'save'))\n    yield call(updateWorkflow, params, id)\n\n    yield put(AppActions.addAlert({ type: 'success', message: MSG004 }))\n\n    yield call(onSuccess)\n  } catch ({ response }) {\n    yield put(AppActions.addAlert({ type: 'error', message: errorTypes[response?.data?.errorCode] || MSG028 }))\n  } finally {\n    yield put(WorkflowActions.updateLoaderState(false, 'save'))\n  }\n}\n\nfunction* doDeactivateWorkflow ({ id, onSuccess }) {\n  try {\n    yield put(WorkflowActions.updateLoaderState(true, 'inactivate'))\n    yield call(deactivateWorkflow, id)\n\n    yield call(onSuccess)\n    yield put(AppActions.addAlert({ type: 'success', message: MSG004 }))\n  } catch (error) {\n    yield put(AppActions.addAlert({ type: 'error', message: MSG032 }))\n  } finally {\n    yield put(WorkflowActions.updateLoaderState(false, 'inactivate'))\n  }\n}\n\nfunction* doAnswerWorkflow ({\n  baseUrl, answer, onSuccess = () => {}, onError = () => {}\n}) {\n  try {\n    yield call(api.put, `${ baseUrl }/workflow`, answer)\n    yield call(onSuccess)\n    yield put(AppActions.addAlert({ type: 'success', message: MSG004 }))\n  } catch (error) {\n    if (error?.response?.status !== 403) {\n      yield put(AppActions.addAlert({ type: 'error', message: error?.response?.data?.message }))\n    } else {\n      yield put(AppActions.addAlert({ type: 'error', message: MSG0271 }))\n    }\n    yield call(onError, error)\n  }\n}\n\nexport default [\n  takeLatest(WorkflowTypes.GET_ALL_WORKFLOWS, doGetAllWorkflows),\n  takeLatest(WorkflowTypes.GET_ONE_WORKFLOW, doGetOneWorkflow),\n  takeLatest(WorkflowTypes.GET_WORKFLOW_TYPES, doGetWorkflowTypes),\n  takeLatest(WorkflowTypes.CREATE_WORKFLOW, doCreateWorkflow),\n  takeLatest(WorkflowTypes.DEACTIVATE_WORKFLOW, doDeactivateWorkflow),\n  takeLatest(WorkflowTypes.UPDATE_WORKFLOW, doUpdateWorkflow),\n  takeLatest(WorkflowTypes.ANSWER_WORKFLOW, doAnswerWorkflow)\n]\n"]},"metadata":{},"sourceType":"module"}