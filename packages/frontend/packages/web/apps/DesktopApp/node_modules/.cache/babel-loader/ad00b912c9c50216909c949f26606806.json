{"ast":null,"code":"import moment from 'moment/moment';\nimport * as Yup from 'yup';\nimport { dateBackFormat } from '@britania-crm/utils/date';\nimport date from './date.validator';\nimport minDate from './minDate.validator';\nexport default (({\n  t,\n  minFrom,\n  minTo\n}) => YupInstance => {\n  let fromSchema = date({\n    t\n  })(Yup.string());\n\n  if (minFrom) {\n    fromSchema = minDate({\n      t,\n      minDate: minFrom\n    })(fromSchema);\n  }\n\n  let toSchema = date({\n    t\n  })(Yup.string());\n\n  if (minTo) {\n    toSchema = minDate({\n      t,\n      minDate: minTo\n    })(toSchema);\n  }\n\n  return YupInstance.shape({\n    from: fromSchema,\n    to: toSchema\n  }).nullable().test('valid range', t('invalid date range'), value => {\n    if (value.from && value.to) {\n      const fromMoment = moment(value.from, dateBackFormat);\n      const toMoment = moment(value.to, dateBackFormat);\n\n      if (fromMoment.isValid() && toMoment.isValid() && fromMoment.isAfter(toMoment)) {\n        return false;\n      }\n    }\n\n    return true;\n  });\n});","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/core/forms/validators/dateRange.validator.js"],"names":["moment","Yup","dateBackFormat","date","minDate","t","minFrom","minTo","YupInstance","fromSchema","string","toSchema","shape","from","to","nullable","test","value","fromMoment","toMoment","isValid","isAfter"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,eAAnB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AAEA,SAASC,cAAT,QAA+B,0BAA/B;AAEA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AAEA,gBAAe,CAAC;AACdC,EAAAA,CADc;AACXC,EAAAA,OADW;AACFC,EAAAA;AADE,CAAD,KAERC,WAAD,IAAiB;AACrB,MAAIC,UAAU,GAAGN,IAAI,CAAC;AAAEE,IAAAA;AAAF,GAAD,CAAJ,CAAYJ,GAAG,CAACS,MAAJ,EAAZ,CAAjB;;AACA,MAAIJ,OAAJ,EAAa;AACXG,IAAAA,UAAU,GAAGL,OAAO,CAAC;AAAEC,MAAAA,CAAF;AAAKD,MAAAA,OAAO,EAAEE;AAAd,KAAD,CAAP,CAAiCG,UAAjC,CAAb;AACD;;AAED,MAAIE,QAAQ,GAAGR,IAAI,CAAC;AAAEE,IAAAA;AAAF,GAAD,CAAJ,CAAYJ,GAAG,CAACS,MAAJ,EAAZ,CAAf;;AACA,MAAIH,KAAJ,EAAW;AACTI,IAAAA,QAAQ,GAAGP,OAAO,CAAC;AAAEC,MAAAA,CAAF;AAAKD,MAAAA,OAAO,EAAEG;AAAd,KAAD,CAAP,CAA+BI,QAA/B,CAAX;AACD;;AAED,SAAOH,WAAW,CACfI,KADI,CACE;AACLC,IAAAA,IAAI,EAAEJ,UADD;AAELK,IAAAA,EAAE,EAAEH;AAFC,GADF,EAKJI,QALI,GAMJC,IANI,CAOH,aAPG,EAQHX,CAAC,CAAC,oBAAD,CARE,EASFY,KAAD,IAAW;AACT,QAAIA,KAAK,CAACJ,IAAN,IAAcI,KAAK,CAACH,EAAxB,EAA4B;AAC1B,YAAMI,UAAU,GAAGlB,MAAM,CAACiB,KAAK,CAACJ,IAAP,EAAaX,cAAb,CAAzB;AACA,YAAMiB,QAAQ,GAAGnB,MAAM,CAACiB,KAAK,CAACH,EAAP,EAAWZ,cAAX,CAAvB;;AAEA,UACEgB,UAAU,CAACE,OAAX,MACAD,QAAQ,CAACC,OAAT,EADA,IAEAF,UAAU,CAACG,OAAX,CAAmBF,QAAnB,CAHF,EAIE;AACA,eAAO,KAAP;AACD;AACF;;AACD,WAAO,IAAP;AACD,GAvBE,CAAP;AAyBD,CAtCD","sourcesContent":["import moment from 'moment/moment'\nimport * as Yup from 'yup'\n\nimport { dateBackFormat } from '@britania-crm/utils/date'\n\nimport date from './date.validator'\nimport minDate from './minDate.validator'\n\nexport default ({\n  t, minFrom, minTo\n}) => (YupInstance) => {\n  let fromSchema = date({ t })(Yup.string())\n  if (minFrom) {\n    fromSchema = minDate({ t, minDate: minFrom })(fromSchema)\n  }\n\n  let toSchema = date({ t })(Yup.string())\n  if (minTo) {\n    toSchema = minDate({ t, minDate: minTo })(toSchema)\n  }\n\n  return YupInstance\n    .shape({\n      from: fromSchema,\n      to: toSchema\n    })\n    .nullable()\n    .test(\n      'valid range',\n      t('invalid date range'),\n      (value) => {\n        if (value.from && value.to) {\n          const fromMoment = moment(value.from, dateBackFormat)\n          const toMoment = moment(value.to, dateBackFormat)\n\n          if (\n            fromMoment.isValid() &&\n            toMoment.isValid() &&\n            fromMoment.isAfter(toMoment)\n          ) {\n            return false\n          }\n        }\n        return true\n      }\n    )\n}\n"]},"metadata":{},"sourceType":"module"}