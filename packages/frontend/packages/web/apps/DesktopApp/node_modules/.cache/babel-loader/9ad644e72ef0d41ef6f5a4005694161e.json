{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/customers/modals/NewCommercialReferenceModal/NewCommercialReferenceModal.js\";\nimport React, { useCallback, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport isEmpty from 'lodash/isEmpty';\nimport Grid from '@material-ui/core/Grid';\nimport { useFormEffect } from '@britania-crm/forms';\nimport commercialReferenceSchema, { INITIAL_VALUES } from '@britania-crm/forms/schemas/customer/customerPreRegistration.commercialReference.schema';\nimport I18n, { useT } from '@britania-crm/i18n';\nimport { trimMask } from '@britania-crm/utils/formatters';\nimport Button from '@britania-crm/web-components/Button';\nimport Form from '@britania-crm/web-components/Form';\nimport InputPhone from '@britania-crm/web-components/InputPhone';\nimport InputText from '@britania-crm/web-components/InputText';\nimport Modal from '@britania-crm/web-components/Modal';\n\nconst NewCommercialReferenceModal = props => {\n  const {\n    id,\n    open,\n    handleClose,\n    onSubmit,\n    commercialReference\n  } = props;\n  const t = useT();\n  const formRef = useRef(null);\n  const handleSubmit = useCallback(values => {\n    onSubmit({ ...values,\n      phone: trimMask(values.phone || '')\n    });\n    handleClose();\n  }, [handleClose, onSubmit]);\n  useFormEffect(() => {\n    if (!isEmpty(commercialReference)) {\n      formRef.current.setData(commercialReference);\n    }\n  }, [commercialReference]);\n  return /*#__PURE__*/React.createElement(Modal, {\n    id: id,\n    open: open,\n    maxWidth: \"md\",\n    title: t('commercial reference', {\n      howMany: 1\n    }),\n    variant: \"space\",\n    fullWidth: true,\n    FooterComponent: () => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(I18n, {\n      as: Button,\n      onClick: handleClose,\n      color: \"secondary\",\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, \"cancel\"), /*#__PURE__*/React.createElement(I18n, {\n      as: Button,\n      onClick: () => formRef.current.submit(),\n      color: \"secondary\",\n      style: {\n        marginLeft: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, \"save\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    ref: formRef,\n    schemaConstructor: commercialReferenceSchema,\n    defaultValues: INITIAL_VALUES,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputText, {\n    name: \"name\",\n    label: t('name', {\n      howMany: 1\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputPhone, {\n    name: \"phone\",\n    label: t('phone', {\n      howMany: 1\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  })))));\n};\n\nNewCommercialReferenceModal.propTypes = {\n  id: PropTypes.string.isRequired,\n  open: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  commercialReference: PropTypes.object\n};\nNewCommercialReferenceModal.defaultProps = {\n  commercialReference: {}\n};\nexport default NewCommercialReferenceModal;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/customers/modals/NewCommercialReferenceModal/NewCommercialReferenceModal.js"],"names":["React","useCallback","useRef","PropTypes","isEmpty","Grid","useFormEffect","commercialReferenceSchema","INITIAL_VALUES","I18n","useT","trimMask","Button","Form","InputPhone","InputText","Modal","NewCommercialReferenceModal","props","id","open","handleClose","onSubmit","commercialReference","t","formRef","handleSubmit","values","phone","current","setData","howMany","submit","marginLeft","propTypes","string","isRequired","bool","func","object","defaultProps"],"mappings":"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","sourcesContent":["import React, {\n  useCallback,\n  useRef\n} from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport isEmpty from 'lodash/isEmpty'\n\nimport Grid from '@material-ui/core/Grid'\n\nimport { useFormEffect } from '@britania-crm/forms'\nimport commercialReferenceSchema, { INITIAL_VALUES } from '@britania-crm/forms/schemas/customer/customerPreRegistration.commercialReference.schema'\nimport I18n, { useT } from '@britania-crm/i18n'\nimport { trimMask } from '@britania-crm/utils/formatters'\nimport Button from '@britania-crm/web-components/Button'\nimport Form from '@britania-crm/web-components/Form'\nimport InputPhone from '@britania-crm/web-components/InputPhone'\nimport InputText from '@britania-crm/web-components/InputText'\nimport Modal from '@britania-crm/web-components/Modal'\n\nconst NewCommercialReferenceModal = (props) => {\n  const {\n    id,\n    open,\n    handleClose,\n    onSubmit,\n    commercialReference\n  } = props\n\n  const t = useT()\n  const formRef = useRef(null)\n\n  const handleSubmit = useCallback(\n    (values) => {\n      onSubmit({\n        ...values,\n        phone: trimMask(values.phone || '')\n      })\n      handleClose()\n    },\n    [handleClose, onSubmit]\n  )\n\n  useFormEffect(\n    () => {\n      if (!isEmpty(commercialReference)) {\n        formRef.current.setData(commercialReference)\n      }\n    },\n    [commercialReference]\n  )\n\n  return (\n    <Modal\n      id={ id }\n      open={ open }\n      maxWidth=\"md\"\n      title={ t('commercial reference', { howMany: 1 }) }\n      variant=\"space\"\n      fullWidth\n      FooterComponent={ () => (\n        <>\n          <I18n as={ Button }\n            onClick={ handleClose }\n            color=\"secondary\"\n            variant=\"outlined\"\n          >\n            cancel\n          </I18n>\n          <I18n as={ Button }\n            onClick={ () => formRef.current.submit() }\n            color=\"secondary\"\n            style={ { marginLeft: 10 } }\n          >\n            save\n          </I18n>\n        </>\n      ) }\n    >\n      <Form\n        ref={ formRef }\n        schemaConstructor={ commercialReferenceSchema }\n        defaultValues={ INITIAL_VALUES }\n        onSubmit={ handleSubmit }\n      >\n        <Grid container spacing={ 1 }>\n          <Grid item xs={ 12 } md={ 5 }>\n            <InputText\n              name=\"name\"\n              label={ t('name', { howMany: 1 }) }\n            />\n          </Grid>\n          <Grid item xs={ 12 } md={ 4 }>\n            <InputPhone\n              name=\"phone\"\n              label={ t('phone', { howMany: 1 }) }\n            />\n          </Grid>\n        </Grid>\n      </Form>\n    </Modal>\n  )\n}\n\nNewCommercialReferenceModal.propTypes = {\n  id: PropTypes.string.isRequired,\n  open: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  commercialReference: PropTypes.object\n}\n\nNewCommercialReferenceModal.defaultProps = { commercialReference: {} }\n\nexport default NewCommercialReferenceModal\n"]},"metadata":{},"sourceType":"module"}