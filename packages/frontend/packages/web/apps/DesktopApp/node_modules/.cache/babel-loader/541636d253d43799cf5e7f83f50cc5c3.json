{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/documentation/screens/DocumentationFormScreen/DocumentationFormScreen.js\";\nimport React, { useCallback, useMemo, useEffect, useRef, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport isEmpty from 'lodash/isEmpty';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { useFormEffect } from '@britania-crm/forms';\nimport documentationSchema, { INITIAL_VALUES } from '@britania-crm/forms/schemas/documentation/documentation.schema';\nimport I18n, { useT } from '@britania-crm/i18n';\nimport { documents as documentsCrmRoutes } from '@britania-crm/services/apis/crmApi/resources/routes';\nimport useCrmApi from '@britania-crm/services/hooks/useCrmApi';\nimport { DocumentsActions } from '@britania-crm/stores/documents';\nimport Button from '@britania-crm/web-components/Button';\nimport Form from '@britania-crm/web-components/Form';\nimport InputText from '@britania-crm/web-components/InputText';\nimport { CircularLoader } from '@britania-crm/web-components/Loader';\nimport TextArea from '@britania-crm/web-components/TextArea';\nimport UploadImage from '@britania-crm/web-components/UploadImage';\nimport { useRoutes } from '@britania-crm/web-src/routes/authenticated.routes';\nimport useStyles from './styles';\n\nconst DocumentationFormScreen = () => {\n  var _state$params, _state$params2;\n\n  const t = useT();\n  const classes = useStyles();\n  const {\n    routes\n  } = useRoutes();\n  const dispatch = useCallback(useDispatch(), []);\n  const history = useHistory();\n  const {\n    state\n  } = useLocation();\n  const formRef = useRef(null);\n  const {\n    data: documentFromApi,\n    loading\n  } = useCrmApi((state === null || state === void 0 ? void 0 : (_state$params = state.params) === null || _state$params === void 0 ? void 0 : _state$params.alias) ? [`${documentsCrmRoutes.getOne}/${state === null || state === void 0 ? void 0 : (_state$params2 = state.params) === null || _state$params2 === void 0 ? void 0 : _state$params2.alias}`, state] : null);\n  const [loader, setLoader] = useState(false);\n  const [title, setTitle] = useState();\n  const [file, setFile] = useState();\n  const mode = useMemo(() => {\n    var _state$params3;\n\n    return state === null || state === void 0 ? void 0 : (_state$params3 = state.params) === null || _state$params3 === void 0 ? void 0 : _state$params3.mode;\n  }, [state]);\n  const isEdit = useMemo(() => mode === 'edit', [mode]);\n  const pageTitle = useMemo(() => {\n    switch (mode) {\n      case 'edit':\n        return t('editing {this}', {\n          this: t('document', {\n            howMany: 1\n          })\n        });\n\n      default:\n        return t('new {this}', {\n          gender: 'male',\n          this: t('document', {\n            howMany: 1\n          })\n        });\n    }\n  }, [mode, t]);\n  const onSuccessCallBack = useCallback(() => {\n    history.push(routes.documentation.path);\n    setLoader(false);\n  }, [history, routes.documentation.path]);\n  const handleSubmit = useCallback(values => {\n    if (isEdit) {\n      const updatedDocument = {\n        title: values.title,\n        observation: values.observation,\n        file: values.file && !values.file.id ? values.file : null,\n        alias: 'PRE_CAD_CLIENTE_DOCUMENTACAO'\n      };\n      dispatch(DocumentsActions.updateDocument(updatedDocument, onSuccessCallBack, () => setLoader(false)));\n    } else {\n      const newDocument = {\n        title: values.title,\n        observation: values.observation,\n        file: values.file,\n        alias: 'PRE_CAD_CLIENTE_DOCUMENTACAO'\n      };\n      dispatch(DocumentsActions.createDocument(newDocument, onSuccessCallBack, () => setLoader(false)));\n    }\n  }, [dispatch, isEdit, onSuccessCallBack]);\n  useEffect(() => {\n    var _state$params4;\n\n    if (!(state === null || state === void 0 ? void 0 : (_state$params4 = state.params) === null || _state$params4 === void 0 ? void 0 : _state$params4.alias) && mode !== 'create') history.replace(routes.documentation.path);\n  }, [history, mode, routes.documentation.path, state]);\n  useFormEffect(() => {\n    if (!isEmpty(documentFromApi)) {\n      formRef.current.setData({\n        title: documentFromApi.title,\n        observation: documentFromApi.observation,\n        file: { ...documentFromApi.file,\n          type: documentFromApi.file.contentType\n        }\n      });\n    }\n  }, [documentFromApi]);\n  return /*#__PURE__*/React.createElement(Form, {\n    ref: formRef,\n    onSubmit: handleSubmit,\n    schemaConstructor: documentationSchema,\n    defaultValues: INITIAL_VALUES,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  }, (loader || loading) && /*#__PURE__*/React.createElement(CircularLoader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    className: classes.header,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    variant: \"h4\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, pageTitle)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputText, {\n    name: \"title\",\n    label: t('title'),\n    onValueChange: setTitle,\n    maxLength: 71,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextArea, {\n    name: \"observation\",\n    label: t('guidelines'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 12,\n    className: classes.upload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(UploadImage, {\n    name: \"file\",\n    preview: true,\n    hideWhenHasValue: true,\n    types: ['image/jpg', 'image/jpeg', 'application/pdf'],\n    previewStyle: {\n      width: 200,\n      height: 200\n    },\n    onValueChange: setFile,\n    title: t('add the file'),\n    description: t('the {this} or', {\n      gender: 'male',\n      this: t('archive', {\n        howMany: 3\n      })\n    }),\n    clearable: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: classes.buttons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(I18n, {\n    as: Button,\n    className: classes.resetBtn,\n    disabled: loader,\n    color: \"secondary\",\n    variant: \"text\",\n    onClick: () => formRef.current.reset(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, \"clean\")), /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(I18n, {\n    as: Button,\n    variant: \"outlined\",\n    color: \"secondary\",\n    disabled: loader,\n    onClick: () => history.push(routes.documentation.path),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }, \"cancel\"), /*#__PURE__*/React.createElement(I18n, {\n    as: Button,\n    color: \"secondary\",\n    variant: \"contained\",\n    disabled: !file || !title,\n    className: classes.btnSave,\n    isLoading: loader,\n    onClick: () => formRef.current.submit(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }, \"finish registration\")))));\n};\n\nexport default DocumentationFormScreen;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/documentation/screens/DocumentationFormScreen/DocumentationFormScreen.js"],"names":["React","useCallback","useMemo","useEffect","useRef","useState","useDispatch","useHistory","useLocation","isEmpty","Grid","Typography","useFormEffect","documentationSchema","INITIAL_VALUES","I18n","useT","documents","documentsCrmRoutes","useCrmApi","DocumentsActions","Button","Form","InputText","CircularLoader","TextArea","UploadImage","useRoutes","useStyles","DocumentationFormScreen","t","classes","routes","dispatch","history","state","formRef","data","documentFromApi","loading","params","alias","getOne","loader","setLoader","title","setTitle","file","setFile","mode","isEdit","pageTitle","this","howMany","gender","onSuccessCallBack","push","documentation","path","handleSubmit","values","updatedDocument","observation","id","updateDocument","newDocument","createDocument","replace","current","setData","type","contentType","container","header","upload","width","height","buttons","resetBtn","reset","btnSave","submit"],"mappings":"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","sourcesContent":["import React, {\n  useCallback,\n  useMemo,\n  useEffect,\n  useRef,\n  useState\n} from 'react'\nimport { useDispatch } from 'react-redux'\nimport {\n  useHistory,\n  useLocation\n} from 'react-router-dom'\n\nimport isEmpty from 'lodash/isEmpty'\n\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\n\nimport { useFormEffect } from '@britania-crm/forms'\nimport documentationSchema, { INITIAL_VALUES } from '@britania-crm/forms/schemas/documentation/documentation.schema'\nimport I18n, { useT } from '@britania-crm/i18n'\nimport { documents as documentsCrmRoutes } from '@britania-crm/services/apis/crmApi/resources/routes'\nimport useCrmApi from '@britania-crm/services/hooks/useCrmApi'\nimport { DocumentsActions } from '@britania-crm/stores/documents'\nimport Button from '@britania-crm/web-components/Button'\nimport Form from '@britania-crm/web-components/Form'\nimport InputText from '@britania-crm/web-components/InputText'\nimport { CircularLoader } from '@britania-crm/web-components/Loader'\nimport TextArea from '@britania-crm/web-components/TextArea'\nimport UploadImage from '@britania-crm/web-components/UploadImage'\nimport { useRoutes } from '@britania-crm/web-src/routes/authenticated.routes'\n\nimport useStyles from './styles'\n\nconst DocumentationFormScreen = () => {\n  const t = useT()\n  const classes = useStyles()\n  const { routes } = useRoutes()\n  const dispatch = useCallback(useDispatch(), [])\n  const history = useHistory()\n\n  const { state } = useLocation()\n  const formRef = useRef(null)\n\n  const { data: documentFromApi, loading } = useCrmApi(state?.params?.alias ? [`${ documentsCrmRoutes.getOne }/${ state?.params?.alias }`, state] : null)\n\n  const [loader, setLoader] = useState(false)\n  const [title, setTitle] = useState()\n  const [file, setFile] = useState()\n\n  const mode = useMemo(() => state?.params?.mode, [state])\n  const isEdit = useMemo(() => mode === 'edit', [mode])\n\n  const pageTitle = useMemo(() => {\n    switch (mode) {\n      case 'edit':\n        return t('editing {this}', { this: t('document', { howMany: 1 }) })\n      default:\n        return t('new {this}', { gender: 'male', this: t('document', { howMany: 1 }) })\n    }\n  }, [mode, t])\n\n  const onSuccessCallBack = useCallback(\n    () => {\n      history.push(routes.documentation.path)\n      setLoader(false)\n    }\n    ,\n    [history, routes.documentation.path]\n  )\n\n  const handleSubmit = useCallback(\n    (values) => {\n      if (isEdit) {\n        const updatedDocument = {\n          title: values.title,\n          observation: values.observation,\n          file: values.file && !values.file.id ? values.file : null,\n          alias: 'PRE_CAD_CLIENTE_DOCUMENTACAO'\n        }\n        dispatch(DocumentsActions.updateDocument(updatedDocument, onSuccessCallBack, () => setLoader(false)))\n      } else {\n        const newDocument = {\n          title: values.title,\n          observation: values.observation,\n          file: values.file,\n          alias: 'PRE_CAD_CLIENTE_DOCUMENTACAO'\n        }\n        dispatch(DocumentsActions.createDocument(newDocument, onSuccessCallBack, () => setLoader(false)))\n      }\n    },\n    [dispatch, isEdit, onSuccessCallBack]\n  )\n\n  useEffect(() => {\n    if (!state?.params?.alias && mode !== 'create') history.replace(routes.documentation.path)\n  },\n  [history, mode, routes.documentation.path, state]\n  )\n\n  useFormEffect(() => {\n    if (!isEmpty(documentFromApi)) {\n      formRef.current.setData({\n        title: documentFromApi.title,\n        observation: documentFromApi.observation,\n        file: {\n          ...documentFromApi.file,\n          type: documentFromApi.file.contentType\n        }\n      })\n    }\n  }, [documentFromApi])\n\n  return (\n    <Form\n      ref={ formRef }\n      onSubmit={ handleSubmit }\n      schemaConstructor={ documentationSchema }\n      defaultValues={ INITIAL_VALUES }\n    >\n      {(loader || loading) && <CircularLoader/>}\n      <Grid container spacing={ 2 } className={ classes.container } >\n        <Grid item className={ classes.header } sm={ 12 }>\n          <Typography className={ classes.title } variant=\"h4\" gutterBottom >\n            {pageTitle}\n          </Typography>\n        </Grid>\n\n        <Grid item sm={ 12 } md={ 6 }>\n          <InputText\n            name=\"title\"\n            label={ t('title') }\n            onValueChange={ setTitle }\n            maxLength={ 71 }\n          />\n        </Grid>\n        <Grid item sm={ 12 } >\n          <TextArea\n            name=\"observation\"\n            label={ t('guidelines') }\n          />\n        </Grid>\n        <Grid item sm={ 12 } md={ 12 } className={ classes.upload }>\n          <UploadImage\n            name=\"file\"\n            preview\n            hideWhenHasValue\n            types={ ['image/jpg', 'image/jpeg', 'application/pdf'] }\n            previewStyle={ { width: 200, height: 200 } }\n            onValueChange={ setFile }\n            title={ t('add the file') }\n            description={ t('the {this} or', { gender: 'male', this: t('archive', { howMany: 3 }) }) }\n            clearable\n          />\n        </Grid>\n        <Grid item xs={ 12 } className={ classes.buttons }>\n          <Grid>\n            <I18n\n              as={ Button }\n              className={ classes.resetBtn }\n              disabled={ loader }\n              color=\"secondary\"\n              variant=\"text\"\n              onClick={ () => formRef.current.reset() }\n            >\n                clean\n            </I18n>\n          </Grid>\n          <Grid>\n\n            <I18n\n              as={ Button }\n              variant=\"outlined\"\n              color=\"secondary\"\n              disabled={ loader }\n              onClick={ () => history.push(routes.documentation.path) }\n            >\n              cancel\n            </I18n>\n            <I18n as={ Button }\n              color=\"secondary\"\n              variant=\"contained\"\n              disabled={ !file || !title }\n              className={ classes.btnSave }\n              isLoading={ loader }\n              onClick={ () => formRef.current.submit() }\n            >\n              finish registration\n            </I18n>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Form>\n  )\n}\n\nexport default DocumentationFormScreen\n"]},"metadata":{},"sourceType":"module"}