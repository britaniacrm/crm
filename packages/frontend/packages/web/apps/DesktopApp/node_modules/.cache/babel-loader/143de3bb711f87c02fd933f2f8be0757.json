{"ast":null,"code":"import * as Yup from 'yup';\nimport flow from 'lodash/fp/flow';\nimport cep from '@britania-crm/forms/validators/cep.validator';\nimport cpfCnpj from '@britania-crm/forms/validators/cpfCnpj.validator';\nimport date from '@britania-crm/forms/validators/date.validator';\nimport email from '@britania-crm/forms/validators/email.validator';\nimport maxLength from '@britania-crm/forms/validators/maxLength.validator';\nimport number from '@britania-crm/forms/validators/number.validator';\nimport phone from '@britania-crm/forms/validators/phone.validator';\nimport required from '@britania-crm/forms/validators/required.validator';\nimport stateRegistration from '@britania-crm/forms/validators/stateRegistration.validator';\nimport url from '@britania-crm/forms/validators/url.validator';\nexport const INITIAL_VALUES = {\n  companyName: '',\n  cnpj: '',\n  contactName: '',\n  stateRegistration: '',\n  suframa: '',\n  commercialPhone: '',\n  billingPhone: '',\n  cellphone: '',\n  email: '',\n  site: '',\n  // Endereço\n  address: {\n    cep: '',\n    street: '',\n    number: '',\n    district: '',\n    complement: '',\n    city: '',\n    state: '',\n    country: 'Brasil'\n  },\n  // dados bancários\n  bankData: {\n    code: {\n      code: '',\n      description: ''\n    },\n    agency: '',\n    account: ''\n  },\n  // Documentação\n  documents: [],\n  // financeiro\n  financial: {\n    clientGroup: {},\n    shortName: '',\n    matrix: '',\n    historic: '',\n    carrier: '',\n    receivesNfe: false,\n    bankInstructions: '',\n    standardIncomeInstructions: '',\n    issueBankSlip: false,\n    generatesDebitNotice: false,\n    calculatesFine: false,\n    receivesSciInformation: false,\n    simpleClient: false,\n    icmsTaxpayer: false,\n    buysPhilco: false,\n    fullNonCumulative: false,\n    expirationDate: ''\n  },\n  // Manutenção\n  maintenance: {\n    representativeType: '',\n    personType: '',\n    country: 'Brasil',\n    representativeGroup: {},\n    paymentCalendar: '',\n    formula: '',\n    intermediator: false,\n    generationAdCarrier: '',\n    commissionPercentage: '',\n    commissionEmissionPercentage: '',\n    minimumCommissionPercentage: '',\n    maximumCommissionPercentage: '',\n    manualCommission: ''\n  },\n  // Percentual de comissão\n  commissionPercentage: []\n};\nexport default (({\n  t\n}) => Yup.object().shape({\n  companyName: flow(maxLength({\n    t,\n    length: 70,\n    type: t('characters'),\n    field: t('company name')\n  }), required({\n    t\n  }))(Yup.string()),\n  cnpj: flow(cpfCnpj({\n    t,\n    mode: 'cnpj'\n  }), required({\n    t\n  }))(Yup.string()),\n  contactName: flow(maxLength({\n    t,\n    length: 30,\n    type: t('characters'),\n    field: t('name representative')\n  }), required({\n    t\n  }))(Yup.string()),\n  stateRegistration: stateRegistration({\n    t\n  })(Yup.string()),\n  suframa: maxLength({\n    t,\n    length: 14,\n    type: t('digits'),\n    field: t('suframa')\n  })(Yup.string()),\n  commercialPhone: flow(phone({\n    t\n  }), required({\n    t\n  }))(Yup.string()),\n  billingPhone: phone({\n    t\n  })(Yup.string()),\n  cellphone: flow(phone({\n    t\n  }), required({\n    t\n  }))(Yup.string()),\n  email: flow(maxLength({\n    t,\n    length: 40,\n    type: t('characters'),\n    field: t('email')\n  }), email({\n    t\n  }), required({\n    t\n  }))(Yup.string()),\n  site: flow(url({\n    t\n  }), maxLength({\n    t,\n    length: 40,\n    type: t('characters'),\n    field: 'site'\n  }))(Yup.string()),\n  // Endereço\n  address: Yup.object().shape({\n    cep: flow(cep({\n      t\n    }), required({\n      t\n    }))(Yup.string()),\n    street: flow(maxLength({\n      t,\n      length: 70,\n      type: t('characters'),\n      field: t('public place')\n    }), required({\n      t\n    }))(Yup.string()),\n    number: flow(maxLength({\n      t,\n      length: 10,\n      type: t('digits'),\n      field: t('number', {\n        howMany: 2\n      })\n    }), number({\n      t\n    }), required({\n      t\n    }))(Yup.string()),\n    district: flow(maxLength({\n      t,\n      length: 40,\n      type: t('characters'),\n      field: t('district', {\n        howMany: 1\n      })\n    }), required({\n      t\n    }))(Yup.string()),\n    complement: maxLength({\n      t,\n      length: 70,\n      type: t('characters'),\n      field: t('complement', {\n        howMany: 1\n      })\n    })(Yup.string()),\n    city: flow(maxLength({\n      t,\n      length: 40,\n      type: t('characters'),\n      field: t('city', {\n        howMany: 1\n      })\n    }), required({\n      t\n    }))(Yup.string()),\n    state: required({\n      t\n    })(Yup.string()),\n    country: flow(maxLength({\n      t,\n      length: 40,\n      type: t('characters'),\n      field: t('country')\n    }), required({\n      t\n    }))(Yup.string())\n  }),\n  // dados bancários\n  bankData: Yup.object().shape({\n    code: Yup.object(),\n    agency: maxLength({\n      t,\n      length: 7,\n      type: t('digits'),\n      field: t('agency', {\n        howMany: 1\n      })\n    })(Yup.string()),\n    account: maxLength({\n      t,\n      length: 20,\n      type: t('digits'),\n      field: t('account', {\n        howMany: 1\n      })\n    })(Yup.string())\n  }),\n  // Documentação\n  documents: Yup.array(),\n  // financeiro\n  financial: Yup.object().shape({\n    clientGroup: required({\n      t,\n      isNotText: true\n    })(Yup.object()),\n    shortName: flow(maxLength({\n      t,\n      length: 70,\n      type: t('characters'),\n      field: t('short name')\n    }), required({\n      t\n    }))(Yup.string()),\n    matrix: flow(maxLength({\n      t,\n      length: 70,\n      type: t('characters'),\n      field: t('matrix', {\n        howMany: 1\n      })\n    }), required({\n      t\n    }))(Yup.string()),\n    historic: required({\n      t\n    })(Yup.string()),\n    carrier: flow(maxLength({\n      t,\n      length: 70,\n      type: t('characters'),\n      field: t('carrier')\n    }), required({\n      t\n    }))(Yup.string()),\n    receivesNfe: Yup.bool(),\n    bankInstructions: flow(maxLength({\n      t,\n      length: 70,\n      type: t('characters'),\n      field: t('banking instructions')\n    }), required({\n      t\n    }))(Yup.string()),\n    standardIncomeInstructions: flow(maxLength({\n      t,\n      length: 70,\n      type: t('characters'),\n      field: t('standard recipe instructions')\n    }), required({\n      t\n    }))(Yup.string()),\n    issueBankSlip: Yup.bool(),\n    generatesDebitNotice: Yup.bool(),\n    calculatesFine: Yup.bool(),\n    receivesSciInformation: Yup.bool(),\n    simpleClient: Yup.bool(),\n    icmsTaxpayer: Yup.bool(),\n    buysPhilco: Yup.bool(),\n    fullNonCumulative: Yup.bool(),\n    expirationDate: date({\n      t\n    })(Yup.string())\n  }),\n  // Manutenção\n  maintenance: Yup.object().shape({\n    representativeType: flow(number({\n      t\n    }), maxLength({\n      t,\n      length: 3,\n      type: t('digits'),\n      field: t('representative type')\n    }), required({\n      t\n    }))(Yup.string()),\n    personType: required({\n      t\n    })(Yup.string()),\n    country: flow(maxLength({\n      t,\n      length: 20,\n      type: t('characters'),\n      field: t('country')\n    }), required({\n      t\n    }))(Yup.string()),\n    representativeGroup: required({\n      t,\n      isNotText: true\n    })(Yup.object()),\n    paymentCalendar: flow(maxLength({\n      t,\n      length: 6,\n      type: t('characters'),\n      field: t('payment schedule')\n    }), required({\n      t\n    }))(Yup.string()),\n    formula: flow(maxLength({\n      t,\n      length: 12,\n      type: t('characters'),\n      field: t('formula')\n    }), required({\n      t\n    }))(Yup.string()),\n    intermediator: Yup.string(),\n    generationAdCarrier: flow(number({\n      t\n    }), maxLength({\n      t,\n      length: 4,\n      type: t('digits'),\n      field: t('ad generation carrier')\n    }), required({\n      t\n    }))(Yup.string()),\n    commissionPercentage: flow(number({\n      t\n    }), maxLength({\n      t,\n      length: 3,\n      type: t('digits'),\n      field: t('commission')\n    }), required({\n      t\n    }))(Yup.string()),\n    minimumCommissionPercentage: flow(number({\n      t\n    }), maxLength({\n      t,\n      length: 3,\n      type: t('digits'),\n      field: t('minimum with')\n    }), required({\n      t\n    }))(Yup.string()),\n    maximumCommissionPercentage: flow(number({\n      t\n    }), maxLength({\n      t,\n      length: 3,\n      type: t('digits'),\n      field: t('maximum with')\n    }), required({\n      t\n    }))(Yup.string()),\n    commissionEmissionPercentage: flow(number({\n      t\n    }), maxLength({\n      t,\n      length: 3,\n      type: t('digits'),\n      field: t('with issuancer')\n    }), required({\n      t\n    }))(Yup.string()),\n    manualCommission: flow(number({\n      t\n    }), maxLength({\n      t,\n      length: 3,\n      type: t('digits'),\n      field: t('manualCommission')\n    }), required({\n      t\n    }))(Yup.string())\n  }),\n  // Percentual de comissão\n  commissionPercentage: required({\n    t,\n    isNotText: true\n  })(Yup.array())\n}));","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/core/forms/schemas/representative/representative.schema.js"],"names":["Yup","flow","cep","cpfCnpj","date","email","maxLength","number","phone","required","stateRegistration","url","INITIAL_VALUES","companyName","cnpj","contactName","suframa","commercialPhone","billingPhone","cellphone","site","address","street","district","complement","city","state","country","bankData","code","description","agency","account","documents","financial","clientGroup","shortName","matrix","historic","carrier","receivesNfe","bankInstructions","standardIncomeInstructions","issueBankSlip","generatesDebitNotice","calculatesFine","receivesSciInformation","simpleClient","icmsTaxpayer","buysPhilco","fullNonCumulative","expirationDate","maintenance","representativeType","personType","representativeGroup","paymentCalendar","formula","intermediator","generationAdCarrier","commissionPercentage","commissionEmissionPercentage","minimumCommissionPercentage","maximumCommissionPercentage","manualCommission","t","object","shape","length","type","field","string","mode","howMany","array","isNotText","bool"],"mappings":"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","sourcesContent":["import * as Yup from 'yup'\n\nimport flow from 'lodash/fp/flow'\n\nimport cep from '@britania-crm/forms/validators/cep.validator'\nimport cpfCnpj from '@britania-crm/forms/validators/cpfCnpj.validator'\nimport date from '@britania-crm/forms/validators/date.validator'\nimport email from '@britania-crm/forms/validators/email.validator'\nimport maxLength from '@britania-crm/forms/validators/maxLength.validator'\nimport number from '@britania-crm/forms/validators/number.validator'\nimport phone from '@britania-crm/forms/validators/phone.validator'\nimport required from '@britania-crm/forms/validators/required.validator'\nimport stateRegistration from '@britania-crm/forms/validators/stateRegistration.validator'\nimport url from '@britania-crm/forms/validators/url.validator'\n\nexport const INITIAL_VALUES = {\n  companyName: '',\n  cnpj: '',\n  contactName: '',\n  stateRegistration: '',\n  suframa: '',\n  commercialPhone: '',\n  billingPhone: '',\n  cellphone: '',\n  email: '',\n  site: '',\n\n  // Endereço\n  address: {\n    cep: '',\n    street: '',\n    number: '',\n    district: '',\n    complement: '',\n    city: '',\n    state: '',\n    country: 'Brasil'\n  },\n\n  // dados bancários\n  bankData: {\n    code: {\n      code: '',\n      description: ''\n    },\n    agency: '',\n    account: ''\n  },\n\n  // Documentação\n  documents: [],\n\n  // financeiro\n  financial: {\n    clientGroup: {},\n    shortName: '',\n    matrix: '',\n    historic: '',\n    carrier: '',\n    receivesNfe: false,\n    bankInstructions: '',\n    standardIncomeInstructions: '',\n    issueBankSlip: false,\n    generatesDebitNotice: false,\n    calculatesFine: false,\n    receivesSciInformation: false,\n    simpleClient: false,\n    icmsTaxpayer: false,\n    buysPhilco: false,\n    fullNonCumulative: false,\n    expirationDate: ''\n  },\n\n  // Manutenção\n  maintenance: {\n    representativeType: '',\n    personType: '',\n    country: 'Brasil',\n    representativeGroup: {},\n    paymentCalendar: '',\n    formula: '',\n    intermediator: false,\n    generationAdCarrier: '',\n    commissionPercentage: '',\n    commissionEmissionPercentage: '',\n    minimumCommissionPercentage: '',\n    maximumCommissionPercentage: '',\n    manualCommission: ''\n  },\n\n  // Percentual de comissão\n  commissionPercentage: []\n\n}\n\nexport default ({ t }) => Yup.object().shape({\n  companyName: flow(\n    maxLength({\n      t,\n      length: 70,\n      type: t('characters'),\n      field: t('company name')\n    }),\n    required({ t })\n  )(Yup.string()),\n  cnpj: flow(\n    cpfCnpj({ t, mode: 'cnpj' }),\n    required({ t })\n  )(Yup.string()),\n  contactName: flow(\n    maxLength({\n      t,\n      length: 30,\n      type: t('characters'),\n      field: t('name representative')\n    }),\n    required({ t })\n  )(Yup.string()),\n  stateRegistration: stateRegistration({ t })(Yup.string()),\n  suframa: maxLength({\n    t,\n    length: 14,\n    type: t('digits'),\n    field: t('suframa')\n  })(Yup.string()),\n  commercialPhone: flow(\n    phone({ t }),\n    required({ t })\n  )(Yup.string()),\n  billingPhone: phone({ t })(Yup.string()),\n  cellphone: flow(\n    phone({ t }),\n    required({ t })\n  )(Yup.string()),\n  email: flow(\n    maxLength({\n      t,\n      length: 40,\n      type: t('characters'),\n      field: t('email')\n    }),\n    email({ t }),\n    required({ t })\n  )(Yup.string()),\n  site: flow(\n    url({ t }),\n    maxLength({\n      t,\n      length: 40,\n      type: t('characters'),\n      field: 'site'\n    })\n  )(Yup.string()),\n\n  // Endereço\n  address: Yup.object().shape({\n    cep: flow(\n      cep({ t }),\n      required({ t })\n    )(Yup.string()),\n    street: flow(\n      maxLength({\n        t,\n        length: 70,\n        type: t('characters'),\n        field: t('public place')\n      }),\n      required({ t })\n    )(Yup.string()),\n    number: flow(\n      maxLength({\n        t,\n        length: 10,\n        type: t('digits'),\n        field: t('number', { howMany: 2 })\n      }),\n      number({ t }),\n      required({ t })\n    )(Yup.string()),\n    district: flow(\n      maxLength({\n        t,\n        length: 40,\n        type: t('characters'),\n        field: t('district', { howMany: 1 })\n      }),\n      required({ t })\n    )(Yup.string()),\n    complement: maxLength({\n      t,\n      length: 70,\n      type: t('characters'),\n      field: t('complement', { howMany: 1 })\n    })(Yup.string()),\n    city: flow(\n      maxLength({\n        t,\n        length: 40,\n        type: t('characters'),\n        field: t('city', { howMany: 1 })\n      }),\n      required({ t })\n    )(Yup.string()),\n    state: required({ t })(Yup.string()),\n    country: flow(\n      maxLength({\n        t,\n        length: 40,\n        type: t('characters'),\n        field: t('country')\n      }),\n      required({ t })\n    )(Yup.string())\n  }),\n\n  // dados bancários\n  bankData: Yup.object().shape({\n    code: Yup.object(),\n    agency: maxLength({\n      t,\n      length: 7,\n      type: t('digits'),\n      field: t('agency', { howMany: 1 })\n    })(Yup.string()),\n    account: maxLength({\n      t,\n      length: 20,\n      type: t('digits'),\n      field: t('account', { howMany: 1 })\n    })(Yup.string())\n  }),\n\n  // Documentação\n  documents: Yup.array(),\n\n  // financeiro\n  financial: Yup.object().shape({\n    clientGroup: required({ t, isNotText: true })(Yup.object()),\n    shortName: flow(\n      maxLength({\n        t,\n        length: 70,\n        type: t('characters'),\n        field: t('short name')\n      }),\n      required({ t })\n    )(Yup.string()),\n    matrix: flow(\n      maxLength({\n        t,\n        length: 70,\n        type: t('characters'),\n        field: t('matrix', { howMany: 1 })\n      }),\n      required({ t })\n    )(Yup.string()),\n    historic: required({ t })(Yup.string()),\n    carrier: flow(\n      maxLength({\n        t,\n        length: 70,\n        type: t('characters'),\n        field: t('carrier')\n      }),\n      required({ t })\n    )(Yup.string()),\n    receivesNfe: Yup.bool(),\n    bankInstructions: flow(\n      maxLength({\n        t,\n        length: 70,\n        type: t('characters'),\n        field: t('banking instructions')\n      }),\n      required({ t })\n    )(Yup.string()),\n    standardIncomeInstructions: flow(\n      maxLength({\n        t,\n        length: 70,\n        type: t('characters'),\n        field: t('standard recipe instructions')\n      }),\n      required({ t })\n    )(Yup.string()),\n    issueBankSlip: Yup.bool(),\n    generatesDebitNotice: Yup.bool(),\n    calculatesFine: Yup.bool(),\n    receivesSciInformation: Yup.bool(),\n    simpleClient: Yup.bool(),\n    icmsTaxpayer: Yup.bool(),\n    buysPhilco: Yup.bool(),\n    fullNonCumulative: Yup.bool(),\n    expirationDate: date({ t })(Yup.string())\n  }),\n\n  // Manutenção\n  maintenance: Yup.object().shape({\n    representativeType: flow(\n      number({ t }),\n      maxLength({\n        t,\n        length: 3,\n        type: t('digits'),\n        field: t('representative type')\n      }),\n      required({ t })\n    )(Yup.string()),\n    personType: required({ t })(Yup.string()),\n    country: flow(\n      maxLength({\n        t,\n        length: 20,\n        type: t('characters'),\n        field: t('country')\n      }),\n      required({ t })\n    )(Yup.string()),\n    representativeGroup: required({ t, isNotText: true })(Yup.object()),\n    paymentCalendar: flow(\n      maxLength({\n        t,\n        length: 6,\n        type: t('characters'),\n        field: t('payment schedule')\n      }),\n      required({ t })\n    )(Yup.string()),\n    formula: flow(\n      maxLength({\n        t,\n        length: 12,\n        type: t('characters'),\n        field: t('formula')\n      }),\n      required({ t })\n    )(Yup.string()),\n    intermediator: Yup.string(),\n    generationAdCarrier: flow(\n      number({ t }),\n      maxLength({\n        t,\n        length: 4,\n        type: t('digits'),\n        field: t('ad generation carrier')\n      }),\n      required({ t })\n    )(Yup.string()),\n    commissionPercentage: flow(\n      number({ t }),\n      maxLength({\n        t,\n        length: 3,\n        type: t('digits'),\n        field: t('commission')\n      }),\n      required({ t })\n    )(Yup.string()),\n    minimumCommissionPercentage: flow(\n      number({ t }),\n      maxLength({\n        t,\n        length: 3,\n        type: t('digits'),\n        field: t('minimum with')\n      }),\n      required({ t })\n    )(Yup.string()),\n    maximumCommissionPercentage: flow(\n      number({ t }),\n      maxLength({\n        t,\n        length: 3,\n        type: t('digits'),\n        field: t('maximum with')\n      }),\n      required({ t })\n    )(Yup.string()),\n    commissionEmissionPercentage: flow(\n      number({ t }),\n      maxLength({\n        t,\n        length: 3,\n        type: t('digits'),\n        field: t('with issuancer')\n      }),\n      required({ t })\n    )(Yup.string()),\n    manualCommission: flow(\n      number({ t }),\n      maxLength({\n        t,\n        length: 3,\n        type: t('digits'),\n        field: t('manualCommission')\n      }),\n      required({ t })\n    )(Yup.string())\n  }),\n\n  // Percentual de comissão\n  commissionPercentage: required({ t, isNotText: true })(Yup.array())\n})\n"]},"metadata":{},"sourceType":"module"}