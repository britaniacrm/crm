{"ast":null,"code":"import { put, call, takeLatest } from 'redux-saga/effects';\nimport { MSG003 } from '@britania-crm/constants/feedbackMessages.constants';\nimport { postBuyer, putBuyer } from '@britania-crm/services/apis/crmApi/resources/buyer.service';\nimport { AppActions } from '../app/app.actions';\nimport { BuyerTypes } from './buyer.actions';\n\nfunction* saveBuyer({\n  params,\n  onSuccess = () => {},\n  onError = () => {}\n}) {\n  try {\n    yield call(postBuyer, params);\n    yield call(onSuccess);\n    yield put(AppActions.addAlert({\n      type: 'success',\n      message: MSG003\n    }));\n  } catch (error) {\n    if (error.response.status === 403) {\n      yield put(AppActions.addAlert({\n        type: 'error',\n        message: 'Você não possui acesso a este cliente.'\n      }));\n    }\n  } finally {\n    onError();\n  }\n}\n\nfunction* editBuyer({\n  id,\n  params,\n  onSuccess = () => {},\n  onError = () => {}\n}) {\n  try {\n    yield call(putBuyer, id, params);\n    yield call(onSuccess);\n    yield put(AppActions.addAlert({\n      type: 'success',\n      message: MSG003\n    }));\n  } catch (error) {\n    if (error.response.status === 403) {\n      yield put(AppActions.addAlert({\n        type: 'error',\n        message: 'Você não possui acesso a este cliente.'\n      }));\n    }\n  } finally {\n    onError();\n  }\n}\n\nexport default [takeLatest(BuyerTypes.SAVE_BUYER, saveBuyer), takeLatest(BuyerTypes.EDIT_BUYER, editBuyer)];","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/core/stores/buyer/buyer.sagas.js"],"names":["put","call","takeLatest","MSG003","postBuyer","putBuyer","AppActions","BuyerTypes","saveBuyer","params","onSuccess","onError","addAlert","type","message","error","response","status","editBuyer","id","SAVE_BUYER","EDIT_BUYER"],"mappings":"AAAA,SACEA,GADF,EAEEC,IAFF,EAGEC,UAHF,QAIO,oBAJP;AAMA,SAASC,MAAT,QAAuB,oDAAvB;AACA,SACEC,SADF,EAEEC,QAFF,QAGO,4DAHP;AAKA,SAASC,UAAT,QAA2B,oBAA3B;AACA,SAASC,UAAT,QAA2B,iBAA3B;;AAEA,UAAUC,SAAV,CAAqB;AACnBC,EAAAA,MADmB;AACXC,EAAAA,SAAS,GAAG,MAAM,CAAE,CADT;AACWC,EAAAA,OAAO,GAAG,MAAM,CAAE;AAD7B,CAArB,EAEG;AACD,MAAI;AACF,UAAMV,IAAI,CAACG,SAAD,EAAYK,MAAZ,CAAV;AACA,UAAMR,IAAI,CAACS,SAAD,CAAV;AACA,UAAMV,GAAG,CAACM,UAAU,CAACM,QAAX,CAAoB;AAAEC,MAAAA,IAAI,EAAE,SAAR;AAAmBC,MAAAA,OAAO,EAAEX;AAA5B,KAApB,CAAD,CAAT;AACD,GAJD,CAIE,OAAOY,KAAP,EAAc;AACd,QAAIA,KAAK,CAACC,QAAN,CAAeC,MAAf,KAA0B,GAA9B,EAAmC;AACjC,YAAMjB,GAAG,CAACM,UAAU,CAACM,QAAX,CAAoB;AAAEC,QAAAA,IAAI,EAAE,OAAR;AAAiBC,QAAAA,OAAO,EAAE;AAA1B,OAApB,CAAD,CAAT;AACD;AACF,GARD,SAQU;AACRH,IAAAA,OAAO;AACR;AACF;;AAED,UAAUO,SAAV,CAAqB;AACnBC,EAAAA,EADmB;AACfV,EAAAA,MADe;AACPC,EAAAA,SAAS,GAAG,MAAM,CAAE,CADb;AACeC,EAAAA,OAAO,GAAG,MAAM,CAAE;AADjC,CAArB,EAEG;AACD,MAAI;AACF,UAAMV,IAAI,CAACI,QAAD,EAAWc,EAAX,EAAeV,MAAf,CAAV;AACA,UAAMR,IAAI,CAACS,SAAD,CAAV;AACA,UAAMV,GAAG,CAACM,UAAU,CAACM,QAAX,CAAoB;AAAEC,MAAAA,IAAI,EAAE,SAAR;AAAmBC,MAAAA,OAAO,EAAEX;AAA5B,KAApB,CAAD,CAAT;AACD,GAJD,CAIE,OAAOY,KAAP,EAAc;AACd,QAAIA,KAAK,CAACC,QAAN,CAAeC,MAAf,KAA0B,GAA9B,EAAmC;AACjC,YAAMjB,GAAG,CAACM,UAAU,CAACM,QAAX,CAAoB;AAAEC,QAAAA,IAAI,EAAE,OAAR;AAAiBC,QAAAA,OAAO,EAAE;AAA1B,OAApB,CAAD,CAAT;AACD;AACF,GARD,SAQU;AACRH,IAAAA,OAAO;AACR;AACF;;AAED,eAAe,CACbT,UAAU,CAACK,UAAU,CAACa,UAAZ,EAAwBZ,SAAxB,CADG,EAEbN,UAAU,CAACK,UAAU,CAACc,UAAZ,EAAwBH,SAAxB,CAFG,CAAf","sourcesContent":["import {\n  put,\n  call,\n  takeLatest\n} from 'redux-saga/effects'\n\nimport { MSG003 } from '@britania-crm/constants/feedbackMessages.constants'\nimport {\n  postBuyer,\n  putBuyer\n} from '@britania-crm/services/apis/crmApi/resources/buyer.service'\n\nimport { AppActions } from '../app/app.actions'\nimport { BuyerTypes } from './buyer.actions'\n\nfunction* saveBuyer ({\n  params, onSuccess = () => {}, onError = () => {}\n}) {\n  try {\n    yield call(postBuyer, params)\n    yield call(onSuccess)\n    yield put(AppActions.addAlert({ type: 'success', message: MSG003 }))\n  } catch (error) {\n    if (error.response.status === 403) {\n      yield put(AppActions.addAlert({ type: 'error', message: 'Você não possui acesso a este cliente.' }))\n    }\n  } finally {\n    onError()\n  }\n}\n\nfunction* editBuyer ({\n  id, params, onSuccess = () => {}, onError = () => {}\n}) {\n  try {\n    yield call(putBuyer, id, params)\n    yield call(onSuccess)\n    yield put(AppActions.addAlert({ type: 'success', message: MSG003 }))\n  } catch (error) {\n    if (error.response.status === 403) {\n      yield put(AppActions.addAlert({ type: 'error', message: 'Você não possui acesso a este cliente.' }))\n    }\n  } finally {\n    onError()\n  }\n}\n\nexport default [\n  takeLatest(BuyerTypes.SAVE_BUYER, saveBuyer),\n  takeLatest(BuyerTypes.EDIT_BUYER, editBuyer)\n]\n"]},"metadata":{},"sourceType":"module"}