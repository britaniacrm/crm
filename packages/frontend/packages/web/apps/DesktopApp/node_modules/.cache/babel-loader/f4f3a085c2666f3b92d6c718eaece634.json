{"ast":null,"code":"import { createReducer } from 'reduxsauce';\nimport jwtDecode from 'jwt-decode';\nimport { AUTH_STATUS } from '@britania-crm/constants/auth.constants';\nimport { AuthTypes } from './auth.actions';\nconst INITIAL_STATE = {\n  accessToken: null,\n  error: null,\n  status: AUTH_STATUS.IDLE,\n  // loading | success | failed\n  rememberUser: false,\n  jwtContent: {},\n  user: {}\n};\n\nconst authError = (state = INITIAL_STATE, {\n  error\n}) => ({ ...state,\n  error\n});\n\nconst login = (state = INITIAL_STATE, {\n  rememberUser\n}) => ({ ...state,\n  rememberUser\n});\n\nconst loginSuccess = (state = INITIAL_STATE, {\n  accessToken,\n  expirationDate,\n  user\n}) => ({ ...state,\n  error: INITIAL_STATE.error,\n  status: AUTH_STATUS.SUCCESS,\n  accessToken,\n  expirationDate,\n  jwtContent: jwtDecode(accessToken),\n  user\n});\n\nconst setAuthStatus = (state = INITIAL_STATE, {\n  status\n}) => ({ ...state,\n  status\n});\n\nconst logout = (state = INITIAL_STATE) => ({ ...INITIAL_STATE,\n  rememberUser: state.rememberUser\n});\n\nexport default createReducer(INITIAL_STATE, {\n  [AuthTypes.LOGIN]: login,\n  [AuthTypes.LOGIN_SUCCESS]: loginSuccess,\n  [AuthTypes.AUTH_ERROR]: authError,\n  [AuthTypes.SET_AUTH_STATUS]: setAuthStatus,\n  [AuthTypes.LOGOUT]: logout\n});","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/core/stores/auth/auth.reducer.js"],"names":["createReducer","jwtDecode","AUTH_STATUS","AuthTypes","INITIAL_STATE","accessToken","error","status","IDLE","rememberUser","jwtContent","user","authError","state","login","loginSuccess","expirationDate","SUCCESS","setAuthStatus","logout","LOGIN","LOGIN_SUCCESS","AUTH_ERROR","SET_AUTH_STATUS","LOGOUT"],"mappings":"AAAA,SAASA,aAAT,QAA8B,YAA9B;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,WAAT,QAA4B,wCAA5B;AAEA,SAASC,SAAT,QAA0B,gBAA1B;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,WAAW,EAAE,IADO;AAEpBC,EAAAA,KAAK,EAAE,IAFa;AAGpBC,EAAAA,MAAM,EAAEL,WAAW,CAACM,IAHA;AAGM;AAC1BC,EAAAA,YAAY,EAAE,KAJM;AAKpBC,EAAAA,UAAU,EAAE,EALQ;AAMpBC,EAAAA,IAAI,EAAE;AANc,CAAtB;;AASA,MAAMC,SAAS,GAAG,CAACC,KAAK,GAAGT,aAAT,EAAwB;AAAEE,EAAAA;AAAF,CAAxB,MAAuC,EACvD,GAAGO,KADoD;AAEvDP,EAAAA;AAFuD,CAAvC,CAAlB;;AAKA,MAAMQ,KAAK,GAAG,CAACD,KAAK,GAAGT,aAAT,EAAwB;AAAEK,EAAAA;AAAF,CAAxB,MAA8C,EAC1D,GAAGI,KADuD;AAE1DJ,EAAAA;AAF0D,CAA9C,CAAd;;AAKA,MAAMM,YAAY,GAAG,CAACF,KAAK,GAAGT,aAAT,EAAwB;AAC3CC,EAAAA,WAD2C;AAE3CW,EAAAA,cAF2C;AAG3CL,EAAAA;AAH2C,CAAxB,MAId,EACL,GAAGE,KADE;AAELP,EAAAA,KAAK,EAAEF,aAAa,CAACE,KAFhB;AAGLC,EAAAA,MAAM,EAAEL,WAAW,CAACe,OAHf;AAILZ,EAAAA,WAJK;AAKLW,EAAAA,cALK;AAMLN,EAAAA,UAAU,EAAET,SAAS,CAACI,WAAD,CANhB;AAOLM,EAAAA;AAPK,CAJc,CAArB;;AAcA,MAAMO,aAAa,GAAG,CAACL,KAAK,GAAGT,aAAT,EAAwB;AAAEG,EAAAA;AAAF,CAAxB,MAAwC,EAC5D,GAAGM,KADyD;AAE5DN,EAAAA;AAF4D,CAAxC,CAAtB;;AAKA,MAAMY,MAAM,GAAG,CAACN,KAAK,GAAGT,aAAT,MAA4B,EACzC,GAAGA,aADsC;AAEzCK,EAAAA,YAAY,EAAEI,KAAK,CAACJ;AAFqB,CAA5B,CAAf;;AAKA,eAAeT,aAAa,CAACI,aAAD,EAAgB;AAC1C,GAACD,SAAS,CAACiB,KAAX,GAAmBN,KADuB;AAE1C,GAACX,SAAS,CAACkB,aAAX,GAA2BN,YAFe;AAG1C,GAACZ,SAAS,CAACmB,UAAX,GAAwBV,SAHkB;AAI1C,GAACT,SAAS,CAACoB,eAAX,GAA6BL,aAJa;AAK1C,GAACf,SAAS,CAACqB,MAAX,GAAoBL;AALsB,CAAhB,CAA5B","sourcesContent":["import { createReducer } from 'reduxsauce'\n\nimport jwtDecode from 'jwt-decode'\n\nimport { AUTH_STATUS } from '@britania-crm/constants/auth.constants'\n\nimport { AuthTypes } from './auth.actions'\n\nconst INITIAL_STATE = {\n  accessToken: null,\n  error: null,\n  status: AUTH_STATUS.IDLE, // loading | success | failed\n  rememberUser: false,\n  jwtContent: {},\n  user: {}\n}\n\nconst authError = (state = INITIAL_STATE, { error }) => ({\n  ...state,\n  error\n})\n\nconst login = (state = INITIAL_STATE, { rememberUser }) => ({\n  ...state,\n  rememberUser\n})\n\nconst loginSuccess = (state = INITIAL_STATE, {\n  accessToken,\n  expirationDate,\n  user\n}) => ({\n  ...state,\n  error: INITIAL_STATE.error,\n  status: AUTH_STATUS.SUCCESS,\n  accessToken,\n  expirationDate,\n  jwtContent: jwtDecode(accessToken),\n  user\n})\n\nconst setAuthStatus = (state = INITIAL_STATE, { status }) => ({\n  ...state,\n  status\n})\n\nconst logout = (state = INITIAL_STATE) => ({\n  ...INITIAL_STATE,\n  rememberUser: state.rememberUser\n})\n\nexport default createReducer(INITIAL_STATE, {\n  [AuthTypes.LOGIN]: login,\n  [AuthTypes.LOGIN_SUCCESS]: loginSuccess,\n  [AuthTypes.AUTH_ERROR]: authError,\n  [AuthTypes.SET_AUTH_STATUS]: setAuthStatus,\n  [AuthTypes.LOGOUT]: logout\n})\n"]},"metadata":{},"sourceType":"module"}