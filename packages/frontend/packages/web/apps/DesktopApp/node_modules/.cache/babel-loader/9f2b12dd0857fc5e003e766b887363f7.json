{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/customers/containers/CounterPropertiesTable/CounterPropertiesTable.js\";\nimport React, { useMemo, useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport filter from 'lodash/filter';\nimport map from 'lodash/map';\nimport size from 'lodash/size';\nimport { useDialog } from '@britania-crm/dialog';\nimport { useT } from '@britania-crm/i18n';\nimport { formatMoney } from '@britania-crm/utils/formatters';\nimport DataTable from '@britania-crm/web-components/DataTable';\nimport InputHidden from '@britania-crm/web-components/InputHidden';\nimport ConfirmModal from '@britania-crm/web-components/Modal/ConfirmModal';\nimport NewCounterPropertyModal from '@britania-crm/web-src/modules/customers/modals/NewCounterPropertyModal';\n\nconst CounterPropertiesTable = ({\n  disabled,\n  formRef\n}) => {\n  const t = useT();\n  const {\n    createDialog\n  } = useDialog();\n  const [counterProperties, setCounterProperties] = useState([]);\n  const disableAdd = useMemo(() => disabled || size(counterProperties) >= 3, [counterProperties, disabled]);\n  const columns = useMemo(() => [{\n    title: t('description'),\n    field: 'description'\n  }, {\n    title: t('localization', {\n      howMany: 1\n    }),\n    field: 'localization'\n  }, {\n    title: t('value'),\n    field: 'value',\n    render: row => formatMoney(row.value) || '-'\n  }], [t]);\n  const onAddClick = useCallback(() => createDialog({\n    id: 'modal-add-new-counter-property',\n    Component: NewCounterPropertyModal,\n    props: {\n      onSubmit(counterProperty) {\n        formRef.current.setFieldValue('additionalInformation.counter.values', old => [...old, counterProperty]);\n      }\n\n    }\n  }), [createDialog, formRef]);\n  const onEditClick = useCallback((_, row) => createDialog({\n    id: 'modal-edit-counter-property',\n    Component: NewCounterPropertyModal,\n    props: {\n      counterProperty: row,\n\n      onSubmit(counterProperty) {\n        formRef.current.setFieldValue('additionalInformation.counter.values', old => map(old, (item, index) => index === row.tableData.id ? {\n          id: row.id,\n          ...counterProperty\n        } : item));\n      }\n\n    }\n  }), [createDialog, formRef]);\n  const onDeleteClick = useCallback((_, row) => createDialog({\n    id: 'modal-delete-counter-property',\n    Component: ConfirmModal,\n    props: {\n      onConfirm() {\n        formRef.current.setFieldValue('additionalInformation.counter.values', old => filter(old, (item, index) => index !== row.tableData.id));\n      }\n\n    }\n  }), [createDialog, formRef]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DataTable, {\n    options: {\n      search: false\n    },\n    data: counterProperties,\n    columns: columns,\n    title: t('goods list'),\n    titleProps: {\n      variant: 'h6'\n    },\n    minimalistToolbar: true,\n    addTitle: t('add new {this}', {\n      this: t('goods list'),\n      gender: 'female'\n    }),\n    onAddClick: !disableAdd && onAddClick,\n    onEditClick: !disabled && onEditClick,\n    onDeleteClick: !disabled && onDeleteClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(InputHidden, {\n    name: \"values\",\n    showError: true,\n    onValueChange: setCounterProperties,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }));\n};\n\nCounterPropertiesTable.propTypes = {\n  formRef: PropTypes.any.isRequired,\n  disabled: PropTypes.bool.isRequired\n};\nexport default CounterPropertiesTable;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/customers/containers/CounterPropertiesTable/CounterPropertiesTable.js"],"names":["React","useMemo","useCallback","useState","PropTypes","filter","map","size","useDialog","useT","formatMoney","DataTable","InputHidden","ConfirmModal","NewCounterPropertyModal","CounterPropertiesTable","disabled","formRef","t","createDialog","counterProperties","setCounterProperties","disableAdd","columns","title","field","howMany","render","row","value","onAddClick","id","Component","props","onSubmit","counterProperty","current","setFieldValue","old","onEditClick","_","item","index","tableData","onDeleteClick","onConfirm","search","variant","this","gender","propTypes","any","isRequired","bool"],"mappings":"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","sourcesContent":["import React, {\n  useMemo,\n  useCallback,\n  useState\n} from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport filter from 'lodash/filter'\nimport map from 'lodash/map'\nimport size from 'lodash/size'\n\nimport { useDialog } from '@britania-crm/dialog'\nimport { useT } from '@britania-crm/i18n'\nimport { formatMoney } from '@britania-crm/utils/formatters'\nimport DataTable from '@britania-crm/web-components/DataTable'\nimport InputHidden from '@britania-crm/web-components/InputHidden'\nimport ConfirmModal from '@britania-crm/web-components/Modal/ConfirmModal'\nimport NewCounterPropertyModal from '@britania-crm/web-src/modules/customers/modals/NewCounterPropertyModal'\n\nconst CounterPropertiesTable = ({ disabled, formRef }) => {\n  const t = useT()\n  const { createDialog } = useDialog()\n\n  const [counterProperties, setCounterProperties] = useState([])\n\n  const disableAdd = useMemo(\n    () => disabled || size(counterProperties) >= 3,\n    [counterProperties, disabled]\n  )\n\n  const columns = useMemo(\n    () => [\n      {\n        title: t('description'),\n        field: 'description'\n      },\n      {\n        title: t('localization', { howMany: 1 }),\n        field: 'localization'\n      },\n      {\n        title: t('value'),\n        field: 'value',\n        render: (row) => formatMoney(row.value) || '-'\n      }\n    ],\n    [t]\n  )\n\n  const onAddClick = useCallback(\n    () => createDialog({\n      id: 'modal-add-new-counter-property',\n      Component: NewCounterPropertyModal,\n      props: {\n        onSubmit (counterProperty) {\n          formRef.current.setFieldValue('additionalInformation.counter.values', (old) => [...old, counterProperty])\n        }\n      }\n    }),\n    [createDialog, formRef]\n  )\n\n  const onEditClick = useCallback(\n    (_, row) => createDialog({\n      id: 'modal-edit-counter-property',\n      Component: NewCounterPropertyModal,\n      props: {\n        counterProperty: row,\n        onSubmit (counterProperty) {\n          formRef.current.setFieldValue(\n            'additionalInformation.counter.values',\n            (old) => map(old, (item, index) => index === row.tableData.id ? { id: row.id, ...counterProperty } : item)\n          )\n        }\n      }\n    }),\n    [createDialog, formRef]\n  )\n\n  const onDeleteClick = useCallback(\n    (_, row) => createDialog({\n      id: 'modal-delete-counter-property',\n      Component: ConfirmModal,\n      props: {\n        onConfirm () {\n          formRef.current.setFieldValue(\n            'additionalInformation.counter.values',\n            (old) => filter(old, (item, index) => index !== row.tableData.id)\n          )\n        }\n      }\n    }),\n    [createDialog, formRef]\n  )\n\n  return (\n    <>\n      <DataTable\n        options={ { search: false } }\n        data={ counterProperties }\n        columns={ columns }\n        title={ t('goods list') }\n        titleProps={ { variant: 'h6' } }\n        minimalistToolbar\n        addTitle={ t('add new {this}', {\n          this: t('goods list'),\n          gender: 'female'\n        }) }\n        onAddClick={ !disableAdd && onAddClick }\n        onEditClick={ !disabled && onEditClick }\n        onDeleteClick={ !disabled && onDeleteClick }\n      />\n      <InputHidden\n        name=\"values\"\n        showError\n        onValueChange={ setCounterProperties }\n      />\n    </>\n  )\n}\n\nCounterPropertiesTable.propTypes = {\n  formRef: PropTypes.any.isRequired,\n  disabled: PropTypes.bool.isRequired\n}\n\nexport default CounterPropertiesTable\n"]},"metadata":{},"sourceType":"module"}