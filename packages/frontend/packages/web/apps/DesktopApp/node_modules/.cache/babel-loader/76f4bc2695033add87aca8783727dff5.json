{"ast":null,"code":"import * as yup from 'yup';\nexport const responseValidationSchema = yup.array().of(yup.object({\n  type: yup.object().required(),\n  requiresJustification: yup.boolean().required(),\n  title: yup.string().required(),\n  nextTaskOrder: yup.string().nullable(),\n  finishWorkflowWithError: yup.boolean().required(),\n  finishWorkflowSuccessfully: yup.boolean().required()\n})).required().min(1);\nexport const conditionValidationSchema = yup.array().of(yup.object({\n  title: yup.string().required(),\n  fieldId: yup.number().required(),\n  accessId: yup.number().required(),\n  comparisonSymbol: yup.string().required(),\n  comparisonValue: yup.string().required(),\n  type: yup.object().required()\n}));","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/components/TreeView/validationSchemas.js"],"names":["yup","responseValidationSchema","array","of","object","type","required","requiresJustification","boolean","title","string","nextTaskOrder","nullable","finishWorkflowWithError","finishWorkflowSuccessfully","min","conditionValidationSchema","fieldId","number","accessId","comparisonSymbol","comparisonValue"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;AAEA,OAAO,MAAMC,wBAAwB,GAAGD,GAAG,CAACE,KAAJ,GAAYC,EAAZ,CAAeH,GAAG,CAACI,MAAJ,CAAW;AAChEC,EAAAA,IAAI,EAAEL,GAAG,CAACI,MAAJ,GAAaE,QAAb,EAD0D;AAEhEC,EAAAA,qBAAqB,EAAEP,GAAG,CAACQ,OAAJ,GAAcF,QAAd,EAFyC;AAGhEG,EAAAA,KAAK,EAAET,GAAG,CAACU,MAAJ,GAAaJ,QAAb,EAHyD;AAIhEK,EAAAA,aAAa,EAAEX,GAAG,CAACU,MAAJ,GAAaE,QAAb,EAJiD;AAKhEC,EAAAA,uBAAuB,EAAEb,GAAG,CAACQ,OAAJ,GAAcF,QAAd,EALuC;AAMhEQ,EAAAA,0BAA0B,EAAEd,GAAG,CAACQ,OAAJ,GAAcF,QAAd;AANoC,CAAX,CAAf,EAOpCA,QAPoC,GAOzBS,GAPyB,CAOrB,CAPqB,CAAjC;AASP,OAAO,MAAMC,yBAAyB,GAAGhB,GAAG,CAACE,KAAJ,GAAYC,EAAZ,CAAeH,GAAG,CAACI,MAAJ,CAAW;AACjEK,EAAAA,KAAK,EAAET,GAAG,CAACU,MAAJ,GAAaJ,QAAb,EAD0D;AAEjEW,EAAAA,OAAO,EAAEjB,GAAG,CAACkB,MAAJ,GAAaZ,QAAb,EAFwD;AAGjEa,EAAAA,QAAQ,EAAEnB,GAAG,CAACkB,MAAJ,GAAaZ,QAAb,EAHuD;AAIjEc,EAAAA,gBAAgB,EAAEpB,GAAG,CAACU,MAAJ,GAAaJ,QAAb,EAJ+C;AAKjEe,EAAAA,eAAe,EAAErB,GAAG,CAACU,MAAJ,GAAaJ,QAAb,EALgD;AAMjED,EAAAA,IAAI,EAAEL,GAAG,CAACI,MAAJ,GAAaE,QAAb;AAN2D,CAAX,CAAf,CAAlC","sourcesContent":["import * as yup from 'yup'\n\nexport const responseValidationSchema = yup.array().of(yup.object({\n  type: yup.object().required(),\n  requiresJustification: yup.boolean().required(),\n  title: yup.string().required(),\n  nextTaskOrder: yup.string().nullable(),\n  finishWorkflowWithError: yup.boolean().required(),\n  finishWorkflowSuccessfully: yup.boolean().required()\n})).required().min(1)\n\nexport const conditionValidationSchema = yup.array().of(yup.object({\n  title: yup.string().required(),\n  fieldId: yup.number().required(),\n  accessId: yup.number().required(),\n  comparisonSymbol: yup.string().required(),\n  comparisonValue: yup.string().required(),\n  type: yup.object().required()\n}))\n"]},"metadata":{},"sourceType":"module"}