{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/components/CheckboxStatus/CheckboxStatus.js\";\nimport React, { useEffect, useCallback, useState, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\nimport { useT } from '@britania-crm/i18n';\nimport colors from '@britania-crm/styles/colors';\nimport Checkbox from '../Checkbox';\nimport { Container, Label } from './styles';\n\nconst CheckboxStatus = props => {\n  const {\n    activeColor,\n    inactiveColor,\n    activeStatus,\n    inactiveStatus,\n    value,\n    onValueChange,\n    label,\n    notFistLabel,\n    ...rest\n  } = props;\n  const {\n    detached\n  } = rest;\n  const t = useT();\n  const [currentValue, setCurrentValue] = useState(detached ? value : undefined);\n  const checkboxLabel = useMemo(() => {\n    const firstStr = t(currentValue ? 'active' : 'inactive');\n    const secondStr = currentValue ? activeStatus : inactiveStatus;\n\n    if (notFistLabel) {\n      return secondStr || firstStr;\n    }\n\n    return `${firstStr}${secondStr ? ` - ${secondStr}` : ''}`;\n  }, [activeStatus, currentValue, inactiveStatus, notFistLabel, t]);\n  const handleValueChange = useCallback((value, fieldMounted) => {\n    setCurrentValue(value);\n    onValueChange(value, fieldMounted);\n  }, [onValueChange]);\n  useEffect(() => {\n    if (detached) {\n      setCurrentValue(value);\n    }\n  }, [detached, value]);\n\n  if (!detached) {\n    rest.onValueChange = handleValueChange;\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, label && /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, label), /*#__PURE__*/React.createElement(Checkbox, Object.assign({}, rest, {\n    value: value,\n    label: checkboxLabel,\n    icon: /*#__PURE__*/React.createElement(FiberManualRecordIcon, {\n      fontSize: \"small\",\n      htmlColor: inactiveColor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 16\n      }\n    }),\n    checkedIcon: /*#__PURE__*/React.createElement(FiberManualRecordIcon, {\n      fontSize: \"small\",\n      htmlColor: activeColor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 23\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  })));\n};\n\nCheckboxStatus.propTypes = {\n  value: PropTypes.bool,\n  label: PropTypes.string,\n  activeColor: PropTypes.string,\n  inactiveColor: PropTypes.string,\n  activeStatus: PropTypes.string,\n  inactiveStatus: PropTypes.string,\n  onValueChange: PropTypes.func,\n  notFistLabel: PropTypes.bool\n};\nCheckboxStatus.defaultProps = {\n  value: false,\n  activeColor: colors.success.main,\n  inactiveColor: colors.error.main,\n  activeStatus: null,\n  label: null,\n  inactiveStatus: null,\n\n  onValueChange() {},\n\n  notFistLabel: false\n};\nexport default CheckboxStatus;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/components/CheckboxStatus/CheckboxStatus.js"],"names":["React","useEffect","useCallback","useState","useMemo","PropTypes","FiberManualRecordIcon","useT","colors","Checkbox","Container","Label","CheckboxStatus","props","activeColor","inactiveColor","activeStatus","inactiveStatus","value","onValueChange","label","notFistLabel","rest","detached","t","currentValue","setCurrentValue","undefined","checkboxLabel","firstStr","secondStr","handleValueChange","fieldMounted","propTypes","bool","string","func","defaultProps","success","main","error"],"mappings":"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","sourcesContent":["import React, {\n  useEffect,\n  useCallback,\n  useState,\n  useMemo\n} from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord'\n\nimport { useT } from '@britania-crm/i18n'\nimport colors from '@britania-crm/styles/colors'\n\nimport Checkbox from '../Checkbox'\nimport {\n  Container,\n  Label\n} from './styles'\n\nconst CheckboxStatus = (props) => {\n  const {\n    activeColor,\n    inactiveColor,\n    activeStatus,\n    inactiveStatus,\n    value,\n    onValueChange,\n    label,\n    notFistLabel,\n    ...rest\n  } = props\n\n  const { detached } = rest\n\n  const t = useT()\n\n  const [currentValue, setCurrentValue] = useState(detached ? value : undefined)\n\n  const checkboxLabel = useMemo(\n    () => {\n      const firstStr = t(currentValue ? 'active' : 'inactive')\n      const secondStr = currentValue ? activeStatus : inactiveStatus\n      if (notFistLabel) {\n        return secondStr || firstStr\n      }\n      return `${ firstStr }${ secondStr ? ` - ${ secondStr }` : '' }`\n    },\n    [activeStatus, currentValue, inactiveStatus, notFistLabel, t]\n  )\n\n  const handleValueChange = useCallback(\n    (value, fieldMounted) => {\n      setCurrentValue(value)\n      onValueChange(value, fieldMounted)\n    },\n    [onValueChange]\n  )\n\n  useEffect(\n    () => {\n      if (detached) {\n        setCurrentValue(value)\n      }\n    },\n    [detached, value]\n  )\n\n  if (!detached) {\n    rest.onValueChange = handleValueChange\n  }\n\n  return (\n    <Container>\n      {label && <Label>{label}</Label>}\n      <Checkbox\n        { ...rest }\n        value={ value }\n        label={ checkboxLabel }\n        icon={ <FiberManualRecordIcon fontSize=\"small\" htmlColor={ inactiveColor } /> }\n        checkedIcon={ <FiberManualRecordIcon fontSize=\"small\" htmlColor={ activeColor } /> }\n      />\n    </Container>\n  )\n}\n\nCheckboxStatus.propTypes = {\n  value: PropTypes.bool,\n  label: PropTypes.string,\n  activeColor: PropTypes.string,\n  inactiveColor: PropTypes.string,\n  activeStatus: PropTypes.string,\n  inactiveStatus: PropTypes.string,\n  onValueChange: PropTypes.func,\n  notFistLabel: PropTypes.bool\n}\n\nCheckboxStatus.defaultProps = {\n  value: false,\n  activeColor: colors.success.main,\n  inactiveColor: colors.error.main,\n  activeStatus: null,\n  label: null,\n  inactiveStatus: null,\n  onValueChange () {},\n  notFistLabel: false\n}\n\nexport default CheckboxStatus\n"]},"metadata":{},"sourceType":"module"}