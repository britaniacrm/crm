{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/fan/containers/Percentages/Percentages.js\";\nimport React, { useMemo, useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport filter from 'lodash/filter';\nimport map from 'lodash/map';\nimport Grid from '@material-ui/core/Grid';\nimport { useDialog } from '@britania-crm/dialog';\nimport { useT } from '@britania-crm/i18n';\nimport { lowerAndStartCase } from '@britania-crm/utils/formatters';\nimport DataTable from '@britania-crm/web-components/DataTable';\nimport InputHidden from '@britania-crm/web-components/InputHidden';\nimport PercentagesModal from '../../modals/PercentagesModal';\n\nconst Percentages = ({\n  isDisabled,\n  formRef,\n  slaghterReturnOptions,\n  rangeOptions,\n  calculationOptions,\n  basisOfCalculationOptions,\n  descontOptions\n}) => {\n  const t = useT();\n  const {\n    createDialog\n  } = useDialog();\n  const [percentages, setPercentages] = useState([]);\n  const columns = useMemo(() => [{\n    title: t('percentage'),\n    field: 'percentage'\n  }, {\n    title: t('calculation basis'),\n    field: 'determinationBasis',\n    render: row => lowerAndStartCase(row.determinationBasis)\n  }, {\n    title: t('description'),\n    field: 'budgetDescription',\n    render: row => lowerAndStartCase(row.budgetDescription)\n  }, {\n    title: t('frequency', {\n      howMany: 1\n    }),\n    field: 'periodicity',\n    render: row => lowerAndStartCase(row.periodicity)\n  }, {\n    title: t('discount'),\n    field: 'discount'\n  }, {\n    title: t('basis of calculation'),\n    field: 'basisOfCalculation',\n    render: row => lowerAndStartCase(row.basisOfCalculation)\n  }, {\n    title: t('slaughter return'),\n    field: 'slaughterReturn',\n    render: row => row.slaughterReturn ? 'Sim' : 'NÃ£o'\n  }], [t]);\n  const onCreateClick = useCallback(() => createDialog({\n    id: 'add-new-porcentages-modal',\n    Component: PercentagesModal,\n    props: {\n      slaghterReturnOptions,\n      rangeOptions,\n      calculationOptions,\n      basisOfCalculationOptions,\n      descontOptions,\n\n      onSubmit(porcentage) {\n        formRef.current.setFieldValue('fan.percentages', old => [...old, porcentage]);\n      }\n\n    }\n  }), [basisOfCalculationOptions, calculationOptions, createDialog, descontOptions, formRef, rangeOptions, slaghterReturnOptions]);\n  const onEditClick = useCallback((event, row) => createDialog({\n    id: 'add-edit-porcentages-modal',\n    Component: PercentagesModal,\n    props: {\n      slaghterReturnOptions,\n      rangeOptions,\n      calculationOptions,\n      basisOfCalculationOptions,\n      descontOptions,\n      row,\n\n      onSubmit(porcentage) {\n        formRef.current.setFieldValue('fan.percentages', old => map(old, item => {\n          var _item$tableData, _row$tableData;\n\n          if (((_item$tableData = item.tableData) === null || _item$tableData === void 0 ? void 0 : _item$tableData.id) === (row === null || row === void 0 ? void 0 : (_row$tableData = row.tableData) === null || _row$tableData === void 0 ? void 0 : _row$tableData.id)) {\n            return { ...porcentage,\n              tableData: item.tableData\n            };\n          }\n\n          return item;\n        }));\n      }\n\n    }\n  }), [basisOfCalculationOptions, calculationOptions, createDialog, descontOptions, formRef, rangeOptions, slaghterReturnOptions]);\n  const onDeleteClick = useCallback((event, row) => {\n    formRef.current.setFieldValue('fan.percentages', old => filter(old, ({\n      tableData\n    }) => {\n      var _row$tableData2;\n\n      return (tableData === null || tableData === void 0 ? void 0 : tableData.id) !== (row === null || row === void 0 ? void 0 : (_row$tableData2 = row.tableData) === null || _row$tableData2 === void 0 ? void 0 : _row$tableData2.id);\n    }));\n  }, [formRef]);\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DataTable, {\n    data: percentages,\n    columns: columns,\n    addTitle: t('add new {this}', {\n      gender: 'female',\n      this: t('percentage description')\n    }),\n    onAddClick: !isDisabled && onCreateClick,\n    onEditClick: !isDisabled && onEditClick,\n    onDeleteClick: !isDisabled && onDeleteClick,\n    emptyMessage: t('{this} datagrid body empty data source message', {\n      this: t('percentage description')\n    }),\n    options: {\n      search: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(InputHidden, {\n    name: \"percentages\",\n    showError: true,\n    onValueChange: setPercentages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }));\n};\n\nPercentages.propTypes = {\n  isDisabled: PropTypes.bool.isRequired,\n  formRef: PropTypes.any.isRequired,\n  slaghterReturnOptions: PropTypes.array.isRequired,\n  rangeOptions: PropTypes.array.isRequired,\n  calculationOptions: PropTypes.array.isRequired,\n  basisOfCalculationOptions: PropTypes.array.isRequired,\n  descontOptions: PropTypes.array.isRequired\n};\nPercentages.defaultProps = {};\nexport default Percentages;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/fan/containers/Percentages/Percentages.js"],"names":["React","useMemo","useCallback","useState","PropTypes","filter","map","Grid","useDialog","useT","lowerAndStartCase","DataTable","InputHidden","PercentagesModal","Percentages","isDisabled","formRef","slaghterReturnOptions","rangeOptions","calculationOptions","basisOfCalculationOptions","descontOptions","t","createDialog","percentages","setPercentages","columns","title","field","render","row","determinationBasis","budgetDescription","howMany","periodicity","basisOfCalculation","slaughterReturn","onCreateClick","id","Component","props","onSubmit","porcentage","current","setFieldValue","old","onEditClick","event","item","tableData","onDeleteClick","gender","this","search","propTypes","bool","isRequired","any","array","defaultProps"],"mappings":"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","sourcesContent":["import React, {\n  useMemo,\n  useCallback,\n  useState\n} from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport filter from 'lodash/filter'\nimport map from 'lodash/map'\n\nimport Grid from '@material-ui/core/Grid'\n\nimport { useDialog } from '@britania-crm/dialog'\nimport { useT } from '@britania-crm/i18n'\nimport { lowerAndStartCase } from '@britania-crm/utils/formatters'\nimport DataTable from '@britania-crm/web-components/DataTable'\nimport InputHidden from '@britania-crm/web-components/InputHidden'\n\nimport PercentagesModal from '../../modals/PercentagesModal'\n\nconst Percentages = ({\n  isDisabled,\n  formRef,\n  slaghterReturnOptions,\n  rangeOptions,\n  calculationOptions,\n  basisOfCalculationOptions,\n  descontOptions\n}) => {\n  const t = useT()\n  const { createDialog } = useDialog()\n\n  const [percentages, setPercentages] = useState([])\n\n  const columns = useMemo(() => [\n    {\n      title: t('percentage'),\n      field: 'percentage'\n    },\n    {\n      title: t('calculation basis'),\n      field: 'determinationBasis',\n      render: (row) => lowerAndStartCase(row.determinationBasis)\n    },\n    {\n      title: t('description'),\n      field: 'budgetDescription',\n      render: (row) => lowerAndStartCase(row.budgetDescription)\n    },\n    {\n      title: t('frequency', { howMany: 1 }),\n      field: 'periodicity',\n      render: (row) => lowerAndStartCase(row.periodicity)\n    },\n    {\n      title: t('discount'),\n      field: 'discount'\n    },\n    {\n      title: t('basis of calculation'),\n      field: 'basisOfCalculation',\n      render: (row) => lowerAndStartCase(row.basisOfCalculation)\n    },\n    {\n      title: t('slaughter return'),\n      field: 'slaughterReturn',\n      render: (row) => row.slaughterReturn ? 'Sim' : 'NÃ£o'\n    }\n  ], [t])\n\n  const onCreateClick = useCallback(\n    () => createDialog({\n      id: 'add-new-porcentages-modal',\n      Component: PercentagesModal,\n      props: {\n        slaghterReturnOptions,\n        rangeOptions,\n        calculationOptions,\n        basisOfCalculationOptions,\n        descontOptions,\n        onSubmit (porcentage) {\n          formRef.current.setFieldValue('fan.percentages', (old) => [...old, porcentage])\n        }\n      }\n    }),\n    [basisOfCalculationOptions, calculationOptions, createDialog, descontOptions, formRef, rangeOptions, slaghterReturnOptions]\n  )\n\n  const onEditClick = useCallback(\n    (event, row) => createDialog({\n      id: 'add-edit-porcentages-modal',\n      Component: PercentagesModal,\n      props: {\n        slaghterReturnOptions,\n        rangeOptions,\n        calculationOptions,\n        basisOfCalculationOptions,\n        descontOptions,\n        row,\n        onSubmit (porcentage) {\n          formRef.current.setFieldValue('fan.percentages', (old) =>\n            map(old, (item) => {\n              if (item.tableData?.id === row?.tableData?.id) {\n                return { ...porcentage, tableData: item.tableData }\n              }\n              return item\n            })\n          )\n        }\n      }\n    }),\n    [basisOfCalculationOptions, calculationOptions, createDialog, descontOptions, formRef, rangeOptions, slaghterReturnOptions]\n  )\n\n  const onDeleteClick = useCallback(\n    (event, row) => {\n      formRef.current.setFieldValue('fan.percentages', (old) => filter(old, ({ tableData }) => tableData?.id !== row?.tableData?.id))\n    },\n    [formRef]\n  )\n\n  return (\n    <Grid container spacing={ 1 }>\n      <DataTable\n        data={ percentages }\n        columns={ columns }\n        addTitle={ t('add new {this}', {\n          gender: 'female',\n          this: t('percentage description')\n        }) }\n        onAddClick={ !isDisabled && onCreateClick }\n        onEditClick={ !isDisabled && onEditClick }\n        onDeleteClick={ !isDisabled && onDeleteClick }\n        emptyMessage={ t('{this} datagrid body empty data source message', { this: t('percentage description') }) }\n        options={ { search: false } }\n      />\n      <InputHidden\n        name=\"percentages\"\n        showError\n        onValueChange={ setPercentages }\n      />\n    </Grid>\n  )\n}\n\nPercentages.propTypes = {\n  isDisabled: PropTypes.bool.isRequired,\n  formRef: PropTypes.any.isRequired,\n  slaghterReturnOptions: PropTypes.array.isRequired,\n  rangeOptions: PropTypes.array.isRequired,\n  calculationOptions: PropTypes.array.isRequired,\n  basisOfCalculationOptions: PropTypes.array.isRequired,\n  descontOptions: PropTypes.array.isRequired\n}\n\nPercentages.defaultProps = {}\n\nexport default Percentages\n"]},"metadata":{},"sourceType":"module"}