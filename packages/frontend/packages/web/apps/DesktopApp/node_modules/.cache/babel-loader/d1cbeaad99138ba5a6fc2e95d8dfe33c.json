{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/components/InputDateRange/InputDateRangeForm.js\";\nimport React, { forwardRef, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { FieldProvider, useField } from '@britania-crm/forms';\nimport InputDateRangeStyled from './InputDateRangeStyled';\n\nconst InputDateRangeForm = props => {\n  const {\n    setValue,\n    ...rest\n  } = props;\n  const {\n    error,\n    required\n  } = useField();\n  const handleChange = useCallback(newDates => setValue(newDates), [setValue]);\n  return /*#__PURE__*/React.createElement(InputDateRangeStyled, Object.assign({}, rest, {\n    onChange: handleChange,\n    error: error,\n    required: required,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }));\n};\n\nInputDateRangeForm.propTypes = {\n  setValue: PropTypes.func.isRequired\n};\nconst Field = forwardRef(({\n  path,\n  ...props\n}, ref) => /*#__PURE__*/React.createElement(FieldProvider, Object.assign({\n  ref: ref\n}, props, {\n  registerFieldOptions: {\n    path\n  },\n  FieldComponent: InputDateRangeForm,\n  touchOnChange: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 3\n  }\n})));\nField.propTypes = {\n  name: PropTypes.string.isRequired,\n  disabled: PropTypes.bool,\n  onChange: PropTypes.func,\n  onBlur: PropTypes.func,\n  onValueChange: PropTypes.func,\n  path: PropTypes.string,\n  defaultValue: PropTypes.any,\n  validateOnBlur: PropTypes.bool\n};\nField.defaultProps = {\n  disabled: false,\n\n  onChange() {},\n\n  onValueChange() {},\n\n  onBlur() {},\n\n  path: 'value',\n  defaultValue: {\n    from: '',\n    to: ''\n  },\n  validateOnBlur: true\n};\nexport default Field;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/components/InputDateRange/InputDateRangeForm.js"],"names":["React","forwardRef","useCallback","PropTypes","FieldProvider","useField","InputDateRangeStyled","InputDateRangeForm","props","setValue","rest","error","required","handleChange","newDates","propTypes","func","isRequired","Field","path","ref","name","string","disabled","bool","onChange","onBlur","onValueChange","defaultValue","any","validateOnBlur","defaultProps","from","to"],"mappings":";AAAA,OAAOA,KAAP,IACEC,UADF,EAEEC,WAFF,QAGO,OAHP;AAKA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SACEC,aADF,EAEEC,QAFF,QAGO,qBAHP;AAKA,OAAOC,oBAAP,MAAiC,wBAAjC;;AAEA,MAAMC,kBAAkB,GAAIC,KAAD,IAAW;AACpC,QAAM;AACJC,IAAAA,QADI;AAEJ,OAAGC;AAFC,MAGFF,KAHJ;AAKA,QAAM;AAAEG,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBP,QAAQ,EAApC;AAEA,QAAMQ,YAAY,GAAGX,WAAW,CAC7BY,QAAD,IAAcL,QAAQ,CAACK,QAAD,CADQ,EAE9B,CAACL,QAAD,CAF8B,CAAhC;AAKA,sBACE,oBAAC,oBAAD,oBACOC,IADP;AAEE,IAAA,QAAQ,EAAGG,YAFb;AAGE,IAAA,KAAK,EAAGF,KAHV;AAIE,IAAA,QAAQ,EAAGC,QAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAQD,CArBD;;AAuBAL,kBAAkB,CAACQ,SAAnB,GAA+B;AAAEN,EAAAA,QAAQ,EAAEN,SAAS,CAACa,IAAV,CAAeC;AAA3B,CAA/B;AAEA,MAAMC,KAAK,GAAGjB,UAAU,CAAC,CAAC;AAAEkB,EAAAA,IAAF;AAAQ,KAAGX;AAAX,CAAD,EAAqBY,GAArB,kBACvB,oBAAC,aAAD;AACE,EAAA,GAAG,EAAGA;AADR,GAEOZ,KAFP;AAGE,EAAA,oBAAoB,EAAG;AAAEW,IAAAA;AAAF,GAHzB;AAIE,EAAA,cAAc,EAAGZ,kBAJnB;AAKE,EAAA,aAAa,MALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADsB,CAAxB;AAUAW,KAAK,CAACH,SAAN,GAAkB;AAChBM,EAAAA,IAAI,EAAElB,SAAS,CAACmB,MAAV,CAAiBL,UADP;AAEhBM,EAAAA,QAAQ,EAAEpB,SAAS,CAACqB,IAFJ;AAGhBC,EAAAA,QAAQ,EAAEtB,SAAS,CAACa,IAHJ;AAIhBU,EAAAA,MAAM,EAAEvB,SAAS,CAACa,IAJF;AAKhBW,EAAAA,aAAa,EAAExB,SAAS,CAACa,IALT;AAMhBG,EAAAA,IAAI,EAAEhB,SAAS,CAACmB,MANA;AAOhBM,EAAAA,YAAY,EAAEzB,SAAS,CAAC0B,GAPR;AAQhBC,EAAAA,cAAc,EAAE3B,SAAS,CAACqB;AARV,CAAlB;AAWAN,KAAK,CAACa,YAAN,GAAqB;AACnBR,EAAAA,QAAQ,EAAE,KADS;;AAEnBE,EAAAA,QAAQ,GAAI,CAAE,CAFK;;AAGnBE,EAAAA,aAAa,GAAI,CAAE,CAHA;;AAInBD,EAAAA,MAAM,GAAI,CAAE,CAJO;;AAKnBP,EAAAA,IAAI,EAAE,OALa;AAMnBS,EAAAA,YAAY,EAAE;AACZI,IAAAA,IAAI,EAAE,EADM;AAEZC,IAAAA,EAAE,EAAE;AAFQ,GANK;AAUnBH,EAAAA,cAAc,EAAE;AAVG,CAArB;AAaA,eAAeZ,KAAf","sourcesContent":["import React, {\n  forwardRef,\n  useCallback\n} from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport {\n  FieldProvider,\n  useField\n} from '@britania-crm/forms'\n\nimport InputDateRangeStyled from './InputDateRangeStyled'\n\nconst InputDateRangeForm = (props) => {\n  const {\n    setValue,\n    ...rest\n  } = props\n\n  const { error, required } = useField()\n\n  const handleChange = useCallback(\n    (newDates) => setValue(newDates),\n    [setValue]\n  )\n\n  return (\n    <InputDateRangeStyled\n      { ...rest }\n      onChange={ handleChange }\n      error={ error }\n      required={ required }\n    />\n  )\n}\n\nInputDateRangeForm.propTypes = { setValue: PropTypes.func.isRequired }\n\nconst Field = forwardRef(({ path, ...props }, ref) => (\n  <FieldProvider\n    ref={ ref }\n    { ...props }\n    registerFieldOptions={ { path } }\n    FieldComponent={ InputDateRangeForm }\n    touchOnChange\n  />\n))\n\nField.propTypes = {\n  name: PropTypes.string.isRequired,\n  disabled: PropTypes.bool,\n  onChange: PropTypes.func,\n  onBlur: PropTypes.func,\n  onValueChange: PropTypes.func,\n  path: PropTypes.string,\n  defaultValue: PropTypes.any,\n  validateOnBlur: PropTypes.bool\n}\n\nField.defaultProps = {\n  disabled: false,\n  onChange () {},\n  onValueChange () {},\n  onBlur () {},\n  path: 'value',\n  defaultValue: {\n    from: '',\n    to: ''\n  },\n  validateOnBlur: true\n}\n\nexport default Field\n"]},"metadata":{},"sourceType":"module"}