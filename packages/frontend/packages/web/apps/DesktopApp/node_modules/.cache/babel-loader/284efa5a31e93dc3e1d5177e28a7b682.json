{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/components/CalendarPicker/CalendarPicker.js\";\nimport React, { useMemo, useCallback, useRef, useEffect } from 'react';\nimport Flatpickr from 'react-flatpickr';\nimport flatpickr from 'flatpickr';\nimport { Portuguese } from 'flatpickr/dist/l10n/pt';\nimport MonthSelectPlugin from 'flatpickr/dist/plugins/monthSelect';\nimport moment from 'moment/moment';\nimport PropTypes from 'prop-types';\nimport find from 'lodash/find';\nimport first from 'lodash/first';\nimport isArray from 'lodash/isArray';\nimport isBoolean from 'lodash/isBoolean';\nimport isEmpty from 'lodash/isEmpty';\nimport isFunction from 'lodash/isFunction';\nimport map from 'lodash/map';\nimport omitBy from 'lodash/omitBy';\nimport { dateBackFormat, dateTimeBackFormat, timeBackFormat, monthYearBackFormat } from '@britania-crm/utils/date';\nimport useStyles from './styles';\n\nif (typeof window !== 'undefined') {\n  flatpickr.localize(Portuguese);\n}\n\nconst CalendarPicker = props => {\n  const {\n    mode,\n    minDate,\n    maxDate,\n    minTime,\n    maxTime,\n    disabledDates,\n    options: externalOptions,\n    onChange,\n    children,\n    value,\n    styles,\n    withoutInput,\n    disabled\n  } = props;\n  useStyles();\n  const calendarRef = useRef(null);\n  const relative = useMemo(() => !children, [children]);\n  const momentBack = useMemo(() => {\n    switch (mode) {\n      case 'time':\n        return timeBackFormat;\n\n      case 'datetime':\n        return dateTimeBackFormat;\n\n      case 'month':\n        return monthYearBackFormat;\n\n      case 'date':\n      default:\n        return dateBackFormat;\n    }\n  }, [mode]);\n  const dateFormat = useMemo(() => {\n    switch (mode) {\n      case 'time':\n        return 'H:i';\n\n      case 'datetime':\n        return 'Y-m-d H:i';\n\n      case 'month':\n        return 'Y-m';\n\n      case 'date':\n      default:\n        return 'Y-m-d';\n    }\n  }, [mode]);\n  const date = useMemo(() => {\n    if (isArray(value)) {\n      if (isEmpty(value)) {\n        return [];\n      }\n\n      const test = map(value, val => moment(val, momentBack, true));\n      const isInvalid = !!find(test, item => !item.isValid());\n\n      if (isInvalid) {\n        return value;\n      }\n\n      return map(test, item => item.format(momentBack));\n    }\n\n    if (isEmpty(value)) {\n      return null;\n    }\n\n    const test = moment(value, momentBack, true);\n\n    if (test.isValid()) {\n      return test.format(momentBack);\n    }\n\n    return value;\n  }, [momentBack, value]);\n  const removeInput = useMemo(() => withoutInput ? {\n    display: 'none',\n    ...styles\n  } : styles, [styles, withoutInput]);\n  const options = useMemo(() => {\n    const plugins = [];\n\n    if (mode === 'month') {\n      plugins.push(new MonthSelectPlugin({\n        shorthand: false,\n        dateFormat: 'Y-m-d',\n        altFormat: 'm/Y'\n      }));\n    }\n\n    return omitBy({ ...externalOptions,\n      disableMobile: true,\n      inline: relative,\n      static: relative,\n      wrap: !relative,\n      altInputClass: relative ? 'hide-flatpickr-native-input' : '',\n      appendTo: relative ? undefined : document.getElementById('calendar-picker-portal'),\n      dateFormat,\n      minDate,\n      maxDate,\n      minTime,\n      maxTime,\n      disable: disabledDates,\n      enableTime: mode === 'time' || mode === 'datetime',\n      noCalendar: mode === 'time',\n      allowInput: true,\n      clickOpens: !relative && !disabled,\n      plugins\n    }, item => !isBoolean(item) && !isFunction(item) && isEmpty(item));\n  }, [mode, externalOptions, relative, dateFormat, minDate, maxDate, minTime, maxTime, disabledDates, disabled]);\n  const handleChange = useCallback(([...dates]) => {\n    let values = map(dates, newDate => moment(newDate).format(momentBack));\n\n    if (mode === 'date' && options.mode !== 'range') {\n      values = first(values);\n    }\n\n    onChange(values);\n  }, [mode, options.mode, onChange, momentBack]);\n  useEffect(() => {\n    const momentDate = moment(date, dateBackFormat, true);\n    const momentMinDate = moment(minDate, dateBackFormat, true);\n\n    if (!disabled && minDate && (calendarRef === null || calendarRef === void 0 ? void 0 : calendarRef.current)) {\n      if (momentDate.isAfter(momentMinDate)) {\n        calendarRef.current.flatpickr.jumpToDate(date);\n      } else {\n        calendarRef.current.flatpickr.jumpToDate(minDate);\n      }\n    }\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  [minDate, date]);\n  return /*#__PURE__*/React.createElement(Flatpickr, {\n    ref: calendarRef,\n    style: removeInput,\n    value: date,\n    options: options,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flatpickr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }\n  }, children));\n};\n\nCalendarPicker.propTypes = {\n  mode: PropTypes.oneOf(['date', 'datetime', 'time', 'month']),\n  minDate: PropTypes.oneOfType([PropTypes.instanceOf(Date), PropTypes.string]),\n  maxDate: PropTypes.oneOfType([PropTypes.instanceOf(Date), PropTypes.string]),\n  minTime: PropTypes.string,\n  maxTime: PropTypes.string,\n  disabledDates: PropTypes.arrayOf(PropTypes.string),\n  onChange: PropTypes.func,\n  options: PropTypes.object,\n  children: PropTypes.any,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n  withoutInput: PropTypes.bool,\n  disabled: PropTypes.bool,\n  styles: PropTypes.object\n};\nCalendarPicker.defaultProps = {\n  mode: 'date',\n  minDate: null,\n  maxDate: null,\n  minTime: null,\n  maxTime: null,\n  disabledDates: [],\n\n  onChange() {},\n\n  options: {},\n  children: undefined,\n  value: null,\n  withoutInput: false,\n  disabled: false,\n  styles: {}\n};\nexport default CalendarPicker;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/components/CalendarPicker/CalendarPicker.js"],"names":["React","useMemo","useCallback","useRef","useEffect","Flatpickr","flatpickr","Portuguese","MonthSelectPlugin","moment","PropTypes","find","first","isArray","isBoolean","isEmpty","isFunction","map","omitBy","dateBackFormat","dateTimeBackFormat","timeBackFormat","monthYearBackFormat","useStyles","window","localize","CalendarPicker","props","mode","minDate","maxDate","minTime","maxTime","disabledDates","options","externalOptions","onChange","children","value","styles","withoutInput","disabled","calendarRef","relative","momentBack","dateFormat","date","test","val","isInvalid","item","isValid","format","removeInput","display","plugins","push","shorthand","altFormat","disableMobile","inline","static","wrap","altInputClass","appendTo","undefined","document","getElementById","disable","enableTime","noCalendar","allowInput","clickOpens","handleChange","dates","values","newDate","momentDate","momentMinDate","current","isAfter","jumpToDate","propTypes","oneOf","oneOfType","instanceOf","Date","string","arrayOf","func","object","any","bool","defaultProps"],"mappings":"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","sourcesContent":["import React, {\n  useMemo,\n  useCallback,\n  useRef,\n  useEffect\n} from 'react'\nimport Flatpickr from 'react-flatpickr'\n\nimport flatpickr from 'flatpickr'\nimport { Portuguese } from 'flatpickr/dist/l10n/pt'\nimport MonthSelectPlugin from 'flatpickr/dist/plugins/monthSelect'\nimport moment from 'moment/moment'\nimport PropTypes from 'prop-types'\n\nimport find from 'lodash/find'\nimport first from 'lodash/first'\nimport isArray from 'lodash/isArray'\nimport isBoolean from 'lodash/isBoolean'\nimport isEmpty from 'lodash/isEmpty'\nimport isFunction from 'lodash/isFunction'\nimport map from 'lodash/map'\nimport omitBy from 'lodash/omitBy'\n\nimport {\n  dateBackFormat,\n  dateTimeBackFormat,\n  timeBackFormat,\n  monthYearBackFormat\n} from '@britania-crm/utils/date'\n\nimport useStyles from './styles'\n\nif (typeof window !== 'undefined') {\n  flatpickr.localize(Portuguese)\n}\n\nconst CalendarPicker = (props) => {\n  const {\n    mode,\n    minDate,\n    maxDate,\n    minTime,\n    maxTime,\n    disabledDates,\n    options: externalOptions,\n    onChange,\n    children,\n    value,\n    styles,\n    withoutInput,\n    disabled\n  } = props\n\n  useStyles()\n\n  const calendarRef = useRef(null)\n\n  const relative = useMemo(() => !children, [children])\n\n  const momentBack = useMemo(\n    () => {\n      switch (mode) {\n        case 'time': return timeBackFormat\n        case 'datetime': return dateTimeBackFormat\n        case 'month': return monthYearBackFormat\n        case 'date':\n        default: return dateBackFormat\n      }\n    },\n    [mode]\n  )\n\n  const dateFormat = useMemo(\n    () => {\n      switch (mode) {\n        case 'time': return 'H:i'\n        case 'datetime': return 'Y-m-d H:i'\n        case 'month': return 'Y-m'\n        case 'date':\n        default: return 'Y-m-d'\n      }\n    },\n    [mode]\n  )\n\n  const date = useMemo(\n    () => {\n      if (isArray(value)) {\n        if (isEmpty(value)) {\n          return []\n        }\n        const test = map(value, (val) => moment(val, momentBack, true))\n        const isInvalid = !!find(test, (item) => !item.isValid())\n        if (isInvalid) {\n          return value\n        }\n        return map(test, (item) => item.format(momentBack))\n      }\n\n      if (isEmpty(value)) {\n        return null\n      }\n      const test = moment(value, momentBack, true)\n      if (test.isValid()) {\n        return test.format(momentBack)\n      }\n      return value\n    },\n    [momentBack, value]\n  )\n\n  const removeInput = useMemo(\n    () => withoutInput ? { display: 'none', ...styles } : styles,\n    [styles, withoutInput]\n  )\n\n  const options = useMemo(\n    () => {\n      const plugins = []\n\n      if (mode === 'month') {\n        plugins.push(\n          new MonthSelectPlugin({\n            shorthand: false,\n            dateFormat: 'Y-m-d',\n            altFormat: 'm/Y'\n          })\n        )\n      }\n\n      return omitBy({\n        ...externalOptions,\n        disableMobile: true,\n        inline: relative,\n        static: relative,\n        wrap: !relative,\n        altInputClass: relative ? 'hide-flatpickr-native-input' : '',\n        appendTo: relative ? undefined : document.getElementById('calendar-picker-portal'),\n        dateFormat,\n        minDate,\n        maxDate,\n        minTime,\n        maxTime,\n        disable: disabledDates,\n        enableTime: mode === 'time' || mode === 'datetime',\n        noCalendar: mode === 'time',\n        allowInput: true,\n        clickOpens: !relative && !disabled,\n        plugins\n      }, (item) => !isBoolean(item) && !isFunction(item) && isEmpty(item))\n    },\n    [mode, externalOptions, relative, dateFormat, minDate, maxDate, minTime, maxTime, disabledDates, disabled]\n  )\n\n  const handleChange = useCallback(\n    ([...dates]) => {\n      let values = map(dates, (newDate) => moment(newDate).format(momentBack))\n      if (mode === 'date' && options.mode !== 'range') {\n        values = first(values)\n      }\n      onChange(values)\n    },\n    [mode, options.mode, onChange, momentBack]\n  )\n\n  useEffect(\n    () => {\n      const momentDate = moment(date, dateBackFormat, true)\n      const momentMinDate = moment(minDate, dateBackFormat, true)\n      if (!disabled && minDate && calendarRef?.current) {\n        if (momentDate.isAfter(momentMinDate)) {\n          calendarRef.current.flatpickr.jumpToDate(date)\n        } else {\n          calendarRef.current.flatpickr.jumpToDate(minDate)\n        }\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [minDate, date]\n  )\n\n  return (\n    <Flatpickr\n      ref={ calendarRef }\n      style={ removeInput }\n      value={ date }\n      options={ options }\n      onChange={ handleChange }\n    >\n      <div className=\"flatpickr\">\n        {children}\n      </div>\n    </Flatpickr>\n  )\n}\n\nCalendarPicker.propTypes = {\n  mode: PropTypes.oneOf(['date', 'datetime', 'time', 'month']),\n  minDate: PropTypes.oneOfType([\n    PropTypes.instanceOf(Date),\n    PropTypes.string\n  ]),\n  maxDate: PropTypes.oneOfType([\n    PropTypes.instanceOf(Date),\n    PropTypes.string\n  ]),\n  minTime: PropTypes.string,\n  maxTime: PropTypes.string,\n  disabledDates: PropTypes.arrayOf(PropTypes.string),\n  onChange: PropTypes.func,\n  options: PropTypes.object,\n  children: PropTypes.any,\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string)\n  ]),\n  withoutInput: PropTypes.bool,\n  disabled: PropTypes.bool,\n  styles: PropTypes.object\n}\n\nCalendarPicker.defaultProps = {\n  mode: 'date',\n  minDate: null,\n  maxDate: null,\n  minTime: null,\n  maxTime: null,\n  disabledDates: [],\n  onChange () {},\n  options: {},\n  children: undefined,\n  value: null,\n  withoutInput: false,\n  disabled: false,\n  styles: {}\n}\n\nexport default CalendarPicker\n"]},"metadata":{},"sourceType":"module"}