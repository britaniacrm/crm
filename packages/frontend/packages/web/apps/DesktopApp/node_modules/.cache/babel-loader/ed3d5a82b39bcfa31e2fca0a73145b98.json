{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/customerRanking/components/Table/Table.js\";\nimport React, { memo } from 'react';\nimport { useTable } from 'react-table';\nimport PropTypes from 'prop-types';\nimport MuiTable from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { getColor, getAppropriatedColor } from '../../utils';\nimport { TableContainer } from './styles.js';\n\nconst Table = ({\n  columns,\n  data,\n  updateMyData,\n  handleColumnEditable,\n  columnEditable\n}) => {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    footerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data,\n    updateMyData,\n    handleColumnEditable,\n    columnEditable\n  });\n  return /*#__PURE__*/React.createElement(TableContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tableWrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MuiTable, Object.assign({}, getTableProps(), {\n    stickyHeader: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, headerGroups.map((headerGroup, index) => /*#__PURE__*/React.createElement(TableRow, Object.assign({}, headerGroup.getHeaderGroupProps(), {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }), headerGroup.headers.map((column, indexCell) => /*#__PURE__*/React.createElement(TableCell, Object.assign({}, column.getHeaderProps(), {\n    key: indexCell,\n    style: {\n      background: getColor(column),\n      top: index === 1 ? 48 : 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 19\n    }\n  }), column.render('Header')))))), /*#__PURE__*/React.createElement(TableBody, Object.assign({}, getTableBodyProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }), rows.map((row, index) => {\n    prepareRow(row);\n    return /*#__PURE__*/React.createElement(React.Fragment, Object.assign({}, row.getRowProps(), {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 19\n      }\n    }, row.cells.map((cell, index) => {\n      var _cell$column, _cell$column$parent;\n\n      return /*#__PURE__*/React.createElement(TableCell, Object.assign({\n        style: {\n          background: getAppropriatedColor(cell === null || cell === void 0 ? void 0 : (_cell$column = cell.column) === null || _cell$column === void 0 ? void 0 : (_cell$column$parent = _cell$column.parent) === null || _cell$column$parent === void 0 ? void 0 : _cell$column$parent.id)\n        }\n      }, cell.getCellProps(), {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 23\n        }\n      }), cell.render('Cell'));\n    })));\n  })), /*#__PURE__*/React.createElement(\"tfoot\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, footerGroups.map((group, index) => /*#__PURE__*/React.createElement(TableRow, Object.assign({\n    key: index\n  }, group.getFooterGroupProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }), group.headers.map((column, index) => {\n    var _column$parent;\n\n    return /*#__PURE__*/React.createElement(TableCell, Object.assign({\n      key: index\n    }, column.getFooterProps(), {\n      style: {\n        background: getAppropriatedColor(column === null || column === void 0 ? void 0 : (_column$parent = column.parent) === null || _column$parent === void 0 ? void 0 : _column$parent.id)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 19\n      }\n    }), column.render('Footer'));\n  })))))));\n};\n\nexport default memo(Table);\nTable.propTypes = {\n  columns: PropTypes.object.isRequired,\n  data: PropTypes.object.isRequired,\n  updateMyData: PropTypes.func.isRequired,\n  handleColumnEditable: PropTypes.func.isRequired,\n  columnEditable: PropTypes.string.isRequired\n};","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/customerRanking/components/Table/Table.js"],"names":["React","memo","useTable","PropTypes","MuiTable","TableBody","TableCell","TableHead","TableRow","getColor","getAppropriatedColor","TableContainer","Table","columns","data","updateMyData","handleColumnEditable","columnEditable","getTableProps","getTableBodyProps","headerGroups","footerGroups","rows","prepareRow","map","headerGroup","index","getHeaderGroupProps","headers","column","indexCell","getHeaderProps","background","top","render","row","getRowProps","cells","cell","parent","id","getCellProps","group","getFooterGroupProps","getFooterProps","propTypes","object","isRequired","func","string"],"mappings":"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","sourcesContent":["import React, { memo } from 'react'\nimport { useTable } from 'react-table'\n\nimport PropTypes from 'prop-types'\n\nimport MuiTable from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\nimport {\n  getColor,\n  getAppropriatedColor\n} from '../../utils'\nimport { TableContainer } from './styles.js'\n\nconst Table = ({\n  columns,\n  data,\n  updateMyData,\n  handleColumnEditable,\n  columnEditable\n}) => {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    footerGroups,\n    rows,\n    prepareRow\n  } = useTable(\n    {\n      columns,\n      data,\n      updateMyData,\n      handleColumnEditable,\n      columnEditable\n    }\n  )\n\n  return (\n    <TableContainer>\n      <div className=\"tableWrap\">\n        <MuiTable { ...getTableProps() } stickyHeader>\n          <TableHead>\n            {headerGroups.map((headerGroup, index) => (\n              <TableRow { ...headerGroup.getHeaderGroupProps() }\n                key={ index }\n              >\n                {headerGroup.headers.map((column, indexCell) => (\n                  <TableCell { ...column.getHeaderProps() }\n                    key={ indexCell }\n                    style={ { background: getColor(column), top: index === 1 ? 48 : 0 } }\n                  >{\n                      column.render('Header')\n                    }</TableCell>\n                ))}\n              </TableRow>\n            ))}\n          </TableHead>\n          <TableBody { ...getTableBodyProps() }>\n            {rows.map((row, index) => {\n              prepareRow(row)\n              return (\n                <React.Fragment { ...row.getRowProps() } key={ index }>\n                  <TableRow>\n                    {row.cells.map((cell, index) => (\n                      <TableCell\n                        style={ { background: getAppropriatedColor(cell?.column?.parent?.id) } }\n                        { ...cell.getCellProps() }\n                        key={ index }\n                      >{cell.render('Cell')}</TableCell>\n                    ))}\n                  </TableRow>\n                </React.Fragment>\n              )\n            })}\n          </TableBody>\n          <tfoot>\n            {footerGroups.map((group, index) => (\n              <TableRow key={ index } { ...group.getFooterGroupProps() }>\n                {group.headers.map((column, index) => (\n                  <TableCell\n                    key={ index }\n                    { ...column.getFooterProps() }\n                    style={ { background: getAppropriatedColor(column?.parent?.id) } }\n                  >{column.render('Footer')}\n                  </TableCell>\n                ))}\n              </TableRow>\n            ))}\n          </tfoot>\n        </MuiTable>\n      </div>\n    </TableContainer>\n  )\n}\n\nexport default memo(Table)\n\nTable.propTypes = {\n  columns: PropTypes.object.isRequired,\n  data: PropTypes.object.isRequired,\n  updateMyData: PropTypes.func.isRequired,\n  handleColumnEditable: PropTypes.func.isRequired,\n  columnEditable: PropTypes.string.isRequired\n}\n"]},"metadata":{},"sourceType":"module"}