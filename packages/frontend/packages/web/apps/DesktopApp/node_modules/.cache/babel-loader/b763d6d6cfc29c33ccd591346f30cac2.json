{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/components/TransferList/TransferListStyled.js\";\nimport React, { useCallback, useState, useMemo, Fragment, forwardRef, memo } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport filter from 'lodash/filter';\nimport find from 'lodash/find';\nimport isEmpty from 'lodash/isEmpty';\nimport map from 'lodash/map';\nimport partition from 'lodash/partition';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Paper from '@material-ui/core/Paper';\nimport { areEqual } from '@britania-crm/utils/memo';\nimport Checkbox from '@britania-crm/web-components/Checkbox';\nimport { LeftButtonShuttle, RightButtonShuttle } from '@britania-crm/web-components/Icons';\nimport InputSearch from '@britania-crm/web-components/InputSearch';\nimport CircularLoader from '@britania-crm/web-components/Loader/CircularLoader';\nimport useStyles, { ButtonWrapper, ListHeader, ListTitle, AlertHeader, AlertHeaderLabel, AlertHeaderTitleProfile } from './styles';\nconst TransferList = forwardRef(({\n  header,\n  type,\n  title,\n  onChange,\n  valueKey,\n  labelKey,\n  value,\n  onFilterChange,\n  options,\n  loading\n}, fieldRef) => {\n  const classes = useStyles();\n  const autoCompleteMode = useMemo(() => !!onFilterChange, [onFilterChange]);\n  const [checked, setChecked] = useState([]);\n  const [searched, setSearched] = useState({\n    left: '',\n    right: ''\n  });\n  const [left, right] = useMemo(() => partition(options, option => !find(value, item => String(item[valueKey]) === String(option[valueKey]))), [options, value, valueKey]); // Retorna um array com todos os items que não foram marcados/checked,\n\n  const not = useCallback((a, b) => a.filter(val => !find(b, item => item[valueKey] === val[valueKey] || item[valueKey] === String(val[valueKey]))), [valueKey]);\n  /**\n   * Faz uma intersecção do conjunto geral de todos os que estão marcados/checkeds,\n   * seja da lista da direita ou da esquerda, separando em um novo array\n   *  */\n\n  const intersection = useCallback((a, b) => a.filter(val => !!find(b, item => item[valueKey] === val[valueKey] || item[valueKey] === String(val[valueKey]))), [valueKey]);\n  /**\n   *  Retorna um array com todos os items que foram marcados/checked\n   *  da lista da esquerda\n   * */\n\n  const leftChecked = useMemo(() => intersection(checked, left), [checked, intersection, left]);\n  /**\n   *  Retorna um array com todos os items que foram marcados (checked)\n   *  da lista da direita\n   * */\n\n  const rightChecked = useMemo(() => intersection(checked, right), [checked, intersection, right]); // Shuttle\n\n  const requestSearch = useCallback((side, event) => {\n    const {\n      value\n    } = event.target;\n    if (autoCompleteMode) onFilterChange(side, value);\n\n    if (side === 'right') {\n      setSearched(prevState => ({ ...prevState,\n        right: value\n      }));\n    } else {\n      setSearched(prevState => ({ ...prevState,\n        left: value\n      }));\n    }\n  }, [autoCompleteMode, onFilterChange]);\n  const filteredRightResults = useMemo(() => filter(right, item => {\n    var _item$labelKey, _item$labelKey$toLowe, _searched$right;\n\n    return item && ((_item$labelKey = item[labelKey]) === null || _item$labelKey === void 0 ? void 0 : (_item$labelKey$toLowe = _item$labelKey.toLowerCase()) === null || _item$labelKey$toLowe === void 0 ? void 0 : _item$labelKey$toLowe.includes(searched === null || searched === void 0 ? void 0 : (_searched$right = searched.right) === null || _searched$right === void 0 ? void 0 : _searched$right.toLowerCase()));\n  }), [labelKey, right, searched.right]);\n  const filteredLeftResults = useMemo(() => not(filter(left, item => {\n    var _item$labelKey2, _item$labelKey2$toLow, _searched$left;\n\n    return item && ((_item$labelKey2 = item[labelKey]) === null || _item$labelKey2 === void 0 ? void 0 : (_item$labelKey2$toLow = _item$labelKey2.toLowerCase()) === null || _item$labelKey2$toLow === void 0 ? void 0 : _item$labelKey2$toLow.includes(searched === null || searched === void 0 ? void 0 : (_searched$left = searched.left) === null || _searched$left === void 0 ? void 0 : _searched$left.toLowerCase()));\n  }), right), [not, left, right, labelKey, searched.left]);\n  const handleToggle = useCallback(value => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  }, [checked]);\n  const handleMoveCheckedToLeft = useCallback(() => {\n    onChange(filter(value, option => !find(rightChecked, item => String(item[valueKey]) === String(option[valueKey]))));\n    setChecked(oldChecked => not(oldChecked, rightChecked), valueKey);\n  }, [onChange, value, valueKey, rightChecked, not]);\n  const handleMoveCheckedToRight = useCallback(() => {\n    if (autoCompleteMode) {\n      onChange([...value, ...checked]);\n      setChecked([]);\n    } else {\n      onChange([...value, ...leftChecked]);\n      setChecked(oldChecked => not(oldChecked, leftChecked), valueKey);\n    }\n  }, [autoCompleteMode, valueKey, onChange, value, checked, leftChecked, not]);\n  const createList = useCallback((side, items) => /*#__PURE__*/React.createElement(List, {\n    className: classes.list,\n    dense: true,\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }\n  }, loading && side === 'left' ? /*#__PURE__*/React.createElement(CircularLoader, {\n    relative: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 11\n    }\n  }) : map(items, item => /*#__PURE__*/React.createElement(Fragment, {\n    key: `${side}-${item[valueKey]}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    onClick: handleToggle(item),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    detached: true,\n    value: checked.indexOf(item) !== -1,\n    tabIndex: -1,\n    style: {\n      marginBottom: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: item[labelKey],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 15\n    }\n  })), items.indexOf(item) !== items.length - 1 && /*#__PURE__*/React.createElement(Divider, {\n    classes: {\n      root: classes.divider\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 62\n    }\n  })))), [checked, classes.divider, classes.list, handleToggle, labelKey, loading, valueKey]);\n  const leftList = useMemo(() => createList('left', filteredLeftResults), [createList, filteredLeftResults]);\n  const rightList = useMemo(() => createList('right', filteredRightResults), [createList, filteredRightResults]);\n  return /*#__PURE__*/React.createElement(Paper, {\n    ref: fieldRef,\n    className: classNames(classes.root, classes.paper),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 5\n    }\n  }, header && /*#__PURE__*/React.createElement(AlertHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AlertHeaderLabel, {\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 11\n    }\n  }, type, \":\"), /*#__PURE__*/React.createElement(AlertHeaderTitleProfile, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 11\n    }\n  }, header)), /*#__PURE__*/React.createElement(ButtonWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    my: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.circleButton,\n    onClick: handleMoveCheckedToRight,\n    disabled: leftChecked.length === 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(RightButtonShuttle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Button, {\n    className: classes.circleButton,\n    onClick: handleMoveCheckedToLeft,\n    disabled: rightChecked.length === 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LeftButtonShuttle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    alignItems: \"center\",\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    style: {\n      marginRight: 26\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ListTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 15\n    }\n  }, title, \" Dispon\\xEDveis\"), /*#__PURE__*/React.createElement(InputSearch, {\n    detached: true,\n    value: searched === null || searched === void 0 ? void 0 : searched.left,\n    onChange: e => requestSearch('left', e),\n    placeholder: \"Busque por nome\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 15\n    }\n  })), leftList)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ListTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 15\n    }\n  }, title, \" Selecionados\"), /*#__PURE__*/React.createElement(InputSearch, {\n    detached: true,\n    value: searched === null || searched === void 0 ? void 0 : searched.right,\n    onChange: e => requestSearch('right', e),\n    placeholder: \"Busque por nome\",\n    fullWidth: true,\n    disabled: isEmpty(right) && !(searched === null || searched === void 0 ? void 0 : searched.right),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 15\n    }\n  })), rightList))));\n});\nTransferList.propTypes = {\n  header: PropTypes.string,\n  type: PropTypes.string,\n  title: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n  valueKey: PropTypes.string,\n  labelKey: PropTypes.string,\n  value: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    name: PropTypes.string\n  })),\n  options: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    name: PropTypes.string\n  })),\n  onFilterChange: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  loading: PropTypes.bool\n};\nTransferList.defaultProps = {\n  header: '',\n  type: '',\n  title: '',\n\n  onChange() {},\n\n  onFilterChange: false,\n  valueKey: 'id',\n  labelKey: 'name',\n  value: [],\n  options: [],\n  loading: false\n};\nexport default memo(TransferList, areEqual);","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/components/TransferList/TransferListStyled.js"],"names":["React","useCallback","useState","useMemo","Fragment","forwardRef","memo","classNames","PropTypes","filter","find","isEmpty","map","partition","Box","Button","Divider","Grid","List","ListItem","ListItemIcon","ListItemText","Paper","areEqual","Checkbox","LeftButtonShuttle","RightButtonShuttle","InputSearch","CircularLoader","useStyles","ButtonWrapper","ListHeader","ListTitle","AlertHeader","AlertHeaderLabel","AlertHeaderTitleProfile","TransferList","header","type","title","onChange","valueKey","labelKey","value","onFilterChange","options","loading","fieldRef","classes","autoCompleteMode","checked","setChecked","searched","setSearched","left","right","option","item","String","not","a","b","val","intersection","leftChecked","rightChecked","requestSearch","side","event","target","prevState","filteredRightResults","toLowerCase","includes","filteredLeftResults","handleToggle","currentIndex","indexOf","newChecked","push","splice","handleMoveCheckedToLeft","oldChecked","handleMoveCheckedToRight","createList","items","list","marginBottom","length","root","divider","leftList","rightList","paper","circleButton","marginRight","card","e","propTypes","string","func","isRequired","arrayOf","shape","id","oneOfType","number","name","bool","defaultProps"],"mappings":"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","sourcesContent":["import React, {\n  useCallback,\n  useState,\n  useMemo,\n  Fragment,\n  forwardRef,\n  memo\n} from 'react'\n\nimport classNames from 'classnames'\nimport PropTypes from 'prop-types'\n\nimport filter from 'lodash/filter'\nimport find from 'lodash/find'\nimport isEmpty from 'lodash/isEmpty'\nimport map from 'lodash/map'\nimport partition from 'lodash/partition'\n\nimport Box from '@material-ui/core/Box'\nimport Button from '@material-ui/core/Button'\nimport Divider from '@material-ui/core/Divider'\nimport Grid from '@material-ui/core/Grid'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Paper from '@material-ui/core/Paper'\n\nimport { areEqual } from '@britania-crm/utils/memo'\nimport Checkbox from '@britania-crm/web-components/Checkbox'\nimport {\n  LeftButtonShuttle,\n  RightButtonShuttle\n} from '@britania-crm/web-components/Icons'\nimport InputSearch from '@britania-crm/web-components/InputSearch'\nimport CircularLoader from '@britania-crm/web-components/Loader/CircularLoader'\n\nimport useStyles, {\n  ButtonWrapper,\n  ListHeader,\n  ListTitle,\n  AlertHeader,\n  AlertHeaderLabel,\n  AlertHeaderTitleProfile\n} from './styles'\n\nconst TransferList = forwardRef(({\n  header,\n  type,\n  title,\n  onChange,\n  valueKey,\n  labelKey,\n  value,\n  onFilterChange,\n  options,\n  loading\n}, fieldRef) => {\n  const classes = useStyles()\n  const autoCompleteMode = useMemo(() => !!onFilterChange, [onFilterChange])\n\n  const [checked, setChecked] = useState([])\n  const [searched, setSearched] = useState({\n    left: '',\n    right: ''\n  })\n\n  const [left, right] = useMemo(\n    () => partition(options, (option) => !find(value, (item) => String(item[valueKey]) === String(option[valueKey]))),\n    [options, value, valueKey]\n  )\n\n  // Retorna um array com todos os items que não foram marcados/checked,\n  const not = useCallback(\n    (a, b) => a.filter((val) => !find(b, (item) => item[valueKey] === val[valueKey] || item[valueKey] === String(val[valueKey]))),\n    [valueKey]\n  )\n\n  /**\n   * Faz uma intersecção do conjunto geral de todos os que estão marcados/checkeds,\n   * seja da lista da direita ou da esquerda, separando em um novo array\n   *  */\n  const intersection = useCallback(\n    (a, b) => a.filter((val) => !!find(b, (item) => item[valueKey] === val[valueKey] || item[valueKey] === String(val[valueKey]))),\n    [valueKey]\n  )\n\n  /**\n   *  Retorna um array com todos os items que foram marcados/checked\n   *  da lista da esquerda\n   * */\n  const leftChecked = useMemo(\n    () => intersection(checked, left),\n    [checked, intersection, left]\n  )\n\n  /**\n   *  Retorna um array com todos os items que foram marcados (checked)\n   *  da lista da direita\n   * */\n  const rightChecked = useMemo(\n    () => intersection(checked, right),\n    [checked, intersection, right]\n  )\n\n  // Shuttle\n  const requestSearch = useCallback(\n    (side, event) => {\n      const { value } = event.target\n      if (autoCompleteMode) onFilterChange(side, value)\n\n      if (side === 'right') {\n        setSearched((prevState) => ({ ...prevState, right: value }))\n      } else {\n        setSearched((prevState) => ({ ...prevState, left: value }))\n      }\n    },\n    [autoCompleteMode, onFilterChange]\n  )\n\n  const filteredRightResults = useMemo(() => filter(right, (item) => item && item[labelKey]?.toLowerCase()?.includes(searched?.right?.toLowerCase())), [labelKey, right, searched.right])\n\n  const filteredLeftResults = useMemo(() => not(filter(left, (item) => item && item[labelKey]?.toLowerCase()?.includes(searched?.left?.toLowerCase())), right), [not, left, right, labelKey, searched.left])\n\n  const handleToggle = useCallback(\n    (value) => () => {\n      const currentIndex = checked.indexOf(value)\n      const newChecked = [...checked]\n\n      if (currentIndex === -1) {\n        newChecked.push(value)\n      } else {\n        newChecked.splice(currentIndex, 1)\n      }\n\n      setChecked(newChecked)\n    },\n    [checked]\n  )\n\n  const handleMoveCheckedToLeft = useCallback(\n    () => {\n      onChange(filter(value, (option) => !find(rightChecked, (item) => String(item[valueKey]) === String(option[valueKey]))))\n      setChecked((oldChecked) => not(oldChecked, rightChecked), valueKey)\n    },\n    [onChange, value, valueKey, rightChecked, not]\n  )\n\n  const handleMoveCheckedToRight = useCallback(\n    () => {\n      if (autoCompleteMode) {\n        onChange([\n          ...value,\n          ...checked\n        ])\n        setChecked([])\n      } else {\n        onChange([\n          ...value,\n          ...leftChecked\n        ])\n        setChecked((oldChecked) => not(oldChecked, leftChecked), valueKey)\n      }\n    },\n    [autoCompleteMode, valueKey, onChange, value, checked, leftChecked, not]\n  )\n\n  const createList = useCallback(\n    (side, items) => (\n      <List className={ classes.list } dense component=\"div\">\n        {loading && side === 'left' ? (\n          <CircularLoader relative />\n        ) : map(items, (item) => (\n          <Fragment key={ `${ side }-${ item[valueKey] }` }>\n            <ListItem button onClick={ handleToggle(item) }>\n              <ListItemIcon>\n                <Checkbox\n                  detached\n                  value={ checked.indexOf(item) !== -1 }\n                  tabIndex={ -1 }\n                  style={ { marginBottom: 0 } }\n                />\n              </ListItemIcon>\n              <ListItemText primary={ item[labelKey] } />\n            </ListItem>\n            {(items.indexOf(item) !== (items.length - 1)) && <Divider classes={ { root: classes.divider } }/>}\n          </Fragment>\n        ))}\n      </List>\n    ),\n    [checked, classes.divider, classes.list, handleToggle, labelKey, loading, valueKey]\n  )\n\n  const leftList = useMemo(\n    () => createList('left', filteredLeftResults),\n    [createList, filteredLeftResults]\n  )\n\n  const rightList = useMemo(\n    () => createList('right', filteredRightResults),\n    [createList, filteredRightResults]\n  )\n\n  return (\n    <Paper\n      ref={ fieldRef }\n      className={ classNames(\n        classes.root,\n        classes.paper\n      ) }\n    >\n      {header && (\n        <AlertHeader>\n          <AlertHeaderLabel variant=\"body2\">\n            {type}:\n          </AlertHeaderLabel>\n          <AlertHeaderTitleProfile\n            variant=\"h5\"\n          >{header}</AlertHeaderTitleProfile>\n        </AlertHeader>\n\n      )}\n\n      <ButtonWrapper>\n        <Box my={ 3 }>\n          <Button\n            className={ classes.circleButton }\n            onClick={ handleMoveCheckedToRight }\n            disabled={ leftChecked.length === 0 }\n          >\n            <RightButtonShuttle/>\n          </Button>\n        </Box>\n        <Button\n          className={ classes.circleButton }\n          onClick={ handleMoveCheckedToLeft }\n          disabled={ rightChecked.length === 0 }\n        >\n          <LeftButtonShuttle/>\n        </Button>\n      </ButtonWrapper>\n      <Grid container justify=\"center\" alignItems=\"center\" className={ classes.root }>\n        <Grid item style={ { marginRight: 26 } }>\n          <Paper className={ classes.card }>\n            <ListHeader>\n              <ListTitle>{title} Disponíveis</ListTitle>\n              <InputSearch\n                detached\n                value={ searched?.left }\n                onChange={ (e) => requestSearch('left', e) }\n                placeholder=\"Busque por nome\"\n                fullWidth\n              />\n            </ListHeader>\n            {leftList}\n          </Paper>\n        </Grid>\n        <Grid item>\n          <Paper className={ classes.card }>\n            <ListHeader>\n              <ListTitle>{title} Selecionados</ListTitle>\n              <InputSearch\n                detached\n                value={ searched?.right }\n                onChange={ (e) => requestSearch('right', e) }\n                placeholder=\"Busque por nome\"\n                fullWidth\n                disabled={ isEmpty(right) && !searched?.right }\n              />\n            </ListHeader>\n            {rightList}\n          </Paper>\n        </Grid>\n      </Grid>\n    </Paper>\n  )\n})\n\nTransferList.propTypes = {\n  header: PropTypes.string,\n  type: PropTypes.string,\n  title: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n  valueKey: PropTypes.string,\n  labelKey: PropTypes.string,\n\n  value: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    name: PropTypes.string\n  })),\n  options: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    name: PropTypes.string\n  })),\n  onFilterChange: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  loading: PropTypes.bool\n}\n\nTransferList.defaultProps = {\n  header: '',\n  type: '',\n  title: '',\n  onChange () {},\n  onFilterChange: false,\n  valueKey: 'id',\n  labelKey: 'name',\n  value: [],\n  options: [],\n  loading: false\n}\n\nexport default memo(TransferList, areEqual)\n"]},"metadata":{},"sourceType":"module"}