{"ast":null,"code":"import isURL from 'validator/lib/isURL';\nexport default (({\n  t\n}) => YupInstance => YupInstance.test('url', t('invalid url'), value => !value || isURL(value, {\n  disallow_auth: true,\n  allow_protocol_relative_urls: true\n})));","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/core/forms/validators/url.validator.js"],"names":["isURL","t","YupInstance","test","value","disallow_auth","allow_protocol_relative_urls"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,qBAAlB;AAEA,gBAAe,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAYC,WAAD,IAAiBA,WAAW,CAACC,IAAZ,CACzC,KADyC,EAEzCF,CAAC,CAAC,aAAD,CAFwC,EAGxCG,KAAD,IAAW,CAACA,KAAD,IAAUJ,KAAK,CAACI,KAAD,EAAQ;AAChCC,EAAAA,aAAa,EAAE,IADiB;AAEhCC,EAAAA,4BAA4B,EAAE;AAFE,CAAR,CAHe,CAA3C","sourcesContent":["import isURL from 'validator/lib/isURL'\n\nexport default ({ t }) => (YupInstance) => YupInstance.test(\n  'url',\n  t('invalid url'),\n  (value) => !value || isURL(value, {\n    disallow_auth: true,\n    allow_protocol_relative_urls: true\n  })\n)\n"]},"metadata":{},"sourceType":"module"}