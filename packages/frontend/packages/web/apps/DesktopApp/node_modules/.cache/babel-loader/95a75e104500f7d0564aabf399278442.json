{"ast":null,"code":"import * as Yup from 'yup';\nimport date from '@britania-crm/forms/validators/date.validator';\nexport const INITIAL_VALUES = {\n  clientRegistrationType: '',\n  clientRegistrationStatus: '',\n  parentCompany: '',\n  parentCompanyCode: '',\n  creditSituation: '',\n  daysWithoutBilling: '',\n  cnpj: '',\n  cdCode: '',\n  responsibleService: '',\n  regionalManager: {},\n  companyName: '',\n  registrationInclusionDate: '',\n  registrationConclusionDate: '',\n  workflowTypeId: '',\n  version: '',\n  workflowTask: [],\n  state: '',\n  city: '',\n  category: '',\n  clientGroup: {},\n  regimeLetter: ''\n};\nexport default (({\n  t\n}) => Yup.object().shape({\n  clientRegistrationType: Yup.string(),\n  clientRegistrationStatus: Yup.string(),\n  parentCompany: Yup.string(),\n  parentCompanyCode: Yup.string(),\n  creditSituation: Yup.string(),\n  daysWithoutBilling: Yup.string(),\n  cnpj: Yup.string(),\n  cdCode: Yup.string(),\n  responsibleService: Yup.string(),\n  regionalManager: Yup.object().nullable(),\n  companyName: Yup.string(),\n  registrationInclusionDate: date({\n    t\n  })(Yup.string()),\n  registrationConclusionDate: date({\n    t\n  })(Yup.string()),\n  workflowTypeId: Yup.string(),\n  workflowTaskId: Yup.object().shape({\n    id: Yup.string(),\n    title: Yup.string()\n  }),\n  version: Yup.string(),\n  workflowTask: Yup.array(),\n  state: Yup.string(),\n  city: Yup.string(),\n  category: Yup.string(),\n  clientGroup: Yup.object(),\n  regimeLetter: Yup.string()\n}));","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/core/forms/schemas/customer/customer.filter.schema.js"],"names":["Yup","date","INITIAL_VALUES","clientRegistrationType","clientRegistrationStatus","parentCompany","parentCompanyCode","creditSituation","daysWithoutBilling","cnpj","cdCode","responsibleService","regionalManager","companyName","registrationInclusionDate","registrationConclusionDate","workflowTypeId","version","workflowTask","state","city","category","clientGroup","regimeLetter","t","object","shape","string","nullable","workflowTaskId","id","title","array"],"mappings":"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","sourcesContent":["import * as Yup from 'yup'\n\nimport date from '@britania-crm/forms/validators/date.validator'\n\nexport const INITIAL_VALUES = {\n  clientRegistrationType: '',\n  clientRegistrationStatus: '',\n  parentCompany: '',\n  parentCompanyCode: '',\n  creditSituation: '',\n  daysWithoutBilling: '',\n  cnpj: '',\n  cdCode: '',\n  responsibleService: '',\n  regionalManager: {},\n  companyName: '',\n  registrationInclusionDate: '',\n  registrationConclusionDate: '',\n  workflowTypeId: '',\n  version: '',\n  workflowTask: [],\n  state: '',\n  city: '',\n  category: '',\n  clientGroup: {},\n  regimeLetter: ''\n}\n\nexport default ({ t }) => Yup.object().shape({\n  clientRegistrationType: Yup.string(),\n  clientRegistrationStatus: Yup.string(),\n  parentCompany: Yup.string(),\n  parentCompanyCode: Yup.string(),\n  creditSituation: Yup.string(),\n  daysWithoutBilling: Yup.string(),\n  cnpj: Yup.string(),\n  cdCode: Yup.string(),\n  responsibleService: Yup.string(),\n  regionalManager: Yup.object().nullable(),\n  companyName: Yup.string(),\n  registrationInclusionDate: date({ t })(Yup.string()),\n  registrationConclusionDate: date({ t })(Yup.string()),\n  workflowTypeId: Yup.string(),\n  workflowTaskId: Yup.object().shape({ id: Yup.string(), title: Yup.string() }),\n  version: Yup.string(),\n  workflowTask: Yup.array(),\n  state: Yup.string(),\n  city: Yup.string(),\n  category: Yup.string(),\n  clientGroup: Yup.object(),\n  regimeLetter: Yup.string()\n})\n"]},"metadata":{},"sourceType":"module"}