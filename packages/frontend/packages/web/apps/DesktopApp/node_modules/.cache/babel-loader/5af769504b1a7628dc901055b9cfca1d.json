{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/customers/modals/DocumentationCustomerModal/DocumentationCustomerModal.js\";\nimport React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport { formatPathToCloudStorageUrl } from '@britania-crm/utils/files';\nimport Modal from '@britania-crm/web-components/Modal';\nimport PreviewImage from '@britania-crm/web-components/PreviewImage';\nimport PreviewPDF from '@britania-crm/web-components/PreviewPDF';\nimport useStyles, { PdfContainer } from '../styles';\n\nconst DocumentationCustomerModal = ({\n  id,\n  open,\n  imagePreview\n}) => {\n  const classes = useStyles();\n  const imageUrl = useMemo(() => formatPathToCloudStorageUrl(imagePreview.path), [imagePreview]);\n  const imageType = useMemo(() => {\n    switch (imagePreview.type || imagePreview.contentType) {\n      case 'application/pdf':\n        return 'pdf';\n\n      case 'application/vnd.ms-excel':\n        return 'excel';\n\n      case 'video/mp4':\n        return 'video';\n\n      default:\n        return 'image';\n    }\n  }, [imagePreview]);\n  return /*#__PURE__*/React.createElement(Modal, {\n    id: id,\n    open: open,\n    maxWidth: \"md\",\n    fullWidth: true,\n    escapeWhenLoading: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    sm: 12,\n    spacing: 1,\n    className: classes.documentation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, imageType === 'pdf' ? /*#__PURE__*/React.createElement(PdfContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(PreviewPDF, {\n    url: imageUrl,\n    defaultPdf: imagePreview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  })) : /*#__PURE__*/React.createElement(PreviewImage, {\n    url: imageUrl,\n    rightStyles: {\n      width: '100%'\n    },\n    defaultImg: imagePreview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  })));\n};\n\nDocumentationCustomerModal.propTypes = {\n  id: PropTypes.string.isRequired,\n  open: PropTypes.bool.isRequired,\n  imagePreview: PropTypes.oneOfType([PropTypes.object, PropTypes.string]).isRequired\n};\nDocumentationCustomerModal.defaultProps = {};\nexport default DocumentationCustomerModal;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/customers/modals/DocumentationCustomerModal/DocumentationCustomerModal.js"],"names":["React","useMemo","PropTypes","Grid","formatPathToCloudStorageUrl","Modal","PreviewImage","PreviewPDF","useStyles","PdfContainer","DocumentationCustomerModal","id","open","imagePreview","classes","imageUrl","path","imageType","type","contentType","documentation","width","propTypes","string","isRequired","bool","oneOfType","object","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,IAAP,MAAiB,wBAAjB;AAEA,SAASC,2BAAT,QAA4C,2BAA5C;AACA,OAAOC,KAAP,MAAkB,oCAAlB;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,OAAOC,UAAP,MAAuB,yCAAvB;AAEA,OAAOC,SAAP,IAAoBC,YAApB,QAAwC,WAAxC;;AAEA,MAAMC,0BAA0B,GAAG,CAAC;AAClCC,EAAAA,EADkC;AAC9BC,EAAAA,IAD8B;AACxBC,EAAAA;AADwB,CAAD,KAE7B;AACJ,QAAMC,OAAO,GAAGN,SAAS,EAAzB;AAEA,QAAMO,QAAQ,GAAGd,OAAO,CACtB,MAAMG,2BAA2B,CAACS,YAAY,CAACG,IAAd,CADX,EAEtB,CAACH,YAAD,CAFsB,CAAxB;AAKA,QAAMI,SAAS,GAAGhB,OAAO,CACvB,MAAM;AACJ,YAAQY,YAAY,CAACK,IAAb,IAAqBL,YAAY,CAACM,WAA1C;AACE,WAAK,iBAAL;AACE,eAAO,KAAP;;AACF,WAAK,0BAAL;AACE,eAAO,OAAP;;AACF,WAAK,WAAL;AACE,eAAO,OAAP;;AACF;AACE,eAAO,OAAP;AARJ;AAUD,GAZsB,EAavB,CAACN,YAAD,CAbuB,CAAzB;AAeA,sBACE,oBAAC,KAAD;AACE,IAAA,EAAE,EAAGF,EADP;AAEE,IAAA,IAAI,EAAGC,IAFT;AAGE,IAAA,QAAQ,EAAC,IAHX;AAIE,IAAA,SAAS,MAJX;AAKE,IAAA,iBAAiB,MALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,IAAI,MAApB;AAAqB,IAAA,EAAE,EAAG,EAA1B;AAA+B,IAAA,OAAO,EAAG,CAAzC;AAA6C,IAAA,SAAS,EAAGE,OAAO,CAACM,aAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,SAAS,KAAK,KAAd,gBACC,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AACE,IAAA,GAAG,EAAGF,QADR;AAEE,IAAA,UAAU,EAAGF,YAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,gBAQC,oBAAC,YAAD;AACE,IAAA,GAAG,EAAGE,QADR;AAEE,IAAA,WAAW,EAAG;AAAEM,MAAAA,KAAK,EAAE;AAAT,KAFhB;AAGE,IAAA,UAAU,EAAGR,YAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,CAPF,CADF;AA2BD,CApDD;;AAsDAH,0BAA0B,CAACY,SAA3B,GAAuC;AACrCX,EAAAA,EAAE,EAAET,SAAS,CAACqB,MAAV,CAAiBC,UADgB;AAErCZ,EAAAA,IAAI,EAAEV,SAAS,CAACuB,IAAV,CAAeD,UAFgB;AAGrCX,EAAAA,YAAY,EAAEX,SAAS,CAACwB,SAAV,CAAoB,CAChCxB,SAAS,CAACyB,MADsB,EAEhCzB,SAAS,CAACqB,MAFsB,CAApB,EAGXC;AANkC,CAAvC;AASAd,0BAA0B,CAACkB,YAA3B,GAA0C,EAA1C;AAEA,eAAelB,0BAAf","sourcesContent":["import React, { useMemo } from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport Grid from '@material-ui/core/Grid'\n\nimport { formatPathToCloudStorageUrl } from '@britania-crm/utils/files'\nimport Modal from '@britania-crm/web-components/Modal'\nimport PreviewImage from '@britania-crm/web-components/PreviewImage'\nimport PreviewPDF from '@britania-crm/web-components/PreviewPDF'\n\nimport useStyles, { PdfContainer } from '../styles'\n\nconst DocumentationCustomerModal = ({\n  id, open, imagePreview\n}) => {\n  const classes = useStyles()\n\n  const imageUrl = useMemo(\n    () => formatPathToCloudStorageUrl(imagePreview.path),\n    [imagePreview]\n  )\n\n  const imageType = useMemo(\n    () => {\n      switch (imagePreview.type || imagePreview.contentType) {\n        case 'application/pdf':\n          return 'pdf'\n        case 'application/vnd.ms-excel':\n          return 'excel'\n        case 'video/mp4':\n          return 'video'\n        default:\n          return 'image'\n      }\n    },\n    [imagePreview])\n\n  return (\n    <Modal\n      id={ id }\n      open={ open }\n      maxWidth=\"md\"\n      fullWidth\n      escapeWhenLoading\n    >\n      <Grid container item sm={ 12 } spacing={ 1 } className={ classes.documentation }>\n        {imageType === 'pdf' ? (\n          <PdfContainer>\n            <PreviewPDF\n              url={ imageUrl }\n              defaultPdf={ imagePreview }\n            />\n          </PdfContainer>\n        ) : (\n          <PreviewImage\n            url={ imageUrl }\n            rightStyles={ { width: '100%' } }\n            defaultImg={ imagePreview }\n          />\n        )}\n\n      </Grid>\n    </Modal>\n  )\n}\n\nDocumentationCustomerModal.propTypes = {\n  id: PropTypes.string.isRequired,\n  open: PropTypes.bool.isRequired,\n  imagePreview: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string\n  ]).isRequired\n}\n\nDocumentationCustomerModal.defaultProps = {}\n\nexport default DocumentationCustomerModal\n"]},"metadata":{},"sourceType":"module"}