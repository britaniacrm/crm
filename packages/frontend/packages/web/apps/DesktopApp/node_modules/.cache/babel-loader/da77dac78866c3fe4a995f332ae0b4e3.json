{"ast":null,"code":"\"use strict\";\n/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/* jslint esnext: true */\n\nvar intl_messageformat_1 = require(\"intl-messageformat\");\n\nvar diff_1 = require(\"./diff\");\n\nvar es5_1 = require(\"./es5\");\n\nexports.default = RelativeFormat; // -----------------------------------------------------------------------------\n\nvar FIELDS = ['second', 'second-short', 'minute', 'minute-short', 'hour', 'hour-short', 'day', 'day-short', 'month', 'month-short', 'year', 'year-short'];\nvar STYLES = ['best fit', 'numeric']; // -- RelativeFormat -----------------------------------------------------------\n\nfunction RelativeFormat(locales, options) {\n  options = options || {}; // Make a copy of `locales` if it's an array, so that it doesn't change\n  // since it's used lazily.\n\n  if (es5_1.isArray(locales)) {\n    locales = locales.concat();\n  }\n\n  es5_1.defineProperty(this, '_locale', {\n    value: this._resolveLocale(locales)\n  });\n  es5_1.defineProperty(this, '_options', {\n    value: {\n      style: this._resolveStyle(options.style),\n      units: this._isValidUnits(options.units) && options.units\n    }\n  });\n  es5_1.defineProperty(this, '_locales', {\n    value: locales\n  });\n  es5_1.defineProperty(this, '_fields', {\n    value: this._findFields(this._locale)\n  });\n  es5_1.defineProperty(this, '_messages', {\n    value: es5_1.objCreate(null)\n  }); // \"Bind\" `format()` method to `this` so it can be passed by reference like\n  // the other `Intl` APIs.\n\n  var relativeFormat = this;\n\n  this.format = function format(date, options) {\n    return relativeFormat._format(date, options);\n  };\n} // Define internal private properties for dealing with locale data.\n\n\nes5_1.defineProperty(RelativeFormat, '__localeData__', {\n  value: es5_1.objCreate(null)\n});\nes5_1.defineProperty(RelativeFormat, '__addLocaleData', {\n  value: function () {\n    for (var i = 0; i < arguments.length; i++) {\n      var datum = arguments[i];\n\n      if (!(datum && datum.locale)) {\n        throw new Error('Locale data provided to IntlRelativeFormat is missing a ' + '`locale` property value');\n      }\n\n      RelativeFormat.__localeData__[datum.locale.toLowerCase()] = datum; // Add data to IntlMessageFormat.\n\n      intl_messageformat_1.default.__addLocaleData(datum);\n    }\n  }\n}); // Define public `defaultLocale` property which can be set by the developer, or\n// it will be set when the first RelativeFormat instance is created by\n// leveraging the resolved locale from `Intl`.\n\nes5_1.defineProperty(RelativeFormat, 'defaultLocale', {\n  enumerable: true,\n  writable: true,\n  value: undefined\n}); // Define public `thresholds` property which can be set by the developer, and\n// defaults to relative time thresholds from moment.js.\n\nes5_1.defineProperty(RelativeFormat, 'thresholds', {\n  enumerable: true,\n  value: {\n    second: 45,\n    'second-short': 45,\n    minute: 45,\n    'minute-short': 45,\n    hour: 22,\n    'hour-short': 22,\n    day: 26,\n    'day-short': 26,\n    month: 11,\n    'month-short': 11 // months to year\n\n  }\n});\n\nRelativeFormat.prototype.resolvedOptions = function () {\n  return {\n    locale: this._locale,\n    style: this._options.style,\n    units: this._options.units\n  };\n};\n\nRelativeFormat.prototype._compileMessage = function (units) {\n  // `this._locales` is the original set of locales the user specified to the\n  // constructor, while `this._locale` is the resolved root locale.\n  var locales = this._locales;\n  var resolvedLocale = this._locale;\n  var field = this._fields[units];\n  var relativeTime = field.relativeTime;\n  var future = '';\n  var past = '';\n  var i;\n\n  for (i in relativeTime.future) {\n    if (relativeTime.future.hasOwnProperty(i)) {\n      future += ' ' + i + ' {' + relativeTime.future[i].replace('{0}', '#') + '}';\n    }\n  }\n\n  for (i in relativeTime.past) {\n    if (relativeTime.past.hasOwnProperty(i)) {\n      past += ' ' + i + ' {' + relativeTime.past[i].replace('{0}', '#') + '}';\n    }\n  }\n\n  var message = '{when, select, future {{0, plural, ' + future + '}}' + 'past {{0, plural, ' + past + '}}}'; // Create the synthetic IntlMessageFormat instance using the original\n  // locales value specified by the user when constructing the the parent\n  // IntlRelativeFormat instance.\n\n  return new intl_messageformat_1.default(message, locales);\n};\n\nRelativeFormat.prototype._getMessage = function (units) {\n  var messages = this._messages; // Create a new synthetic message based on the locale data from CLDR.\n\n  if (!messages[units]) {\n    messages[units] = this._compileMessage(units);\n  }\n\n  return messages[units];\n};\n\nRelativeFormat.prototype._getRelativeUnits = function (diff, units) {\n  var field = this._fields[units];\n\n  if (field.relative) {\n    return field.relative[diff];\n  }\n};\n\nRelativeFormat.prototype._findFields = function (locale) {\n  var localeData = RelativeFormat.__localeData__;\n  var data = localeData[locale.toLowerCase()]; // The locale data is de-duplicated, so we have to traverse the locale's\n  // hierarchy until we find `fields` to return.\n\n  while (data) {\n    if (data.fields) {\n      return data.fields;\n    }\n\n    data = data.parentLocale && localeData[data.parentLocale.toLowerCase()];\n  }\n\n  throw new Error('Locale data added to IntlRelativeFormat is missing `fields` for :' + locale);\n};\n\nRelativeFormat.prototype._format = function (date, options) {\n  var now = options && options.now !== undefined ? options.now : es5_1.dateNow();\n\n  if (date === undefined) {\n    date = now;\n  } // Determine if the `date` and optional `now` values are valid, and throw a\n  // similar error to what `Intl.DateTimeFormat#format()` would throw.\n\n\n  if (!isFinite(now)) {\n    throw new RangeError('The `now` option provided to IntlRelativeFormat#format() is not ' + 'in valid range.');\n  }\n\n  if (!isFinite(date)) {\n    throw new RangeError('The date value provided to IntlRelativeFormat#format() is not ' + 'in valid range.');\n  }\n\n  var diffReport = diff_1.default(now, date);\n\n  var units = this._options.units || this._selectUnits(diffReport);\n\n  var diffInUnits = diffReport[units];\n\n  if (this._options.style !== 'numeric') {\n    var relativeUnits = this._getRelativeUnits(diffInUnits, units);\n\n    if (relativeUnits) {\n      return relativeUnits;\n    }\n  }\n\n  return this._getMessage(units).format({\n    '0': Math.abs(diffInUnits),\n    when: diffInUnits < 0 ? 'past' : 'future'\n  });\n};\n\nRelativeFormat.prototype._isValidUnits = function (units) {\n  if (!units || es5_1.arrIndexOf.call(FIELDS, units) >= 0) {\n    return true;\n  }\n\n  if (typeof units === 'string') {\n    var suggestion = /s$/.test(units) && units.substr(0, units.length - 1);\n\n    if (suggestion && es5_1.arrIndexOf.call(FIELDS, suggestion) >= 0) {\n      throw new Error('\"' + units + '\" is not a valid IntlRelativeFormat `units` ' + 'value, did you mean: ' + suggestion);\n    }\n  }\n\n  throw new Error('\"' + units + '\" is not a valid IntlRelativeFormat `units` value, it ' + 'must be one of: \"' + FIELDS.join('\", \"') + '\"');\n};\n\nRelativeFormat.prototype._resolveLocale = function (locales) {\n  if (typeof locales === 'string') {\n    locales = [locales];\n  } // Create a copy of the array so we can push on the default locale.\n\n\n  locales = (locales || []).concat(RelativeFormat.defaultLocale);\n  var localeData = RelativeFormat.__localeData__;\n  var i, len, localeParts, data; // Using the set of locales + the default locale, we look for the first one\n  // which that has been registered. When data does not exist for a locale, we\n  // traverse its ancestors to find something that's been registered within\n  // its hierarchy of locales. Since we lack the proper `parentLocale` data\n  // here, we must take a naive approach to traversal.\n\n  for (i = 0, len = locales.length; i < len; i += 1) {\n    localeParts = locales[i].toLowerCase().split('-');\n\n    while (localeParts.length) {\n      data = localeData[localeParts.join('-')];\n\n      if (data) {\n        // Return the normalized locale string; e.g., we return \"en-US\",\n        // instead of \"en-us\".\n        return data.locale;\n      }\n\n      localeParts.pop();\n    }\n  }\n\n  var defaultLocale = locales.pop();\n  throw new Error('No locale data has been added to IntlRelativeFormat for: ' + locales.join(', ') + ', or the default locale: ' + defaultLocale);\n};\n\nRelativeFormat.prototype._resolveStyle = function (style) {\n  // Default to \"best fit\" style.\n  if (!style) {\n    return STYLES[0];\n  }\n\n  if (es5_1.arrIndexOf.call(STYLES, style) >= 0) {\n    return style;\n  }\n\n  throw new Error('\"' + style + '\" is not a valid IntlRelativeFormat `style` value, it ' + 'must be one of: \"' + STYLES.join('\", \"') + '\"');\n};\n\nRelativeFormat.prototype._selectUnits = function (diffReport) {\n  var i, l, units;\n  var fields = FIELDS.filter(function (field) {\n    return field.indexOf('-short') < 1;\n  });\n\n  for (i = 0, l = fields.length; i < l; i += 1) {\n    units = fields[i];\n\n    if (Math.abs(diffReport[units]) < RelativeFormat.thresholds[units]) {\n      break;\n    }\n  }\n\n  return units;\n};","map":{"version":3,"sources":["../src/core.js"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\n/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/* jslint esnext: true */\nvar intl_messageformat_1 = require(\"intl-messageformat\");\nvar diff_1 = require(\"./diff\");\nvar es5_1 = require(\"./es5\");\nexports.default = RelativeFormat;\n// -----------------------------------------------------------------------------\nvar FIELDS = [\n    'second', 'second-short',\n    'minute', 'minute-short',\n    'hour', 'hour-short',\n    'day', 'day-short',\n    'month', 'month-short',\n    'year', 'year-short'\n];\nvar STYLES = ['best fit', 'numeric'];\n// -- RelativeFormat -----------------------------------------------------------\nfunction RelativeFormat(locales, options) {\n    options = options || {};\n    // Make a copy of `locales` if it's an array, so that it doesn't change\n    // since it's used lazily.\n    if (es5_1.isArray(locales)) {\n        locales = locales.concat();\n    }\n    es5_1.defineProperty(this, '_locale', { value: this._resolveLocale(locales) });\n    es5_1.defineProperty(this, '_options', { value: {\n            style: this._resolveStyle(options.style),\n            units: this._isValidUnits(options.units) && options.units\n        } });\n    es5_1.defineProperty(this, '_locales', { value: locales });\n    es5_1.defineProperty(this, '_fields', { value: this._findFields(this._locale) });\n    es5_1.defineProperty(this, '_messages', { value: es5_1.objCreate(null) });\n    // \"Bind\" `format()` method to `this` so it can be passed by reference like\n    // the other `Intl` APIs.\n    var relativeFormat = this;\n    this.format = function format(date, options) {\n        return relativeFormat._format(date, options);\n    };\n}\n// Define internal private properties for dealing with locale data.\nes5_1.defineProperty(RelativeFormat, '__localeData__', { value: es5_1.objCreate(null) });\nes5_1.defineProperty(RelativeFormat, '__addLocaleData', { value: function () {\n        for (var i = 0; i < arguments.length; i++) {\n            var datum = arguments[i];\n            if (!(datum && datum.locale)) {\n                throw new Error('Locale data provided to IntlRelativeFormat is missing a ' +\n                    '`locale` property value');\n            }\n            RelativeFormat.__localeData__[datum.locale.toLowerCase()] = datum;\n            // Add data to IntlMessageFormat.\n            intl_messageformat_1.default.__addLocaleData(datum);\n        }\n    } });\n// Define public `defaultLocale` property which can be set by the developer, or\n// it will be set when the first RelativeFormat instance is created by\n// leveraging the resolved locale from `Intl`.\nes5_1.defineProperty(RelativeFormat, 'defaultLocale', {\n    enumerable: true,\n    writable: true,\n    value: undefined\n});\n// Define public `thresholds` property which can be set by the developer, and\n// defaults to relative time thresholds from moment.js.\nes5_1.defineProperty(RelativeFormat, 'thresholds', {\n    enumerable: true,\n    value: {\n        second: 45, 'second-short': 45,\n        minute: 45, 'minute-short': 45,\n        hour: 22, 'hour-short': 22,\n        day: 26, 'day-short': 26,\n        month: 11, 'month-short': 11 // months to year\n    }\n});\nRelativeFormat.prototype.resolvedOptions = function () {\n    return {\n        locale: this._locale,\n        style: this._options.style,\n        units: this._options.units\n    };\n};\nRelativeFormat.prototype._compileMessage = function (units) {\n    // `this._locales` is the original set of locales the user specified to the\n    // constructor, while `this._locale` is the resolved root locale.\n    var locales = this._locales;\n    var resolvedLocale = this._locale;\n    var field = this._fields[units];\n    var relativeTime = field.relativeTime;\n    var future = '';\n    var past = '';\n    var i;\n    for (i in relativeTime.future) {\n        if (relativeTime.future.hasOwnProperty(i)) {\n            future += ' ' + i + ' {' +\n                relativeTime.future[i].replace('{0}', '#') + '}';\n        }\n    }\n    for (i in relativeTime.past) {\n        if (relativeTime.past.hasOwnProperty(i)) {\n            past += ' ' + i + ' {' +\n                relativeTime.past[i].replace('{0}', '#') + '}';\n        }\n    }\n    var message = '{when, select, future {{0, plural, ' + future + '}}' +\n        'past {{0, plural, ' + past + '}}}';\n    // Create the synthetic IntlMessageFormat instance using the original\n    // locales value specified by the user when constructing the the parent\n    // IntlRelativeFormat instance.\n    return new intl_messageformat_1.default(message, locales);\n};\nRelativeFormat.prototype._getMessage = function (units) {\n    var messages = this._messages;\n    // Create a new synthetic message based on the locale data from CLDR.\n    if (!messages[units]) {\n        messages[units] = this._compileMessage(units);\n    }\n    return messages[units];\n};\nRelativeFormat.prototype._getRelativeUnits = function (diff, units) {\n    var field = this._fields[units];\n    if (field.relative) {\n        return field.relative[diff];\n    }\n};\nRelativeFormat.prototype._findFields = function (locale) {\n    var localeData = RelativeFormat.__localeData__;\n    var data = localeData[locale.toLowerCase()];\n    // The locale data is de-duplicated, so we have to traverse the locale's\n    // hierarchy until we find `fields` to return.\n    while (data) {\n        if (data.fields) {\n            return data.fields;\n        }\n        data = data.parentLocale && localeData[data.parentLocale.toLowerCase()];\n    }\n    throw new Error('Locale data added to IntlRelativeFormat is missing `fields` for :' +\n        locale);\n};\nRelativeFormat.prototype._format = function (date, options) {\n    var now = options && options.now !== undefined ? options.now : es5_1.dateNow();\n    if (date === undefined) {\n        date = now;\n    }\n    // Determine if the `date` and optional `now` values are valid, and throw a\n    // similar error to what `Intl.DateTimeFormat#format()` would throw.\n    if (!isFinite(now)) {\n        throw new RangeError('The `now` option provided to IntlRelativeFormat#format() is not ' +\n            'in valid range.');\n    }\n    if (!isFinite(date)) {\n        throw new RangeError('The date value provided to IntlRelativeFormat#format() is not ' +\n            'in valid range.');\n    }\n    var diffReport = diff_1.default(now, date);\n    var units = this._options.units || this._selectUnits(diffReport);\n    var diffInUnits = diffReport[units];\n    if (this._options.style !== 'numeric') {\n        var relativeUnits = this._getRelativeUnits(diffInUnits, units);\n        if (relativeUnits) {\n            return relativeUnits;\n        }\n    }\n    return this._getMessage(units).format({\n        '0': Math.abs(diffInUnits),\n        when: diffInUnits < 0 ? 'past' : 'future'\n    });\n};\nRelativeFormat.prototype._isValidUnits = function (units) {\n    if (!units || es5_1.arrIndexOf.call(FIELDS, units) >= 0) {\n        return true;\n    }\n    if (typeof units === 'string') {\n        var suggestion = /s$/.test(units) && units.substr(0, units.length - 1);\n        if (suggestion && es5_1.arrIndexOf.call(FIELDS, suggestion) >= 0) {\n            throw new Error('\"' + units + '\" is not a valid IntlRelativeFormat `units` ' +\n                'value, did you mean: ' + suggestion);\n        }\n    }\n    throw new Error('\"' + units + '\" is not a valid IntlRelativeFormat `units` value, it ' +\n        'must be one of: \"' + FIELDS.join('\", \"') + '\"');\n};\nRelativeFormat.prototype._resolveLocale = function (locales) {\n    if (typeof locales === 'string') {\n        locales = [locales];\n    }\n    // Create a copy of the array so we can push on the default locale.\n    locales = (locales || []).concat(RelativeFormat.defaultLocale);\n    var localeData = RelativeFormat.__localeData__;\n    var i, len, localeParts, data;\n    // Using the set of locales + the default locale, we look for the first one\n    // which that has been registered. When data does not exist for a locale, we\n    // traverse its ancestors to find something that's been registered within\n    // its hierarchy of locales. Since we lack the proper `parentLocale` data\n    // here, we must take a naive approach to traversal.\n    for (i = 0, len = locales.length; i < len; i += 1) {\n        localeParts = locales[i].toLowerCase().split('-');\n        while (localeParts.length) {\n            data = localeData[localeParts.join('-')];\n            if (data) {\n                // Return the normalized locale string; e.g., we return \"en-US\",\n                // instead of \"en-us\".\n                return data.locale;\n            }\n            localeParts.pop();\n        }\n    }\n    var defaultLocale = locales.pop();\n    throw new Error('No locale data has been added to IntlRelativeFormat for: ' +\n        locales.join(', ') + ', or the default locale: ' + defaultLocale);\n};\nRelativeFormat.prototype._resolveStyle = function (style) {\n    // Default to \"best fit\" style.\n    if (!style) {\n        return STYLES[0];\n    }\n    if (es5_1.arrIndexOf.call(STYLES, style) >= 0) {\n        return style;\n    }\n    throw new Error('\"' + style + '\" is not a valid IntlRelativeFormat `style` value, it ' +\n        'must be one of: \"' + STYLES.join('\", \"') + '\"');\n};\nRelativeFormat.prototype._selectUnits = function (diffReport) {\n    var i, l, units;\n    var fields = FIELDS.filter(function (field) {\n        return field.indexOf('-short') < 1;\n    });\n    for (i = 0, l = fields.length; i < l; i += 1) {\n        units = fields[i];\n        if (Math.abs(diffReport[units]) < RelativeFormat.thresholds[units]) {\n            break;\n        }\n    }\n    return units;\n};\n//# sourceMappingURL=core.js.map"]},"metadata":{},"sourceType":"script"}