{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/buyer/components/BuyerFormFilter/BuyerFormFilter.js\";\nimport React, { forwardRef, useMemo } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport buyerFilterSchema, { INITIAL_VALUES } from '@britania-crm/forms/schemas/buyer/buyer.filter.schema';\nimport { useT } from '@britania-crm/i18n';\nimport { lines as linesCrmRoutes } from '@britania-crm/services/apis/crmApi/resources/routes';\nimport useCrmApi from '@britania-crm/services/hooks/useCrmApi';\nimport Form from '@britania-crm/web-components/Form';\nimport InputSelect from '@britania-crm/web-components/InputSelect';\nimport InputText from '@britania-crm/web-components/InputText';\nconst BuyerFormFilter = forwardRef((props, formRef) => {\n  const t = useT();\n  const {\n    data: linesFromApi,\n    loading,\n    error\n  } = useCrmApi(linesCrmRoutes.getAll, null, {\n    revalidateOnFocus: false\n  });\n  const mockStatus = useMemo(() => [{\n    id: true,\n    name: 'Ativo'\n  }, {\n    id: false,\n    name: 'Inativo'\n  }], []);\n  return /*#__PURE__*/React.createElement(Form, Object.assign({\n    ref: formRef\n  }, props, {\n    schemaConstructor: buyerFilterSchema,\n    defaultValues: INITIAL_VALUES,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputText, {\n    label: t('code of {this}', {\n      this: t('matrix')\n    }),\n    name: \"codMatrix\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputSelect, {\n    clearable: true,\n    name: \"lineDescription\",\n    label: t('line'),\n    idKey: \"lineCode\",\n    valueKey: \"lineDescription\",\n    options: linesFromApi,\n    loading: loading || !!error,\n    multiple: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputText, {\n    label: t('buyer name'),\n    name: \"nameBuyer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputSelect, {\n    clearable: true,\n    name: \"status\",\n    label: t('status'),\n    options: mockStatus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }))));\n});\nexport default BuyerFormFilter;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/buyer/components/BuyerFormFilter/BuyerFormFilter.js"],"names":["React","forwardRef","useMemo","Grid","buyerFilterSchema","INITIAL_VALUES","useT","lines","linesCrmRoutes","useCrmApi","Form","InputSelect","InputText","BuyerFormFilter","props","formRef","t","data","linesFromApi","loading","error","getAll","revalidateOnFocus","mockStatus","id","name","this"],"mappings":"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","sourcesContent":["import React, {\n  forwardRef,\n  useMemo\n} from 'react'\n\nimport Grid from '@material-ui/core/Grid'\n\nimport buyerFilterSchema, { INITIAL_VALUES } from '@britania-crm/forms/schemas/buyer/buyer.filter.schema'\nimport { useT } from '@britania-crm/i18n'\nimport { lines as linesCrmRoutes } from '@britania-crm/services/apis/crmApi/resources/routes'\nimport useCrmApi from '@britania-crm/services/hooks/useCrmApi'\nimport Form from '@britania-crm/web-components/Form'\nimport InputSelect from '@britania-crm/web-components/InputSelect'\nimport InputText from '@britania-crm/web-components/InputText'\n\nconst BuyerFormFilter = forwardRef((props, formRef) => {\n  const t = useT()\n\n  const {\n    data: linesFromApi, loading, error\n  } = useCrmApi(linesCrmRoutes.getAll, null, { revalidateOnFocus: false })\n\n  const mockStatus = useMemo(() =>\n    [\n      { id: true, name: 'Ativo' },\n      { id: false, name: 'Inativo' }\n    ],\n  [])\n\n  return (\n    <Form\n      ref={ formRef }\n      { ...props }\n      schemaConstructor={ buyerFilterSchema }\n      defaultValues={ INITIAL_VALUES }\n    >\n      <Grid container spacing={ 1 }>\n        <Grid item xs={ 12 } md={ 3 }>\n          <InputText\n            label={ t('code of {this}', { this: t('matrix') }) }\n            name=\"codMatrix\"\n          />\n        </Grid>\n        <Grid item xs={ 12 } md={ 3 }>\n          <InputSelect\n            clearable\n            name=\"lineDescription\"\n            label={ t('line') }\n            idKey=\"lineCode\"\n            valueKey=\"lineDescription\"\n            options={ linesFromApi }\n            loading={ loading || !!error }\n            multiple\n          />\n        </Grid>\n        <Grid item xs={ 12 } md={ 6 }>\n          <InputText\n            label={ t('buyer name') }\n            name=\"nameBuyer\"\n          />\n        </Grid>\n        <Grid item xs={ 12 } md={ 3 }>\n          <InputSelect\n            clearable\n            name=\"status\"\n            label={ t('status') }\n            options={ mockStatus }\n          />\n        </Grid>\n      </Grid>\n    </Form>\n  )\n})\n\nexport default BuyerFormFilter\n"]},"metadata":{},"sourceType":"module"}