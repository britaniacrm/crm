{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/components/DropzoneFile/DropzoneFile.js\";\nimport React, { useMemo, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport uniqueId from 'lodash/uniqueId';\nimport { useT } from '@britania-crm/i18n';\nimport Button from '@britania-crm/web-components/Button';\nimport UploadSVG from '@britania-crm/web-components/Icons/Upload';\nimport useStyles, { AddNewImage, AddNewImageDesc, Container } from './styles';\n\nconst DropzoneFile = ({\n  handleUpload,\n  types,\n  title,\n  description\n}) => {\n  const uniqId = useMemo(() => uniqueId(), []);\n  const t = useT();\n  const classes = useStyles();\n  const dragOver = useCallback(e => {\n    e.preventDefault();\n  }, []);\n  const dragEnter = useCallback(e => {\n    e.preventDefault();\n  }, []);\n  const dragLeave = useCallback(e => {\n    e.preventDefault();\n  }, []);\n  const fileDrop = useCallback(e => {\n    e.preventDefault();\n    const files = e.dataTransfer.files;\n\n    if (files.length) {\n      handleUpload(files);\n    }\n  }, [handleUpload]);\n  return /*#__PURE__*/React.createElement(Container, {\n    onDragOver: dragOver,\n    onDragEnter: dragEnter,\n    onDragLeave: dragLeave,\n    onDrop: fileDrop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(UploadSVG, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(AddNewImage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, title), /*#__PURE__*/React.createElement(AddNewImageDesc, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, t('drag n drop to add'), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 34\n    }\n  }), description), /*#__PURE__*/React.createElement(\"input\", {\n    accept: types,\n    style: {\n      display: 'none'\n    },\n    id: uniqId,\n    type: \"file\",\n    onChange: e => handleUpload(e.target.files),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: uniqId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.button,\n    component: \"span\",\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, t('login image add new file'))));\n};\n\nDropzoneFile.propTypes = {\n  handleUpload: PropTypes.func.isRequired,\n  types: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired\n};\nDropzoneFile.defaultProps = {\n  handleUpload() {},\n\n  types: 'image/png, image/jpg, image/jpeg, image/gif'\n};\nexport default DropzoneFile;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/components/DropzoneFile/DropzoneFile.js"],"names":["React","useMemo","useCallback","PropTypes","uniqueId","useT","Button","UploadSVG","useStyles","AddNewImage","AddNewImageDesc","Container","DropzoneFile","handleUpload","types","title","description","uniqId","t","classes","dragOver","e","preventDefault","dragEnter","dragLeave","fileDrop","files","dataTransfer","length","display","target","button","propTypes","func","isRequired","string","defaultProps"],"mappings":"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","sourcesContent":["import React, {\n  useMemo,\n  useCallback\n} from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport uniqueId from 'lodash/uniqueId'\n\nimport { useT } from '@britania-crm/i18n'\nimport Button from '@britania-crm/web-components/Button'\nimport UploadSVG from '@britania-crm/web-components/Icons/Upload'\n\nimport useStyles, {\n  AddNewImage,\n  AddNewImageDesc,\n  Container\n} from './styles'\n\nconst DropzoneFile = ({\n  handleUpload,\n  types,\n  title,\n  description\n}) => {\n  const uniqId = useMemo(() => uniqueId(), [])\n  const t = useT()\n  const classes = useStyles()\n\n  const dragOver = useCallback((e) => {\n    e.preventDefault()\n  }, [])\n\n  const dragEnter = useCallback((e) => {\n    e.preventDefault()\n  }, [])\n\n  const dragLeave = useCallback((e) => {\n    e.preventDefault()\n  }, [])\n\n  const fileDrop = useCallback((e) => {\n    e.preventDefault()\n    const files = e.dataTransfer.files\n    if (files.length) {\n      handleUpload(files)\n    }\n  }, [handleUpload])\n\n  return (\n    <Container\n      onDragOver={ dragOver }\n      onDragEnter={ dragEnter }\n      onDragLeave={ dragLeave }\n      onDrop={ fileDrop }\n    >\n      <UploadSVG />\n      <AddNewImage >{ title }\n      </AddNewImage>\n      <AddNewImageDesc>\n        {t('drag n drop to add')}<br />{description}\n      </AddNewImageDesc>\n      <input\n        accept={ types }\n        style={ { display: 'none' } }\n        id={ uniqId }\n        type=\"file\"\n        onChange={ (e) => handleUpload(e.target.files) }\n      />\n      <label\n        htmlFor={ uniqId }\n      >\n        <Button\n          className={ classes.button }\n          component=\"span\"\n          color=\"secondary\"\n        >\n          { t('login image add new file') }\n        </Button>\n      </label>\n    </Container>\n  )\n}\nDropzoneFile.propTypes = {\n  handleUpload: PropTypes.func.isRequired,\n  types: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired\n}\n\nDropzoneFile.defaultProps = {\n  handleUpload () {},\n  types: 'image/png, image/jpg, image/jpeg, image/gif'\n}\n\nexport default DropzoneFile\n"]},"metadata":{},"sourceType":"module"}