{"ast":null,"code":"import { put, call, all, takeLatest } from 'redux-saga/effects';\nimport map from 'lodash/map';\nimport reverse from 'lodash/reverse';\nimport { MSG003, MSG004 } from '@britania-crm/constants/feedbackMessages.constants';\nimport { getAllMessage, getOneMessage, createMessage, updateMessage, deleteMessage, deleteMessageAttachment, searchMessages } from '@britania-crm/services/apis/crmApi/resources/message.service';\nimport { AppActions } from '../app/app.actions';\nimport { MessageActions, MessageTypes } from './message.actions';\n\nfunction* doGetAllMessages() {\n  try {\n    const response = yield call(getAllMessage);\n    yield put(MessageActions.setAllMessageSuccess(reverse(response)));\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nfunction* doGetOneMessage({\n  id\n}) {\n  try {\n    const response = yield call(getOneMessage, id);\n    yield put(MessageActions.setOneMessageSuccess(response));\n    const profiles = map(response === null || response === void 0 ? void 0 : response.messageProfile, item => item && item.profile[0]);\n    yield put(MessageActions.setProfilesSelected(profiles));\n  } catch (error) {\n    yield put(AppActions.addAlert({\n      type: 'error',\n      message: 'Falha ao buscar recado.'\n    }));\n  }\n}\n\nfunction* doCreateMessage({\n  params,\n  onSuccess = () => {},\n  onError = () => {}\n}) {\n  try {\n    yield put(MessageActions.setLoading(true));\n    const {\n      status\n    } = yield call(createMessage, params);\n\n    if (status === 201) {\n      yield call(onSuccess);\n      yield put(AppActions.addAlert({\n        type: 'success',\n        message: MSG003\n      }));\n    }\n  } catch (error) {\n    yield put(AppActions.addAlert({\n      type: 'error',\n      message: 'Falha ao salvar recado.'\n    }));\n    yield call(onError);\n  } finally {\n    yield put(MessageActions.setLoading(false));\n  }\n}\n\nfunction* doUpdateMessage({\n  id,\n  params,\n  onSuccess = () => {},\n  onError = () => {}\n}) {\n  try {\n    yield put(MessageActions.setLoading(true));\n    const {\n      status\n    } = yield call(updateMessage, {\n      params,\n      id\n    });\n\n    if (status === 200) {\n      yield call(onSuccess);\n      yield put(AppActions.addAlert({\n        type: 'success',\n        message: MSG004\n      }));\n    }\n  } catch (error) {\n    yield put(AppActions.addAlert({\n      type: 'error',\n      message: 'Falha ao editar recado.'\n    }));\n    yield call(onError);\n  } finally {\n    yield put(MessageActions.setLoading(false));\n  }\n}\n\nfunction* doDeleteMessage({\n  id,\n  onSuccess = () => {},\n  onError = () => {}\n}) {\n  try {\n    const {\n      status\n    } = yield call(deleteMessage, id);\n\n    if (status === 200) {\n      yield call(onSuccess);\n      yield put(AppActions.addAlert({\n        type: 'success',\n        message: MSG004\n      }));\n    }\n  } catch (error) {\n    yield put(AppActions.addAlert({\n      type: 'error',\n      message: 'Falha ao excluir recado.'\n    }));\n    yield call(onError);\n  }\n}\n\nfunction* doDeleteMessageAttachment({\n  id,\n  files,\n  onSuccess\n}) {\n  try {\n    yield all(map(files, file => call(deleteMessageAttachment, id, file.fileId)));\n    yield call(onSuccess); // yield put(AppActions.addAlert({ type: 'success', message: MSG004 }))\n  } catch (error) {// yield put(AppActions.addAlert({ type: 'error', message: 'Falha ao excluir anexo.' }))\n  }\n}\n\nfunction* doGetFilteredMessages({\n  filters\n}) {\n  try {\n    const response = yield call(searchMessages, filters);\n    yield put(MessageActions.setAllFilterMessageSuccess(response));\n  } catch (error) {\n    yield put(AppActions.addAlert({\n      type: 'error',\n      message: 'Recados n√£o localizados.'\n    }));\n  }\n}\n\nexport default [takeLatest(MessageTypes.GET_ALL_MESSAGE, doGetAllMessages), takeLatest(MessageTypes.GET_ONE_MESSAGE, doGetOneMessage), takeLatest(MessageTypes.CREATE_MESSAGE, doCreateMessage), takeLatest(MessageTypes.UPDATE_MESSAGE, doUpdateMessage), takeLatest(MessageTypes.DELETE_MESSAGE, doDeleteMessage), takeLatest(MessageTypes.DELETE_MESSAGE_ATTACHMENT, doDeleteMessageAttachment), takeLatest(MessageTypes.GET_FILTERED_MESSAGES, doGetFilteredMessages)];","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/core/stores/message/message.sagas.js"],"names":["put","call","all","takeLatest","map","reverse","MSG003","MSG004","getAllMessage","getOneMessage","createMessage","updateMessage","deleteMessage","deleteMessageAttachment","searchMessages","AppActions","MessageActions","MessageTypes","doGetAllMessages","response","setAllMessageSuccess","error","console","doGetOneMessage","id","setOneMessageSuccess","profiles","messageProfile","item","profile","setProfilesSelected","addAlert","type","message","doCreateMessage","params","onSuccess","onError","setLoading","status","doUpdateMessage","doDeleteMessage","doDeleteMessageAttachment","files","file","fileId","doGetFilteredMessages","filters","setAllFilterMessageSuccess","GET_ALL_MESSAGE","GET_ONE_MESSAGE","CREATE_MESSAGE","UPDATE_MESSAGE","DELETE_MESSAGE","DELETE_MESSAGE_ATTACHMENT","GET_FILTERED_MESSAGES"],"mappings":"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","sourcesContent":["import {\n  put,\n  call,\n  all,\n  takeLatest\n} from 'redux-saga/effects'\n\nimport map from 'lodash/map'\nimport reverse from 'lodash/reverse'\n\nimport {\n  MSG003,\n  MSG004\n} from '@britania-crm/constants/feedbackMessages.constants'\nimport {\n  getAllMessage,\n  getOneMessage,\n  createMessage,\n  updateMessage,\n  deleteMessage,\n  deleteMessageAttachment,\n  searchMessages\n} from '@britania-crm/services/apis/crmApi/resources/message.service'\n\nimport { AppActions } from '../app/app.actions'\nimport {\n  MessageActions,\n  MessageTypes\n} from './message.actions'\n\nfunction* doGetAllMessages () {\n  try {\n    const response = yield call(getAllMessage)\n\n    yield put(MessageActions.setAllMessageSuccess(reverse(response)))\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nfunction* doGetOneMessage ({ id }) {\n  try {\n    const response = yield call(getOneMessage, id)\n\n    yield put(MessageActions.setOneMessageSuccess(response))\n\n    const profiles = map(response?.messageProfile, (item) => item && item.profile[0])\n\n    yield put(MessageActions.setProfilesSelected(profiles))\n  } catch (error) {\n    yield put(AppActions.addAlert({ type: 'error', message: 'Falha ao buscar recado.' }))\n  }\n}\n\nfunction* doCreateMessage ({\n  params, onSuccess = () => {}, onError = () => {}\n}) {\n  try {\n    yield put(MessageActions.setLoading(true))\n\n    const { status } = yield call(createMessage, params)\n\n    if (status === 201) {\n      yield call(onSuccess)\n      yield put(AppActions.addAlert({ type: 'success', message: MSG003 }))\n    }\n  } catch (error) {\n    yield put(AppActions.addAlert({ type: 'error', message: 'Falha ao salvar recado.' }))\n    yield call(onError)\n  } finally {\n    yield put(MessageActions.setLoading(false))\n  }\n}\n\nfunction* doUpdateMessage ({\n  id, params, onSuccess = () => {}, onError = () => {}\n}) {\n  try {\n    yield put(MessageActions.setLoading(true))\n\n    const { status } = yield call(updateMessage, { params, id })\n\n    if (status === 200) {\n      yield call(onSuccess)\n      yield put(AppActions.addAlert({ type: 'success', message: MSG004 }))\n    }\n  } catch (error) {\n    yield put(AppActions.addAlert({ type: 'error', message: 'Falha ao editar recado.' }))\n    yield call(onError)\n  } finally {\n    yield put(MessageActions.setLoading(false))\n  }\n}\n\nfunction* doDeleteMessage ({\n  id, onSuccess = () => {}, onError = () => {}\n}) {\n  try {\n    const { status } = yield call(deleteMessage, id)\n\n    if (status === 200) {\n      yield call(onSuccess)\n      yield put(AppActions.addAlert({ type: 'success', message: MSG004 }))\n    }\n  } catch (error) {\n    yield put(AppActions.addAlert({ type: 'error', message: 'Falha ao excluir recado.' }))\n    yield call(onError)\n  }\n}\n\nfunction* doDeleteMessageAttachment ({\n  id, files, onSuccess\n}) {\n  try {\n    yield all(map(files, (file) => call(deleteMessageAttachment, id, file.fileId)))\n\n    yield call(onSuccess)\n    // yield put(AppActions.addAlert({ type: 'success', message: MSG004 }))\n  } catch (error) {\n    // yield put(AppActions.addAlert({ type: 'error', message: 'Falha ao excluir anexo.' }))\n  }\n}\n\nfunction* doGetFilteredMessages ({ filters }) {\n  try {\n    const response = yield call(searchMessages, filters)\n\n    yield put(MessageActions.setAllFilterMessageSuccess(response))\n  } catch (error) {\n    yield put(AppActions.addAlert({ type: 'error', message: 'Recados n√£o localizados.' }))\n  }\n}\n\nexport default [\n  takeLatest(MessageTypes.GET_ALL_MESSAGE, doGetAllMessages),\n  takeLatest(MessageTypes.GET_ONE_MESSAGE, doGetOneMessage),\n  takeLatest(MessageTypes.CREATE_MESSAGE, doCreateMessage),\n  takeLatest(MessageTypes.UPDATE_MESSAGE, doUpdateMessage),\n  takeLatest(MessageTypes.DELETE_MESSAGE, doDeleteMessage),\n  takeLatest(MessageTypes.DELETE_MESSAGE_ATTACHMENT, doDeleteMessageAttachment),\n  takeLatest(MessageTypes.GET_FILTERED_MESSAGES, doGetFilteredMessages)\n]\n"]},"metadata":{},"sourceType":"module"}