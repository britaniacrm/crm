{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/components/PreviewFile/PreviewFile.js\";\nimport React, { useCallback, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport Chip from '@material-ui/core/Chip';\nimport Grid from '@material-ui/core/Grid';\nimport ImageOutlined from '@material-ui/icons/ImageOutlined';\nimport { useT } from '@britania-crm/i18n';\nimport colors from '@britania-crm/styles/colors';\nimport { formatPathToCloudStorageUrl } from '@britania-crm/utils/files';\nimport IconButton from '@britania-crm/web-components/IconButton';\nimport DeleteIcon from '@britania-crm/web-components/Icons/DeleteIcon';\nimport PreviewImage from '@britania-crm/web-components/PreviewImage';\nimport PreviewPDF from '@britania-crm/web-components/PreviewPDF';\nimport Tooltip from '@britania-crm/web-components/Tooltip';\nimport useStyles from './styles';\n\nconst PreviewFile = ({\n  file,\n  style,\n  defaultFile,\n  onRemove,\n  hasPreview\n}) => {\n  const classes = useStyles();\n  const t = useT();\n  const normalizeFile = useMemo(() => {\n    if (file.id) {\n      return formatPathToCloudStorageUrl(file.path);\n    }\n\n    if (file instanceof File) {\n      return URL.createObjectURL(file);\n    }\n\n    return file;\n  }, [file]);\n  const type = useMemo(() => {\n    switch (file.type || file.contentType) {\n      case 'application/pdf':\n        return 'pdf';\n\n      case 'image/jpeg':\n        return 'image';\n\n      case 'image/png':\n        return 'image';\n\n      case 'video/mp4':\n        return 'video';\n\n      default:\n        return 'excel';\n    }\n  }, [file]);\n  const nameFile = useMemo(() => {\n    if (file === null || file === void 0 ? void 0 : file.filename) {\n      return file === null || file === void 0 ? void 0 : file.filename;\n    }\n\n    return file === null || file === void 0 ? void 0 : file.name;\n  }, [file]);\n  const handleError = useCallback(e => {\n    e.target.onerror = null;\n    e.target.src = defaultFile;\n  }, [defaultFile]);\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, onRemove && file && hasPreview && type !== 'excel' && type !== 'video' && /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: t('datagrid body delete tooltip'),\n    arrow: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    color: \"care\",\n    onClick: onRemove,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DeleteIcon, {\n    color: colors.red.base,\n    size: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  })))), hasPreview && file && type !== 'excel' && type !== 'video' && /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: file && classes.preview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, type === 'pdf' ? /*#__PURE__*/React.createElement(PreviewPDF, {\n    url: normalizeFile,\n    defaultPdf: defaultFile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(PreviewImage, {\n    url: normalizeFile,\n    rightStyles: style,\n    defaultImg: defaultFile,\n    onError: handleError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  })), file && (type === 'excel' || type === 'video') && /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: file && classes.preview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Chip, {\n    label: nameFile,\n    variant: \"outlined\",\n    deleteIcon: /*#__PURE__*/React.createElement(DeleteIcon, {\n      color: colors.red.base,\n      size: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 26\n      }\n    }),\n    onDelete: onRemove,\n    icon: /*#__PURE__*/React.createElement(ImageOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 20\n      }\n    }),\n    style: {\n      height: 60\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  })));\n};\n\nPreviewFile.propTypes = {\n  style: PropTypes.object,\n  file: PropTypes.oneOfType([PropTypes.object, PropTypes.string]).isRequired,\n  defaultFile: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  onRemove: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  hasPreview: PropTypes.bool\n};\nPreviewFile.defaultProps = {\n  style: {},\n  defaultFile: '',\n  onRemove: undefined,\n  hasPreview: false\n};\nexport default PreviewFile;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/components/PreviewFile/PreviewFile.js"],"names":["React","useCallback","useMemo","PropTypes","Chip","Grid","ImageOutlined","useT","colors","formatPathToCloudStorageUrl","IconButton","DeleteIcon","PreviewImage","PreviewPDF","Tooltip","useStyles","PreviewFile","file","style","defaultFile","onRemove","hasPreview","classes","t","normalizeFile","id","path","File","URL","createObjectURL","type","contentType","nameFile","filename","name","handleError","e","target","onerror","src","red","base","preview","height","propTypes","object","oneOfType","string","isRequired","func","bool","defaultProps","undefined"],"mappings":"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","sourcesContent":["import React, {\n  useCallback,\n  useMemo\n} from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport Chip from '@material-ui/core/Chip'\nimport Grid from '@material-ui/core/Grid'\nimport ImageOutlined from '@material-ui/icons/ImageOutlined'\n\nimport { useT } from '@britania-crm/i18n'\nimport colors from '@britania-crm/styles/colors'\nimport { formatPathToCloudStorageUrl } from '@britania-crm/utils/files'\nimport IconButton from '@britania-crm/web-components/IconButton'\nimport DeleteIcon from '@britania-crm/web-components/Icons/DeleteIcon'\nimport PreviewImage from '@britania-crm/web-components/PreviewImage'\nimport PreviewPDF from '@britania-crm/web-components/PreviewPDF'\nimport Tooltip from '@britania-crm/web-components/Tooltip'\n\nimport useStyles from './styles'\n\nconst PreviewFile = ({\n  file, style, defaultFile, onRemove, hasPreview\n}) => {\n  const classes = useStyles()\n  const t = useT()\n\n  const normalizeFile = useMemo(\n    () => {\n      if (file.id) {\n        return formatPathToCloudStorageUrl(file.path)\n      }\n      if (file instanceof File) {\n        return URL.createObjectURL(file)\n      }\n      return file\n    },\n    [file]\n  )\n\n  const type = useMemo(\n    () => {\n      switch (file.type || file.contentType) {\n        case 'application/pdf':\n          return 'pdf'\n        case 'image/jpeg':\n          return 'image'\n        case 'image/png':\n          return 'image'\n        case 'video/mp4':\n          return 'video'\n        default:\n          return 'excel'\n      }\n    },\n    [file])\n\n  const nameFile = useMemo(\n    () => {\n      if (file?.filename) {\n        return file?.filename\n      }\n      return file?.name\n    },\n    [file])\n\n  const handleError = useCallback(\n    (e) => {\n      e.target.onerror = null\n      e.target.src = defaultFile\n    },\n    [defaultFile]\n  )\n\n  return (\n    <Grid container justify=\"flex-end\" >\n      {onRemove && file && hasPreview && type !== 'excel' && type !== 'video' && (\n        <Grid item xs={ 1 } >\n          <Tooltip title={ t('datagrid body delete tooltip') } arrow>\n            <IconButton color=\"care\" onClick={ onRemove }>\n              <DeleteIcon color={ colors.red.base } size={ 24 }/>\n            </IconButton>\n          </Tooltip>\n        </Grid>\n      )}\n      {hasPreview && file && type !== 'excel' && type !== 'video' && (\n        <Grid item xs={ 12 } className={ file && classes.preview }>\n          {type === 'pdf' ? (\n            <PreviewPDF\n              url={ normalizeFile }\n              defaultPdf={ defaultFile }\n            />\n          ) : (\n            <PreviewImage\n              url={ normalizeFile }\n              rightStyles={ style }\n              defaultImg={ defaultFile }\n              onError={ handleError }\n            />\n          )}\n        </Grid>\n      )}\n      {(file && (type === 'excel' || type === 'video')) && (\n        <Grid item xs={ 12 } className={ file && classes.preview }>\n          <Chip\n            label={ nameFile }\n            variant=\"outlined\"\n            deleteIcon={ <DeleteIcon color={ colors.red.base } size={ 24 }/> }\n            onDelete={ onRemove }\n            icon={ <ImageOutlined /> }\n            style={ { height: 60 } }\n          />\n        </Grid>\n      )}\n    </Grid>\n  )\n}\n\nPreviewFile.propTypes = {\n  style: PropTypes.object,\n  file: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string\n  ]).isRequired,\n  defaultFile: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string\n  ]),\n  onRemove: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.bool\n  ]),\n  hasPreview: PropTypes.bool\n}\nPreviewFile.defaultProps = {\n  style: {},\n  defaultFile: '',\n  onRemove: undefined,\n  hasPreview: false\n}\n\nexport default PreviewFile\n"]},"metadata":{},"sourceType":"module"}