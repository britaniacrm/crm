{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/vpc/screens/ReportContractPercentageScreen/ReportContractPercentageScreen.js\";\nimport React, { useMemo, useCallback, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport identity from 'lodash/identity';\nimport pickBy from 'lodash/pickBy';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Add from '@material-ui/icons/Add';\nimport Remove from '@material-ui/icons/Remove';\nimport { useT } from '@britania-crm/i18n'; // import { reportVpc as reportVpcCrmRoutes } from '@britania-crm/services/apis/crmApi/resources/routes'\n// import useCrmApi from '@britania-crm/services/hooks/useCrmApi'\n\nimport colors from '@britania-crm/styles/colors';\nimport { formatMoney } from '@britania-crm/utils/formatters';\nimport DataTable from '@britania-crm/web-components/DataTable';\nimport PageFilter from '@britania-crm/web-components/PageFilter';\nimport reportVpcFormFilter from '../../containers/reportVpcFormFilter/ReportVpcFormFilter';\nimport { Container, CompaniesBranch } from './styles';\n\nconst ReportContractPercentageScreen = () => {\n  const t = useT();\n  const history = useHistory();\n  const [filters, setFilters] = useState({}); // const {\n  //   data,\n  //   loading\n  // } = useCrmApi([reportVpcCrmRoutes.getAll, filters], { params: filters })\n\n  const MOCK_MAIN_DATA = useMemo(() => [{\n    id: 1,\n    customer: 'Carrefour',\n    percentage: '10%',\n    value: '100',\n    homeLine: {\n      storeActions: {\n        percentage: '100%',\n        value: '50'\n      },\n      bonus: {\n        percentage: '100%',\n        value: '50'\n      },\n      growth: {\n        percentage: '100%',\n        value: '50'\n      },\n      flow: {\n        percentage: '100%',\n        value: '50'\n      },\n      presidency: {\n        percentage: '100%',\n        value: '50'\n      },\n      vpc: {\n        percentage: '100%',\n        value: '50'\n      },\n      ve: {\n        percentage: '100%',\n        value: '50'\n      }\n    },\n    kitchenLine: {\n      storeActions: {\n        percentage: '100%',\n        value: '50'\n      },\n      bonus: {\n        percentage: '100%',\n        value: '50'\n      },\n      growth: {\n        percentage: '100%',\n        value: '50'\n      },\n      flow: {\n        percentage: '100%',\n        value: '50'\n      },\n      presidency: {\n        percentage: '100%',\n        value: '50'\n      },\n      vpc: {\n        percentage: '100%',\n        value: '50'\n      },\n      ve: {\n        percentage: '100%',\n        value: '50'\n      }\n    }\n  }], []);\n  const columnsMain = useMemo(() => [{\n    title: t('customer', {\n      howMany: 1\n    }),\n    field: 'customer'\n  }, {\n    title: t('percentage', {\n      howMany: 1\n    }),\n    field: 'percentage'\n  }, {\n    title: t('value', {\n      howMany: 1\n    }),\n    field: 'value',\n    render: row => formatMoney(row.value)\n  }], [t]);\n  const henderColumns = useCallback((percentage, value) => /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle2\",\n    gutterBottom: true,\n    style: {\n      color: colors.secondary.main\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, \" % \"), percentage), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle2\",\n    gutterBottom: true,\n    style: {\n      color: colors.secondary.main\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, t('value', {\n    howMany: 1\n  })), formatMoney(value))), [t]);\n  const columnsFan = useMemo(() => [{\n    title: t('type'),\n    field: 'type'\n  }, {\n    title: t('store actions'),\n    field: 'storeActions',\n    render: ({\n      storeActions\n    }) => henderColumns(storeActions.percentage, storeActions.value)\n  }, {\n    title: t('bonus'),\n    field: 'bonus',\n    render: ({\n      bonus\n    }) => henderColumns(bonus.percentage, bonus.value)\n  }, {\n    title: t('growth'),\n    field: 'growth',\n    render: ({\n      growth\n    }) => henderColumns(growth.percentage, growth.value)\n  }, {\n    title: t('flow'),\n    field: 'flow',\n    render: ({\n      flow\n    }) => henderColumns(flow.percentage, flow.value)\n  }, {\n    title: t('presidency'),\n    field: 'presidency',\n    render: ({\n      presidency\n    }) => henderColumns(presidency.percentage, presidency.value)\n  }, {\n    title: 'VPC',\n    field: 'vpc',\n    render: ({\n      vpc\n    }) => henderColumns(vpc.percentage, vpc.value)\n  }, {\n    title: 'VE',\n    field: 've',\n    render: ({\n      ve\n    }) => henderColumns(ve.percentage, ve.value)\n  }], [henderColumns, t]);\n  const handleFilter = useCallback(values => {\n    setFilters(pickBy(values, identity));\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PageFilter, {\n    Form: reportVpcFormFilter,\n    handleFilter: handleFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DataTable, {\n    options: {\n      search: false\n    },\n    data: MOCK_MAIN_DATA,\n    columns: columnsMain,\n    filters: filters,\n    title: t('contract percentage'),\n    onGoBack: history.goBack,\n    onExportClick: () => {},\n    detailPanel: [{\n      icon: Add,\n      openIcon: Remove,\n      iconProps: {\n        fontSize: 'small'\n      },\n      tooltip: t('view more'),\n      render: row => /*#__PURE__*/React.createElement(CompaniesBranch, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 1,\n        direction: \"row\",\n        justify: \"center\",\n        alignItems: \"center\",\n        style: {\n          padding: 15\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(DataTable, {\n        data: [{ ...row.homeLine,\n          type: 'Linha casa'\n        }, { ...row.kitchenLine,\n          type: 'Linha cozinha'\n        }],\n        columns: columnsFan,\n        options: {\n          search: false\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 19\n        }\n      })))\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default ReportContractPercentageScreen;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/vpc/screens/ReportContractPercentageScreen/ReportContractPercentageScreen.js"],"names":["React","useMemo","useCallback","useState","useHistory","identity","pickBy","Grid","Typography","Add","Remove","useT","colors","formatMoney","DataTable","PageFilter","reportVpcFormFilter","Container","CompaniesBranch","ReportContractPercentageScreen","t","history","filters","setFilters","MOCK_MAIN_DATA","id","customer","percentage","value","homeLine","storeActions","bonus","growth","flow","presidency","vpc","ve","kitchenLine","columnsMain","title","howMany","field","render","row","henderColumns","color","secondary","main","columnsFan","handleFilter","values","search","goBack","icon","openIcon","iconProps","fontSize","tooltip","padding","type"],"mappings":"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","sourcesContent":["import React, {\n  useMemo,\n  useCallback,\n  useState\n} from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport identity from 'lodash/identity'\nimport pickBy from 'lodash/pickBy'\n\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport Add from '@material-ui/icons/Add'\nimport Remove from '@material-ui/icons/Remove'\n\nimport { useT } from '@britania-crm/i18n'\n// import { reportVpc as reportVpcCrmRoutes } from '@britania-crm/services/apis/crmApi/resources/routes'\n// import useCrmApi from '@britania-crm/services/hooks/useCrmApi'\nimport colors from '@britania-crm/styles/colors'\nimport { formatMoney } from '@britania-crm/utils/formatters'\nimport DataTable from '@britania-crm/web-components/DataTable'\nimport PageFilter from '@britania-crm/web-components/PageFilter'\n\nimport reportVpcFormFilter from '../../containers/reportVpcFormFilter/ReportVpcFormFilter'\nimport {\n  Container,\n  CompaniesBranch\n} from './styles'\n\nconst ReportContractPercentageScreen = () => {\n  const t = useT()\n\n  const history = useHistory()\n\n  const [filters, setFilters] = useState({})\n\n  // const {\n  //   data,\n  //   loading\n  // } = useCrmApi([reportVpcCrmRoutes.getAll, filters], { params: filters })\n\n  const MOCK_MAIN_DATA = useMemo(() => [\n    {\n      id: 1,\n      customer: 'Carrefour',\n      percentage: '10%',\n      value: '100',\n      homeLine: {\n        storeActions: { percentage: '100%', value: '50' },\n        bonus: { percentage: '100%', value: '50' },\n        growth: { percentage: '100%', value: '50' },\n        flow: { percentage: '100%', value: '50' },\n        presidency: { percentage: '100%', value: '50' },\n        vpc: { percentage: '100%', value: '50' },\n        ve: { percentage: '100%', value: '50' }\n      },\n      kitchenLine: {\n        storeActions: { percentage: '100%', value: '50' },\n        bonus: { percentage: '100%', value: '50' },\n        growth: { percentage: '100%', value: '50' },\n        flow: { percentage: '100%', value: '50' },\n        presidency: { percentage: '100%', value: '50' },\n        vpc: { percentage: '100%', value: '50' },\n        ve: { percentage: '100%', value: '50' }\n      }\n    }\n  ]\n  , [])\n\n  const columnsMain = useMemo(() => [\n    {\n      title: t('customer', { howMany: 1 }),\n      field: 'customer'\n    },\n    {\n      title: t('percentage', { howMany: 1 }),\n      field: 'percentage'\n    },\n    {\n      title: t('value', { howMany: 1 }),\n      field: 'value',\n      render: (row) => formatMoney(row.value)\n    }\n  ], [t])\n\n  const henderColumns = useCallback(\n    (percentage, value) =>\n      <Grid container justify=\"space-between\">\n        <Grid item>\n          <Typography variant=\"subtitle2\" gutterBottom style={ { color: colors.secondary.main } }> % </Typography>\n          { percentage}\n        </Grid>\n        <Grid item>\n          <Typography variant=\"subtitle2\" gutterBottom style={ { color: colors.secondary.main } }>\n            {t('value', { howMany: 1 })}\n          </Typography>\n          {formatMoney(value)}\n        </Grid>\n      </Grid>\n    ,\n    [t]\n  )\n\n  const columnsFan = useMemo(() => [\n    {\n      title: t('type'),\n      field: 'type'\n    },\n    {\n      title: t('store actions'),\n      field: 'storeActions',\n      render: ({ storeActions }) => henderColumns(storeActions.percentage, storeActions.value)\n    },\n    {\n      title: t('bonus'),\n      field: 'bonus',\n      render: ({ bonus }) => henderColumns(bonus.percentage, bonus.value)\n    },\n    {\n      title: t('growth'),\n      field: 'growth',\n      render: ({ growth }) => henderColumns(growth.percentage, growth.value)\n    },\n    {\n      title: t('flow'),\n      field: 'flow',\n      render: ({ flow }) => henderColumns(flow.percentage, flow.value)\n    },\n    {\n      title: t('presidency'),\n      field: 'presidency',\n      render: ({ presidency }) => henderColumns(presidency.percentage, presidency.value)\n    },\n    {\n      title: 'VPC',\n      field: 'vpc',\n      render: ({ vpc }) => henderColumns(vpc.percentage, vpc.value)\n    },\n    {\n      title: 'VE',\n      field: 've',\n      render: ({ ve }) => henderColumns(ve.percentage, ve.value)\n    }\n  ], [henderColumns, t])\n\n  const handleFilter = useCallback(\n    (values) => {\n      setFilters(pickBy(values, identity))\n    },\n    []\n  )\n\n  return (\n    <>\n      <PageFilter\n        Form={ reportVpcFormFilter }\n        handleFilter={ handleFilter }\n      />\n      <Container>\n        <DataTable\n          options={ { search: false } }\n          data={ MOCK_MAIN_DATA }\n          columns={ columnsMain }\n          filters={ filters }\n          title={ t('contract percentage') }\n          onGoBack={ history.goBack }\n          onExportClick={ () => {} }\n          detailPanel = { [{\n            icon: Add,\n            openIcon: Remove,\n            iconProps: { fontSize: 'small' },\n            tooltip: t('view more'),\n            render: (row) => (\n              <CompaniesBranch>\n                <Grid\n                  container\n                  spacing={ 1 }\n                  direction=\"row\"\n                  justify=\"center\"\n                  alignItems=\"center\"\n                  style={ { padding: 15 } }\n                >\n                  <DataTable\n                    data={ [{ ...row.homeLine, type: 'Linha casa' }, { ...row.kitchenLine, type: 'Linha cozinha' }] }\n                    columns={ columnsFan }\n                    options={ { search: false } }\n                  />\n                </Grid>\n              </CompaniesBranch>\n            )\n          }] }\n        />\n      </Container>\n    </>\n  )\n}\n\nexport default ReportContractPercentageScreen\n"]},"metadata":{},"sourceType":"module"}