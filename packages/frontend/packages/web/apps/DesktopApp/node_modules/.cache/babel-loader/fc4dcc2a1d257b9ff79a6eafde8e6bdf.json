{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/customers/screens/CustomerScreen/CustomerScreen.js\";\nimport React, { useCallback, useMemo, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport identity from 'lodash/identity';\nimport pickBy from 'lodash/pickBy';\nimport Add from '@material-ui/icons/Add';\nimport Remove from '@material-ui/icons/Remove';\nimport { useT } from '@britania-crm/i18n';\nimport { customer as customerCrmRoutes } from '@britania-crm/services/apis/crmApi/resources/routes';\nimport { trimMask } from '@britania-crm/utils/formatters';\nimport DataTable from '@britania-crm/web-components/DataTable';\nimport PageFilter from '@britania-crm/web-components/PageFilter';\nimport { useRoutes } from '@britania-crm/web-src/routes/authenticated.routes';\nimport CompaniesBranchTable from '../../components/CompaniesBranch';\nimport CustomerFormFilter from '../../components/customerFormFilter';\nimport { getConfigClientsColumns } from '../../utils';\nimport { Container, CompaniesBranch } from './styles';\n\nconst CustomerScreen = () => {\n  const t = useT();\n  const history = useHistory();\n  const {\n    routes,\n    currentRoutePermissions\n  } = useRoutes();\n  const [filters, setFilters] = useState({});\n  const columns = useMemo(() => getConfigClientsColumns(t), [t]);\n  const onAddClick = useCallback(() => {\n    history.push(routes.newCustomerPreRegistration.path, {\n      params: {\n        mode: 'create'\n      }\n    });\n  }, [history, routes]);\n  const onEditClick = useCallback((event, row) => {\n    if (row.clientRegistrationType === 'PRE_REGISTRATION') {\n      history.push(routes.editCustomerPreRegistration.path, {\n        params: {\n          mode: 'edit',\n          id: row.id\n        }\n      });\n    } else {\n      history.push(routes.editCustomer.path, {\n        params: {\n          mode: 'edit',\n          id: row.parentCompanyCode\n        }\n      });\n    }\n  }, [history, routes]);\n  const addMicroActions = useMemo(() => [{\n    title: t('customer request'),\n    action: row => console.log('test 1 ', row)\n  }, {\n    title: t('customer detail'),\n\n    action(row) {\n      if (row.clientRegistrationType === 'PRE_REGISTRATION') {\n        history.push(routes.viewCustomerPreRegistration.path, {\n          params: {\n            mode: 'view',\n            id: row.id\n          }\n        });\n      } else {\n        history.push(routes.viewCustomer.path, {\n          params: {\n            mode: 'view',\n            id: row.parentCompanyCode\n          }\n        });\n      }\n    }\n\n  }, {\n    title: t('vpc panel'),\n    action: row => console.log('test 3', row)\n  }, {\n    title: t('customer wallet'),\n    action: row => console.log('test 4', row)\n  }, {\n    title: t('pre-registration history'),\n    action: row => console.log('test 5', row)\n  }], [history, routes, t]);\n  const handleFilter = useCallback(async values => {\n    var _values$clientGroup, _values$regionalManag, _values$workflowTaskI;\n\n    const payload = { ...values,\n      clientGroup: values === null || values === void 0 ? void 0 : (_values$clientGroup = values.clientGroup) === null || _values$clientGroup === void 0 ? void 0 : _values$clientGroup.codeClientGroup,\n      regionalManager: values === null || values === void 0 ? void 0 : (_values$regionalManag = values.regionalManager) === null || _values$regionalManag === void 0 ? void 0 : _values$regionalManag.code,\n      workflowTaskId: values === null || values === void 0 ? void 0 : (_values$workflowTaskI = values.workflowTaskId) === null || _values$workflowTaskI === void 0 ? void 0 : _values$workflowTaskI.id,\n      cnpj: trimMask(values.cnpj)\n    };\n    const params = pickBy(payload, identity);\n    setFilters(params);\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PageFilter, {\n    Form: CustomerFormFilter,\n    handleFilter: handleFilter,\n    filters: filters,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DataTable, {\n    options: {\n      search: false\n    },\n    data: customerCrmRoutes.getAll,\n    filters: {\n      clientRegistrationType: 'REGISTER',\n      ...filters\n    },\n    columns: columns,\n    title: t('customers consultation'),\n    addTitle: t('add new {this}', {\n      gender: 'male',\n      this: t('customer', {\n        howMany: 1\n      })\n    }),\n    addMicroActions: addMicroActions,\n    onAddClick: currentRoutePermissions.INCLUIR && onAddClick,\n    onEditClick: currentRoutePermissions.EDITAR && onEditClick,\n    onGoBack: history.goBack,\n    detailPanel: [{\n      icon: Add,\n      openIcon: Remove,\n      iconProps: {\n        fontSize: 'small'\n      },\n      tooltip: t('view more'),\n      render: rowData => /*#__PURE__*/React.createElement(CompaniesBranch, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(CompaniesBranchTable, {\n        id: rowData === null || rowData === void 0 ? void 0 : rowData.parentCompanyCode,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }\n      }))\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default CustomerScreen;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/customers/screens/CustomerScreen/CustomerScreen.js"],"names":["React","useCallback","useMemo","useState","useHistory","identity","pickBy","Add","Remove","useT","customer","customerCrmRoutes","trimMask","DataTable","PageFilter","useRoutes","CompaniesBranchTable","CustomerFormFilter","getConfigClientsColumns","Container","CompaniesBranch","CustomerScreen","t","history","routes","currentRoutePermissions","filters","setFilters","columns","onAddClick","push","newCustomerPreRegistration","path","params","mode","onEditClick","event","row","clientRegistrationType","editCustomerPreRegistration","id","editCustomer","parentCompanyCode","addMicroActions","title","action","console","log","viewCustomerPreRegistration","viewCustomer","handleFilter","values","payload","clientGroup","codeClientGroup","regionalManager","code","workflowTaskId","cnpj","search","getAll","gender","this","howMany","INCLUIR","EDITAR","goBack","icon","openIcon","iconProps","fontSize","tooltip","render","rowData"],"mappings":";AAAA,OAAOA,KAAP,IACEC,WADF,EAEEC,OAFF,EAGEC,QAHF,QAIO,OAJP;AAKA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AAEA,OAAOC,GAAP,MAAgB,wBAAhB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AAEA,SAASC,IAAT,QAAqB,oBAArB;AACA,SAASC,QAAQ,IAAIC,iBAArB,QAA8C,qDAA9C;AACA,SAASC,QAAT,QAAyB,gCAAzB;AACA,OAAOC,SAAP,MAAsB,wCAAtB;AACA,OAAOC,UAAP,MAAuB,yCAAvB;AACA,SAASC,SAAT,QAA0B,mDAA1B;AAEA,OAAOC,oBAAP,MAAiC,kCAAjC;AACA,OAAOC,kBAAP,MAA+B,qCAA/B;AACA,SAASC,uBAAT,QAAwC,aAAxC;AACA,SACEC,SADF,EAEEC,eAFF,QAGO,UAHP;;AAKA,MAAMC,cAAc,GAAG,MAAM;AAC3B,QAAMC,CAAC,GAAGb,IAAI,EAAd;AACA,QAAMc,OAAO,GAAGnB,UAAU,EAA1B;AACA,QAAM;AAAEoB,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAsCV,SAAS,EAArD;AAEA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBxB,QAAQ,CAAC,EAAD,CAAtC;AAEA,QAAMyB,OAAO,GAAG1B,OAAO,CAAC,MAAMgB,uBAAuB,CAACI,CAAD,CAA9B,EAAmC,CAACA,CAAD,CAAnC,CAAvB;AAEA,QAAMO,UAAU,GAAG5B,WAAW,CAAC,MAAM;AACnCsB,IAAAA,OAAO,CAACO,IAAR,CAAaN,MAAM,CAACO,0BAAP,CAAkCC,IAA/C,EAAqD;AAAEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,IAAI,EAAE;AAAR;AAAV,KAArD;AACD,GAF6B,EAE3B,CAACX,OAAD,EAAUC,MAAV,CAF2B,CAA9B;AAIA,QAAMW,WAAW,GAAGlC,WAAW,CAAC,CAACmC,KAAD,EAAQC,GAAR,KAAgB;AAC9C,QAAIA,GAAG,CAACC,sBAAJ,KAA+B,kBAAnC,EAAuD;AACrDf,MAAAA,OAAO,CAACO,IAAR,CAAaN,MAAM,CAACe,2BAAP,CAAmCP,IAAhD,EAAsD;AACpDC,QAAAA,MAAM,EAAE;AACNC,UAAAA,IAAI,EAAE,MADA;AAENM,UAAAA,EAAE,EAAEH,GAAG,CAACG;AAFF;AAD4C,OAAtD;AAMD,KAPD,MAOO;AACLjB,MAAAA,OAAO,CAACO,IAAR,CAAaN,MAAM,CAACiB,YAAP,CAAoBT,IAAjC,EAAuC;AACrCC,QAAAA,MAAM,EAAE;AACNC,UAAAA,IAAI,EAAE,MADA;AAENM,UAAAA,EAAE,EAAEH,GAAG,CAACK;AAFF;AAD6B,OAAvC;AAMD;AACF,GAhB8B,EAgB5B,CAACnB,OAAD,EAAUC,MAAV,CAhB4B,CAA/B;AAkBA,QAAMmB,eAAe,GAAGzC,OAAO,CAAC,MAAM,CACpC;AACE0C,IAAAA,KAAK,EAAEtB,CAAC,CAAC,kBAAD,CADV;AAEEuB,IAAAA,MAAM,EAAGR,GAAD,IAASS,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBV,GAAvB;AAFnB,GADoC,EAKpC;AACEO,IAAAA,KAAK,EAAEtB,CAAC,CAAC,iBAAD,CADV;;AAEEuB,IAAAA,MAAM,CAAER,GAAF,EAAO;AACX,UAAIA,GAAG,CAACC,sBAAJ,KAA+B,kBAAnC,EAAuD;AACrDf,QAAAA,OAAO,CAACO,IAAR,CAAaN,MAAM,CAACwB,2BAAP,CAAmChB,IAAhD,EAAsD;AACpDC,UAAAA,MAAM,EAAE;AACNC,YAAAA,IAAI,EAAE,MADA;AAENM,YAAAA,EAAE,EAAEH,GAAG,CAACG;AAFF;AAD4C,SAAtD;AAMD,OAPD,MAOO;AACLjB,QAAAA,OAAO,CAACO,IAAR,CAAaN,MAAM,CAACyB,YAAP,CAAoBjB,IAAjC,EAAuC;AACrCC,UAAAA,MAAM,EAAE;AACNC,YAAAA,IAAI,EAAE,MADA;AAENM,YAAAA,EAAE,EAAEH,GAAG,CAACK;AAFF;AAD6B,SAAvC;AAMD;AACF;;AAlBH,GALoC,EAyBpC;AAAEE,IAAAA,KAAK,EAAEtB,CAAC,CAAC,WAAD,CAAV;AAAyBuB,IAAAA,MAAM,EAAGR,GAAD,IAASS,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBV,GAAtB;AAA1C,GAzBoC,EA0BpC;AAAEO,IAAAA,KAAK,EAAEtB,CAAC,CAAC,iBAAD,CAAV;AAA+BuB,IAAAA,MAAM,EAAGR,GAAD,IAASS,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBV,GAAtB;AAAhD,GA1BoC,EA2BpC;AAAEO,IAAAA,KAAK,EAAEtB,CAAC,CAAC,0BAAD,CAAV;AAAwCuB,IAAAA,MAAM,EAAGR,GAAD,IAASS,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBV,GAAtB;AAAzD,GA3BoC,CAAP,EA4B5B,CAACd,OAAD,EAAUC,MAAV,EAAkBF,CAAlB,CA5B4B,CAA/B;AA8BA,QAAM4B,YAAY,GAAGjD,WAAW,CAC9B,MAAOkD,MAAP,IAAkB;AAAA;;AAChB,UAAMC,OAAO,GAAG,EACd,GAAGD,MADW;AAEdE,MAAAA,WAAW,EAAEF,MAAF,aAAEA,MAAF,8CAAEA,MAAM,CAAEE,WAAV,wDAAE,oBAAqBC,eAFpB;AAGdC,MAAAA,eAAe,EAAEJ,MAAF,aAAEA,MAAF,gDAAEA,MAAM,CAAEI,eAAV,0DAAE,sBAAyBC,IAH5B;AAIdC,MAAAA,cAAc,EAAEN,MAAF,aAAEA,MAAF,gDAAEA,MAAM,CAAEM,cAAV,0DAAE,sBAAwBjB,EAJ1B;AAKdkB,MAAAA,IAAI,EAAE9C,QAAQ,CAACuC,MAAM,CAACO,IAAR;AALA,KAAhB;AAOA,UAAMzB,MAAM,GAAG3B,MAAM,CAAC8C,OAAD,EAAU/C,QAAV,CAArB;AACAsB,IAAAA,UAAU,CAACM,MAAD,CAAV;AACD,GAX6B,EAY9B,EAZ8B,CAAhC;AAeA,sBACE,uDACE,oBAAC,UAAD;AACE,IAAA,IAAI,EAAGhB,kBADT;AAEE,IAAA,YAAY,EAAGiC,YAFjB;AAGE,IAAA,OAAO,EAAGxB,OAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAME,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,OAAO,EAAG;AAAEiC,MAAAA,MAAM,EAAE;AAAV,KADZ;AAEE,IAAA,IAAI,EAAGhD,iBAAiB,CAACiD,MAF3B;AAGE,IAAA,OAAO,EAAG;AAAEtB,MAAAA,sBAAsB,EAAE,UAA1B;AAAsC,SAAGZ;AAAzC,KAHZ;AAIE,IAAA,OAAO,EAAGE,OAJZ;AAKE,IAAA,KAAK,EAAGN,CAAC,CAAC,wBAAD,CALX;AAME,IAAA,QAAQ,EAAGA,CAAC,CAAC,gBAAD,EAAmB;AAAEuC,MAAAA,MAAM,EAAE,MAAV;AAAkBC,MAAAA,IAAI,EAAExC,CAAC,CAAC,UAAD,EAAa;AAAEyC,QAAAA,OAAO,EAAE;AAAX,OAAb;AAAzB,KAAnB,CANd;AAOE,IAAA,eAAe,EAAGpB,eAPpB;AAQE,IAAA,UAAU,EAAGlB,uBAAuB,CAACuC,OAAxB,IAAmCnC,UARlD;AASE,IAAA,WAAW,EAAGJ,uBAAuB,CAACwC,MAAxB,IAAkC9B,WATlD;AAUE,IAAA,QAAQ,EAAGZ,OAAO,CAAC2C,MAVrB;AAWE,IAAA,WAAW,EAAK,CAAC;AACfC,MAAAA,IAAI,EAAE5D,GADS;AAEf6D,MAAAA,QAAQ,EAAE5D,MAFK;AAGf6D,MAAAA,SAAS,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAHI;AAIfC,MAAAA,OAAO,EAAEjD,CAAC,CAAC,WAAD,CAJK;AAKfkD,MAAAA,MAAM,EAAGC,OAAD,iBACN,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,oBAAD;AAAsB,QAAA,EAAE,EAAGA,OAAH,aAAGA,OAAH,uBAAGA,OAAO,CAAE/B,iBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AANa,KAAD,CAXlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANF,CADF;AAmCD,CA/GD;;AAiHA,eAAerB,cAAf","sourcesContent":["import React, {\n  useCallback,\n  useMemo,\n  useState\n} from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport identity from 'lodash/identity'\nimport pickBy from 'lodash/pickBy'\n\nimport Add from '@material-ui/icons/Add'\nimport Remove from '@material-ui/icons/Remove'\n\nimport { useT } from '@britania-crm/i18n'\nimport { customer as customerCrmRoutes } from '@britania-crm/services/apis/crmApi/resources/routes'\nimport { trimMask } from '@britania-crm/utils/formatters'\nimport DataTable from '@britania-crm/web-components/DataTable'\nimport PageFilter from '@britania-crm/web-components/PageFilter'\nimport { useRoutes } from '@britania-crm/web-src/routes/authenticated.routes'\n\nimport CompaniesBranchTable from '../../components/CompaniesBranch'\nimport CustomerFormFilter from '../../components/customerFormFilter'\nimport { getConfigClientsColumns } from '../../utils'\nimport {\n  Container,\n  CompaniesBranch\n} from './styles'\n\nconst CustomerScreen = () => {\n  const t = useT()\n  const history = useHistory()\n  const { routes, currentRoutePermissions } = useRoutes()\n\n  const [filters, setFilters] = useState({})\n\n  const columns = useMemo(() => getConfigClientsColumns(t), [t])\n\n  const onAddClick = useCallback(() => {\n    history.push(routes.newCustomerPreRegistration.path, { params: { mode: 'create' } })\n  }, [history, routes])\n\n  const onEditClick = useCallback((event, row) => {\n    if (row.clientRegistrationType === 'PRE_REGISTRATION') {\n      history.push(routes.editCustomerPreRegistration.path, {\n        params: {\n          mode: 'edit',\n          id: row.id\n        }\n      })\n    } else {\n      history.push(routes.editCustomer.path, {\n        params: {\n          mode: 'edit',\n          id: row.parentCompanyCode\n        }\n      })\n    }\n  }, [history, routes])\n\n  const addMicroActions = useMemo(() => [\n    {\n      title: t('customer request'),\n      action: (row) => console.log('test 1 ', row)\n    },\n    {\n      title: t('customer detail'),\n      action (row) {\n        if (row.clientRegistrationType === 'PRE_REGISTRATION') {\n          history.push(routes.viewCustomerPreRegistration.path, {\n            params: {\n              mode: 'view',\n              id: row.id\n            }\n          })\n        } else {\n          history.push(routes.viewCustomer.path, {\n            params: {\n              mode: 'view',\n              id: row.parentCompanyCode\n            }\n          })\n        }\n      }\n    },\n    { title: t('vpc panel'), action: (row) => console.log('test 3', row) },\n    { title: t('customer wallet'), action: (row) => console.log('test 4', row) },\n    { title: t('pre-registration history'), action: (row) => console.log('test 5', row) }\n  ], [history, routes, t])\n\n  const handleFilter = useCallback(\n    async (values) => {\n      const payload = {\n        ...values,\n        clientGroup: values?.clientGroup?.codeClientGroup,\n        regionalManager: values?.regionalManager?.code,\n        workflowTaskId: values?.workflowTaskId?.id,\n        cnpj: trimMask(values.cnpj)\n      }\n      const params = pickBy(payload, identity)\n      setFilters(params)\n    },\n    []\n  )\n\n  return (\n    <>\n      <PageFilter\n        Form={ CustomerFormFilter }\n        handleFilter={ handleFilter }\n        filters={ filters }\n      />\n      <Container>\n        <DataTable\n          options={ { search: false } }\n          data={ customerCrmRoutes.getAll }\n          filters={ { clientRegistrationType: 'REGISTER', ...filters } }\n          columns={ columns }\n          title={ t('customers consultation') }\n          addTitle={ t('add new {this}', { gender: 'male', this: t('customer', { howMany: 1 }) }) }\n          addMicroActions={ addMicroActions }\n          onAddClick={ currentRoutePermissions.INCLUIR && onAddClick }\n          onEditClick={ currentRoutePermissions.EDITAR && onEditClick }\n          onGoBack={ history.goBack }\n          detailPanel = { [{\n            icon: Add,\n            openIcon: Remove,\n            iconProps: { fontSize: 'small' },\n            tooltip: t('view more'),\n            render: (rowData) => (\n              <CompaniesBranch>\n                <CompaniesBranchTable id={ rowData?.parentCompanyCode }/>\n              </CompaniesBranch>\n            )\n          }]\n          }\n        />\n      </Container>\n    </>\n  )\n}\n\nexport default CustomerScreen\n"]},"metadata":{},"sourceType":"module"}