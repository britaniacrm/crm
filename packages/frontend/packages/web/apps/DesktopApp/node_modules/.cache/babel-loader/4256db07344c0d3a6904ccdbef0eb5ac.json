{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/users/modals/NewUserModal/NewUserModal.js\";\nimport React, { useCallback, useMemo, useRef, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport isEmpty from 'lodash/isEmpty';\nimport map from 'lodash/map';\nimport { useDialog } from '@britania-crm/dialog';\nimport { useFormEffect } from '@britania-crm/forms';\nimport userSchema, { INITIAL_VALUES } from '@britania-crm/forms/schemas/user/user.schema';\nimport I18n, { useT } from '@britania-crm/i18n';\nimport { users } from '@britania-crm/services/apis/crmApi/resources/routes';\nimport useCrmApi from '@britania-crm/services/hooks/useCrmApi';\nimport { FileActions } from '@britania-crm/stores/file';\nimport { UsersActions } from '@britania-crm/stores/users';\nimport ImgProfilePlaceholder from '@britania-crm/styles/assets/images/profile_avatar_default.png';\nimport { formatBackDateTimeToBackDateFormat, formatBackDateToIsoFormat } from '@britania-crm/utils/date';\nimport { trimMask } from '@britania-crm/utils/formatters';\nimport AssociatedDataList from '@britania-crm/web-components/AssociatedDataList';\nimport Button from '@britania-crm/web-components/Button';\nimport Checkbox from '@britania-crm/web-components/Checkbox';\nimport Form from '@britania-crm/web-components/Form';\nimport InfoIcon from '@britania-crm/web-components/Icons/infoIcon';\nimport InputAutocomplete from '@britania-crm/web-components/InputAutocomplete';\nimport InputDateRange from '@britania-crm/web-components/InputDateRange';\nimport InputEmail from '@britania-crm/web-components/InputEmail';\nimport InputHidden from '@britania-crm/web-components/InputHidden';\nimport InputPhone from '@britania-crm/web-components/InputPhone';\nimport InputText from '@britania-crm/web-components/InputText';\nimport Modal from '@britania-crm/web-components/Modal';\nimport UploadImage from '@britania-crm/web-components/UploadImage';\nimport LinkRepresentativeModal from '../LinkRepresentativeModal';\nimport LinkUserProfileModal from '../LinkUserProfileModal';\nimport { Grid, ImgContainer } from '../styles';\nimport { InfoContainer, useStyles, ShadowBox, ContentBox } from './styles';\n\nconst NewUserModal = props => {\n  const {\n    id,\n    open,\n    handleClose,\n    userId,\n    onSuccess\n  } = props;\n  const classes = useStyles();\n  const t = useT();\n  const formRef = useRef(null);\n  const [submitLoading, setSubmitLoading] = useState(false);\n  const [representativeCodes, setRepresentativeCodes] = useState();\n  const [substituteUserId, setSubstituteUserId] = useState();\n  const {\n    createDialog\n  } = useDialog();\n  const dispatch = useCallback(useDispatch(), []);\n  const {\n    data: userFromApi,\n    loading: userFromApiLoading\n  } = useCrmApi(userId ? [`${users.get}/${userId}`, userId] : null, {}, {\n    revalidateOnFocus: false\n  });\n  const loading = useMemo(() => userFromApiLoading || submitLoading, [submitLoading, userFromApiLoading]);\n  const createMode = useMemo(() => isEmpty(userFromApi), [userFromApi]);\n  const handleSubmit = useCallback(values => {\n    var _values$imageFile;\n\n    setSubmitLoading(true);\n\n    const saveUser = imageId => {\n      var _values$substituteUse, _values$substituteUse2, _values$substituteUse3, _values$substituteUse4, _values$substituteUse5, _values$substituteUse6, _values$substituteUse7, _userFromApi$imageId;\n\n      const payload = { ...values,\n        ...userFromApi,\n        id: userId,\n        phone: trimMask(values.phone || ''),\n        substituteUserId: !!((_values$substituteUse = values.substituteUserId) === null || _values$substituteUse === void 0 ? void 0 : _values$substituteUse.id) && !!((_values$substituteUse2 = values.substituteUserPeriod) === null || _values$substituteUse2 === void 0 ? void 0 : _values$substituteUse2.from) && !!((_values$substituteUse3 = values.substituteUserPeriod) === null || _values$substituteUse3 === void 0 ? void 0 : _values$substituteUse3.to) ? (_values$substituteUse4 = values.substituteUserId) === null || _values$substituteUse4 === void 0 ? void 0 : _values$substituteUse4.id : null,\n        profiles: map(values.profiles, item => item.id),\n        representativeCodes: map(values.representativeCodes, item => item.code),\n        substituteUserStartDate: values.substituteUserPeriod.from ? formatBackDateToIsoFormat((_values$substituteUse5 = values.substituteUserPeriod) === null || _values$substituteUse5 === void 0 ? void 0 : _values$substituteUse5.from) : undefined,\n        substituteUserEndDate: ((_values$substituteUse6 = values.substituteUserPeriod) === null || _values$substituteUse6 === void 0 ? void 0 : _values$substituteUse6.to) ? formatBackDateToIsoFormat((_values$substituteUse7 = values.substituteUserPeriod) === null || _values$substituteUse7 === void 0 ? void 0 : _values$substituteUse7.to) : undefined,\n        imageId: imageId === null ? (_userFromApi$imageId = userFromApi.imageId) === null || _userFromApi$imageId === void 0 ? void 0 : _userFromApi$imageId.id : imageId\n      };\n      dispatch(UsersActions.saveUser(payload, () => {\n        onSuccess();\n        handleClose();\n        setSubmitLoading(false);\n      }, () => setSubmitLoading(false)));\n    };\n\n    if ((_values$imageFile = values.imageFile) === null || _values$imageFile === void 0 ? void 0 : _values$imageFile.size) {\n      dispatch(FileActions.uploadImage(values.imageFile, saveUser, () => setSubmitLoading(false)));\n    } else {\n      saveUser();\n    }\n  }, [dispatch, handleClose, onSuccess, userFromApi, userId]);\n  const handleOpenLinkUserProfileModal = useCallback(() => {\n    createDialog({\n      id: 'link-user-profile-modal',\n      Component: LinkUserProfileModal,\n      props: {\n        initialProfiles: formRef.current.getFieldValue('profiles'),\n\n        onSave(profiles, onSuccess) {\n          formRef.current.setFieldValue('profiles', profiles);\n          onSuccess();\n        },\n\n        username: formRef.current.getFieldValue('username')\n      }\n    });\n  }, [createDialog]);\n  const handleOpenLinkRepresentativeModal = useCallback(() => {\n    createDialog({\n      id: 'link-user-representative-modal',\n      Component: LinkRepresentativeModal,\n      props: {\n        initialRepresentatives: formRef.current.getFieldValue('representativeCodes'),\n        username: formRef.current.getFieldValue('username'),\n\n        onSave(representatives) {\n          formRef.current.setFieldValue('representativeCodes', representatives);\n        }\n\n      }\n    });\n  }, [createDialog]);\n  const handleSubstituteUserIdChange = useCallback(value => {\n    setSubstituteUserId(value);\n    formRef.current.reloadSchema({\n      callback: formRef.current.validateField('substituteUserPeriod')\n    });\n  }, []);\n  useFormEffect(() => {\n    if (!isEmpty(userFromApi)) {\n      formRef.current.setData({ ...userFromApi,\n        imageFile: !isEmpty(userFromApi.file) ? userFromApi.file : ImgProfilePlaceholder,\n        substituteUserId: isEmpty(userFromApi.substituteUser) ? {} : {\n          id: userFromApi.substituteUser.id,\n          name: userFromApi.substituteUser.username\n        },\n        substituteUserPeriod: {\n          from: userFromApi.substituteUserStartDate ? formatBackDateTimeToBackDateFormat(userFromApi.substituteUserStartDate, 0) : '',\n          to: userFromApi.substituteUserEndDate ? formatBackDateTimeToBackDateFormat(userFromApi.substituteUserEndDate, 0) : ''\n        },\n        profiles: map(userFromApi.userProfiles, ({\n          profileId,\n          ...profile\n        }) => ({\n          id: profileId,\n          ...profile\n        }))\n      });\n    }\n  }, [userFromApi]);\n  return /*#__PURE__*/React.createElement(Modal, {\n    variant: \"space\",\n    id: id,\n    open: open,\n    title: createMode ? t('new {this}', {\n      gender: 'male',\n      this: t('user', {\n        howMany: 1\n      })\n    }) : t('editing {this}', {\n      this: t('user', {\n        howMany: 1\n      })\n    }),\n    maxWidth: \"md\",\n    fullWidth: true,\n    loading: loading,\n    FooterComponent: () => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n      color: \"secondary\",\n      width: \"200px\",\n      variant: \"outlined\",\n      onClick: handleClose,\n      style: {\n        marginRight: 10\n      },\n      disabled: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(I18n, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 13\n      }\n    }, \"cancel\")), /*#__PURE__*/React.createElement(Button, {\n      color: \"secondary\",\n      width: \"200px\",\n      variant: \"contained\",\n      onClick: () => formRef.current.submit(),\n      disabled: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(I18n, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 13\n      }\n    }, \"save\"))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    ref: formRef,\n    schemaConstructor: userSchema,\n    defaultValues: INITIAL_VALUES,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputText, {\n    name: \"username\",\n    label: t('user', {\n      howMany: 1\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    alignItems: \"center\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputEmail, {\n    name: \"email\",\n    label: t('email'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    className: classes.phoneInput,\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputPhone, {\n    name: \"phone\",\n    label: t('phone', {\n      howMany: 1\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    alignItems: \"center\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    detached: true,\n    style: {\n      marginLeft: 8\n    },\n    label: t('link representative', {\n      howMany: 2\n    }),\n    name: \"representativeCodesChecked\",\n    value: !isEmpty(representativeCodes),\n    onChange: handleOpenLinkRepresentativeModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(InputHidden, {\n    name: \"representativeCodes\",\n    onValueChange: setRepresentativeCodes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    alignItems: \"center\",\n    justify: \"space-between\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputAutocomplete, {\n    name: \"substituteUserId\",\n    url: users.autoComplete,\n    label: t('alternate', {\n      howMany: 1\n    }),\n    fullWidth: true,\n    onValueChange: handleSubstituteUserIdChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputDateRange, {\n    name: \"substituteUserPeriod\",\n    disabled: isEmpty(substituteUserId),\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    alignItems: \"center\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    name: \"customerHierarchyEnabled\",\n    label: t('enable all hierarchy clients'),\n    style: {\n      marginLeft: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    alignItems: \"center\",\n    direction: \"column\",\n    className: classes.btnLinkProfile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(I18n, {\n    as: Button,\n    params: {\n      howMany: 2\n    },\n    color: \"warning\",\n    width: \"300px\",\n    variant: \"contained\",\n    onClick: handleOpenLinkUserProfileModal,\n    style: {\n      padding: '0px 80px 0 80px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 11\n    }\n  }, \"link profile\")), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    alignItems: \"center\",\n    justify: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AssociatedDataList, {\n    name: \"profiles\",\n    label: t('linked profiles'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(ImgContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ShadowBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ContentBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(UploadImage, {\n    name: \"imageFile\",\n    preview: true,\n    previewStyle: {\n      width: '300px',\n      height: '300px'\n    },\n    defaultFile: ImgProfilePlaceholder,\n    title: t('login image add new file message'),\n    description: t('the {this} or', {\n      gender: 'female',\n      this: t('image', {\n        howMany: 1\n      })\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 15\n    }\n  }))), createMode && /*#__PURE__*/React.createElement(InfoContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InfoIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 15\n    }\n  }), \"A propor\\xE7\\xE3o ideal para sua imagem \\xE9 1:1\"))));\n};\n\nNewUserModal.propTypes = {\n  id: PropTypes.string.isRequired,\n  open: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  userId: PropTypes.number,\n  onSuccess: PropTypes.func\n};\nNewUserModal.defaultProps = {\n  onSuccess() {},\n\n  userId: undefined\n};\nexport default NewUserModal;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/users/modals/NewUserModal/NewUserModal.js"],"names":["React","useCallback","useMemo","useRef","useState","useDispatch","PropTypes","isEmpty","map","useDialog","useFormEffect","userSchema","INITIAL_VALUES","I18n","useT","users","useCrmApi","FileActions","UsersActions","ImgProfilePlaceholder","formatBackDateTimeToBackDateFormat","formatBackDateToIsoFormat","trimMask","AssociatedDataList","Button","Checkbox","Form","InfoIcon","InputAutocomplete","InputDateRange","InputEmail","InputHidden","InputPhone","InputText","Modal","UploadImage","LinkRepresentativeModal","LinkUserProfileModal","Grid","ImgContainer","InfoContainer","useStyles","ShadowBox","ContentBox","NewUserModal","props","id","open","handleClose","userId","onSuccess","classes","t","formRef","submitLoading","setSubmitLoading","representativeCodes","setRepresentativeCodes","substituteUserId","setSubstituteUserId","createDialog","dispatch","data","userFromApi","loading","userFromApiLoading","get","revalidateOnFocus","createMode","handleSubmit","values","saveUser","imageId","payload","phone","substituteUserPeriod","from","to","profiles","item","code","substituteUserStartDate","undefined","substituteUserEndDate","imageFile","size","uploadImage","handleOpenLinkUserProfileModal","Component","initialProfiles","current","getFieldValue","onSave","setFieldValue","username","handleOpenLinkRepresentativeModal","initialRepresentatives","representatives","handleSubstituteUserIdChange","value","reloadSchema","callback","validateField","setData","file","substituteUser","name","userProfiles","profileId","profile","gender","this","howMany","marginRight","submit","phoneInput","marginLeft","autoComplete","btnLinkProfile","padding","width","height","propTypes","string","isRequired","bool","func","number","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IACEC,WADF,EAEEC,OAFF,EAGEC,MAHF,EAIEC,QAJF,QAKO,OALP;AAMA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,GAAP,MAAgB,YAAhB;AAEA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,aAAT,QAA8B,qBAA9B;AACA,OAAOC,UAAP,IAAqBC,cAArB,QAA2C,8CAA3C;AACA,OAAOC,IAAP,IAAeC,IAAf,QAA2B,oBAA3B;AACA,SAASC,KAAT,QAAsB,qDAAtB;AACA,OAAOC,SAAP,MAAsB,wCAAtB;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAASC,YAAT,QAA6B,4BAA7B;AACA,OAAOC,qBAAP,MAAkC,+DAAlC;AACA,SACEC,kCADF,EAEEC,yBAFF,QAGO,0BAHP;AAIA,SAASC,QAAT,QAAyB,gCAAzB;AACA,OAAOC,kBAAP,MAA+B,iDAA/B;AACA,OAAOC,MAAP,MAAmB,qCAAnB;AACA,OAAOC,QAAP,MAAqB,uCAArB;AACA,OAAOC,IAAP,MAAiB,mCAAjB;AACA,OAAOC,QAAP,MAAqB,6CAArB;AACA,OAAOC,iBAAP,MAA8B,gDAA9B;AACA,OAAOC,cAAP,MAA2B,6CAA3B;AACA,OAAOC,UAAP,MAAuB,yCAAvB;AACA,OAAOC,WAAP,MAAwB,0CAAxB;AACA,OAAOC,UAAP,MAAuB,yCAAvB;AACA,OAAOC,SAAP,MAAsB,wCAAtB;AACA,OAAOC,KAAP,MAAkB,oCAAlB;AACA,OAAOC,WAAP,MAAwB,0CAAxB;AAEA,OAAOC,uBAAP,MAAoC,4BAApC;AACA,OAAOC,oBAAP,MAAiC,yBAAjC;AACA,SACEC,IADF,EAEEC,YAFF,QAGO,WAHP;AAIA,SACEC,aADF,EAEEC,SAFF,EAGEC,SAHF,EAIEC,UAJF,QAKO,UALP;;AAOA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B,QAAM;AACJC,IAAAA,EADI;AAEJC,IAAAA,IAFI;AAGJC,IAAAA,WAHI;AAIJC,IAAAA,MAJI;AAKJC,IAAAA;AALI,MAMFL,KANJ;AAQA,QAAMM,OAAO,GAAGV,SAAS,EAAzB;AACA,QAAMW,CAAC,GAAGtC,IAAI,EAAd;AAEA,QAAMuC,OAAO,GAAGlD,MAAM,CAAC,IAAD,CAAtB;AAEA,QAAM,CAACmD,aAAD,EAAgBC,gBAAhB,IAAoCnD,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACoD,mBAAD,EAAsBC,sBAAtB,IAAgDrD,QAAQ,EAA9D;AACA,QAAM,CAACsD,gBAAD,EAAmBC,mBAAnB,IAA0CvD,QAAQ,EAAxD;AAEA,QAAM;AAAEwD,IAAAA;AAAF,MAAmBnD,SAAS,EAAlC;AACA,QAAMoD,QAAQ,GAAG5D,WAAW,CAACI,WAAW,EAAZ,EAAgB,EAAhB,CAA5B;AAEA,QAAM;AACJyD,IAAAA,IAAI,EAAEC,WADF;AAEJC,IAAAA,OAAO,EAAEC;AAFL,MAGFjD,SAAS,CACXiC,MAAM,GAAG,CAAE,GAAGlC,KAAK,CAACmD,GAAK,IAAIjB,MAAQ,EAA5B,EAA+BA,MAA/B,CAAH,GAA4C,IADvC,EAEX,EAFW,EAGX;AAAEkB,IAAAA,iBAAiB,EAAE;AAArB,GAHW,CAHb;AASA,QAAMH,OAAO,GAAG9D,OAAO,CACrB,MAAM+D,kBAAkB,IAAIX,aADP,EAErB,CAACA,aAAD,EAAgBW,kBAAhB,CAFqB,CAAvB;AAKA,QAAMG,UAAU,GAAGlE,OAAO,CAAC,MAAMK,OAAO,CAACwD,WAAD,CAAd,EAA6B,CAACA,WAAD,CAA7B,CAA1B;AAEA,QAAMM,YAAY,GAAGpE,WAAW,CAC7BqE,MAAD,IAAY;AAAA;;AACVf,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;;AACA,UAAMgB,QAAQ,GAAIC,OAAD,IAAa;AAAA;;AAC5B,YAAMC,OAAO,GAAG,EACd,GAAGH,MADW;AAEd,WAAGP,WAFW;AAGdjB,QAAAA,EAAE,EAAEG,MAHU;AAIdyB,QAAAA,KAAK,EAAEpD,QAAQ,CAACgD,MAAM,CAACI,KAAP,IAAgB,EAAjB,CAJD;AAKdhB,QAAAA,gBAAgB,EAAE,CAAC,2BAACY,MAAM,CAACZ,gBAAR,0DAAC,sBAAyBZ,EAA1B,CAAD,IAAiC,CAAC,4BAACwB,MAAM,CAACK,oBAAR,2DAAC,uBAA6BC,IAA9B,CAAlC,IAAwE,CAAC,4BAACN,MAAM,CAACK,oBAAR,2DAAC,uBAA6BE,EAA9B,CAAzE,6BAA4GP,MAAM,CAACZ,gBAAnH,2DAA4G,uBAAyBZ,EAArI,GAA0I,IAL9I;AAMdgC,QAAAA,QAAQ,EAAEtE,GAAG,CAAC8D,MAAM,CAACQ,QAAR,EAAmBC,IAAD,IAAUA,IAAI,CAACjC,EAAjC,CANC;AAOdU,QAAAA,mBAAmB,EAAEhD,GAAG,CAAC8D,MAAM,CAACd,mBAAR,EAA8BuB,IAAD,IAAUA,IAAI,CAACC,IAA5C,CAPV;AAQdC,QAAAA,uBAAuB,EAAEX,MAAM,CAACK,oBAAP,CAA4BC,IAA5B,GAAmCvD,yBAAyB,2BAACiD,MAAM,CAACK,oBAAR,2DAAC,uBAA6BC,IAA9B,CAA5D,GAAkGM,SAR7G;AASdC,QAAAA,qBAAqB,EAAE,2BAAAb,MAAM,CAACK,oBAAP,kFAA6BE,EAA7B,IAAkCxD,yBAAyB,2BAACiD,MAAM,CAACK,oBAAR,2DAAC,uBAA6BE,EAA9B,CAA3D,GAA+FK,SATxG;AAUdV,QAAAA,OAAO,EAAEA,OAAO,KAAK,IAAZ,2BAAmBT,WAAW,CAACS,OAA/B,yDAAmB,qBAAqB1B,EAAxC,GAA6C0B;AAVxC,OAAhB;AAaAX,MAAAA,QAAQ,CAAC3C,YAAY,CAACqD,QAAb,CACPE,OADO,EAEP,MAAM;AACJvB,QAAAA,SAAS;AACTF,QAAAA,WAAW;AACXO,QAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD,OANM,EAOP,MAAMA,gBAAgB,CAAC,KAAD,CAPf,CAAD,CAAR;AASD,KAvBD;;AAyBA,6BAAIe,MAAM,CAACc,SAAX,sDAAI,kBAAkBC,IAAtB,EAA4B;AAC1BxB,MAAAA,QAAQ,CAAC5C,WAAW,CAACqE,WAAZ,CACPhB,MAAM,CAACc,SADA,EAEPb,QAFO,EAGP,MAAMhB,gBAAgB,CAAC,KAAD,CAHf,CAAD,CAAR;AAKD,KAND,MAMO;AACLgB,MAAAA,QAAQ;AACT;AACF,GArC6B,EAsC9B,CAACV,QAAD,EAAWb,WAAX,EAAwBE,SAAxB,EAAmCa,WAAnC,EAAgDd,MAAhD,CAtC8B,CAAhC;AAyCA,QAAMsC,8BAA8B,GAAGtF,WAAW,CAAC,MAAM;AACvD2D,IAAAA,YAAY,CAAC;AACXd,MAAAA,EAAE,EAAE,yBADO;AAEX0C,MAAAA,SAAS,EAAEnD,oBAFA;AAGXQ,MAAAA,KAAK,EAAE;AACL4C,QAAAA,eAAe,EAAEpC,OAAO,CAACqC,OAAR,CAAgBC,aAAhB,CAA8B,UAA9B,CADZ;;AAELC,QAAAA,MAAM,CAAEd,QAAF,EAAY5B,SAAZ,EAAuB;AAC3BG,UAAAA,OAAO,CAACqC,OAAR,CAAgBG,aAAhB,CAA8B,UAA9B,EAA0Cf,QAA1C;AACA5B,UAAAA,SAAS;AACV,SALI;;AAML4C,QAAAA,QAAQ,EAAEzC,OAAO,CAACqC,OAAR,CAAgBC,aAAhB,CAA8B,UAA9B;AANL;AAHI,KAAD,CAAZ;AAYD,GAbiD,EAa/C,CAAC/B,YAAD,CAb+C,CAAlD;AAeA,QAAMmC,iCAAiC,GAAG9F,WAAW,CACnD,MAAM;AACJ2D,IAAAA,YAAY,CAAC;AACXd,MAAAA,EAAE,EAAE,gCADO;AAEX0C,MAAAA,SAAS,EAAEpD,uBAFA;AAGXS,MAAAA,KAAK,EAAE;AACLmD,QAAAA,sBAAsB,EAAE3C,OAAO,CAACqC,OAAR,CAAgBC,aAAhB,CAA8B,qBAA9B,CADnB;AAELG,QAAAA,QAAQ,EAAEzC,OAAO,CAACqC,OAAR,CAAgBC,aAAhB,CAA8B,UAA9B,CAFL;;AAGLC,QAAAA,MAAM,CAAEK,eAAF,EAAmB;AACvB5C,UAAAA,OAAO,CAACqC,OAAR,CAAgBG,aAAhB,CAA8B,qBAA9B,EAAqDI,eAArD;AACD;;AALI;AAHI,KAAD,CAAZ;AAWD,GAbkD,EAcnD,CAACrC,YAAD,CAdmD,CAArD;AAiBA,QAAMsC,4BAA4B,GAAGjG,WAAW,CAC7CkG,KAAD,IAAW;AACTxC,IAAAA,mBAAmB,CAACwC,KAAD,CAAnB;AACA9C,IAAAA,OAAO,CAACqC,OAAR,CAAgBU,YAAhB,CAA6B;AAAEC,MAAAA,QAAQ,EAAEhD,OAAO,CAACqC,OAAR,CAAgBY,aAAhB,CAA8B,sBAA9B;AAAZ,KAA7B;AACD,GAJ6C,EAK9C,EAL8C,CAAhD;AAQA5F,EAAAA,aAAa,CAAC,MAAM;AAClB,QAAI,CAACH,OAAO,CAACwD,WAAD,CAAZ,EAA2B;AACzBV,MAAAA,OAAO,CAACqC,OAAR,CAAgBa,OAAhB,CAAwB,EACtB,GAAGxC,WADmB;AAEtBqB,QAAAA,SAAS,EAAE,CAAC7E,OAAO,CAACwD,WAAW,CAACyC,IAAb,CAAR,GAA6BzC,WAAW,CAACyC,IAAzC,GAAgDrF,qBAFrC;AAGtBuC,QAAAA,gBAAgB,EAAEnD,OAAO,CAACwD,WAAW,CAAC0C,cAAb,CAAP,GAAsC,EAAtC,GAA2C;AAC3D3D,UAAAA,EAAE,EAAEiB,WAAW,CAAC0C,cAAZ,CAA2B3D,EAD4B;AAE3D4D,UAAAA,IAAI,EAAE3C,WAAW,CAAC0C,cAAZ,CAA2BX;AAF0B,SAHvC;AAOtBnB,QAAAA,oBAAoB,EAAE;AACpBC,UAAAA,IAAI,EAAEb,WAAW,CAACkB,uBAAZ,GAAsC7D,kCAAkC,CAAC2C,WAAW,CAACkB,uBAAb,EAAsC,CAAtC,CAAxE,GAAmH,EADrG;AAEpBJ,UAAAA,EAAE,EAAEd,WAAW,CAACoB,qBAAZ,GAAoC/D,kCAAkC,CAAC2C,WAAW,CAACoB,qBAAb,EAAoC,CAApC,CAAtE,GAA+G;AAF/F,SAPA;AAWtBL,QAAAA,QAAQ,EAAEtE,GAAG,CACXuD,WAAW,CAAC4C,YADD,EAEX,CAAC;AAAEC,UAAAA,SAAF;AAAa,aAAGC;AAAhB,SAAD,MAAgC;AAAE/D,UAAAA,EAAE,EAAE8D,SAAN;AAAiB,aAAGC;AAApB,SAAhC,CAFW;AAXS,OAAxB;AAgBD;AACF,GAnBY,EAmBV,CAAC9C,WAAD,CAnBU,CAAb;AAqBA,sBACE,oBAAC,KAAD;AACE,IAAA,OAAO,EAAC,OADV;AAEE,IAAA,EAAE,EAAGjB,EAFP;AAGE,IAAA,IAAI,EAAGC,IAHT;AAIE,IAAA,KAAK,EAAGqB,UAAU,GACdhB,CAAC,CAAC,YAAD,EAAe;AAAE0D,MAAAA,MAAM,EAAE,MAAV;AAAkBC,MAAAA,IAAI,EAAE3D,CAAC,CAAC,MAAD,EAAS;AAAE4D,QAAAA,OAAO,EAAE;AAAX,OAAT;AAAzB,KAAf,CADa,GAEd5D,CAAC,CAAC,gBAAD,EAAmB;AAAE2D,MAAAA,IAAI,EAAE3D,CAAC,CAAC,MAAD,EAAS;AAAE4D,QAAAA,OAAO,EAAE;AAAX,OAAT;AAAT,KAAnB,CANP;AAQE,IAAA,QAAQ,EAAC,IARX;AASE,IAAA,SAAS,MATX;AAUE,IAAA,OAAO,EAAGhD,OAVZ;AAWE,IAAA,eAAe,EAAG,mBAChB,uDACE,oBAAC,MAAD;AACE,MAAA,KAAK,EAAC,WADR;AAEE,MAAA,KAAK,EAAC,OAFR;AAGE,MAAA,OAAO,EAAC,UAHV;AAIE,MAAA,OAAO,EAAGhB,WAJZ;AAKE,MAAA,KAAK,EAAG;AAAEiE,QAAAA,WAAW,EAAE;AAAf,OALV;AAME,MAAA,QAAQ,EAAGjD,OANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAQE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,CADF,eAWE,oBAAC,MAAD;AACE,MAAA,KAAK,EAAC,WADR;AAEE,MAAA,KAAK,EAAC,OAFR;AAGE,MAAA,OAAO,EAAC,WAHV;AAIE,MAAA,OAAO,EAAG,MAAMX,OAAO,CAACqC,OAAR,CAAgBwB,MAAhB,EAJlB;AAKE,MAAA,QAAQ,EAAGlD,OALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,CAXF,CAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAmCE,oBAAC,IAAD;AACE,IAAA,GAAG,EAAGX,OADR;AAEE,IAAA,iBAAiB,EAAG1C,UAFtB;AAGE,IAAA,aAAa,EAAGC,cAHlB;AAIE,IAAA,QAAQ,EAAGyD,YAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,UAAU,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,KAAK,EAAGjB,CAAC,CAAC,MAAD,EAAS;AAAE4D,MAAAA,OAAO,EAAE;AAAX,KAAT,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANF,eAYE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,UAAU,EAAC,QAA3B;AAAoC,IAAA,OAAO,EAAG,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAG,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,KAAK,EAAG5D,CAAC,CAAC,OAAD,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAOE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAGD,OAAO,CAACgE,UAA1B;AAAuC,IAAA,IAAI,MAA3C;AAA4C,IAAA,EAAE,EAAG,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,KAAK,EAAG/D,CAAC,CAAC,OAAD,EAAU;AAAE4D,MAAAA,OAAO,EAAE;AAAX,KAAV,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAPF,CAZF,eA2BE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,UAAU,EAAC,QAA3B;AAAoC,IAAA,OAAO,EAAG,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAG,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,KAAK,EAAG;AAAEI,MAAAA,UAAU,EAAE;AAAd,KAFV;AAGE,IAAA,KAAK,EAAGhE,CAAC,CAAC,qBAAD,EAAwB;AAAE4D,MAAAA,OAAO,EAAE;AAAX,KAAxB,CAHX;AAIE,IAAA,IAAI,EAAC,4BAJP;AAKE,IAAA,KAAK,EAAG,CAACzG,OAAO,CAACiD,mBAAD,CALlB;AAME,IAAA,QAAQ,EAAGuC,iCANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eASE,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAC,qBAAlB;AAAwC,IAAA,aAAa,EAAGtC,sBAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF,CA3BF,eAyCE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,UAAU,EAAC,QAA3B;AAAoC,IAAA,OAAO,EAAC,eAA5C;AAA4D,IAAA,OAAO,EAAG,CAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAG,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,iBAAD;AACE,IAAA,IAAI,EAAC,kBADP;AAEE,IAAA,GAAG,EAAG1C,KAAK,CAACsG,YAFd;AAGE,IAAA,KAAK,EAAGjE,CAAC,CAAC,WAAD,EAAc;AAAE4D,MAAAA,OAAO,EAAE;AAAX,KAAd,CAHX;AAIE,IAAA,SAAS,MAJX;AAKE,IAAA,aAAa,EAAGd,4BALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAUE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAG,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AACE,IAAA,IAAI,EAAC,sBADP;AAEE,IAAA,QAAQ,EAAG3F,OAAO,CAACmD,gBAAD,CAFpB;AAGE,IAAA,SAAS,MAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAVF,CAzCF,eA4DE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,UAAU,EAAC,QAA3B;AAAoC,IAAA,OAAO,EAAG,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAG,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAC,0BADP;AAEE,IAAA,KAAK,EAAGN,CAAC,CAAC,8BAAD,CAFX;AAGE,IAAA,KAAK,EAAG;AAAEgE,MAAAA,UAAU,EAAE;AAAd,KAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CA5DF,eAsEE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAC,QAAxB;AAAiC,IAAA,UAAU,EAAC,QAA5C;AAAqD,IAAA,SAAS,EAAC,QAA/D;AAAwE,IAAA,SAAS,EAAGjE,OAAO,CAACmE,cAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AACE,IAAA,EAAE,EAAG9F,MADP;AAEE,IAAA,MAAM,EAAG;AAAEwF,MAAAA,OAAO,EAAE;AAAX,KAFX;AAGE,IAAA,KAAK,EAAC,SAHR;AAIE,IAAA,KAAK,EAAC,OAJR;AAKE,IAAA,OAAO,EAAC,WALV;AAME,IAAA,OAAO,EAAGzB,8BANZ;AAOE,IAAA,KAAK,EAAG;AAAEgC,MAAAA,OAAO,EAAE;AAAX,KAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CAtEF,eAoFE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,UAAU,EAAC,QAA3B;AAAoC,IAAA,OAAO,EAAC,eAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,kBAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,KAAK,EAAGnE,CAAC,CAAC,iBAAD,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CApFF,eA2FE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AACE,IAAA,IAAI,EAAC,WADP;AAEE,IAAA,OAAO,MAFT;AAGE,IAAA,YAAY,EAAG;AAAEoE,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,MAAM,EAAE;AAA1B,KAHjB;AAIE,IAAA,WAAW,EAAGtG,qBAJhB;AAKE,IAAA,KAAK,EAAGiC,CAAC,CAAC,kCAAD,CALX;AAME,IAAA,WAAW,EAAGA,CAAC,CAAC,eAAD,EAAkB;AAAE0D,MAAAA,MAAM,EAAE,QAAV;AAAoBC,MAAAA,IAAI,EAAE3D,CAAC,CAAC,OAAD,EAAU;AAAE4D,QAAAA,OAAO,EAAE;AAAX,OAAV;AAA3B,KAAlB,CANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,EAaG5C,UAAU,iBACT,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,qDAdJ,CA3FF,CAnCF,CADF;AAuJD,CAlSD;;AAoSAxB,YAAY,CAAC8E,SAAb,GAAyB;AACvB5E,EAAAA,EAAE,EAAExC,SAAS,CAACqH,MAAV,CAAiBC,UADE;AAEvB7E,EAAAA,IAAI,EAAEzC,SAAS,CAACuH,IAAV,CAAeD,UAFE;AAGvB5E,EAAAA,WAAW,EAAE1C,SAAS,CAACwH,IAAV,CAAeF,UAHL;AAIvB3E,EAAAA,MAAM,EAAE3C,SAAS,CAACyH,MAJK;AAKvB7E,EAAAA,SAAS,EAAE5C,SAAS,CAACwH;AALE,CAAzB;AAQAlF,YAAY,CAACoF,YAAb,GAA4B;AAC1B9E,EAAAA,SAAS,GAAI,CAAE,CADW;;AAE1BD,EAAAA,MAAM,EAAEiC;AAFkB,CAA5B;AAKA,eAAetC,YAAf","sourcesContent":["import React, {\n  useCallback,\n  useMemo,\n  useRef,\n  useState\n} from 'react'\nimport { useDispatch } from 'react-redux'\n\nimport PropTypes from 'prop-types'\n\nimport isEmpty from 'lodash/isEmpty'\nimport map from 'lodash/map'\n\nimport { useDialog } from '@britania-crm/dialog'\nimport { useFormEffect } from '@britania-crm/forms'\nimport userSchema, { INITIAL_VALUES } from '@britania-crm/forms/schemas/user/user.schema'\nimport I18n, { useT } from '@britania-crm/i18n'\nimport { users } from '@britania-crm/services/apis/crmApi/resources/routes'\nimport useCrmApi from '@britania-crm/services/hooks/useCrmApi'\nimport { FileActions } from '@britania-crm/stores/file'\nimport { UsersActions } from '@britania-crm/stores/users'\nimport ImgProfilePlaceholder from '@britania-crm/styles/assets/images/profile_avatar_default.png'\nimport {\n  formatBackDateTimeToBackDateFormat,\n  formatBackDateToIsoFormat\n} from '@britania-crm/utils/date'\nimport { trimMask } from '@britania-crm/utils/formatters'\nimport AssociatedDataList from '@britania-crm/web-components/AssociatedDataList'\nimport Button from '@britania-crm/web-components/Button'\nimport Checkbox from '@britania-crm/web-components/Checkbox'\nimport Form from '@britania-crm/web-components/Form'\nimport InfoIcon from '@britania-crm/web-components/Icons/infoIcon'\nimport InputAutocomplete from '@britania-crm/web-components/InputAutocomplete'\nimport InputDateRange from '@britania-crm/web-components/InputDateRange'\nimport InputEmail from '@britania-crm/web-components/InputEmail'\nimport InputHidden from '@britania-crm/web-components/InputHidden'\nimport InputPhone from '@britania-crm/web-components/InputPhone'\nimport InputText from '@britania-crm/web-components/InputText'\nimport Modal from '@britania-crm/web-components/Modal'\nimport UploadImage from '@britania-crm/web-components/UploadImage'\n\nimport LinkRepresentativeModal from '../LinkRepresentativeModal'\nimport LinkUserProfileModal from '../LinkUserProfileModal'\nimport {\n  Grid,\n  ImgContainer\n} from '../styles'\nimport {\n  InfoContainer,\n  useStyles,\n  ShadowBox,\n  ContentBox\n} from './styles'\n\nconst NewUserModal = (props) => {\n  const {\n    id,\n    open,\n    handleClose,\n    userId,\n    onSuccess\n  } = props\n\n  const classes = useStyles()\n  const t = useT()\n\n  const formRef = useRef(null)\n\n  const [submitLoading, setSubmitLoading] = useState(false)\n  const [representativeCodes, setRepresentativeCodes] = useState()\n  const [substituteUserId, setSubstituteUserId] = useState()\n\n  const { createDialog } = useDialog()\n  const dispatch = useCallback(useDispatch(), [])\n\n  const {\n    data: userFromApi,\n    loading: userFromApiLoading\n  } = useCrmApi(\n    userId ? [`${ users.get }/${ userId }`, userId] : null,\n    {},\n    { revalidateOnFocus: false }\n  )\n\n  const loading = useMemo(\n    () => userFromApiLoading || submitLoading,\n    [submitLoading, userFromApiLoading]\n  )\n\n  const createMode = useMemo(() => isEmpty(userFromApi), [userFromApi])\n\n  const handleSubmit = useCallback(\n    (values) => {\n      setSubmitLoading(true)\n      const saveUser = (imageId) => {\n        const payload = {\n          ...values,\n          ...userFromApi,\n          id: userId,\n          phone: trimMask(values.phone || ''),\n          substituteUserId: !!values.substituteUserId?.id && !!values.substituteUserPeriod?.from && !!values.substituteUserPeriod?.to ? values.substituteUserId?.id : null,\n          profiles: map(values.profiles, (item) => item.id),\n          representativeCodes: map(values.representativeCodes, (item) => item.code),\n          substituteUserStartDate: values.substituteUserPeriod.from ? formatBackDateToIsoFormat(values.substituteUserPeriod?.from) : undefined,\n          substituteUserEndDate: values.substituteUserPeriod?.to ? formatBackDateToIsoFormat(values.substituteUserPeriod?.to) : undefined,\n          imageId: imageId === null ? userFromApi.imageId?.id : imageId\n        }\n\n        dispatch(UsersActions.saveUser(\n          payload,\n          () => {\n            onSuccess()\n            handleClose()\n            setSubmitLoading(false)\n          },\n          () => setSubmitLoading(false)\n        ))\n      }\n\n      if (values.imageFile?.size) {\n        dispatch(FileActions.uploadImage(\n          values.imageFile,\n          saveUser,\n          () => setSubmitLoading(false)\n        ))\n      } else {\n        saveUser()\n      }\n    },\n    [dispatch, handleClose, onSuccess, userFromApi, userId]\n  )\n\n  const handleOpenLinkUserProfileModal = useCallback(() => {\n    createDialog({\n      id: 'link-user-profile-modal',\n      Component: LinkUserProfileModal,\n      props: {\n        initialProfiles: formRef.current.getFieldValue('profiles'),\n        onSave (profiles, onSuccess) {\n          formRef.current.setFieldValue('profiles', profiles)\n          onSuccess()\n        },\n        username: formRef.current.getFieldValue('username')\n      }\n    })\n  }, [createDialog])\n\n  const handleOpenLinkRepresentativeModal = useCallback(\n    () => {\n      createDialog({\n        id: 'link-user-representative-modal',\n        Component: LinkRepresentativeModal,\n        props: {\n          initialRepresentatives: formRef.current.getFieldValue('representativeCodes'),\n          username: formRef.current.getFieldValue('username'),\n          onSave (representatives) {\n            formRef.current.setFieldValue('representativeCodes', representatives)\n          }\n        }\n      })\n    },\n    [createDialog]\n  )\n\n  const handleSubstituteUserIdChange = useCallback(\n    (value) => {\n      setSubstituteUserId(value)\n      formRef.current.reloadSchema({ callback: formRef.current.validateField('substituteUserPeriod') })\n    },\n    []\n  )\n\n  useFormEffect(() => {\n    if (!isEmpty(userFromApi)) {\n      formRef.current.setData({\n        ...userFromApi,\n        imageFile: !isEmpty(userFromApi.file) ? userFromApi.file : ImgProfilePlaceholder,\n        substituteUserId: isEmpty(userFromApi.substituteUser) ? {} : {\n          id: userFromApi.substituteUser.id,\n          name: userFromApi.substituteUser.username\n        },\n        substituteUserPeriod: {\n          from: userFromApi.substituteUserStartDate ? formatBackDateTimeToBackDateFormat(userFromApi.substituteUserStartDate, 0) : '',\n          to: userFromApi.substituteUserEndDate ? formatBackDateTimeToBackDateFormat(userFromApi.substituteUserEndDate, 0) : ''\n        },\n        profiles: map(\n          userFromApi.userProfiles,\n          ({ profileId, ...profile }) => ({ id: profileId, ...profile })\n        )\n      })\n    }\n  }, [userFromApi])\n\n  return (\n    <Modal\n      variant=\"space\"\n      id={ id }\n      open={ open }\n      title={ createMode\n        ? t('new {this}', { gender: 'male', this: t('user', { howMany: 1 }) })\n        : t('editing {this}', { this: t('user', { howMany: 1 }) })\n      }\n      maxWidth=\"md\"\n      fullWidth\n      loading={ loading }\n      FooterComponent={ () => (\n        <>\n          <Button\n            color=\"secondary\"\n            width=\"200px\"\n            variant=\"outlined\"\n            onClick={ handleClose }\n            style={ { marginRight: 10 } }\n            disabled={ loading }\n          >\n            <I18n>cancel</I18n>\n          </Button>\n          <Button\n            color=\"secondary\"\n            width=\"200px\"\n            variant=\"contained\"\n            onClick={ () => formRef.current.submit() }\n            disabled={ loading }\n          >\n            <I18n>save</I18n>\n          </Button>\n        </>\n      ) }\n    >\n      <Form\n        ref={ formRef }\n        schemaConstructor={ userSchema }\n        defaultValues={ INITIAL_VALUES }\n        onSubmit={ handleSubmit }\n      >\n        <Grid container alignItems=\"center\">\n          <InputText\n            name=\"username\"\n            label={ t('user', { howMany: 1 }) }\n          />\n        </Grid>\n        <Grid container alignItems=\"center\" spacing={ 2 }>\n          <Grid item xs={ 8 }>\n            <InputEmail\n              name=\"email\"\n              label={ t('email') }\n            />\n          </Grid>\n          <Grid className={ classes.phoneInput } item xs={ 4 }>\n            <InputPhone\n              name=\"phone\"\n              label={ t('phone', { howMany: 1 }) }\n            />\n          </Grid>\n        </Grid>\n\n        <Grid container alignItems=\"center\" spacing={ 2 }>\n          <Grid item xs={ 12 }>\n            <Checkbox\n              detached\n              style={ { marginLeft: 8 } }\n              label={ t('link representative', { howMany: 2 }) }\n              name=\"representativeCodesChecked\"\n              value={ !isEmpty(representativeCodes) }\n              onChange={ handleOpenLinkRepresentativeModal }\n            />\n            <InputHidden name=\"representativeCodes\" onValueChange={ setRepresentativeCodes } />\n          </Grid>\n        </Grid>\n\n        <Grid container alignItems=\"center\" justify=\"space-between\" spacing={ 2 }>\n          <Grid item sm={ 8 }>\n            <InputAutocomplete\n              name=\"substituteUserId\"\n              url={ users.autoComplete }\n              label={ t('alternate', { howMany: 1 }) }\n              fullWidth\n              onValueChange={ handleSubstituteUserIdChange }\n            />\n          </Grid>\n          <Grid item sm={ 4 }>\n            <InputDateRange\n              name=\"substituteUserPeriod\"\n              disabled={ isEmpty(substituteUserId) }\n              fullWidth\n            />\n          </Grid>\n        </Grid>\n\n        <Grid container alignItems=\"center\" spacing={ 2 }>\n          <Grid item xs={ 12 }>\n            <Checkbox\n              name=\"customerHierarchyEnabled\"\n              label={ t('enable all hierarchy clients') }\n              style={ { marginLeft: 8 } }\n            />\n          </Grid>\n        </Grid>\n\n        <Grid container justify=\"center\" alignItems=\"center\" direction=\"column\" className={ classes.btnLinkProfile }>\n          <I18n\n            as={ Button }\n            params={ { howMany: 2 } }\n            color=\"warning\"\n            width=\"300px\"\n            variant=\"contained\"\n            onClick={ handleOpenLinkUserProfileModal }\n            style={ { padding: '0px 80px 0 80px' } }\n          >\n            link profile\n          </I18n>\n        </Grid>\n\n        <Grid container alignItems=\"center\" justify=\"space-between\">\n          <AssociatedDataList\n            name=\"profiles\"\n            label={ t('linked profiles') }\n          />\n        </Grid>\n\n        <ImgContainer>\n          <ShadowBox>\n            <ContentBox>\n              <UploadImage\n                name=\"imageFile\"\n                preview\n                previewStyle={ { width: '300px', height: '300px' } }\n                defaultFile={ ImgProfilePlaceholder }\n                title={ t('login image add new file message') }\n                description={ t('the {this} or', { gender: 'female', this: t('image', { howMany: 1 }) }) }\n              />\n            </ContentBox>\n          </ShadowBox>\n          {createMode && (\n            <InfoContainer>\n              <InfoIcon/>\n              A proporção ideal para sua imagem é 1:1\n            </InfoContainer>\n          )}\n        </ImgContainer>\n\n      </Form>\n    </Modal>\n  )\n}\n\nNewUserModal.propTypes = {\n  id: PropTypes.string.isRequired,\n  open: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  userId: PropTypes.number,\n  onSuccess: PropTypes.func\n}\n\nNewUserModal.defaultProps = {\n  onSuccess () {},\n  userId: undefined\n}\n\nexport default NewUserModal\n"]},"metadata":{},"sourceType":"module"}