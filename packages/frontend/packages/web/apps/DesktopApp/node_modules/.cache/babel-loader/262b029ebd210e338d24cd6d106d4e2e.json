{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/buyer/screens/BuyerListScreen/BuyerListScreen.js\";\nimport React, { useCallback, useMemo, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { chain } from 'lodash';\nimport isEmpty from 'lodash/isEmpty';\nimport isNil from 'lodash/isNil';\nimport map from 'lodash/map';\nimport omitBy from 'lodash/omitBy';\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\nimport { useT } from '@britania-crm/i18n';\nimport { buyers as buyersCrmRoutes } from '@britania-crm/services/apis/crmApi/resources/routes';\nimport useCrmApi from '@britania-crm/services/hooks/useCrmApi';\nimport { FileActions } from '@britania-crm/stores/file';\nimport colors from '@britania-crm/styles/colors';\nimport Checkbox from '@britania-crm/web-components/Checkbox';\nimport DataTable from '@britania-crm/web-components/DataTable';\nimport PageFilter from '@britania-crm/web-components/PageFilter';\nimport Tooltip from '@britania-crm/web-components/Tooltip';\nimport { useRoutes } from '@britania-crm/web-src/routes/authenticated.routes';\nimport BuyerFormFilter from '../../components/BuyerFormFilter';\nimport { Container } from './styles';\n\nconst BuyerListScreen = () => {\n  const t = useT();\n  const {\n    routes,\n    currentRoutePermissions\n  } = useRoutes();\n  const history = useHistory();\n  const dispatch = useCallback(useDispatch(), []);\n  const [filters, setFilters] = useState({});\n  const [downloadLoading, setDownloadLoading] = useState(false);\n  const {\n    data,\n    loading,\n    error\n  } = useCrmApi([buyersCrmRoutes.getAll, filters], {\n    params: filters\n  });\n  const columns = useMemo(() => [{\n    title: t('name', {\n      howMany: 1\n    }),\n    field: 'name',\n    width: 250\n  }, {\n    title: t('matrix or company'),\n    field: 'clientTotvsDescription'\n  }, {\n    title: t('line', {\n      howMany: 1\n    }),\n    field: 'line',\n\n    render(row) {\n      if (!isEmpty(row === null || row === void 0 ? void 0 : row.buyerLinesFamilies)) {\n        const newLinesFamilies = chain(row === null || row === void 0 ? void 0 : row.buyerLinesFamilies).groupBy('lineCode').map((value, key) => ({\n          lineCode: Number(key),\n          lineDescription: value[0].lineDescription,\n          family: value\n        })).value();\n        const listFamilyAndLine = map(newLinesFamilies, lineFamily => lineFamily.lineDescription).join(', ');\n        const newString = listFamilyAndLine.slice(0, 15);\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Tooltip, {\n          title: listFamilyAndLine,\n          arrow: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }\n        }, listFamilyAndLine.length >= 15 ? newString.concat('...') : newString));\n      }\n\n      return '-';\n    }\n\n  }, {\n    title: t('regional', {\n      howMany: 1\n    }),\n    field: 'regionalManagerDescription'\n  }, {\n    title: t('responsible', {\n      howMany: 1\n    }),\n    field: 'responsibleDescription'\n  }, {\n    title: t('status'),\n    field: 'active',\n    render: row => /*#__PURE__*/React.createElement(Checkbox, {\n      detached: true,\n      readOnly: true,\n      style: {\n        color: colors.black2\n      },\n      label: row.active ? t('active') : t('inactive'),\n      value: row.active,\n      icon: /*#__PURE__*/React.createElement(FiberManualRecordIcon, {\n        fontSize: \"small\",\n        htmlColor: colors.error.main,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 18\n        }\n      }),\n      checkedIcon: /*#__PURE__*/React.createElement(FiberManualRecordIcon, {\n        fontSize: \"small\",\n        htmlColor: colors.success.main,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    })\n  }], [t]);\n  const onEditClick = useCallback((event, row) => {\n    history.push(routes.editBuyer.path, {\n      params: {\n        mode: 'edit',\n        id: row.id\n      }\n    });\n  }, [history, routes.editBuyer.path]);\n  const onRowClick = useCallback((event, row) => {\n    history.push(routes.viewBuyer.path, {\n      params: {\n        mode: 'view',\n        id: row.id\n      }\n    });\n  }, [history, routes.viewBuyer.path]);\n  const handleFilter = useCallback(values => {\n    setFilters(omitBy({\n      clientTotvsCode: values.codMatrix ? values.codMatrix : null,\n      lineCodes: !isEmpty(values.lineDescription) ? values.lineDescription.join(',') : null,\n      name: values.nameBuyer ? values.nameBuyer : null,\n      active: values.status\n    }, isNil));\n  }, []);\n  const handleDownload = useCallback(() => {\n    setDownloadLoading(true);\n    dispatch(FileActions.download(buyersCrmRoutes.download, 'RelÃ¡torio.xlsx', setDownloadLoading));\n  }, [dispatch]);\n  const onCreateClick = useCallback(() => {\n    history.push(routes.newBuyer.path, {\n      params: {\n        mode: 'create'\n      }\n    });\n  }, [history, routes.newBuyer.path]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PageFilter, {\n    handleFilter: handleFilter,\n    Form: BuyerFormFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DataTable, {\n    data: data,\n    columns: columns,\n    loading: loading || !!error || downloadLoading,\n    title: t('register of {this}', {\n      this: t('buyer', {\n        howMany: 2\n      })\n    }),\n    addTitle: t('add new {this}', {\n      gender: 'male',\n      this: t('buyer', {\n        howMany: 1\n      })\n    }),\n    onAddClick: currentRoutePermissions.INCLUIR && onCreateClick,\n    onEditClick: currentRoutePermissions.EDITAR && onEditClick,\n    onRowClick: onRowClick,\n    onGoBack: history.goBack,\n    addFilterTitle: t('filter data'),\n    onExportClick: handleDownload,\n    emptyMessage: t('{this} datagrid body empty data source message', {\n      this: t('buyer', {\n        howMany: 1\n      })\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default BuyerListScreen;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/buyer/screens/BuyerListScreen/BuyerListScreen.js"],"names":["React","useCallback","useMemo","useState","useDispatch","useHistory","chain","isEmpty","isNil","map","omitBy","FiberManualRecordIcon","useT","buyers","buyersCrmRoutes","useCrmApi","FileActions","colors","Checkbox","DataTable","PageFilter","Tooltip","useRoutes","BuyerFormFilter","Container","BuyerListScreen","t","routes","currentRoutePermissions","history","dispatch","filters","setFilters","downloadLoading","setDownloadLoading","data","loading","error","getAll","params","columns","title","howMany","field","width","render","row","buyerLinesFamilies","newLinesFamilies","groupBy","value","key","lineCode","Number","lineDescription","family","listFamilyAndLine","lineFamily","join","newString","slice","length","concat","color","black2","active","main","success","onEditClick","event","push","editBuyer","path","mode","id","onRowClick","viewBuyer","handleFilter","values","clientTotvsCode","codMatrix","lineCodes","name","nameBuyer","status","handleDownload","download","onCreateClick","newBuyer","this","gender","INCLUIR","EDITAR","goBack"],"mappings":"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","sourcesContent":["import React, {\n  useCallback,\n  useMemo,\n  useState\n} from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\n\nimport { chain } from 'lodash'\nimport isEmpty from 'lodash/isEmpty'\nimport isNil from 'lodash/isNil'\nimport map from 'lodash/map'\nimport omitBy from 'lodash/omitBy'\n\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord'\n\nimport { useT } from '@britania-crm/i18n'\nimport { buyers as buyersCrmRoutes } from '@britania-crm/services/apis/crmApi/resources/routes'\nimport useCrmApi from '@britania-crm/services/hooks/useCrmApi'\nimport { FileActions } from '@britania-crm/stores/file'\nimport colors from '@britania-crm/styles/colors'\nimport Checkbox from '@britania-crm/web-components/Checkbox'\nimport DataTable from '@britania-crm/web-components/DataTable'\nimport PageFilter from '@britania-crm/web-components/PageFilter'\nimport Tooltip from '@britania-crm/web-components/Tooltip'\nimport { useRoutes } from '@britania-crm/web-src/routes/authenticated.routes'\n\nimport BuyerFormFilter from '../../components/BuyerFormFilter'\nimport { Container } from './styles'\n\nconst BuyerListScreen = () => {\n  const t = useT()\n  const { routes, currentRoutePermissions } = useRoutes()\n  const history = useHistory()\n  const dispatch = useCallback(useDispatch(), [])\n\n  const [filters, setFilters] = useState({})\n\n  const [downloadLoading, setDownloadLoading] = useState(false)\n\n  const {\n    data,\n    loading,\n    error\n  } = useCrmApi([buyersCrmRoutes.getAll, filters], { params: filters })\n\n  const columns = useMemo(() => [\n    {\n      title: t('name', { howMany: 1 }),\n      field: 'name',\n      width: 250\n    },\n    {\n      title: t('matrix or company'),\n      field: 'clientTotvsDescription'\n    },\n    {\n      title: t('line', { howMany: 1 }),\n      field: 'line',\n      render (row) {\n        if (!isEmpty(row?.buyerLinesFamilies)) {\n          const newLinesFamilies = chain(row?.buyerLinesFamilies)\n            .groupBy('lineCode')\n            .map((value, key) => ({\n              lineCode: Number(key), lineDescription: value[0].lineDescription, family: value\n            }))\n            .value()\n          const listFamilyAndLine = map(newLinesFamilies, (lineFamily) => lineFamily.lineDescription).join(', ')\n          const newString = listFamilyAndLine.slice(0, 15)\n          return (\n            <div>\n              <Tooltip title={ listFamilyAndLine } arrow>\n                {listFamilyAndLine.length >= 15 ? newString.concat('...') : newString}\n              </Tooltip>\n            </div>\n          )\n        }\n        return '-'\n      }\n    },\n    {\n      title: t('regional', { howMany: 1 }),\n      field: 'regionalManagerDescription'\n    },\n    {\n      title: t('responsible', { howMany: 1 }),\n      field: 'responsibleDescription'\n    },\n    {\n      title: t('status'),\n      field: 'active',\n      render: (row) => (\n        <Checkbox\n          detached\n          readOnly\n          style={ { color: colors.black2 } }\n          label={ row.active ? t('active') : t('inactive') }\n          value={ row.active }\n          icon={ <FiberManualRecordIcon fontSize=\"small\" htmlColor={ colors.error.main } /> }\n          checkedIcon={ <FiberManualRecordIcon fontSize=\"small\" htmlColor={ colors.success.main } /> }\n        />\n      )\n    }\n  ], [t])\n\n  const onEditClick = useCallback((event, row) => {\n    history.push(routes.editBuyer.path, {\n      params: {\n        mode: 'edit',\n        id: row.id\n      }\n    })\n  }, [history, routes.editBuyer.path])\n\n  const onRowClick = useCallback((event, row) => {\n    history.push(routes.viewBuyer.path, {\n      params: {\n        mode: 'view',\n        id: row.id\n      }\n    })\n  }, [history, routes.viewBuyer.path])\n\n  const handleFilter = useCallback(\n    (values) => {\n      setFilters(omitBy({\n        clientTotvsCode: values.codMatrix ? values.codMatrix : null,\n        lineCodes: !isEmpty(values.lineDescription) ? values.lineDescription.join(',') : null,\n        name: values.nameBuyer ? values.nameBuyer : null,\n        active: values.status\n      }, isNil))\n    },\n    []\n  )\n\n  const handleDownload = useCallback(() => {\n    setDownloadLoading(true)\n    dispatch(FileActions.download(\n      buyersCrmRoutes.download,\n      'RelÃ¡torio.xlsx',\n      setDownloadLoading\n    ))\n  }\n  , [dispatch])\n\n  const onCreateClick = useCallback(\n    () => {\n      history.push(routes.newBuyer.path, { params: { mode: 'create' } })\n    },\n    [history, routes.newBuyer.path]\n  )\n\n  return (\n    <>\n      <PageFilter\n        handleFilter={ handleFilter }\n        Form={ BuyerFormFilter }\n      />\n      <Container>\n        <DataTable\n          data={ data }\n          columns={ columns }\n          loading={ loading || !!error || downloadLoading }\n          title={ t('register of {this}', { this: t('buyer', { howMany: 2 }) }) }\n          addTitle={ t('add new {this}', { gender: 'male', this: t('buyer', { howMany: 1 }) }) }\n          onAddClick={ currentRoutePermissions.INCLUIR && onCreateClick }\n          onEditClick={ currentRoutePermissions.EDITAR && onEditClick }\n          onRowClick={ onRowClick }\n          onGoBack={ history.goBack }\n          addFilterTitle={ t('filter data') }\n          onExportClick={ handleDownload }\n          emptyMessage={ t('{this} datagrid body empty data source message', { this: t('buyer', { howMany: 1 }) }) }\n        />\n      </Container>\n    </>\n  )\n}\n\nexport default BuyerListScreen\n"]},"metadata":{},"sourceType":"module"}