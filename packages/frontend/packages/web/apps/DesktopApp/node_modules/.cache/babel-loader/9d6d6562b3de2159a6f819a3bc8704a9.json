{"ast":null,"code":"import { put, call, takeLatest } from 'redux-saga/effects';\nimport { MSG003, MSG004, MSG033 } from '@britania-crm/constants/feedbackMessages.constants';\nimport { createDocument, updateDocument, deleteDocument } from '@britania-crm/services/apis/crmApi/resources/document.service';\nimport { AppActions } from '@britania-crm/stores/app/app.actions';\nimport { DocumentsTypes } from './documents.actions';\n\nfunction* doCreateDocument({\n  params,\n  onSuccess = () => {},\n  onError = () => {}\n}) {\n  try {\n    const {\n      status\n    } = yield call(createDocument, params);\n\n    if (status === 201) {\n      yield call(onSuccess);\n      yield put(AppActions.addAlert({\n        type: 'success',\n        message: MSG003\n      }));\n    }\n  } catch (error) {\n    yield put(AppActions.addAlert({\n      type: 'error',\n      message: MSG033\n    }));\n    yield call(onError);\n  }\n}\n\nfunction* doUpdateDocument({\n  params,\n  onSuccess = () => {},\n  onError = () => {}\n}) {\n  try {\n    const {\n      status\n    } = yield call(updateDocument, params);\n\n    if (status === 200) {\n      yield call(onSuccess);\n      yield put(AppActions.addAlert({\n        type: 'success',\n        message: MSG004\n      }));\n    }\n  } catch (error) {\n    yield put(AppActions.addAlert({\n      type: 'error',\n      message: MSG033\n    }));\n    yield call(onError);\n  }\n}\n\nfunction* doDeleteDocument({\n  id,\n  onSuccess\n}) {\n  try {\n    const response = yield call(deleteDocument, id);\n\n    if (response.status === 200) {\n      yield put(AppActions.addAlert({\n        type: 'success',\n        message: MSG004\n      }));\n    }\n  } catch (error) {\n    console.warn(error);\n  } finally {\n    onSuccess();\n  }\n}\n\nexport default [takeLatest(DocumentsTypes.CREATE_DOCUMENT, doCreateDocument), takeLatest(DocumentsTypes.UPDATE_DOCUMENT, doUpdateDocument), takeLatest(DocumentsTypes.DELETE_DOCUMENT, doDeleteDocument)];","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/core/stores/documents/documents.sagas.js"],"names":["put","call","takeLatest","MSG003","MSG004","MSG033","createDocument","updateDocument","deleteDocument","AppActions","DocumentsTypes","doCreateDocument","params","onSuccess","onError","status","addAlert","type","message","error","doUpdateDocument","doDeleteDocument","id","response","console","warn","CREATE_DOCUMENT","UPDATE_DOCUMENT","DELETE_DOCUMENT"],"mappings":"AAAA,SACEA,GADF,EAEEC,IAFF,EAGEC,UAHF,QAIO,oBAJP;AAMA,SACEC,MADF,EAEEC,MAFF,EAGEC,MAHF,QAIO,oDAJP;AAKA,SACEC,cADF,EAEEC,cAFF,EAGEC,cAHF,QAIO,+DAJP;AAKA,SAASC,UAAT,QAA2B,sCAA3B;AAEA,SAASC,cAAT,QAA+B,qBAA/B;;AAEA,UAAUC,gBAAV,CAA4B;AAC1BC,EAAAA,MAD0B;AAE1BC,EAAAA,SAAS,GAAG,MAAM,CAAE,CAFM;AAG1BC,EAAAA,OAAO,GAAG,MAAM,CAAE;AAHQ,CAA5B,EAIG;AACD,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAa,MAAMd,IAAI,CAACK,cAAD,EAAiBM,MAAjB,CAA7B;;AAEA,QAAIG,MAAM,KAAK,GAAf,EAAoB;AAClB,YAAMd,IAAI,CAACY,SAAD,CAAV;AACA,YAAMb,GAAG,CAACS,UAAU,CAACO,QAAX,CAAoB;AAAEC,QAAAA,IAAI,EAAE,SAAR;AAAmBC,QAAAA,OAAO,EAAEf;AAA5B,OAApB,CAAD,CAAT;AACD;AACF,GAPD,CAOE,OAAOgB,KAAP,EAAc;AACd,UAAMnB,GAAG,CAACS,UAAU,CAACO,QAAX,CAAoB;AAAEC,MAAAA,IAAI,EAAE,OAAR;AAAiBC,MAAAA,OAAO,EAAEb;AAA1B,KAApB,CAAD,CAAT;AACA,UAAMJ,IAAI,CAACa,OAAD,CAAV;AACD;AACF;;AAED,UAAUM,gBAAV,CAA4B;AAC1BR,EAAAA,MAD0B;AAE1BC,EAAAA,SAAS,GAAG,MAAM,CAAE,CAFM;AAG1BC,EAAAA,OAAO,GAAG,MAAM,CAAE;AAHQ,CAA5B,EAIG;AACD,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAa,MAAMd,IAAI,CAACM,cAAD,EAAiBK,MAAjB,CAA7B;;AAEA,QAAIG,MAAM,KAAK,GAAf,EAAoB;AAClB,YAAMd,IAAI,CAACY,SAAD,CAAV;AACA,YAAMb,GAAG,CAACS,UAAU,CAACO,QAAX,CAAoB;AAAEC,QAAAA,IAAI,EAAE,SAAR;AAAmBC,QAAAA,OAAO,EAAEd;AAA5B,OAApB,CAAD,CAAT;AACD;AACF,GAPD,CAOE,OAAOe,KAAP,EAAc;AACd,UAAMnB,GAAG,CAACS,UAAU,CAACO,QAAX,CAAoB;AAAEC,MAAAA,IAAI,EAAE,OAAR;AAAiBC,MAAAA,OAAO,EAAEb;AAA1B,KAApB,CAAD,CAAT;AACA,UAAMJ,IAAI,CAACa,OAAD,CAAV;AACD;AACF;;AAED,UAAUO,gBAAV,CAA4B;AAAEC,EAAAA,EAAF;AAAMT,EAAAA;AAAN,CAA5B,EAA+C;AAC7C,MAAI;AACF,UAAMU,QAAQ,GAAG,MAAMtB,IAAI,CAACO,cAAD,EAAiBc,EAAjB,CAA3B;;AACA,QAAIC,QAAQ,CAACR,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,YAAMf,GAAG,CAACS,UAAU,CAACO,QAAX,CAAoB;AAAEC,QAAAA,IAAI,EAAE,SAAR;AAAmBC,QAAAA,OAAO,EAAEd;AAA5B,OAApB,CAAD,CAAT;AACD;AACF,GALD,CAKE,OAAOe,KAAP,EAAc;AACdK,IAAAA,OAAO,CAACC,IAAR,CAAaN,KAAb;AACD,GAPD,SAOU;AACRN,IAAAA,SAAS;AACV;AACF;;AAED,eAAe,CACbX,UAAU,CAACQ,cAAc,CAACgB,eAAhB,EAAiCf,gBAAjC,CADG,EAEbT,UAAU,CAACQ,cAAc,CAACiB,eAAhB,EAAiCP,gBAAjC,CAFG,EAGblB,UAAU,CAACQ,cAAc,CAACkB,eAAhB,EAAiCP,gBAAjC,CAHG,CAAf","sourcesContent":["import {\n  put,\n  call,\n  takeLatest\n} from 'redux-saga/effects'\n\nimport {\n  MSG003,\n  MSG004,\n  MSG033\n} from '@britania-crm/constants/feedbackMessages.constants'\nimport {\n  createDocument,\n  updateDocument,\n  deleteDocument\n} from '@britania-crm/services/apis/crmApi/resources/document.service'\nimport { AppActions } from '@britania-crm/stores/app/app.actions'\n\nimport { DocumentsTypes } from './documents.actions'\n\nfunction* doCreateDocument ({\n  params,\n  onSuccess = () => {},\n  onError = () => {}\n}) {\n  try {\n    const { status } = yield call(createDocument, params)\n\n    if (status === 201) {\n      yield call(onSuccess)\n      yield put(AppActions.addAlert({ type: 'success', message: MSG003 }))\n    }\n  } catch (error) {\n    yield put(AppActions.addAlert({ type: 'error', message: MSG033 }))\n    yield call(onError)\n  }\n}\n\nfunction* doUpdateDocument ({\n  params,\n  onSuccess = () => {},\n  onError = () => {}\n}) {\n  try {\n    const { status } = yield call(updateDocument, params)\n\n    if (status === 200) {\n      yield call(onSuccess)\n      yield put(AppActions.addAlert({ type: 'success', message: MSG004 }))\n    }\n  } catch (error) {\n    yield put(AppActions.addAlert({ type: 'error', message: MSG033 }))\n    yield call(onError)\n  }\n}\n\nfunction* doDeleteDocument ({ id, onSuccess }) {\n  try {\n    const response = yield call(deleteDocument, id)\n    if (response.status === 200) {\n      yield put(AppActions.addAlert({ type: 'success', message: MSG004 }))\n    }\n  } catch (error) {\n    console.warn(error)\n  } finally {\n    onSuccess()\n  }\n}\n\nexport default [\n  takeLatest(DocumentsTypes.CREATE_DOCUMENT, doCreateDocument),\n  takeLatest(DocumentsTypes.UPDATE_DOCUMENT, doUpdateDocument),\n  takeLatest(DocumentsTypes.DELETE_DOCUMENT, doDeleteDocument)\n]\n"]},"metadata":{},"sourceType":"module"}