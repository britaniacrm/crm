{"ast":null,"code":"import Snackbar from './Snackbar';\n\nclass SnackbarController {\n  constructor(stack, customOptions = {}) {\n    this._createSnackbar = (message, options) => new Snackbar(message, options, this);\n\n    this.default = (message, options) => this._createSnackbar(message, {\n      closeOnClick: true,\n      ...this.customOptions,\n      ...options,\n      variant: 'default'\n    });\n\n    this.success = (message, options = {}) => this._createSnackbar(message, {\n      closeOnClick: true,\n      ...this.customOptions,\n      ...options,\n      variant: 'success'\n    });\n\n    this.warning = (message, options = {}) => this._createSnackbar(message, {\n      closeOnClick: true,\n      autoHideDuration: 1500,\n      ...this.customOptions,\n      ...options,\n      variant: 'warning'\n    });\n\n    this.error = (message, options = {}) => this._createSnackbar(message, {\n      closeOnClick: true,\n      ...this.customOptions,\n      ...options,\n      variant: 'error',\n      autoHideDuration: 5000\n    });\n\n    this.info = (message, options = {}) => this._createSnackbar(message, {\n      closeOnClick: true,\n      ...this.customOptions,\n      ...options,\n      variant: 'info'\n    });\n\n    this._stack = stack;\n    this.customOptions = customOptions;\n  }\n\n}\n\nexport default SnackbarController;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/core/snackbar/controllers/SnackbarController.js"],"names":["Snackbar","SnackbarController","constructor","stack","customOptions","_createSnackbar","message","options","default","closeOnClick","variant","success","warning","autoHideDuration","error","info","_stack"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,YAArB;;AAEA,MAAMC,kBAAN,CAAyB;AACvBC,EAAAA,WAAW,CAAEC,KAAF,EAASC,aAAa,GAAG,EAAzB,EAA6B;AAAA,SAKxCC,eALwC,GAKtB,CAACC,OAAD,EAAUC,OAAV,KAAsB,IAAIP,QAAJ,CACtCM,OADsC,EAEtCC,OAFsC,EAGtC,IAHsC,CALA;;AAAA,SAWxCC,OAXwC,GAW9B,CAACF,OAAD,EAAUC,OAAV,KAAsB,KAAKF,eAAL,CAC9BC,OAD8B,EAE9B;AACEG,MAAAA,YAAY,EAAE,IADhB;AAEE,SAAG,KAAKL,aAFV;AAGE,SAAGG,OAHL;AAIEG,MAAAA,OAAO,EAAE;AAJX,KAF8B,CAXQ;;AAAA,SAqBxCC,OArBwC,GAqB9B,CAACL,OAAD,EAAUC,OAAO,GAAG,EAApB,KAA2B,KAAKF,eAAL,CACnCC,OADmC,EAEnC;AACEG,MAAAA,YAAY,EAAE,IADhB;AAEE,SAAG,KAAKL,aAFV;AAGE,SAAGG,OAHL;AAIEG,MAAAA,OAAO,EAAE;AAJX,KAFmC,CArBG;;AAAA,SA+BxCE,OA/BwC,GA+B9B,CAACN,OAAD,EAAUC,OAAO,GAAG,EAApB,KAA2B,KAAKF,eAAL,CACnCC,OADmC,EAEnC;AACEG,MAAAA,YAAY,EAAE,IADhB;AAEEI,MAAAA,gBAAgB,EAAE,IAFpB;AAGE,SAAG,KAAKT,aAHV;AAIE,SAAGG,OAJL;AAKEG,MAAAA,OAAO,EAAE;AALX,KAFmC,CA/BG;;AAAA,SA0CxCI,KA1CwC,GA0ChC,CAACR,OAAD,EAAUC,OAAO,GAAG,EAApB,KAA2B,KAAKF,eAAL,CACjCC,OADiC,EAEjC;AACEG,MAAAA,YAAY,EAAE,IADhB;AAEE,SAAG,KAAKL,aAFV;AAGE,SAAGG,OAHL;AAIEG,MAAAA,OAAO,EAAE,OAJX;AAKEG,MAAAA,gBAAgB,EAAE;AALpB,KAFiC,CA1CK;;AAAA,SAqDxCE,IArDwC,GAqDjC,CAACT,OAAD,EAAUC,OAAO,GAAG,EAApB,KAA2B,KAAKF,eAAL,CAChCC,OADgC,EAEhC;AACEG,MAAAA,YAAY,EAAE,IADhB;AAEE,SAAG,KAAKL,aAFV;AAGE,SAAGG,OAHL;AAIEG,MAAAA,OAAO,EAAE;AAJX,KAFgC,CArDM;;AACtC,SAAKM,MAAL,GAAcb,KAAd;AACA,SAAKC,aAAL,GAAqBA,aAArB;AACD;;AAJsB;;AAiEzB,eAAeH,kBAAf","sourcesContent":["import Snackbar from './Snackbar'\n\nclass SnackbarController {\n  constructor (stack, customOptions = {}) {\n    this._stack = stack\n    this.customOptions = customOptions\n  }\n\n  _createSnackbar = (message, options) => new Snackbar(\n    message,\n    options,\n    this\n  )\n\n  default = (message, options) => this._createSnackbar(\n    message,\n    {\n      closeOnClick: true,\n      ...this.customOptions,\n      ...options,\n      variant: 'default'\n    }\n  )\n\n  success = (message, options = {}) => this._createSnackbar(\n    message,\n    {\n      closeOnClick: true,\n      ...this.customOptions,\n      ...options,\n      variant: 'success'\n    }\n  )\n\n  warning = (message, options = {}) => this._createSnackbar(\n    message,\n    {\n      closeOnClick: true,\n      autoHideDuration: 1500,\n      ...this.customOptions,\n      ...options,\n      variant: 'warning'\n    }\n  )\n\n  error = (message, options = {}) => this._createSnackbar(\n    message,\n    {\n      closeOnClick: true,\n      ...this.customOptions,\n      ...options,\n      variant: 'error',\n      autoHideDuration: 5000\n    }\n  )\n\n  info = (message, options = {}) => this._createSnackbar(\n    message,\n    {\n      closeOnClick: true,\n      ...this.customOptions,\n      ...options,\n      variant: 'info'\n    }\n  )\n}\n\nexport default SnackbarController\n"]},"metadata":{},"sourceType":"module"}