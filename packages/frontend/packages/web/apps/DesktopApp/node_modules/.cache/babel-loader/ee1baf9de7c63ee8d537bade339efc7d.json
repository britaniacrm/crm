{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/buyer/screens/BuyerFormScreen/BuyerFormScreen.js\";\nimport React, { useCallback, useMemo, useEffect, useRef, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport trimMask from '@meta-awesome/functions/src/trimMask';\nimport { Scope } from '@unform/core';\nimport { chain } from 'lodash';\nimport debounce from 'lodash/debounce';\nimport forEach from 'lodash/forEach';\nimport isEmpty from 'lodash/isEmpty';\nimport upperCase from 'lodash/upperCase';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { useDialog } from '@britania-crm/dialog';\nimport { useFormEffect } from '@britania-crm/forms';\nimport buyerSchema, { INITIAL_VALUES } from '@britania-crm/forms/schemas/buyer/buyer.schema';\nimport I18n, { useT } from '@britania-crm/i18n';\nimport { buyers as buyersCrmRoutes } from '@britania-crm/services/apis/crmApi/resources/routes';\nimport { searchStates } from '@britania-crm/services/apis/ibgeApi';\nimport useCrmApi from '@britania-crm/services/hooks/useCrmApi';\nimport { BuyerActions } from '@britania-crm/stores/buyer';\nimport Button from '@britania-crm/web-components/Button';\nimport Form from '@britania-crm/web-components/Form';\nimport { CircularLoader } from '@britania-crm/web-components/Loader';\nimport ConfirmModal from '@britania-crm/web-components/Modal/ConfirmModal';\nimport { useRoutes } from '@britania-crm/web-src/routes/authenticated.routes';\nimport Address from './Address';\nimport MainData from './MainData';\nimport useStyles from './styles';\n\nconst BuyerListScreen = () => {\n  var _state$params2, _state$params3;\n\n  const t = useT();\n  const classes = useStyles();\n  const {\n    routes\n  } = useRoutes();\n  const dispatch = useCallback(useDispatch(), []);\n  const history = useHistory();\n  const {\n    state\n  } = useLocation();\n  const formRef = useRef(null);\n  const {\n    createDialog\n  } = useDialog();\n  const [queryParams, setQueryParams] = useState({});\n  const [loader, setLoader] = useState(false);\n  const [stateOptions, setStateOptions] = useState([]);\n  const [cpf, setCpf] = useState('');\n  const mode = useMemo(() => {\n    var _state$params;\n\n    return state === null || state === void 0 ? void 0 : (_state$params = state.params) === null || _state$params === void 0 ? void 0 : _state$params.mode;\n  }, [state]);\n  const modeView = useMemo(() => mode === 'view', [mode]);\n  const isEdit = useMemo(() => mode === 'edit', [mode]);\n  const {\n    data: _buyerFromApi,\n    loading\n  } = useCrmApi((state === null || state === void 0 ? void 0 : (_state$params2 = state.params) === null || _state$params2 === void 0 ? void 0 : _state$params2.id) ? [`${buyersCrmRoutes.getOne}/${state === null || state === void 0 ? void 0 : (_state$params3 = state.params) === null || _state$params3 === void 0 ? void 0 : _state$params3.id}`, state] : null, {}, {\n    revalidateOnFocus: false\n  });\n  const buyerFromApi = useMemo(() => !_buyerFromApi ? undefined : { ..._buyerFromApi,\n    buyerAddress: { ..._buyerFromApi.buyerAddress,\n      uf: _buyerFromApi.buyerAddress.uf ? upperCase(_buyerFromApi.buyerAddress.uf) : ''\n    },\n    parentCompanyAddress: { ..._buyerFromApi.parentCompanyAddress,\n      uf: _buyerFromApi.parentCompanyAddress.uf ? upperCase(_buyerFromApi.parentCompanyAddress.uf) : ''\n    },\n    linesFamilies: chain(_buyerFromApi === null || _buyerFromApi === void 0 ? void 0 : _buyerFromApi.buyerLinesFamilies).groupBy('lineCode').map((value, key) => ({\n      lineCode: Number(key),\n      lineDescription: value[0].lineDescription,\n      family: value\n    })).value(),\n    regionalManager: {\n      approverCode: _buyerFromApi === null || _buyerFromApi === void 0 ? void 0 : _buyerFromApi.regionalManagerCode,\n      approverDescription: _buyerFromApi === null || _buyerFromApi === void 0 ? void 0 : _buyerFromApi.regionalManagerDescription\n    },\n    responsible: {\n      code: _buyerFromApi === null || _buyerFromApi === void 0 ? void 0 : _buyerFromApi.responsibleCode,\n      name: _buyerFromApi === null || _buyerFromApi === void 0 ? void 0 : _buyerFromApi.responsibleDescription\n    }\n  }, [_buyerFromApi]);\n  const {\n    data: existenceBuyerFromApi,\n    loading: existenceBuyerFromApiLoading\n  } = useCrmApi((queryParams === null || queryParams === void 0 ? void 0 : queryParams.cpf) ? [`${buyersCrmRoutes.haveBuyer}/${queryParams === null || queryParams === void 0 ? void 0 : queryParams.cpf}`] : null, null, {\n    revalidateOnFocus: false\n  });\n  const isDisabled = useMemo(() => loader || loading || existenceBuyerFromApiLoading, [existenceBuyerFromApiLoading, loader, loading]);\n  const title = useMemo(() => {\n    switch (mode) {\n      case 'edit':\n        return `${t('buyer', {\n          howMany: 1\n        })}  ${(buyerFromApi === null || buyerFromApi === void 0 ? void 0 : buyerFromApi.clientTotvsDescription) || ''}`;\n\n      case 'view':\n        return `${t('buyer', {\n          howMany: 1\n        })}  ${(buyerFromApi === null || buyerFromApi === void 0 ? void 0 : buyerFromApi.clientTotvsDescription) || ''}`;\n\n      default:\n        return t('new {this}', {\n          gender: 'male',\n          this: t('buyer', {\n            howMany: 1\n          })\n        });\n    }\n  }, [buyerFromApi, mode, t]);\n  const getStateOptions = useCallback(async () => {\n    const states = await searchStates();\n    setStateOptions(states);\n  }, []);\n  const onSuccessCallBack = useCallback(() => {\n    history.push(routes.buyers.path);\n  }, [history, routes]);\n  const handleSubmit = useCallback(values => {\n    var _values$buyerAddress, _values$parentCompany, _values$regionalManag, _values$regionalManag2, _values$responsible, _values$responsible2;\n\n    const linesFamilies = [];\n    forEach(values === null || values === void 0 ? void 0 : values.linesFamilies, ({\n      family,\n      lineCode,\n      lineDescription\n    }) => forEach(family, item => linesFamilies.push({\n      lineCode,\n      lineDescription,\n      ...item\n    })));\n    const buyer = { ...values,\n      cpf: trimMask(values.cpf),\n      clientTotvsCode: Number(values.clientTotvsCode.parentCompanyCode),\n      clientTotvsDescription: values.clientTotvsDescription.parentCompanyName,\n      buyerAddress: { ...(values === null || values === void 0 ? void 0 : values.buyerAddress),\n        number: Number(values === null || values === void 0 ? void 0 : (_values$buyerAddress = values.buyerAddress) === null || _values$buyerAddress === void 0 ? void 0 : _values$buyerAddress.number)\n      },\n      parentCompanyAddress: { ...(values === null || values === void 0 ? void 0 : values.parentCompanyAddress),\n        number: Number(values === null || values === void 0 ? void 0 : (_values$parentCompany = values.parentCompanyAddress) === null || _values$parentCompany === void 0 ? void 0 : _values$parentCompany.number)\n      },\n      telephone: trimMask(values.telephone),\n      linesFamilies,\n      regionalManagerCode: values === null || values === void 0 ? void 0 : (_values$regionalManag = values.regionalManager) === null || _values$regionalManag === void 0 ? void 0 : _values$regionalManag.approverCode,\n      regionalManagerDescription: values === null || values === void 0 ? void 0 : (_values$regionalManag2 = values.regionalManager) === null || _values$regionalManag2 === void 0 ? void 0 : _values$regionalManag2.approverDescription,\n      responsibleCode: values === null || values === void 0 ? void 0 : (_values$responsible = values.responsible) === null || _values$responsible === void 0 ? void 0 : _values$responsible.approverCode,\n      responsibleDescription: values === null || values === void 0 ? void 0 : (_values$responsible2 = values.responsible) === null || _values$responsible2 === void 0 ? void 0 : _values$responsible2.approverDescription\n    };\n\n    if (isEdit) {\n      var _state$params4;\n\n      dispatch(BuyerActions.editBuyer(state === null || state === void 0 ? void 0 : (_state$params4 = state.params) === null || _state$params4 === void 0 ? void 0 : _state$params4.id, buyer, onSuccessCallBack, () => setLoader(false)));\n    } else {\n      dispatch(BuyerActions.saveBuyer(buyer, onSuccessCallBack, () => setLoader(false)));\n    }\n  }, [dispatch, isEdit, onSuccessCallBack, state]);\n  const handleReset = useCallback(() => {\n    if (isEdit) {\n      const clientTotvs = formRef.current.getFieldValue('clientTotvsDescription');\n      formRef.current.reset();\n      formRef.current.setData({\n        clientTotvsDescription: clientTotvs,\n        clientTotvsCode: clientTotvs\n      });\n    } else {\n      formRef.current.reset();\n    }\n  }, [isEdit]);\n  const debounceQuery = useCallback(debounce(filter => {\n    setQueryParams(filter);\n  }, 1000), []);\n  const handleCancel = useCallback(() => createDialog({\n    id: 'cancel-modal',\n    Component: ConfirmModal,\n    props: {\n      onConfirm() {\n        history.push(routes.buyers.path);\n      },\n\n      text: mode === 'create' ? t('Do you want to cancel the registration?') : t('Do you want to cancel editing?')\n    }\n  }), [createDialog, history, mode, routes.buyers.path, t]);\n  useEffect(() => {\n    if (!isEdit && !modeView) {\n      const newCPF = trimMask(cpf);\n\n      if (newCPF.length >= 11) {\n        debounceQuery({\n          cpf: newCPF\n        });\n      }\n    }\n  }, [cpf, debounceQuery, existenceBuyerFromApi, modeView, isEdit]);\n  useEffect(() => {\n    var _state$params5;\n\n    if (!(state === null || state === void 0 ? void 0 : (_state$params5 = state.params) === null || _state$params5 === void 0 ? void 0 : _state$params5.id) && mode !== 'create') history.replace(routes.buyers.path);\n  }, [history, mode, routes, state]);\n  useEffect(() => {\n    getStateOptions();\n  }, [getStateOptions]);\n  useFormEffect(() => {\n    if (!isEmpty(buyerFromApi)) {\n      formRef.current.setData({ ...buyerFromApi,\n        clientTotvsDescription: {\n          parentCompanyName: buyerFromApi.clientTotvsDescription,\n          parentCompanyCode: buyerFromApi.clientTotvsCode\n        },\n        clientTotvsCode: {\n          parentCompanyCode: buyerFromApi.clientTotvsCode,\n          parentCompanyName: buyerFromApi.clientTotvsDescription\n        },\n        regionalManager: {\n          approverCode: buyerFromApi.regionalManagerCode,\n          approverDescription: buyerFromApi.regionalManagerDescription\n        },\n        responsible: {\n          approverCode: buyerFromApi.responsibleCode,\n          approverDescription: buyerFromApi.responsibleDescription\n        }\n      });\n    }\n  }, [buyerFromApi, modeView]);\n  return /*#__PURE__*/React.createElement(Form, {\n    ref: formRef,\n    onSubmit: handleSubmit,\n    schemaConstructor: buyerSchema,\n    defaultValues: INITIAL_VALUES,\n    filterEmptyValues: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 5\n    }\n  }, (loader || loading || existenceBuyerFromApiLoading) && /*#__PURE__*/React.createElement(CircularLoader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 64\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    className: classes.header,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    variant: \"h4\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 11\n    }\n  }, title)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MainData, {\n    formRef: formRef,\n    isDisabled: modeView || loader || loading || existenceBuyerFromApiLoading,\n    isEdit: isEdit,\n    setCpf: setCpf,\n    cpfAlreadyExists: existenceBuyerFromApi,\n    search: debounceQuery,\n    isView: modeView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Scope, {\n    path: \"buyerAddress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Address, {\n    formRef: formRef,\n    title: `${t('address')}  ${t('matrix', {\n      howMany: 1\n    })}`,\n    isDisabled: modeView || isDisabled,\n    stateOptions: stateOptions,\n    objFather: \"buyerAddress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Scope, {\n    path: \"parentCompanyAddress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Address, {\n    formRef: formRef,\n    title: t('address of {this}', {\n      gender: '',\n      this: t('buyer', {\n        howMany: 1\n      })\n    }),\n    isDisabled: modeView || isDisabled,\n    stateOptions: stateOptions,\n    objFather: \"parentCompanyAddress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: classes.buttons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 11\n    }\n  }, !modeView && /*#__PURE__*/React.createElement(I18n, {\n    as: Button,\n    className: classes.resetBtn,\n    disabled: loader || loading || existenceBuyerFromApiLoading,\n    variant: \"text\",\n    color: \"secondary\",\n    onClick: handleReset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 15\n    }\n  }, \"clean\")), /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 11\n    }\n  }, !modeView && /*#__PURE__*/React.createElement(I18n, {\n    as: Button,\n    variant: \"outlined\",\n    color: \"secondary\",\n    disabled: loader || loading || existenceBuyerFromApiLoading,\n    onClick: handleCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 15\n    }\n  }, \"cancel\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    variant: \"contained\",\n    className: classes.btnSave,\n    isLoading: loader || loading || existenceBuyerFromApiLoading,\n    onClick: () => !modeView ? formRef.current.submit() : history.push(routes.buyers.path),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 13\n    }\n  }, !modeView ? t('finish registration') : t('turn back'))))));\n};\n\nexport default BuyerListScreen;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/buyer/screens/BuyerFormScreen/BuyerFormScreen.js"],"names":["React","useCallback","useMemo","useEffect","useRef","useState","useDispatch","useHistory","useLocation","trimMask","Scope","chain","debounce","forEach","isEmpty","upperCase","Grid","Typography","useDialog","useFormEffect","buyerSchema","INITIAL_VALUES","I18n","useT","buyers","buyersCrmRoutes","searchStates","useCrmApi","BuyerActions","Button","Form","CircularLoader","ConfirmModal","useRoutes","Address","MainData","useStyles","BuyerListScreen","t","classes","routes","dispatch","history","state","formRef","createDialog","queryParams","setQueryParams","loader","setLoader","stateOptions","setStateOptions","cpf","setCpf","mode","params","modeView","isEdit","data","_buyerFromApi","loading","id","getOne","revalidateOnFocus","buyerFromApi","undefined","buyerAddress","uf","parentCompanyAddress","linesFamilies","buyerLinesFamilies","groupBy","map","value","key","lineCode","Number","lineDescription","family","regionalManager","approverCode","regionalManagerCode","approverDescription","regionalManagerDescription","responsible","code","responsibleCode","name","responsibleDescription","existenceBuyerFromApi","existenceBuyerFromApiLoading","haveBuyer","isDisabled","title","howMany","clientTotvsDescription","gender","this","getStateOptions","states","onSuccessCallBack","push","path","handleSubmit","values","item","buyer","clientTotvsCode","parentCompanyCode","parentCompanyName","number","telephone","editBuyer","saveBuyer","handleReset","clientTotvs","current","getFieldValue","reset","setData","debounceQuery","filter","handleCancel","Component","props","onConfirm","text","newCPF","length","replace","container","header","buttons","resetBtn","btnSave","submit"],"mappings":"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","sourcesContent":["import React, {\n  useCallback,\n  useMemo,\n  useEffect,\n  useRef,\n  useState\n} from 'react'\nimport { useDispatch } from 'react-redux'\nimport {\n  useHistory,\n  useLocation\n} from 'react-router-dom'\n\nimport trimMask from '@meta-awesome/functions/src/trimMask'\nimport { Scope } from '@unform/core'\n\nimport { chain } from 'lodash'\nimport debounce from 'lodash/debounce'\nimport forEach from 'lodash/forEach'\nimport isEmpty from 'lodash/isEmpty'\nimport upperCase from 'lodash/upperCase'\n\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\n\nimport { useDialog } from '@britania-crm/dialog'\nimport { useFormEffect } from '@britania-crm/forms'\nimport buyerSchema, { INITIAL_VALUES } from '@britania-crm/forms/schemas/buyer/buyer.schema'\nimport I18n, { useT } from '@britania-crm/i18n'\nimport { buyers as buyersCrmRoutes } from '@britania-crm/services/apis/crmApi/resources/routes'\nimport { searchStates } from '@britania-crm/services/apis/ibgeApi'\nimport useCrmApi from '@britania-crm/services/hooks/useCrmApi'\nimport { BuyerActions } from '@britania-crm/stores/buyer'\nimport Button from '@britania-crm/web-components/Button'\nimport Form from '@britania-crm/web-components/Form'\nimport { CircularLoader } from '@britania-crm/web-components/Loader'\nimport ConfirmModal from '@britania-crm/web-components/Modal/ConfirmModal'\nimport { useRoutes } from '@britania-crm/web-src/routes/authenticated.routes'\n\nimport Address from './Address'\nimport MainData from './MainData'\nimport useStyles from './styles'\n\nconst BuyerListScreen = () => {\n  const t = useT()\n  const classes = useStyles()\n  const { routes } = useRoutes()\n  const dispatch = useCallback(useDispatch(), [])\n  const history = useHistory()\n\n  const { state } = useLocation()\n  const formRef = useRef(null)\n  const { createDialog } = useDialog()\n\n  const [queryParams, setQueryParams] = useState({})\n  const [loader, setLoader] = useState(false)\n  const [stateOptions, setStateOptions] = useState([])\n  const [cpf, setCpf] = useState('')\n\n  const mode = useMemo(() => state?.params?.mode, [state])\n  const modeView = useMemo(() => mode === 'view', [mode])\n  const isEdit = useMemo(() => mode === 'edit', [mode])\n\n  const {\n    data: _buyerFromApi,\n    loading\n  } = useCrmApi(\n    state?.params?.id ? [`${ buyersCrmRoutes.getOne }/${ state?.params?.id }`, state] : null,\n    {},\n    { revalidateOnFocus: false })\n\n  const buyerFromApi = useMemo(\n    () => !_buyerFromApi ? undefined : ({\n      ..._buyerFromApi,\n      buyerAddress: {\n        ..._buyerFromApi.buyerAddress,\n        uf: _buyerFromApi.buyerAddress.uf ? upperCase(_buyerFromApi.buyerAddress.uf) : ''\n      },\n      parentCompanyAddress: {\n        ..._buyerFromApi.parentCompanyAddress,\n        uf: _buyerFromApi.parentCompanyAddress.uf ? upperCase(_buyerFromApi.parentCompanyAddress.uf) : ''\n      },\n      linesFamilies: chain(_buyerFromApi?.buyerLinesFamilies)\n        .groupBy('lineCode')\n        .map((value, key) => ({\n          lineCode: Number(key), lineDescription: value[0].lineDescription, family: value\n        }))\n        .value(),\n      regionalManager: { approverCode: _buyerFromApi?.regionalManagerCode, approverDescription: _buyerFromApi?.regionalManagerDescription },\n      responsible: { code: _buyerFromApi?.responsibleCode, name: _buyerFromApi?.responsibleDescription }\n    }),\n    [_buyerFromApi]\n  )\n\n  const {\n    data: existenceBuyerFromApi,\n    loading: existenceBuyerFromApiLoading\n  } = useCrmApi(\n    queryParams?.cpf\n      ? [`${ buyersCrmRoutes.haveBuyer }/${ queryParams?.cpf }`]\n      : null,\n    null,\n    { revalidateOnFocus: false }\n  )\n\n  const isDisabled = useMemo(\n    () =>\n      loader ||\n      loading ||\n      existenceBuyerFromApiLoading,\n    [existenceBuyerFromApiLoading, loader, loading]\n  )\n\n  const title = useMemo(() => {\n    switch (mode) {\n      case 'edit':\n        return `${ t('buyer', { howMany: 1 }) }  ${ buyerFromApi?.clientTotvsDescription || '' }`\n\n      case 'view':\n        return `${ t('buyer', { howMany: 1 }) }  ${ buyerFromApi?.clientTotvsDescription || '' }`\n\n      default:\n        return t('new {this}', { gender: 'male', this: t('buyer', { howMany: 1 }) })\n    }\n  }, [buyerFromApi, mode, t])\n\n  const getStateOptions = useCallback(\n    async () => {\n      const states = await searchStates()\n      setStateOptions(states)\n    },\n    []\n  )\n\n  const onSuccessCallBack = useCallback(\n    () => {\n      history.push(routes.buyers.path)\n    }\n    ,\n    [history, routes]\n  )\n\n  const handleSubmit = useCallback(\n    (values) => {\n      const linesFamilies = []\n\n      forEach(values?.linesFamilies,\n        ({\n          family, lineCode, lineDescription\n        }) =>\n          forEach(family, (item) =>\n            linesFamilies.push({\n              lineCode, lineDescription, ...item\n            }))\n      )\n\n      const buyer = {\n        ...values,\n        cpf: trimMask(values.cpf),\n        clientTotvsCode: Number(values.clientTotvsCode.parentCompanyCode),\n        clientTotvsDescription: values.clientTotvsDescription.parentCompanyName,\n        buyerAddress: { ...values?.buyerAddress, number: Number(values?.buyerAddress?.number) },\n        parentCompanyAddress: { ...values?.parentCompanyAddress, number: Number(values?.parentCompanyAddress?.number) },\n        telephone: trimMask(values.telephone),\n        linesFamilies,\n        regionalManagerCode: values?.regionalManager?.approverCode,\n        regionalManagerDescription: values?.regionalManager?.approverDescription,\n        responsibleCode: values?.responsible?.approverCode,\n        responsibleDescription: values?.responsible?.approverDescription\n      }\n\n      if (isEdit) {\n        dispatch(BuyerActions.editBuyer(state?.params?.id, buyer, onSuccessCallBack, () => setLoader(false)))\n      } else {\n        dispatch(BuyerActions.saveBuyer(buyer, onSuccessCallBack, () => setLoader(false)))\n      }\n    },\n    [dispatch, isEdit, onSuccessCallBack, state]\n  )\n\n  const handleReset = useCallback(\n    () => {\n      if (isEdit) {\n        const clientTotvs = formRef.current.getFieldValue('clientTotvsDescription')\n        formRef.current.reset()\n        formRef.current.setData({\n          clientTotvsDescription: clientTotvs,\n          clientTotvsCode: clientTotvs\n        })\n      } else {\n        formRef.current.reset()\n      }\n    }\n    ,\n    [isEdit]\n  )\n\n  const debounceQuery = useCallback(\n    debounce((filter) => {\n      setQueryParams(filter)\n    }, 1000),\n    []\n  )\n\n  const handleCancel = useCallback(\n    () => createDialog({\n      id: 'cancel-modal',\n      Component: ConfirmModal,\n      props: {\n        onConfirm () {\n          history.push(routes.buyers.path)\n        },\n        text: mode === 'create' ? t('Do you want to cancel the registration?') : t('Do you want to cancel editing?')\n      }\n    }), [createDialog, history, mode, routes.buyers.path, t]\n  )\n\n  useEffect(\n    () => {\n      if (!isEdit && !modeView) {\n        const newCPF = trimMask(cpf)\n        if (newCPF.length >= 11) { debounceQuery({ cpf: newCPF }) }\n      }\n    },\n    [cpf, debounceQuery, existenceBuyerFromApi, modeView, isEdit]\n  )\n\n  useEffect(\n    () => {\n      if (!state?.params?.id && mode !== 'create') history.replace(routes.buyers.path)\n    },\n    [history, mode, routes, state]\n  )\n\n  useEffect(() => {\n    getStateOptions()\n  }, [getStateOptions])\n\n  useFormEffect(() => {\n    if (!isEmpty(buyerFromApi)) {\n      formRef.current.setData({\n        ...buyerFromApi,\n        clientTotvsDescription: {\n          parentCompanyName: buyerFromApi.clientTotvsDescription,\n          parentCompanyCode: buyerFromApi.clientTotvsCode\n        },\n        clientTotvsCode: {\n          parentCompanyCode: buyerFromApi.clientTotvsCode,\n          parentCompanyName: buyerFromApi.clientTotvsDescription\n        },\n        regionalManager: {\n          approverCode: buyerFromApi.regionalManagerCode,\n          approverDescription: buyerFromApi.regionalManagerDescription\n        },\n        responsible: {\n          approverCode: buyerFromApi.responsibleCode,\n          approverDescription: buyerFromApi.responsibleDescription\n        }\n      })\n    }\n  }, [buyerFromApi, modeView])\n\n  return (\n    <Form\n      ref={ formRef }\n      onSubmit={ handleSubmit }\n      schemaConstructor={ buyerSchema }\n      defaultValues={ INITIAL_VALUES }\n      filterEmptyValues\n    >\n      {\n        (loader || loading || existenceBuyerFromApiLoading) && <CircularLoader/>\n      }\n      <Grid container spacing={ 2 } className={ classes.container } >\n        <Grid item className={ classes.header } sm={ 12 }>\n          <Typography className={ classes.title } variant=\"h4\" gutterBottom >\n            {title}\n          </Typography>\n        </Grid>\n        <Grid item xs={ 12 }>\n          <MainData\n            formRef={ formRef }\n            isDisabled={ modeView || loader || loading || existenceBuyerFromApiLoading }\n            isEdit={ isEdit }\n            setCpf={ setCpf }\n            cpfAlreadyExists={ existenceBuyerFromApi }\n            search={ debounceQuery }\n            isView={ modeView }\n          />\n          <Scope path=\"buyerAddress\">\n            <Address\n              formRef={ formRef }\n              title={ `${ t('address') }  ${ t('matrix', { howMany: 1 }) }` }\n              isDisabled={ modeView || isDisabled }\n              stateOptions={ stateOptions }\n              objFather=\"buyerAddress\"\n            />\n          </Scope>\n          <Scope path=\"parentCompanyAddress\">\n            <Address\n              formRef={ formRef }\n              title={ t('address of {this}', { gender: '', this: t('buyer', { howMany: 1 }) }) }\n              isDisabled={ modeView || isDisabled }\n              stateOptions={ stateOptions }\n              objFather=\"parentCompanyAddress\"\n            />\n          </Scope>\n        </Grid>\n        <Grid item xs={ 12 } className={ classes.buttons }>\n          <Grid>\n            {!modeView && (\n              <I18n\n                as={ Button }\n                className={ classes.resetBtn }\n                disabled={ loader || loading || existenceBuyerFromApiLoading }\n                variant=\"text\"\n                color=\"secondary\"\n                onClick={ handleReset }\n              >\n                clean\n              </I18n>\n            )}\n          </Grid>\n          <Grid>\n            {!modeView && (\n              <I18n\n                as={ Button }\n                variant=\"outlined\"\n                color=\"secondary\"\n                disabled= { loader || loading || existenceBuyerFromApiLoading }\n                onClick={ handleCancel }\n              >\n              cancel\n              </I18n>)}\n            <Button\n              color=\"secondary\"\n              variant=\"contained\"\n              className={ classes.btnSave }\n              isLoading={\n                loader ||\n                loading ||\n                existenceBuyerFromApiLoading\n              }\n              onClick={ () => !modeView ? formRef.current.submit() : history.push(routes.buyers.path) }\n            >\n              { !modeView ? t('finish registration') : t('turn back') }\n            </Button>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Form>\n  )\n}\n\nexport default BuyerListScreen\n"]},"metadata":{},"sourceType":"module"}