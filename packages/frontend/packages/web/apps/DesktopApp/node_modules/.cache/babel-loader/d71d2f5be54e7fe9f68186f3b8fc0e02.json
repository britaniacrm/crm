{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/customers/modals/NewCompanyHoldingParticipationModal/NewCompanyHoldingParticipationModal.js\";\nimport React, { useCallback, useRef, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport isEmpty from 'lodash/isEmpty';\nimport Grid from '@material-ui/core/Grid';\nimport { useFormEffect } from '@britania-crm/forms';\nimport companyHoldingParticipationSchema, { INITIAL_VALUES } from '@britania-crm/forms/schemas/customer/customerPreRegistration.companyHoldingParticipation.schema';\nimport I18n, { useT } from '@britania-crm/i18n';\nimport { searchStates } from '@britania-crm/services/apis/ibgeApi';\nimport Button from '@britania-crm/web-components/Button';\nimport Form from '@britania-crm/web-components/Form';\nimport InputPercentage from '@britania-crm/web-components/InputPercentage';\nimport InputSelect from '@britania-crm/web-components/InputSelect';\nimport InputText from '@britania-crm/web-components/InputText';\nimport Modal from '@britania-crm/web-components/Modal';\n\nconst NewCompanyHoldingParticipationModal = props => {\n  const {\n    id,\n    open,\n    handleClose,\n    onSubmit,\n    participation\n  } = props;\n  const t = useT();\n  const formRef = useRef(null);\n  const [stateOptions, setStateOptions] = useState([]);\n  const getStateOptions = useCallback(async () => {\n    const states = await searchStates();\n    setStateOptions(states);\n  }, []);\n  const handleSubmit = useCallback(values => {\n    onSubmit({ ...values,\n      participationPercent: Number(values.participationPercent)\n    });\n    handleClose();\n  }, [handleClose, onSubmit]);\n  useFormEffect(() => {\n    if (!isEmpty(participation)) {\n      formRef.current.setData(participation);\n    }\n  }, [participation]);\n  useEffect(() => {\n    getStateOptions();\n  }, [getStateOptions]);\n  return /*#__PURE__*/React.createElement(Modal, {\n    id: id,\n    open: open,\n    maxWidth: \"md\",\n    title: t('companies holding participation'),\n    variant: \"space\",\n    fullWidth: true,\n    FooterComponent: () => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(I18n, {\n      as: Button,\n      onClick: handleClose,\n      color: \"secondary\",\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, \"cancel\"), /*#__PURE__*/React.createElement(I18n, {\n      as: Button,\n      onClick: () => formRef.current.submit(),\n      color: \"secondary\",\n      style: {\n        marginLeft: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }, \"save\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    ref: formRef,\n    schemaConstructor: companyHoldingParticipationSchema,\n    defaultValues: INITIAL_VALUES,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputText, {\n    name: \"name\",\n    label: t('company name'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputSelect, {\n    name: \"state\",\n    label: \"UF\",\n    valueKey: \"sigla\",\n    idKey: \"sigla\",\n    options: stateOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputText, {\n    name: \"city\",\n    label: t('city', {\n      howMany: 1\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputText, {\n    name: \"branch\",\n    label: t('activity branch', {\n      howMany: 1\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputPercentage, {\n    name: \"participationPercent\",\n    label: t('participation', {\n      howMany: 1\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  })))));\n};\n\nNewCompanyHoldingParticipationModal.propTypes = {\n  id: PropTypes.string.isRequired,\n  open: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  participation: PropTypes.object\n};\nNewCompanyHoldingParticipationModal.defaultProps = {\n  participation: {}\n};\nexport default NewCompanyHoldingParticipationModal;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/customers/modals/NewCompanyHoldingParticipationModal/NewCompanyHoldingParticipationModal.js"],"names":["React","useCallback","useRef","useState","useEffect","PropTypes","isEmpty","Grid","useFormEffect","companyHoldingParticipationSchema","INITIAL_VALUES","I18n","useT","searchStates","Button","Form","InputPercentage","InputSelect","InputText","Modal","NewCompanyHoldingParticipationModal","props","id","open","handleClose","onSubmit","participation","t","formRef","stateOptions","setStateOptions","getStateOptions","states","handleSubmit","values","participationPercent","Number","current","setData","submit","marginLeft","howMany","propTypes","string","isRequired","bool","func","object","defaultProps"],"mappings":"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","sourcesContent":["import React, {\n  useCallback,\n  useRef,\n  useState,\n  useEffect\n} from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport isEmpty from 'lodash/isEmpty'\n\nimport Grid from '@material-ui/core/Grid'\n\nimport { useFormEffect } from '@britania-crm/forms'\nimport companyHoldingParticipationSchema, { INITIAL_VALUES } from '@britania-crm/forms/schemas/customer/customerPreRegistration.companyHoldingParticipation.schema'\nimport I18n, { useT } from '@britania-crm/i18n'\nimport { searchStates } from '@britania-crm/services/apis/ibgeApi'\nimport Button from '@britania-crm/web-components/Button'\nimport Form from '@britania-crm/web-components/Form'\nimport InputPercentage from '@britania-crm/web-components/InputPercentage'\nimport InputSelect from '@britania-crm/web-components/InputSelect'\nimport InputText from '@britania-crm/web-components/InputText'\nimport Modal from '@britania-crm/web-components/Modal'\n\nconst NewCompanyHoldingParticipationModal = (props) => {\n  const {\n    id,\n    open,\n    handleClose,\n    onSubmit,\n    participation\n  } = props\n\n  const t = useT()\n  const formRef = useRef(null)\n\n  const [stateOptions, setStateOptions] = useState([])\n\n  const getStateOptions = useCallback(\n    async () => {\n      const states = await searchStates()\n      setStateOptions(states)\n    },\n    []\n  )\n\n  const handleSubmit = useCallback(\n    (values) => {\n      onSubmit({\n        ...values,\n        participationPercent: Number(values.participationPercent)\n      })\n      handleClose()\n    },\n    [handleClose, onSubmit]\n  )\n\n  useFormEffect(\n    () => {\n      if (!isEmpty(participation)) {\n        formRef.current.setData(participation)\n      }\n    },\n    [participation]\n  )\n\n  useEffect(\n    () => {\n      getStateOptions()\n    },\n    [getStateOptions]\n  )\n\n  return (\n    <Modal\n      id={ id }\n      open={ open }\n      maxWidth=\"md\"\n      title={ t('companies holding participation') }\n      variant=\"space\"\n      fullWidth\n      FooterComponent={ () => (\n        <>\n          <I18n as={ Button }\n            onClick={ handleClose }\n            color=\"secondary\"\n            variant=\"outlined\"\n          >\n            cancel\n          </I18n>\n          <I18n as={ Button }\n            onClick={ () => formRef.current.submit() }\n            color=\"secondary\"\n            style={ { marginLeft: 10 } }\n          >\n            save\n          </I18n>\n        </>\n      ) }\n    >\n      <Form\n        ref={ formRef }\n        schemaConstructor={ companyHoldingParticipationSchema }\n        defaultValues={ INITIAL_VALUES }\n        onSubmit={ handleSubmit }\n      >\n        <Grid container spacing={ 1 }>\n          <Grid item xs={ 12 } md={ 8 }>\n            <InputText\n              name=\"name\"\n              label={ t('company name') }\n            />\n          </Grid>\n\n          <Grid item xs={ 12 } md={ 1 }>\n            <InputSelect\n              name=\"state\"\n              label=\"UF\"\n              valueKey=\"sigla\"\n              idKey=\"sigla\"\n              options={ stateOptions }\n            />\n          </Grid>\n\n          <Grid item xs={ 12 } md={ 3 }>\n            <InputText\n              name=\"city\"\n              label={ t('city', { howMany: 1 }) }\n            />\n          </Grid>\n\n          <Grid item xs={ 12 } md={ 6 }>\n            <InputText\n              name=\"branch\"\n              label={ t('activity branch', { howMany: 1 }) }\n            />\n          </Grid>\n\n          <Grid item xs={ 12 } md={ 3 }>\n            <InputPercentage\n              name=\"participationPercent\"\n              label={ t('participation', { howMany: 1 }) }\n            />\n          </Grid>\n        </Grid>\n      </Form>\n    </Modal>\n  )\n}\n\nNewCompanyHoldingParticipationModal.propTypes = {\n  id: PropTypes.string.isRequired,\n  open: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  participation: PropTypes.object\n}\n\nNewCompanyHoldingParticipationModal.defaultProps = { participation: {} }\n\nexport default NewCompanyHoldingParticipationModal\n"]},"metadata":{},"sourceType":"module"}