{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/components/Badges/BadgesForm.js\";\nimport React, { forwardRef, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { FieldProvider, useField } from '@britania-crm/forms';\nimport BadgesStyled from './BadgesStyled';\n\nconst BadgesForm = props => {\n  const {\n    setValue,\n    ...rest\n  } = props;\n  const {\n    fieldRef\n  } = useField();\n  const handleChange = useCallback(val => setValue(val), [setValue]);\n  return /*#__PURE__*/React.createElement(BadgesStyled, Object.assign({\n    ref: fieldRef\n  }, rest, {\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }));\n};\n\nBadgesForm.propTypes = {\n  setValue: PropTypes.func.isRequired\n};\nconst Field = forwardRef(({\n  path,\n  ...props\n}, ref) => /*#__PURE__*/React.createElement(FieldProvider, Object.assign({\n  ref: ref\n}, props, {\n  registerFieldOptions: {\n    path\n  },\n  FieldComponent: BadgesForm,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 3\n  }\n})));\nField.propTypes = {\n  name: PropTypes.string.isRequired,\n  disabled: PropTypes.bool,\n  onChange: PropTypes.func,\n  onValueChange: PropTypes.func,\n  onBlur: PropTypes.func,\n  path: PropTypes.string,\n  defaultValue: PropTypes.any,\n  helperText: PropTypes.string,\n  validateOnBlur: PropTypes.bool\n};\nField.defaultProps = {\n  disabled: false,\n\n  onChange() {},\n\n  onValueChange() {},\n\n  onBlur() {},\n\n  path: 'value',\n  defaultValue: [],\n  helperText: null,\n  validateOnBlur: true\n};\nexport default Field;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/components/Badges/BadgesForm.js"],"names":["React","forwardRef","useCallback","PropTypes","FieldProvider","useField","BadgesStyled","BadgesForm","props","setValue","rest","fieldRef","handleChange","val","propTypes","func","isRequired","Field","path","ref","name","string","disabled","bool","onChange","onValueChange","onBlur","defaultValue","any","helperText","validateOnBlur","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IACEC,UADF,EAEEC,WAFF,QAGO,OAHP;AAKA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SACEC,aADF,EAEEC,QAFF,QAGO,qBAHP;AAKA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5B,QAAM;AACJC,IAAAA,QADI;AAEJ,OAAGC;AAFC,MAGFF,KAHJ;AAKA,QAAM;AAAEG,IAAAA;AAAF,MAAeN,QAAQ,EAA7B;AAEA,QAAMO,YAAY,GAAGV,WAAW,CAC7BW,GAAD,IAASJ,QAAQ,CAACI,GAAD,CADa,EAE9B,CAACJ,QAAD,CAF8B,CAAhC;AAKA,sBACE,oBAAC,YAAD;AACE,IAAA,GAAG,EAAGE;AADR,KAEOD,IAFP;AAGE,IAAA,QAAQ,EAAGE,YAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAOD,CApBD;;AAsBAL,UAAU,CAACO,SAAX,GAAuB;AAAEL,EAAAA,QAAQ,EAAEN,SAAS,CAACY,IAAV,CAAeC;AAA3B,CAAvB;AAEA,MAAMC,KAAK,GAAGhB,UAAU,CAAC,CAAC;AAAEiB,EAAAA,IAAF;AAAQ,KAAGV;AAAX,CAAD,EAAqBW,GAArB,kBACvB,oBAAC,aAAD;AACE,EAAA,GAAG,EAAGA;AADR,GAEOX,KAFP;AAGE,EAAA,oBAAoB,EAAG;AAAEU,IAAAA;AAAF,GAHzB;AAIE,EAAA,cAAc,EAAGX,UAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADsB,CAAxB;AASAU,KAAK,CAACH,SAAN,GAAkB;AAChBM,EAAAA,IAAI,EAAEjB,SAAS,CAACkB,MAAV,CAAiBL,UADP;AAEhBM,EAAAA,QAAQ,EAAEnB,SAAS,CAACoB,IAFJ;AAGhBC,EAAAA,QAAQ,EAAErB,SAAS,CAACY,IAHJ;AAIhBU,EAAAA,aAAa,EAAEtB,SAAS,CAACY,IAJT;AAKhBW,EAAAA,MAAM,EAAEvB,SAAS,CAACY,IALF;AAMhBG,EAAAA,IAAI,EAAEf,SAAS,CAACkB,MANA;AAOhBM,EAAAA,YAAY,EAAExB,SAAS,CAACyB,GAPR;AAQhBC,EAAAA,UAAU,EAAE1B,SAAS,CAACkB,MARN;AAShBS,EAAAA,cAAc,EAAE3B,SAAS,CAACoB;AATV,CAAlB;AAYAN,KAAK,CAACc,YAAN,GAAqB;AACnBT,EAAAA,QAAQ,EAAE,KADS;;AAEnBE,EAAAA,QAAQ,GAAI,CAAE,CAFK;;AAGnBC,EAAAA,aAAa,GAAI,CAAE,CAHA;;AAInBC,EAAAA,MAAM,GAAI,CAAE,CAJO;;AAKnBR,EAAAA,IAAI,EAAE,OALa;AAMnBS,EAAAA,YAAY,EAAE,EANK;AAOnBE,EAAAA,UAAU,EAAE,IAPO;AAQnBC,EAAAA,cAAc,EAAE;AARG,CAArB;AAWA,eAAeb,KAAf","sourcesContent":["import React, {\n  forwardRef,\n  useCallback\n} from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport {\n  FieldProvider,\n  useField\n} from '@britania-crm/forms'\n\nimport BadgesStyled from './BadgesStyled'\n\nconst BadgesForm = (props) => {\n  const {\n    setValue,\n    ...rest\n  } = props\n\n  const { fieldRef } = useField()\n\n  const handleChange = useCallback(\n    (val) => setValue(val),\n    [setValue]\n  )\n\n  return (\n    <BadgesStyled\n      ref={ fieldRef }\n      { ...rest }\n      onChange={ handleChange }\n    />\n  )\n}\n\nBadgesForm.propTypes = { setValue: PropTypes.func.isRequired }\n\nconst Field = forwardRef(({ path, ...props }, ref) => (\n  <FieldProvider\n    ref={ ref }\n    { ...props }\n    registerFieldOptions={ { path } }\n    FieldComponent={ BadgesForm }\n  />\n))\n\nField.propTypes = {\n  name: PropTypes.string.isRequired,\n  disabled: PropTypes.bool,\n  onChange: PropTypes.func,\n  onValueChange: PropTypes.func,\n  onBlur: PropTypes.func,\n  path: PropTypes.string,\n  defaultValue: PropTypes.any,\n  helperText: PropTypes.string,\n  validateOnBlur: PropTypes.bool\n}\n\nField.defaultProps = {\n  disabled: false,\n  onChange () {},\n  onValueChange () {},\n  onBlur () {},\n  path: 'value',\n  defaultValue: [],\n  helperText: null,\n  validateOnBlur: true\n}\n\nexport default Field\n"]},"metadata":{},"sourceType":"module"}