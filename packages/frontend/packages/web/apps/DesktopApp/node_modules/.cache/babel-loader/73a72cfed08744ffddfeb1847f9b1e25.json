{"ast":null,"code":"// import jwtDecode from 'jwt-decode'\nimport { put, call, takeLatest } from 'redux-saga/effects';\nimport { MSG004 } from '@britania-crm/constants/feedbackMessages.constants';\nimport { updateProfile, createProfile, getAllProfilesFromApi, deleteProfile, patchProfileStatusFromApi } from '@britania-crm/services/apis/crmApi/resources/profile.service';\nimport { AppActions } from '@britania-crm/stores/app/app.actions';\nimport { ProfilesActions, ProfilesTypes } from './profiles.actions';\n\nfunction* doGetAllProfiles() {\n  try {\n    const response = yield call(getAllProfilesFromApi);\n    yield put(ProfilesActions.setAllProfilesSuccess(response));\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nfunction* doCreateProfiles({\n  params,\n  onSuccess\n}) {\n  try {\n    const response = yield call(createProfile, params);\n\n    if (response.status === 201) {\n      onSuccess();\n      yield put(AppActions.addAlert({\n        type: 'success',\n        message: MSG004\n      }));\n    }\n  } catch (error) {\n    console.warn(error);\n    yield put(AppActions.addAlert({\n      type: 'error',\n      message: 'Error ao tentar salvar o perfil'\n    }));\n  }\n}\n\nfunction* doEditProfiles({\n  id,\n  params,\n  onSuccess\n}) {\n  try {\n    const response = yield call(updateProfile, id, params);\n\n    if (response.status === 200) {\n      onSuccess();\n      yield put(AppActions.addAlert({\n        type: 'success',\n        message: MSG004\n      }));\n    }\n  } catch (error) {\n    console.warn(error);\n  }\n}\n\nfunction* doDeleteProfile({\n  id,\n  onSuccess\n}) {\n  try {\n    const response = yield call(deleteProfile, id);\n\n    if (response.status === 200) {\n      yield put(AppActions.addAlert({\n        type: 'success',\n        message: MSG004\n      }));\n    }\n  } catch (error) {\n    console.warn(error);\n  } finally {\n    onSuccess();\n  }\n}\n\nfunction* doPatchProfileStatus({\n  id,\n  onSuccess\n}) {\n  try {\n    const response = yield call(patchProfileStatusFromApi, id);\n\n    if (response.status === 200) {\n      yield put(AppActions.addAlert({\n        type: 'success',\n        message: MSG004\n      }));\n    }\n  } catch (error) {\n    console.warn(error);\n  } finally {\n    onSuccess();\n  }\n}\n\nexport default [takeLatest(ProfilesTypes.GET_ALL_PROFILES, doGetAllProfiles), takeLatest(ProfilesTypes.CREATE_PROFILE, doCreateProfiles), takeLatest(ProfilesTypes.EDIT_PROFILE, doEditProfiles), takeLatest(ProfilesTypes.DELETE_PROFILE, doDeleteProfile), takeLatest(ProfilesTypes.PATCH_PROFILE_STATUS, doPatchProfileStatus)];","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/core/stores/profiles/profiles.sagas.js"],"names":["put","call","takeLatest","MSG004","updateProfile","createProfile","getAllProfilesFromApi","deleteProfile","patchProfileStatusFromApi","AppActions","ProfilesActions","ProfilesTypes","doGetAllProfiles","response","setAllProfilesSuccess","error","console","doCreateProfiles","params","onSuccess","status","addAlert","type","message","warn","doEditProfiles","id","doDeleteProfile","doPatchProfileStatus","GET_ALL_PROFILES","CREATE_PROFILE","EDIT_PROFILE","DELETE_PROFILE","PATCH_PROFILE_STATUS"],"mappings":"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","sourcesContent":["// import jwtDecode from 'jwt-decode'\nimport {\n  put,\n  call,\n  takeLatest\n} from 'redux-saga/effects'\n\nimport { MSG004 } from '@britania-crm/constants/feedbackMessages.constants'\nimport {\n  updateProfile,\n  createProfile,\n  getAllProfilesFromApi,\n  deleteProfile,\n  patchProfileStatusFromApi\n} from '@britania-crm/services/apis/crmApi/resources/profile.service'\nimport { AppActions } from '@britania-crm/stores/app/app.actions'\n\nimport {\n  ProfilesActions,\n  ProfilesTypes\n} from './profiles.actions'\n\nfunction* doGetAllProfiles () {\n  try {\n    const response = yield call(getAllProfilesFromApi)\n    yield put(ProfilesActions.setAllProfilesSuccess(response))\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nfunction* doCreateProfiles ({ params, onSuccess }) {\n  try {\n    const response = yield call(createProfile, params)\n    if (response.status === 201) {\n      onSuccess()\n      yield put(AppActions.addAlert({ type: 'success', message: MSG004 }))\n    }\n  } catch (error) {\n    console.warn(error)\n    yield put(AppActions.addAlert({ type: 'error', message: 'Error ao tentar salvar o perfil' }))\n  }\n}\n\nfunction* doEditProfiles ({\n  id, params, onSuccess\n}) {\n  try {\n    const response = yield call(updateProfile, id, params)\n    if (response.status === 200) {\n      onSuccess()\n      yield put(AppActions.addAlert({ type: 'success', message: MSG004 }))\n    }\n  } catch (error) {\n    console.warn(error)\n  }\n}\n\nfunction* doDeleteProfile ({ id, onSuccess }) {\n  try {\n    const response = yield call(deleteProfile, id)\n    if (response.status === 200) {\n      yield put(AppActions.addAlert({ type: 'success', message: MSG004 }))\n    }\n  } catch (error) {\n    console.warn(error)\n  } finally {\n    onSuccess()\n  }\n}\n\nfunction* doPatchProfileStatus ({ id, onSuccess }) {\n  try {\n    const response = yield call(patchProfileStatusFromApi, id)\n    if (response.status === 200) {\n      yield put(AppActions.addAlert({ type: 'success', message: MSG004 }))\n    }\n  } catch (error) {\n    console.warn(error)\n  } finally {\n    onSuccess()\n  }\n}\n\nexport default [\n  takeLatest(ProfilesTypes.GET_ALL_PROFILES, doGetAllProfiles),\n  takeLatest(ProfilesTypes.CREATE_PROFILE, doCreateProfiles),\n  takeLatest(ProfilesTypes.EDIT_PROFILE, doEditProfiles),\n  takeLatest(ProfilesTypes.DELETE_PROFILE, doDeleteProfile),\n  takeLatest(ProfilesTypes.PATCH_PROFILE_STATUS, doPatchProfileStatus)\n]\n"]},"metadata":{},"sourceType":"module"}