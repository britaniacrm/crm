{"ast":null,"code":"// import jwtDecode from 'jwt-decode'\nimport { put, call, takeLatest } from 'redux-saga/effects';\nimport doDownloadFile from 'js-file-download';\nimport { MSG033 } from '@britania-crm/constants/feedbackMessages.constants';\nimport { deleteFile, uploadSingleFile, downloadFile } from '@britania-crm/services/apis/crmApi/resources/file.service';\nimport { AppActions } from '../app/app.actions';\nimport { FileTypes } from './file.actions';\n\nfunction* doDeleteFile({\n  id,\n  onSuccess\n}) {\n  try {\n    const {\n      status\n    } = yield call(deleteFile, id);\n\n    if (status === 200) {\n      onSuccess();\n    }\n  } catch (error) {\n    yield put(AppActions.addAlert({\n      type: 'error',\n      message: 'Falha ao excluir arquivo.'\n    }));\n  }\n}\n\nfunction* doUploadImage({\n  data,\n  onSuccess\n}) {\n  try {\n    if (!(data === null || data === void 0 ? void 0 : data.id)) {\n      const formData = new FormData();\n      formData.append('file', data);\n      const {\n        id\n      } = yield call(uploadSingleFile, formData);\n      onSuccess(id);\n    } else {\n      onSuccess(data.id);\n    }\n  } catch (error) {\n    yield put(AppActions.addAlert({\n      type: 'error',\n      message: MSG033\n    }));\n  }\n}\n\nfunction* doDownload({\n  url,\n  name,\n  onSuccess = () => {}\n}) {\n  try {\n    const response = yield call(downloadFile, url);\n    yield call(doDownloadFile, response, name);\n  } catch (error) {\n    yield put(AppActions.addAlert({\n      type: 'error',\n      message: 'Falha ao baixar o arquivo.'\n    }));\n  } finally {\n    yield call(onSuccess, false);\n  }\n}\n\nexport default [takeLatest(FileTypes.DELETE_FILE, doDeleteFile), takeLatest(FileTypes.UPLOAD_IMAGE, doUploadImage), takeLatest(FileTypes.DOWNLOAD, doDownload)];","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/core/stores/file/file.sagas.js"],"names":["put","call","takeLatest","doDownloadFile","MSG033","deleteFile","uploadSingleFile","downloadFile","AppActions","FileTypes","doDeleteFile","id","onSuccess","status","error","addAlert","type","message","doUploadImage","data","formData","FormData","append","doDownload","url","name","response","DELETE_FILE","UPLOAD_IMAGE","DOWNLOAD"],"mappings":"AAAA;AACA,SACEA,GADF,EAEEC,IAFF,EAGEC,UAHF,QAIO,oBAJP;AAMA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,SAASC,MAAT,QAAuB,oDAAvB;AACA,SACEC,UADF,EAEEC,gBAFF,EAGEC,YAHF,QAIO,2DAJP;AAMA,SAASC,UAAT,QAA2B,oBAA3B;AACA,SAASC,SAAT,QAA0B,gBAA1B;;AAEA,UAAUC,YAAV,CAAwB;AAAEC,EAAAA,EAAF;AAAMC,EAAAA;AAAN,CAAxB,EAA2C;AACzC,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAa,MAAMZ,IAAI,CAACI,UAAD,EAAaM,EAAb,CAA7B;;AAEA,QAAIE,MAAM,KAAK,GAAf,EAAoB;AAClBD,MAAAA,SAAS;AACV;AACF,GAND,CAME,OAAOE,KAAP,EAAc;AACd,UAAMd,GAAG,CAACQ,UAAU,CAACO,QAAX,CAAoB;AAAEC,MAAAA,IAAI,EAAE,OAAR;AAAiBC,MAAAA,OAAO,EAAE;AAA1B,KAApB,CAAD,CAAT;AACD;AACF;;AAED,UAAUC,aAAV,CAAyB;AAAEC,EAAAA,IAAF;AAAQP,EAAAA;AAAR,CAAzB,EAA8C;AAC5C,MAAI;AACF,QAAI,EAACO,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAER,EAAP,CAAJ,EAAe;AACb,YAAMS,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,MAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBH,IAAxB;AACA,YAAM;AAAER,QAAAA;AAAF,UAAS,MAAMV,IAAI,CAACK,gBAAD,EAAmBc,QAAnB,CAAzB;AACAR,MAAAA,SAAS,CAACD,EAAD,CAAT;AACD,KALD,MAKO;AACLC,MAAAA,SAAS,CAACO,IAAI,CAACR,EAAN,CAAT;AACD;AACF,GATD,CASE,OAAOG,KAAP,EAAc;AACd,UAAMd,GAAG,CAACQ,UAAU,CAACO,QAAX,CAAoB;AAAEC,MAAAA,IAAI,EAAE,OAAR;AAAiBC,MAAAA,OAAO,EAAEb;AAA1B,KAApB,CAAD,CAAT;AACD;AACF;;AAED,UAAUmB,UAAV,CAAsB;AACpBC,EAAAA,GADoB;AACfC,EAAAA,IADe;AACTb,EAAAA,SAAS,GAAG,MAAM,CAAE;AADX,CAAtB,EAEG;AACD,MAAI;AACF,UAAMc,QAAQ,GAAG,MAAMzB,IAAI,CAACM,YAAD,EAAeiB,GAAf,CAA3B;AACA,UAAMvB,IAAI,CAACE,cAAD,EAAiBuB,QAAjB,EAA2BD,IAA3B,CAAV;AACD,GAHD,CAGE,OAAOX,KAAP,EAAc;AACd,UAAMd,GAAG,CAACQ,UAAU,CAACO,QAAX,CAAoB;AAAEC,MAAAA,IAAI,EAAE,OAAR;AAAiBC,MAAAA,OAAO,EAAE;AAA1B,KAApB,CAAD,CAAT;AACD,GALD,SAKU;AACR,UAAMhB,IAAI,CAACW,SAAD,EAAY,KAAZ,CAAV;AACD;AACF;;AAED,eAAe,CACbV,UAAU,CAACO,SAAS,CAACkB,WAAX,EAAwBjB,YAAxB,CADG,EAEbR,UAAU,CAACO,SAAS,CAACmB,YAAX,EAAyBV,aAAzB,CAFG,EAGbhB,UAAU,CAACO,SAAS,CAACoB,QAAX,EAAqBN,UAArB,CAHG,CAAf","sourcesContent":["// import jwtDecode from 'jwt-decode'\nimport {\n  put,\n  call,\n  takeLatest\n} from 'redux-saga/effects'\n\nimport doDownloadFile from 'js-file-download'\n\nimport { MSG033 } from '@britania-crm/constants/feedbackMessages.constants'\nimport {\n  deleteFile,\n  uploadSingleFile,\n  downloadFile\n} from '@britania-crm/services/apis/crmApi/resources/file.service'\n\nimport { AppActions } from '../app/app.actions'\nimport { FileTypes } from './file.actions'\n\nfunction* doDeleteFile ({ id, onSuccess }) {\n  try {\n    const { status } = yield call(deleteFile, id)\n\n    if (status === 200) {\n      onSuccess()\n    }\n  } catch (error) {\n    yield put(AppActions.addAlert({ type: 'error', message: 'Falha ao excluir arquivo.' }))\n  }\n}\n\nfunction* doUploadImage ({ data, onSuccess }) {\n  try {\n    if (!data?.id) {\n      const formData = new FormData()\n      formData.append('file', data)\n      const { id } = yield call(uploadSingleFile, formData)\n      onSuccess(id)\n    } else {\n      onSuccess(data.id)\n    }\n  } catch (error) {\n    yield put(AppActions.addAlert({ type: 'error', message: MSG033 }))\n  }\n}\n\nfunction* doDownload ({\n  url, name, onSuccess = () => {}\n}) {\n  try {\n    const response = yield call(downloadFile, url)\n    yield call(doDownloadFile, response, name)\n  } catch (error) {\n    yield put(AppActions.addAlert({ type: 'error', message: 'Falha ao baixar o arquivo.' }))\n  } finally {\n    yield call(onSuccess, false)\n  }\n}\n\nexport default [\n  takeLatest(FileTypes.DELETE_FILE, doDeleteFile),\n  takeLatest(FileTypes.UPLOAD_IMAGE, doUploadImage),\n  takeLatest(FileTypes.DOWNLOAD, doDownload)\n]\n"]},"metadata":{},"sourceType":"module"}