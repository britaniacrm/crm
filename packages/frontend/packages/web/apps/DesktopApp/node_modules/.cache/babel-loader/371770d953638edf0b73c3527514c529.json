{"ast":null,"code":"import { createContext, useContext, useCallback } from 'react';\nimport filter from 'lodash/filter';\nimport map from 'lodash/map';\nimport uniqBy from 'lodash/uniqBy';\nexport const CREATE_DIALOG = 'CREATE_DIALOG';\nexport const CLOSE_DIALOG = 'CLOSE_DIALOG';\nexport const REMOVE_DIALOG = 'REMOVE_DIALOG';\nexport const RESET_DIALOGS = 'RESET_DIALOGS';\nexport const DialogContext = createContext();\nexport const useDialog = () => useCallback(useContext(DialogContext), []);\nexport const dialogReducer = (dialogs = [], action = {}) => {\n  switch (action.type) {\n    case CREATE_DIALOG:\n      return uniqBy([...dialogs, { ...action.dialog,\n        open: true\n      }], 'id');\n\n    case CLOSE_DIALOG:\n      return map(dialogs, dialog => {\n        if (dialog.id === action.dialog.id) {\n          return { ...dialog,\n            open: false\n          };\n        }\n\n        return dialog;\n      });\n\n    case REMOVE_DIALOG:\n      return filter(dialogs, dialog => dialog.id !== action.dialog.id);\n\n    case RESET_DIALOGS:\n      return [];\n\n    default:\n      return dialogs;\n  }\n};","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/core/dialog/dialogReducer.js"],"names":["createContext","useContext","useCallback","filter","map","uniqBy","CREATE_DIALOG","CLOSE_DIALOG","REMOVE_DIALOG","RESET_DIALOGS","DialogContext","useDialog","dialogReducer","dialogs","action","type","dialog","open","id"],"mappings":"AAAA,SACEA,aADF,EAEEC,UAFF,EAGEC,WAHF,QAIO,OAJP;AAMA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AAEA,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,YAAY,GAAG,cAArB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AAEP,OAAO,MAAMC,aAAa,GAAGV,aAAa,EAAnC;AACP,OAAO,MAAMW,SAAS,GAAG,MAAMT,WAAW,CAACD,UAAU,CAACS,aAAD,CAAX,EAA4B,EAA5B,CAAnC;AAEP,OAAO,MAAME,aAAa,GAAG,CAACC,OAAO,GAAG,EAAX,EAAeC,MAAM,GAAG,EAAxB,KAA+B;AAC1D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,aAAL;AACE,aAAOD,MAAM,CAAC,CACZ,GAAGQ,OADS,EAEZ,EACE,GAAGC,MAAM,CAACE,MADZ;AAEEC,QAAAA,IAAI,EAAE;AAFR,OAFY,CAAD,EAMV,IANU,CAAb;;AAQF,SAAKV,YAAL;AACE,aAAOH,GAAG,CAACS,OAAD,EAAWG,MAAD,IAAY;AAC9B,YAAIA,MAAM,CAACE,EAAP,KAAcJ,MAAM,CAACE,MAAP,CAAcE,EAAhC,EAAoC;AAClC,iBAAO,EAAE,GAAGF,MAAL;AAAaC,YAAAA,IAAI,EAAE;AAAnB,WAAP;AACD;;AACD,eAAOD,MAAP;AACD,OALS,CAAV;;AAOF,SAAKR,aAAL;AACE,aAAOL,MAAM,CAACU,OAAD,EAAWG,MAAD,IAAYA,MAAM,CAACE,EAAP,KAAcJ,MAAM,CAACE,MAAP,CAAcE,EAAlD,CAAb;;AAEF,SAAKT,aAAL;AACE,aAAO,EAAP;;AAEF;AACE,aAAOI,OAAP;AAzBJ;AA2BD,CA5BM","sourcesContent":["import {\n  createContext,\n  useContext,\n  useCallback\n} from 'react'\n\nimport filter from 'lodash/filter'\nimport map from 'lodash/map'\nimport uniqBy from 'lodash/uniqBy'\n\nexport const CREATE_DIALOG = 'CREATE_DIALOG'\nexport const CLOSE_DIALOG = 'CLOSE_DIALOG'\nexport const REMOVE_DIALOG = 'REMOVE_DIALOG'\nexport const RESET_DIALOGS = 'RESET_DIALOGS'\n\nexport const DialogContext = createContext()\nexport const useDialog = () => useCallback(useContext(DialogContext), [])\n\nexport const dialogReducer = (dialogs = [], action = {}) => {\n  switch (action.type) {\n    case CREATE_DIALOG:\n      return uniqBy([\n        ...dialogs,\n        {\n          ...action.dialog,\n          open: true\n        }\n      ], 'id')\n\n    case CLOSE_DIALOG:\n      return map(dialogs, (dialog) => {\n        if (dialog.id === action.dialog.id) {\n          return { ...dialog, open: false }\n        }\n        return dialog\n      })\n\n    case REMOVE_DIALOG:\n      return filter(dialogs, (dialog) => dialog.id !== action.dialog.id)\n\n    case RESET_DIALOGS:\n      return []\n\n    default:\n      return dialogs\n  }\n}\n"]},"metadata":{},"sourceType":"module"}