{"ast":null,"code":"import { put, takeLatest } from 'redux-saga/effects';\nimport { AUTH_STATUS } from '@britania-crm/constants/auth.constants';\nimport { loginInApplication } from '@britania-crm/services/apis/crmApi/resources/auth.service';\nimport { encode } from '@britania-crm/utils/crypto';\nimport { AuthActions, AuthTypes } from './auth.actions';\n\nfunction* login({\n  login,\n  password,\n  rememberUser\n}) {\n  try {\n    yield put(AuthActions.setAuthStatus(AUTH_STATUS.LOADING));\n    const {\n      accessToken,\n      expirationDate,\n      user\n    } = yield loginInApplication(login, password);\n\n    if (accessToken) {\n      yield put(AuthActions.loginSuccess(accessToken, expirationDate, user));\n    }\n\n    if (rememberUser) {\n      localStorage.setItem('login', login);\n      localStorage.setItem('password', encode(password));\n    } else {\n      localStorage.removeItem('login');\n      localStorage.removeItem('password');\n    }\n  } catch (error) {\n    yield put(AuthActions.authError(error === null || error === void 0 ? void 0 : error.response));\n  } finally {\n    yield put(AuthActions.setAuthStatus(AUTH_STATUS.IDLE));\n  }\n}\n\nexport default [takeLatest(AuthTypes.LOGIN, login)];","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/core/stores/auth/auth.sagas.js"],"names":["put","takeLatest","AUTH_STATUS","loginInApplication","encode","AuthActions","AuthTypes","login","password","rememberUser","setAuthStatus","LOADING","accessToken","expirationDate","user","loginSuccess","localStorage","setItem","removeItem","error","authError","response","IDLE","LOGIN"],"mappings":"AAAA,SACEA,GADF,EAEEC,UAFF,QAGO,oBAHP;AAKA,SAASC,WAAT,QAA4B,wCAA5B;AACA,SAASC,kBAAT,QAAmC,2DAAnC;AACA,SAASC,MAAT,QAAuB,4BAAvB;AAEA,SACEC,WADF,EAEEC,SAFF,QAGO,gBAHP;;AAKA,UAAUC,KAAV,CAAiB;AACfA,EAAAA,KADe;AACRC,EAAAA,QADQ;AACEC,EAAAA;AADF,CAAjB,EAEG;AACD,MAAI;AACF,UAAMT,GAAG,CAACK,WAAW,CAACK,aAAZ,CAA0BR,WAAW,CAACS,OAAtC,CAAD,CAAT;AAEA,UAAM;AACJC,MAAAA,WADI;AAEJC,MAAAA,cAFI;AAGJC,MAAAA;AAHI,QAIF,MAAMX,kBAAkB,CAACI,KAAD,EAAQC,QAAR,CAJ5B;;AAMA,QAAII,WAAJ,EAAiB;AACf,YAAMZ,GAAG,CAACK,WAAW,CAACU,YAAZ,CACRH,WADQ,EAERC,cAFQ,EAGRC,IAHQ,CAAD,CAAT;AAKD;;AAED,QAAIL,YAAJ,EAAkB;AAChBO,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BV,KAA9B;AACAS,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCb,MAAM,CAACI,QAAD,CAAvC;AACD,KAHD,MAGO;AACLQ,MAAAA,YAAY,CAACE,UAAb,CAAwB,OAAxB;AACAF,MAAAA,YAAY,CAACE,UAAb,CAAwB,UAAxB;AACD;AACF,GAxBD,CAwBE,OAAOC,KAAP,EAAc;AACd,UAAMnB,GAAG,CAACK,WAAW,CAACe,SAAZ,CAAsBD,KAAtB,aAAsBA,KAAtB,uBAAsBA,KAAK,CAAEE,QAA7B,CAAD,CAAT;AACD,GA1BD,SA0BU;AACR,UAAMrB,GAAG,CAACK,WAAW,CAACK,aAAZ,CAA0BR,WAAW,CAACoB,IAAtC,CAAD,CAAT;AACD;AACF;;AAED,eAAe,CACbrB,UAAU,CAACK,SAAS,CAACiB,KAAX,EAAkBhB,KAAlB,CADG,CAAf","sourcesContent":["import {\n  put,\n  takeLatest\n} from 'redux-saga/effects'\n\nimport { AUTH_STATUS } from '@britania-crm/constants/auth.constants'\nimport { loginInApplication } from '@britania-crm/services/apis/crmApi/resources/auth.service'\nimport { encode } from '@britania-crm/utils/crypto'\n\nimport {\n  AuthActions,\n  AuthTypes\n} from './auth.actions'\n\nfunction* login ({\n  login, password, rememberUser\n}) {\n  try {\n    yield put(AuthActions.setAuthStatus(AUTH_STATUS.LOADING))\n\n    const {\n      accessToken,\n      expirationDate,\n      user\n    } = yield loginInApplication(login, password)\n\n    if (accessToken) {\n      yield put(AuthActions.loginSuccess(\n        accessToken,\n        expirationDate,\n        user\n      ))\n    }\n\n    if (rememberUser) {\n      localStorage.setItem('login', login)\n      localStorage.setItem('password', encode(password))\n    } else {\n      localStorage.removeItem('login')\n      localStorage.removeItem('password')\n    }\n  } catch (error) {\n    yield put(AuthActions.authError(error?.response))\n  } finally {\n    yield put(AuthActions.setAuthStatus(AUTH_STATUS.IDLE))\n  }\n}\n\nexport default [\n  takeLatest(AuthTypes.LOGIN, login)\n]\n"]},"metadata":{},"sourceType":"module"}