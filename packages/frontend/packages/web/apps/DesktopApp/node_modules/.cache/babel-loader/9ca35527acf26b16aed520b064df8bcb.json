{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/customerRanking/screens/CustomerRanking/CustomerRanking.js\";\nimport React, { useMemo, useCallback, useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { useDialog } from '@britania-crm/dialog';\nimport I18n, { useT } from '@britania-crm/i18n';\nimport { putRankings } from '@britania-crm/services/apis/crmApi/resources/rankink.service';\nimport { ranking } from '@britania-crm/services/apis/crmApi/resources/routes';\nimport useCrmApi from '@britania-crm/services/hooks/useCrmApi';\nimport { AppActions } from '@britania-crm/stores/app/app.actions';\nimport Button from '@britania-crm/web-components/Button';\nimport ConfirmModal from '@britania-crm/web-components/Modal/ConfirmModal';\nimport LastChangeInfo from '../../components/LastChangeInfo/LastChangeInfo';\nimport Table from '../../components/Table/Table.js';\nimport { mapperIndicatorToColums, mountPutPayload } from '../../utils';\nimport getColumsConfigs from '../../utils/columnsConfig.js';\nimport useStyles, { Container, Footer, CancelButton } from './styles';\n\nconst CustomerRanking = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const {\n    data: rankingFromApi,\n    loading,\n    mutate\n  } = useCrmApi(ranking.get);\n  const [data, setData] = useState(null);\n  const [originalData, setOriginalData] = useState(null);\n  const [lastInfos, setLastInfos] = useState(null);\n  const [columnEditable, setColumnEditable] = useState(null);\n  const {\n    createDialog\n  } = useDialog();\n  const t = useT();\n  const classes = useStyles();\n  const columns = useMemo(() => getColumsConfigs(), []);\n  useEffect(() => {\n    if (loading || !rankingFromApi) return;\n    const mappedColumns = mapperIndicatorToColums(rankingFromApi === null || rankingFromApi === void 0 ? void 0 : rankingFromApi.indicators);\n    setData(mappedColumns);\n    setOriginalData(mappedColumns);\n    setLastInfos({\n      user: rankingFromApi.updatedBy,\n      date: rankingFromApi.updatedAt\n    });\n  }, [loading, rankingFromApi]);\n  const updateMyData = useCallback((rowIndex, columnId, value) => {\n    setData(old => old.map((row, index) => {\n      if (index === rowIndex) {\n        return { ...old[rowIndex],\n          [columnId]: value\n        };\n      }\n\n      return row;\n    }));\n  }, []);\n  const handleColumnEditable = useCallback(column => {\n    setColumnEditable(column);\n  }, []);\n  const onPutRanking = useCallback(async payload => {\n    try {\n      await putRankings(payload);\n      mutate();\n      dispatch(AppActions.addAlert({\n        type: 'success',\n        message: t('change saved successfully')\n      }));\n    } catch (error) {\n      dispatch(AppActions.addAlert({\n        type: 'error',\n        message: t('an error occurred while updating ranking')\n      }));\n    }\n  }, [dispatch, mutate, t]);\n  const handleSave = useCallback(() => createDialog({\n    id: 'confirm-changes',\n    Component: ConfirmModal,\n    props: {\n      textButtonOnConfirm: t('yes'),\n      textButtonOnNegative: t('no'),\n      text: t('Do you want to change the Customer Ranking Goals Register?'),\n\n      onConfirm() {\n        const payload = mountPutPayload(data);\n        onPutRanking(payload);\n        setColumnEditable(null);\n      }\n\n    }\n  }), [createDialog, data, onPutRanking, t]);\n  const handleCancel = useCallback(() => {\n    setData(originalData);\n    setColumnEditable(null);\n  }, [originalData]);\n  if (!data) return null;\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: classes.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(I18n, {\n    as: Button,\n    color: \"secondary\",\n    variant: \"outlined\",\n    onClick: history.goBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, \"back\"), /*#__PURE__*/React.createElement(I18n, {\n    as: Typography,\n    variant: \"h4\",\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, \"Customer Ranking\")), /*#__PURE__*/React.createElement(Table, {\n    columns: columns,\n    data: data,\n    updateMyData: updateMyData,\n    handleColumnEditable: handleColumnEditable,\n    columnEditable: columnEditable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(LastChangeInfo, {\n    user: lastInfos === null || lastInfos === void 0 ? void 0 : lastInfos.user,\n    date: lastInfos === null || lastInfos === void 0 ? void 0 : lastInfos.date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CancelButton, {\n    onClick: handleCancel,\n    color: \"secondary\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, t('cancel')), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleSave,\n    variant: \"contained\",\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, t('save')))));\n};\n\nexport default CustomerRanking;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/customerRanking/screens/CustomerRanking/CustomerRanking.js"],"names":["React","useMemo","useCallback","useEffect","useState","useDispatch","useHistory","Box","Grid","Typography","useDialog","I18n","useT","putRankings","ranking","useCrmApi","AppActions","Button","ConfirmModal","LastChangeInfo","Table","mapperIndicatorToColums","mountPutPayload","getColumsConfigs","useStyles","Container","Footer","CancelButton","CustomerRanking","dispatch","history","data","rankingFromApi","loading","mutate","get","setData","originalData","setOriginalData","lastInfos","setLastInfos","columnEditable","setColumnEditable","createDialog","t","classes","columns","mappedColumns","indicators","user","updatedBy","date","updatedAt","updateMyData","rowIndex","columnId","value","old","map","row","index","handleColumnEditable","column","onPutRanking","payload","addAlert","type","message","error","handleSave","id","Component","props","textButtonOnConfirm","textButtonOnNegative","text","onConfirm","handleCancel","header","goBack","title"],"mappings":"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","sourcesContent":["import React, {\n  useMemo,\n  useCallback,\n  useEffect,\n  useState\n} from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\n\nimport Box from '@material-ui/core/Box'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\n\nimport { useDialog } from '@britania-crm/dialog'\nimport I18n, { useT } from '@britania-crm/i18n'\nimport { putRankings } from '@britania-crm/services/apis/crmApi/resources/rankink.service'\nimport { ranking } from '@britania-crm/services/apis/crmApi/resources/routes'\nimport useCrmApi from '@britania-crm/services/hooks/useCrmApi'\nimport { AppActions } from '@britania-crm/stores/app/app.actions'\nimport Button from '@britania-crm/web-components/Button'\nimport ConfirmModal from '@britania-crm/web-components/Modal/ConfirmModal'\n\nimport LastChangeInfo from '../../components/LastChangeInfo/LastChangeInfo'\nimport Table from '../../components/Table/Table.js'\nimport {\n  mapperIndicatorToColums,\n  mountPutPayload\n} from '../../utils'\nimport getColumsConfigs from '../../utils/columnsConfig.js'\nimport useStyles, {\n  Container,\n  Footer,\n  CancelButton\n} from './styles'\n\nconst CustomerRanking = () => {\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const {\n    data: rankingFromApi,\n    loading,\n    mutate\n  } = useCrmApi(ranking.get)\n  const [data, setData] = useState(null)\n  const [originalData, setOriginalData] = useState(null)\n  const [lastInfos, setLastInfos] = useState(null)\n  const [columnEditable, setColumnEditable] = useState(null)\n  const { createDialog } = useDialog()\n  const t = useT()\n  const classes = useStyles()\n\n  const columns = useMemo(() => getColumsConfigs(), [])\n\n  useEffect(() => {\n    if (loading || !rankingFromApi) return\n    const mappedColumns = mapperIndicatorToColums(rankingFromApi?.indicators)\n    setData(mappedColumns)\n    setOriginalData(mappedColumns)\n    setLastInfos({\n      user: rankingFromApi.updatedBy,\n      date: rankingFromApi.updatedAt\n    })\n  }, [loading, rankingFromApi])\n\n  const updateMyData = useCallback((rowIndex, columnId, value) => {\n    setData((old) =>\n      old.map((row, index) => {\n        if (index === rowIndex) {\n          return {\n            ...old[rowIndex],\n            [columnId]: value\n          }\n        }\n        return row\n      })\n    )\n  }, []\n  )\n\n  const handleColumnEditable = useCallback((column) => {\n    setColumnEditable(column)\n  }, [])\n\n  const onPutRanking = useCallback(async (payload) => {\n    try {\n      await putRankings(payload)\n      mutate()\n      dispatch(AppActions.addAlert({ type: 'success', message: t('change saved successfully') }))\n    } catch (error) {\n      dispatch(AppActions.addAlert({ type: 'error', message: t('an error occurred while updating ranking') }))\n    }\n  }, [dispatch, mutate, t])\n\n  const handleSave = useCallback(\n    () => createDialog({\n      id: 'confirm-changes',\n      Component: ConfirmModal,\n      props: {\n        textButtonOnConfirm: t('yes'),\n        textButtonOnNegative: t('no'),\n        text: t('Do you want to change the Customer Ranking Goals Register?'),\n        onConfirm () {\n          const payload = mountPutPayload(data)\n          onPutRanking(payload)\n          setColumnEditable(null)\n        }\n      }\n    }),\n    [createDialog, data, onPutRanking, t]\n  )\n  const handleCancel = useCallback(() => {\n    setData(originalData)\n    setColumnEditable(null)\n  }, [originalData])\n\n  if (!data) return null\n\n  return (\n    <Container>\n      <Grid item xs={ 12 } className={ classes.header }>\n        <I18n as={ Button } color=\"secondary\" variant=\"outlined\" onClick={ history.goBack } >\n          back\n        </I18n>\n        <I18n as={ Typography } variant=\"h4\" className={ classes.title } >\n          Customer Ranking\n        </I18n>\n      </Grid>\n      <Table\n        columns={ columns }\n        data={ data }\n        updateMyData={ updateMyData }\n        handleColumnEditable ={ handleColumnEditable }\n        columnEditable = { columnEditable }\n      />\n      <LastChangeInfo\n        user={ lastInfos?.user }\n        date={ lastInfos?.date }\n      />\n      <Footer>\n        <Box>\n          <CancelButton\n            onClick={ handleCancel }\n            color=\"secondary\"\n            variant=\"outlined\"\n          >{t('cancel')}\n          </CancelButton>\n          <Button\n            onClick={ handleSave }\n            variant=\"contained\"\n            color=\"secondary\"\n          >{t('save')}\n          </Button>\n        </Box>\n      </Footer>\n    </Container>\n  )\n}\n\nexport default CustomerRanking\n"]},"metadata":{},"sourceType":"module"}