{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/vpc/modals/CustomerContract/CustomerContract.js\";\nimport React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport { useT } from '@britania-crm/i18n';\nimport { reports as reportsRoutes } from '@britania-crm/services/apis/crmApi/resources/routes';\nimport useCrmApi from '@britania-crm/services/hooks/useCrmApi';\nimport { formatMoney } from '@britania-crm/utils/formatters';\nimport DataTable from '@britania-crm/web-components/DataTable';\nimport Modal from '@britania-crm/web-components/Modal';\n\nconst CustomerContract = ({\n  id,\n  open,\n  parentCompanyCode,\n  responsibleCode\n}) => {\n  const t = useT();\n  const paramsContractual = useMemo(() => ({\n    parentCompanyCodes: parentCompanyCode.toString(),\n    responsibleCode\n  }), [parentCompanyCode, responsibleCode]);\n  const {\n    data,\n    loading\n  } = useCrmApi(parentCompanyCode || responsibleCode ? [reportsRoutes.getContractualPercentage, paramsContractual] : null, {\n    params: paramsContractual\n  });\n  const columns = useMemo(() => [{\n    title: t('percentage'),\n    field: 'contractualPercentage',\n    sorting: false,\n    render: row => `${row.contractualPercentage}%`\n  }, {\n    title: t('value', {\n      howMany: 1\n    }),\n    field: 'value',\n    sorting: false,\n    render: row => formatMoney(row.value)\n  }, {\n    title: t('name', {\n      howMany: 1\n    }),\n    field: 'budgetContractName',\n    sorting: false\n  }, {\n    title: t('type'),\n    field: 'contractType',\n    sorting: false\n  }, {\n    title: t('line', {\n      howMany: 1\n    }),\n    field: 'lineName',\n    sorting: false\n  }, {\n    title: t('frequency', {\n      howMany: 1\n    }),\n    field: 'periodicity',\n    sorting: false\n  }], [t]);\n  return /*#__PURE__*/React.createElement(Modal, {\n    id: id,\n    open: open,\n    title: t('customer contract information'),\n    maxWidth: \"md\",\n    fullWidth: true,\n    escapeWhenLoading: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DataTable, {\n    data: data,\n    columns: columns,\n    loading: loading,\n    titleProps: {\n      style: {\n        fontSize: 22\n      }\n    },\n    minimalistToolbar: true,\n    options: {\n      search: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  })));\n};\n\nCustomerContract.propTypes = {\n  id: PropTypes.string.isRequired,\n  open: PropTypes.func.isRequired,\n  parentCompanyCode: PropTypes.number,\n  responsibleCode: PropTypes.string\n};\nCustomerContract.defaultProps = {\n  data: [],\n  parentCompanyCode: 0,\n  responsibleCode: ''\n};\nexport default CustomerContract;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/vpc/modals/CustomerContract/CustomerContract.js"],"names":["React","useMemo","PropTypes","Grid","useT","reports","reportsRoutes","useCrmApi","formatMoney","DataTable","Modal","CustomerContract","id","open","parentCompanyCode","responsibleCode","t","paramsContractual","parentCompanyCodes","toString","data","loading","getContractualPercentage","params","columns","title","field","sorting","render","row","contractualPercentage","howMany","value","style","fontSize","search","propTypes","string","isRequired","func","number","defaultProps"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport Grid from '@material-ui/core/Grid'\n\nimport { useT } from '@britania-crm/i18n'\nimport { reports as reportsRoutes } from '@britania-crm/services/apis/crmApi/resources/routes'\nimport useCrmApi from '@britania-crm/services/hooks/useCrmApi'\nimport { formatMoney } from '@britania-crm/utils/formatters'\nimport DataTable from '@britania-crm/web-components/DataTable'\nimport Modal from '@britania-crm/web-components/Modal'\n\nconst CustomerContract = ({\n  id, open, parentCompanyCode, responsibleCode\n}) => {\n  const t = useT()\n\n  const paramsContractual = useMemo(\n    () =>\n      ({ parentCompanyCodes: parentCompanyCode.toString(), responsibleCode }),\n    [parentCompanyCode, responsibleCode])\n\n  const {\n    data,\n    loading\n  } = useCrmApi(\n    parentCompanyCode || responsibleCode\n      ? [reportsRoutes.getContractualPercentage, paramsContractual]\n      : null,\n    { params: paramsContractual }\n  )\n\n  const columns = useMemo(() => [\n    {\n      title: t('percentage'),\n      field: 'contractualPercentage',\n      sorting: false,\n      render: (row) => `${ row.contractualPercentage }%`\n    },\n    {\n      title: t('value', { howMany: 1 }),\n      field: 'value',\n      sorting: false,\n      render: (row) => formatMoney(row.value)\n    },\n    {\n      title: t('name', { howMany: 1 }),\n      field: 'budgetContractName',\n      sorting: false\n    },\n    {\n      title: t('type'),\n      field: 'contractType',\n      sorting: false\n    },\n    {\n      title: t('line', { howMany: 1 }),\n      field: 'lineName',\n      sorting: false\n    },\n    {\n      title: t('frequency', { howMany: 1 }),\n      field: 'periodicity',\n      sorting: false\n    }\n  ], [t])\n\n  return (\n    <Modal\n      id={ id }\n      open={ open }\n      title={ t('customer contract information') }\n      maxWidth=\"md\"\n      fullWidth\n      escapeWhenLoading\n    >\n      <Grid container item sm={ 12 }>\n        <DataTable\n          data={ data }\n          columns={ columns }\n          loading={ loading }\n          titleProps={ { style: { fontSize: 22 } } }\n          minimalistToolbar\n          options={ { search: false } }\n        />\n      </Grid>\n    </Modal>\n  )\n}\n\nCustomerContract.propTypes = {\n  id: PropTypes.string.isRequired,\n  open: PropTypes.func.isRequired,\n  parentCompanyCode: PropTypes.number,\n  responsibleCode: PropTypes.string\n}\n\nCustomerContract.defaultProps = {\n  data: [],\n  parentCompanyCode: 0,\n  responsibleCode: ''\n}\n\nexport default CustomerContract\n"]},"metadata":{},"sourceType":"module"}