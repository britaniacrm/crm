{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/components/AssociatedDataList/AssociatedDataListStyled.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport isEmpty from 'lodash/isEmpty';\nimport map from 'lodash/map';\nimport { colors } from '@britania-crm/styles';\nimport { Container, List } from './styles';\n\nconst AssociatedDataList = ({\n  value,\n  label,\n  width,\n  error,\n  idKey,\n  valueKey,\n  required\n}) => /*#__PURE__*/React.createElement(Container, {\n  width: width,\n  error: error,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"label\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }\n}, label, required && /*#__PURE__*/React.createElement(\"span\", {\n  style: {\n    color: colors.error.main,\n    fontSize: 12\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }\n}, ' ', \"*\")), isEmpty(value) ? /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }\n}, \"Ainda n\\xE3o foram vinculados nenhum dos perfis\") : /*#__PURE__*/React.createElement(List, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }\n}, map(value, item => /*#__PURE__*/React.createElement(\"span\", {\n  key: item[idKey],\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 13\n  }\n}, item[valueKey]))));\n\nAssociatedDataList.propTypes = {\n  value: PropTypes.array.isRequired,\n  label: PropTypes.string.isRequired,\n  required: PropTypes.bool,\n  width: PropTypes.number,\n  error: PropTypes.string,\n  valueKey: PropTypes.string,\n  idKey: PropTypes.string\n};\nAssociatedDataList.defaultProps = {\n  width: undefined,\n  error: null,\n  valueKey: 'name',\n  idKey: 'id',\n  required: false\n};\nexport default AssociatedDataList;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/components/AssociatedDataList/AssociatedDataListStyled.js"],"names":["React","PropTypes","isEmpty","map","colors","Container","List","AssociatedDataList","value","label","width","error","idKey","valueKey","required","color","main","fontSize","item","propTypes","array","isRequired","string","bool","number","defaultProps","undefined"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,GAAP,MAAgB,YAAhB;AAEA,SAASC,MAAT,QAAuB,sBAAvB;AAEA,SACEC,SADF,EAEEC,IAFF,QAGO,UAHP;;AAKA,MAAMC,kBAAkB,GAAG,CAAC;AAC1BC,EAAAA,KAD0B;AAE1BC,EAAAA,KAF0B;AAG1BC,EAAAA,KAH0B;AAI1BC,EAAAA,KAJ0B;AAK1BC,EAAAA,KAL0B;AAM1BC,EAAAA,QAN0B;AAO1BC,EAAAA;AAP0B,CAAD,kBASzB,oBAAC,SAAD;AAAW,EAAA,KAAK,EAAGJ,KAAnB;AAA2B,EAAA,KAAK,EAAGC,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGF,KADH,EAEGK,QAAQ,iBACP;AAAM,EAAA,KAAK,EAAG;AACZC,IAAAA,KAAK,EAAEX,MAAM,CAACO,KAAP,CAAaK,IADR;AAEZC,IAAAA,QAAQ,EAAE;AAFE,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAKG,GALH,MAHJ,CADF,EAcGf,OAAO,CAACM,KAAD,CAAP,gBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDADH,gBAGG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGL,GAAG,CAACK,KAAD,EAASU,IAAD,iBACV;AAAM,EAAA,GAAG,EAAGA,IAAI,CAACN,KAAD,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA2BM,IAAI,CAACL,QAAD,CAA/B,CADE,CADN,CAjBN,CATF;;AAmCAN,kBAAkB,CAACY,SAAnB,GAA+B;AAC7BX,EAAAA,KAAK,EAAEP,SAAS,CAACmB,KAAV,CAAgBC,UADM;AAE7BZ,EAAAA,KAAK,EAAER,SAAS,CAACqB,MAAV,CAAiBD,UAFK;AAG7BP,EAAAA,QAAQ,EAAEb,SAAS,CAACsB,IAHS;AAI7Bb,EAAAA,KAAK,EAAET,SAAS,CAACuB,MAJY;AAK7Bb,EAAAA,KAAK,EAAEV,SAAS,CAACqB,MALY;AAM7BT,EAAAA,QAAQ,EAAEZ,SAAS,CAACqB,MANS;AAO7BV,EAAAA,KAAK,EAAEX,SAAS,CAACqB;AAPY,CAA/B;AAUAf,kBAAkB,CAACkB,YAAnB,GAAkC;AAChCf,EAAAA,KAAK,EAAEgB,SADyB;AAEhCf,EAAAA,KAAK,EAAE,IAFyB;AAGhCE,EAAAA,QAAQ,EAAE,MAHsB;AAIhCD,EAAAA,KAAK,EAAE,IAJyB;AAKhCE,EAAAA,QAAQ,EAAE;AALsB,CAAlC;AAQA,eAAeP,kBAAf","sourcesContent":["import React from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport isEmpty from 'lodash/isEmpty'\nimport map from 'lodash/map'\n\nimport { colors } from '@britania-crm/styles'\n\nimport {\n  Container,\n  List\n} from './styles'\n\nconst AssociatedDataList = ({\n  value,\n  label,\n  width,\n  error,\n  idKey,\n  valueKey,\n  required\n}) => (\n  <Container width={ width } error={ error }>\n    <label>\n      {label}\n      {required && (\n        <span style={ {\n          color: colors.error.main,\n          fontSize: 12\n        } }\n        >\n          {' '}*\n        </span>\n      )}\n    </label>\n\n    {isEmpty(value)\n      ? <p>Ainda n√£o foram vinculados nenhum dos perfis</p>\n      : (\n        <List>\n          {map(value, (item) =>\n            <span key={ item[idKey] }>{item[valueKey]}</span>\n          )}\n        </List>\n      )}\n  </Container>\n)\n\nAssociatedDataList.propTypes = {\n  value: PropTypes.array.isRequired,\n  label: PropTypes.string.isRequired,\n  required: PropTypes.bool,\n  width: PropTypes.number,\n  error: PropTypes.string,\n  valueKey: PropTypes.string,\n  idKey: PropTypes.string\n}\n\nAssociatedDataList.defaultProps = {\n  width: undefined,\n  error: null,\n  valueKey: 'name',\n  idKey: 'id',\n  required: false\n}\n\nexport default AssociatedDataList\n"]},"metadata":{},"sourceType":"module"}