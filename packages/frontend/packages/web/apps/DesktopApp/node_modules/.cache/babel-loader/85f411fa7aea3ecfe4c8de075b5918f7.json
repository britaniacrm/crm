{"ast":null,"code":"import upperFirst from 'lodash/upperFirst';\n\nclass Snackbar {\n  constructor(message, _options = {}, controller = {}) {\n    this.open = () => {\n      const {\n        closeOnClick,\n        onClick = () => {},\n        ...otherOptions\n      } = this.options;\n      let options = {};\n\n      if (closeOnClick) {\n        options = {\n          onClick: () => {\n            onClick(this.key);\n            this.close();\n          }\n        };\n      } // default options for every snackbar\n\n\n      const snackbarOptions = {\n        autoHideDuration: 300,\n        anchorOrigin: {\n          vertical: 'top',\n          horizontal: 'right'\n        },\n        ...otherOptions,\n        ...options\n      };\n      this.key = this.controller._stack.openSnackbar(this.message, snackbarOptions);\n    };\n\n    this.close = () => {\n      this.controller._stack.closeSnackbar(this.key);\n    };\n\n    this.controller = controller;\n    this.message = typeof message === 'string' ? upperFirst(message) : message;\n    this.options = _options;\n    this.key = undefined;\n    this.open();\n  }\n\n}\n\nexport default Snackbar;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/core/snackbar/controllers/Snackbar.js"],"names":["upperFirst","Snackbar","constructor","message","options","controller","open","closeOnClick","onClick","otherOptions","key","close","snackbarOptions","autoHideDuration","anchorOrigin","vertical","horizontal","_stack","openSnackbar","closeSnackbar","undefined"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,mBAAvB;;AAEA,MAAMC,QAAN,CAAe;AACbC,EAAAA,WAAW,CAAEC,OAAF,EAAWC,QAAO,GAAG,EAArB,EAAyBC,UAAU,GAAG,EAAtC,EAA0C;AAAA,SASrDC,IATqD,GAS9C,MAAM;AACX,YAAM;AACJC,QAAAA,YADI;AAEJC,QAAAA,OAAO,GAAG,MAAM,CAAE,CAFd;AAGJ,WAAGC;AAHC,UAIF,KAAKL,OAJT;AAMA,UAAIA,OAAO,GAAG,EAAd;;AAEA,UAAIG,YAAJ,EAAkB;AAChBH,QAAAA,OAAO,GAAG;AACRI,UAAAA,OAAO,EAAE,MAAM;AACbA,YAAAA,OAAO,CAAC,KAAKE,GAAN,CAAP;AACA,iBAAKC,KAAL;AACD;AAJO,SAAV;AAMD,OAhBU,CAkBX;;;AACA,YAAMC,eAAe,GAAG;AACtBC,QAAAA,gBAAgB,EAAE,GADI;AAEtBC,QAAAA,YAAY,EAAE;AACZC,UAAAA,QAAQ,EAAE,KADE;AAEZC,UAAAA,UAAU,EAAE;AAFA,SAFQ;AAMtB,WAAGP,YANmB;AAOtB,WAAGL;AAPmB,OAAxB;AAUA,WAAKM,GAAL,GAAW,KAAKL,UAAL,CAAgBY,MAAhB,CAAuBC,YAAvB,CAAoC,KAAKf,OAAzC,EAAkDS,eAAlD,CAAX;AACD,KAvCoD;;AAAA,SAyCrDD,KAzCqD,GAyC7C,MAAM;AACZ,WAAKN,UAAL,CAAgBY,MAAhB,CAAuBE,aAAvB,CAAqC,KAAKT,GAA1C;AACD,KA3CoD;;AACnD,SAAKL,UAAL,GAAkBA,UAAlB;AACA,SAAKF,OAAL,GAAe,OAAOA,OAAP,KAAmB,QAAnB,GAA8BH,UAAU,CAACG,OAAD,CAAxC,GAAoDA,OAAnE;AACA,SAAKC,OAAL,GAAeA,QAAf;AACA,SAAKM,GAAL,GAAWU,SAAX;AAEA,SAAKd,IAAL;AACD;;AARY;;AA+Cf,eAAeL,QAAf","sourcesContent":["import upperFirst from 'lodash/upperFirst'\n\nclass Snackbar {\n  constructor (message, options = {}, controller = {}) {\n    this.controller = controller\n    this.message = typeof message === 'string' ? upperFirst(message) : message\n    this.options = options\n    this.key = undefined\n\n    this.open()\n  }\n\n  open = () => {\n    const {\n      closeOnClick,\n      onClick = () => {},\n      ...otherOptions\n    } = this.options\n\n    let options = {}\n\n    if (closeOnClick) {\n      options = {\n        onClick: () => {\n          onClick(this.key)\n          this.close()\n        }\n      }\n    }\n\n    // default options for every snackbar\n    const snackbarOptions = {\n      autoHideDuration: 300,\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'right'\n      },\n      ...otherOptions,\n      ...options\n    }\n\n    this.key = this.controller._stack.openSnackbar(this.message, snackbarOptions)\n  }\n\n  close = () => {\n    this.controller._stack.closeSnackbar(this.key)\n  }\n}\n\nexport default Snackbar\n"]},"metadata":{},"sourceType":"module"}