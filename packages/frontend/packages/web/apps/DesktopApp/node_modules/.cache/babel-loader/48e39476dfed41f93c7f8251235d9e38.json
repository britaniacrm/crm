{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/core/dialog/DialogProvider.js\";\nimport React, { useReducer, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport map from 'lodash/map';\nimport { CREATE_DIALOG, CLOSE_DIALOG, REMOVE_DIALOG, RESET_DIALOGS, DialogContext, dialogReducer } from './dialogReducer';\n\nconst DialogProvider = props => {\n  const {\n    ContainerComponent,\n    children = null\n  } = props;\n  const [dialogs, dispatch] = useReducer(dialogReducer, []);\n\n  const createDialog = dialog => dispatch({\n    type: CREATE_DIALOG,\n    dialog\n  });\n\n  const removeDialog = dialog => {\n    dispatch({\n      type: CLOSE_DIALOG,\n      dialog\n    });\n    setTimeout(() => {\n      dispatch({\n        type: REMOVE_DIALOG,\n        dialog\n      });\n    }, 300);\n  };\n\n  const resetDialogs = () => dispatch({\n    type: RESET_DIALOGS\n  });\n\n  const state = {\n    createDialog: dialog => createDialog(dialog),\n    removeDialog: dialog => removeDialog(dialog),\n    resetDialogs,\n    dialogs\n  };\n  const renderedDialogs = useMemo(() => map(dialogs, dialog => {\n    const {\n      id,\n      open,\n      Component,\n      props: dialogProps = {}\n    } = dialog;\n    return /*#__PURE__*/React.createElement(Component, Object.assign({\n      key: id,\n      id: id,\n      handleClose: () => removeDialog({\n        id\n      }),\n      open: open\n    }, dialogProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }));\n  }), [dialogs]);\n  return /*#__PURE__*/React.createElement(DialogContext.Provider, {\n    value: state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, children, /*#__PURE__*/React.createElement(ContainerComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, renderedDialogs));\n};\n\nDialogProvider.propTypes = {\n  children: PropTypes.any.isRequired,\n  ContainerComponent: PropTypes.func\n};\nDialogProvider.defaultProps = {\n  ContainerComponent: ({\n    children\n  }) => children\n};\nexport default DialogProvider;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/core/dialog/DialogProvider.js"],"names":["React","useReducer","useMemo","PropTypes","map","CREATE_DIALOG","CLOSE_DIALOG","REMOVE_DIALOG","RESET_DIALOGS","DialogContext","dialogReducer","DialogProvider","props","ContainerComponent","children","dialogs","dispatch","createDialog","dialog","type","removeDialog","setTimeout","resetDialogs","state","renderedDialogs","id","open","Component","dialogProps","propTypes","any","isRequired","func","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IACEC,UADF,EAEEC,OAFF,QAGO,OAHP;AAKA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,GAAP,MAAgB,YAAhB;AAEA,SACEC,aADF,EAEEC,YAFF,EAGEC,aAHF,EAIEC,aAJF,EAKEC,aALF,EAMEC,aANF,QAOO,iBAPP;;AASA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAChC,QAAM;AACJC,IAAAA,kBADI;AAEJC,IAAAA,QAAQ,GAAG;AAFP,MAGFF,KAHJ;AAKA,QAAM,CAACG,OAAD,EAAUC,QAAV,IAAsBf,UAAU,CAACS,aAAD,EAAgB,EAAhB,CAAtC;;AAEA,QAAMO,YAAY,GAAIC,MAAD,IAAYF,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAEd,aAAR;AAAuBa,IAAAA;AAAvB,GAAD,CAAzC;;AACA,QAAME,YAAY,GAAIF,MAAD,IAAY;AAC/BF,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAEb,YAAR;AAAsBY,MAAAA;AAAtB,KAAD,CAAR;AACAG,IAAAA,UAAU,CAAC,MAAM;AACfL,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAEZ,aAAR;AAAuBW,QAAAA;AAAvB,OAAD,CAAR;AACD,KAFS,EAEP,GAFO,CAAV;AAGD,GALD;;AAMA,QAAMI,YAAY,GAAG,MAAMN,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAEX;AAAR,GAAD,CAAnC;;AAEA,QAAMe,KAAK,GAAG;AACZN,IAAAA,YAAY,EAAGC,MAAD,IAAYD,YAAY,CAACC,MAAD,CAD1B;AAEZE,IAAAA,YAAY,EAAGF,MAAD,IAAYE,YAAY,CAACF,MAAD,CAF1B;AAGZI,IAAAA,YAHY;AAIZP,IAAAA;AAJY,GAAd;AAOA,QAAMS,eAAe,GAAGtB,OAAO,CAC7B,MAAME,GAAG,CAACW,OAAD,EAAWG,MAAD,IAAY;AAC7B,UAAM;AACJO,MAAAA,EADI;AAEJC,MAAAA,IAFI;AAGJC,MAAAA,SAHI;AAIJf,MAAAA,KAAK,EAAEgB,WAAW,GAAG;AAJjB,QAKFV,MALJ;AAOA,wBACE,oBAAC,SAAD;AACE,MAAA,GAAG,EAAGO,EADR;AAEE,MAAA,EAAE,EAAGA,EAFP;AAGE,MAAA,WAAW,EAAG,MAAML,YAAY,CAAC;AAAEK,QAAAA;AAAF,OAAD,CAHlC;AAIE,MAAA,IAAI,EAAGC;AAJT,OAKOE,WALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF;AASD,GAjBQ,CADoB,EAmB7B,CAACb,OAAD,CAnB6B,CAA/B;AAsBA,sBACE,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAGQ,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,QADH,eAGE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGU,eADH,CAHF,CADF;AASD,CAvDD;;AAyDAb,cAAc,CAACkB,SAAf,GAA2B;AACzBf,EAAAA,QAAQ,EAAEX,SAAS,CAAC2B,GAAV,CAAcC,UADC;AAEzBlB,EAAAA,kBAAkB,EAAEV,SAAS,CAAC6B;AAFL,CAA3B;AAKArB,cAAc,CAACsB,YAAf,GAA8B;AAAEpB,EAAAA,kBAAkB,EAAE,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAkBA;AAAxC,CAA9B;AAEA,eAAeH,cAAf","sourcesContent":["import React, {\n  useReducer,\n  useMemo\n} from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport map from 'lodash/map'\n\nimport {\n  CREATE_DIALOG,\n  CLOSE_DIALOG,\n  REMOVE_DIALOG,\n  RESET_DIALOGS,\n  DialogContext,\n  dialogReducer\n} from './dialogReducer'\n\nconst DialogProvider = (props) => {\n  const {\n    ContainerComponent,\n    children = null\n  } = props\n\n  const [dialogs, dispatch] = useReducer(dialogReducer, [])\n\n  const createDialog = (dialog) => dispatch({ type: CREATE_DIALOG, dialog })\n  const removeDialog = (dialog) => {\n    dispatch({ type: CLOSE_DIALOG, dialog })\n    setTimeout(() => {\n      dispatch({ type: REMOVE_DIALOG, dialog })\n    }, 300)\n  }\n  const resetDialogs = () => dispatch({ type: RESET_DIALOGS })\n\n  const state = {\n    createDialog: (dialog) => createDialog(dialog),\n    removeDialog: (dialog) => removeDialog(dialog),\n    resetDialogs,\n    dialogs\n  }\n\n  const renderedDialogs = useMemo(\n    () => map(dialogs, (dialog) => {\n      const {\n        id,\n        open,\n        Component,\n        props: dialogProps = {}\n      } = dialog\n\n      return (\n        <Component\n          key={ id }\n          id={ id }\n          handleClose={ () => removeDialog({ id }) }\n          open={ open }\n          { ...dialogProps }\n        />\n      )\n    }),\n    [dialogs]\n  )\n\n  return (\n    <DialogContext.Provider value={ state }>\n      {children}\n\n      <ContainerComponent>\n        {renderedDialogs}\n      </ContainerComponent>\n    </DialogContext.Provider>\n  )\n}\n\nDialogProvider.propTypes = {\n  children: PropTypes.any.isRequired,\n  ContainerComponent: PropTypes.func\n}\n\nDialogProvider.defaultProps = { ContainerComponent: ({ children }) => children }\n\nexport default DialogProvider\n"]},"metadata":{},"sourceType":"module"}