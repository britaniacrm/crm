{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/components/MenuItem/MenuItem.js\";\nimport React, { useMemo, useState, useCallback } from 'react';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport isEmpty from 'lodash/isEmpty';\nimport map from 'lodash/map';\nimport startsWith from 'lodash/startsWith';\nimport Collapse from '@material-ui/core/Collapse';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport IconExpandLess from '@material-ui/icons/ExpandLess';\nimport IconExpandMore from '@material-ui/icons/ExpandMore';\nimport { useStyles } from './styles';\n\nconst MenuItem = props => {\n  const {\n    drawerIsOpen,\n    Icon,\n    label,\n    onOpen,\n    url,\n    exact,\n    withIndicator,\n    subMenu,\n    listItemClassName,\n    handleLeftDrawerOpen\n  } = props;\n  const classes = useStyles();\n  const {\n    pathname\n  } = useLocation();\n  const [openSubMenu, setOpenSubMenu] = useState(false);\n  const hasSubMenu = useMemo(() => !isEmpty(subMenu), [subMenu]);\n  const handleItemClick = useCallback(() => {\n    onOpen();\n\n    if (hasSubMenu) {\n      if (!drawerIsOpen) {\n        handleLeftDrawerOpen();\n        setOpenSubMenu(true);\n      } else {\n        setOpenSubMenu(old => !old);\n      }\n    }\n  }, [drawerIsOpen, handleLeftDrawerOpen, hasSubMenu, onOpen]);\n  const menuItem = useMemo(() => {\n    const item = /*#__PURE__*/React.createElement(React.Fragment, null, withIndicator && /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.activeIndicator,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 29\n      }\n    }), Icon && /*#__PURE__*/React.createElement(ListItemIcon, {\n      classes: {\n        root: classes.listItemIcon\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      fontSize: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }\n    })), drawerIsOpen && /*#__PURE__*/React.createElement(ListItemText, {\n      primary: label,\n      primaryTypographyProps: {\n        noWrap: true,\n        style: {\n          lineHeight: 1\n        }\n      },\n      classes: {\n        root: classes.text\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }), hasSubMenu && drawerIsOpen && /*#__PURE__*/React.createElement(ListItemIcon, {\n      classes: {\n        root: classes.listItemIcon\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, openSubMenu ? /*#__PURE__*/React.createElement(IconExpandLess, {\n      fontSize: \"small\",\n      className: classes.icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 30\n      }\n    }) : /*#__PURE__*/React.createElement(IconExpandMore, {\n      fontSize: \"small\",\n      className: classes.icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 94\n      }\n    })));\n    return hasSubMenu || !url ? item : /*#__PURE__*/React.createElement(NavLink, {\n      to: url,\n      exact: exact,\n      className: classes.menuLink,\n      activeClassName: classes.menuActive,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, item);\n  }, [Icon, classes.activeIndicator, classes.icon, classes.listItemIcon, classes.menuActive, classes.menuLink, classes.text, drawerIsOpen, exact, hasSubMenu, label, openSubMenu, url, withIndicator]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    className: clsx(listItemClassName, {\n      [classes.listItem]: true,\n      [classes.menuLink]: !url || hasSubMenu,\n      [classes.menuActive]: hasSubMenu && startsWith(pathname, url)\n    }),\n    onClick: handleItemClick,\n    classes: {\n      gutters: classes.gutters\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, menuItem), hasSubMenu && openSubMenu && drawerIsOpen && /*#__PURE__*/React.createElement(Collapse, {\n    in: openSubMenu,\n    timeout: \"auto\",\n    unmountOnExit: true,\n    className: classes.subMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(List, {\n    component: \"div\",\n    disablePadding: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, map(subMenu, ({\n    path,\n    menu\n  } = {}) => path && /*#__PURE__*/React.createElement(MenuItem, {\n    key: path,\n    url: path,\n    label: menu.title,\n    Icon: menu.Icon,\n    exact: menu.exact,\n    drawerIsOpen: drawerIsOpen,\n    subMenu: menu === null || menu === void 0 ? void 0 : menu.subMenu,\n    listItemClassName: classes.listItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  })))));\n};\n\nMenuItem.propTypes = {\n  drawerIsOpen: PropTypes.bool.isRequired,\n  Icon: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  label: PropTypes.string.isRequired,\n  onOpen: PropTypes.func,\n  url: PropTypes.string,\n  exact: PropTypes.bool,\n  subMenu: PropTypes.array,\n  withIndicator: PropTypes.bool,\n  listItemClassName: PropTypes.string,\n  handleLeftDrawerOpen: PropTypes.func\n};\nMenuItem.defaultProps = {\n  Icon: null,\n  url: '',\n  exact: false,\n\n  onOpen() {},\n\n  subMenu: undefined,\n  withIndicator: false,\n  listItemClassName: null,\n\n  handleLeftDrawerOpen() {}\n\n};\nexport default MenuItem;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/components/MenuItem/MenuItem.js"],"names":["React","useMemo","useState","useCallback","NavLink","useLocation","clsx","PropTypes","isEmpty","map","startsWith","Collapse","Divider","List","ListItem","ListItemIcon","ListItemText","IconExpandLess","IconExpandMore","useStyles","MenuItem","props","drawerIsOpen","Icon","label","onOpen","url","exact","withIndicator","subMenu","listItemClassName","handleLeftDrawerOpen","classes","pathname","openSubMenu","setOpenSubMenu","hasSubMenu","handleItemClick","old","menuItem","item","activeIndicator","root","listItemIcon","noWrap","style","lineHeight","text","icon","menuLink","menuActive","listItem","gutters","path","menu","title","propTypes","bool","isRequired","oneOfType","func","object","string","array","defaultProps","undefined"],"mappings":"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","sourcesContent":["import React, {\n  useMemo,\n  useState,\n  useCallback\n} from 'react'\nimport {\n  NavLink,\n  useLocation\n} from 'react-router-dom'\n\nimport clsx from 'clsx'\nimport PropTypes from 'prop-types'\n\nimport isEmpty from 'lodash/isEmpty'\nimport map from 'lodash/map'\nimport startsWith from 'lodash/startsWith'\n\nimport Collapse from '@material-ui/core/Collapse'\nimport Divider from '@material-ui/core/Divider'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport IconExpandLess from '@material-ui/icons/ExpandLess'\nimport IconExpandMore from '@material-ui/icons/ExpandMore'\n\nimport { useStyles } from './styles'\n\nconst MenuItem = (props) => {\n  const {\n    drawerIsOpen,\n    Icon,\n    label,\n    onOpen,\n    url,\n    exact,\n    withIndicator,\n    subMenu,\n    listItemClassName,\n    handleLeftDrawerOpen\n  } = props\n\n  const classes = useStyles()\n  const { pathname } = useLocation()\n\n  const [openSubMenu, setOpenSubMenu] = useState(false)\n\n  const hasSubMenu = useMemo(() => !isEmpty(subMenu), [subMenu])\n\n  const handleItemClick = useCallback(\n    () => {\n      onOpen()\n      if (hasSubMenu) {\n        if (!drawerIsOpen) {\n          handleLeftDrawerOpen()\n          setOpenSubMenu(true)\n        } else {\n          setOpenSubMenu((old) => !old)\n        }\n      }\n    },\n    [drawerIsOpen, handleLeftDrawerOpen, hasSubMenu, onOpen]\n  )\n\n  const menuItem = useMemo(\n    () => {\n      const item = (\n        <>\n          {withIndicator && <div className={ classes.activeIndicator } />}\n\n          {Icon && (\n            <ListItemIcon classes={ { root: classes.listItemIcon } }>\n              <Icon fontSize=\"small\" />\n            </ListItemIcon>\n          )}\n          {drawerIsOpen && (\n            <ListItemText\n              primary={ label }\n              primaryTypographyProps={ { noWrap: true, style: { lineHeight: 1 } } }\n              classes={ { root: classes.text } }\n            />\n          )}\n\n          {hasSubMenu && drawerIsOpen && (\n            <ListItemIcon classes={ { root: classes.listItemIcon } }>\n              {openSubMenu ? <IconExpandLess fontSize=\"small\" className={ classes.icon }/> : <IconExpandMore fontSize=\"small\" className={ classes.icon }/>}\n            </ListItemIcon>\n          )}\n        </>\n      )\n\n      return (hasSubMenu || !url) ? item : (\n        <NavLink\n          to={ url }\n          exact={ exact }\n          className={ classes.menuLink }\n          activeClassName={ classes.menuActive }\n        >\n          {item}\n        </NavLink>\n      )\n    },\n    [Icon, classes.activeIndicator, classes.icon, classes.listItemIcon, classes.menuActive, classes.menuLink, classes.text, drawerIsOpen, exact, hasSubMenu, label, openSubMenu, url, withIndicator]\n  )\n\n  return (\n    <>\n      <ListItem\n        button\n        className={ clsx(listItemClassName, {\n          [classes.listItem]: true,\n          [classes.menuLink]: !url || hasSubMenu,\n          [classes.menuActive]: hasSubMenu && startsWith(pathname, url)\n        }) }\n        onClick={ handleItemClick }\n        classes={ { gutters: classes.gutters } }\n      >\n        {menuItem}\n      </ListItem>\n\n      {hasSubMenu && openSubMenu && drawerIsOpen && (\n        <Collapse in={ openSubMenu } timeout=\"auto\" unmountOnExit className={ classes.subMenu }>\n          <Divider />\n          <List component=\"div\" disablePadding>\n            {map(subMenu, ({ path, menu } = {}) => path && (\n              <MenuItem\n                key={ path }\n                url={ path }\n                label={ menu.title }\n                Icon={ menu.Icon }\n                exact={ menu.exact }\n                drawerIsOpen={ drawerIsOpen }\n                subMenu={ menu?.subMenu }\n                listItemClassName={ classes.listItem }\n              />\n            ))}\n          </List>\n        </Collapse>\n      )}\n    </>\n  )\n}\n\nMenuItem.propTypes = {\n  drawerIsOpen: PropTypes.bool.isRequired,\n  Icon: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.object\n  ]),\n  label: PropTypes.string.isRequired,\n  onOpen: PropTypes.func,\n  url: PropTypes.string,\n  exact: PropTypes.bool,\n  subMenu: PropTypes.array,\n  withIndicator: PropTypes.bool,\n  listItemClassName: PropTypes.string,\n  handleLeftDrawerOpen: PropTypes.func\n}\n\nMenuItem.defaultProps = {\n  Icon: null,\n  url: '',\n  exact: false,\n  onOpen () {},\n  subMenu: undefined,\n  withIndicator: false,\n  listItemClassName: null,\n  handleLeftDrawerOpen () {}\n}\n\nexport default MenuItem\n"]},"metadata":{},"sourceType":"module"}