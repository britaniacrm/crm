{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/vpc/modals/DownloadReportModal/DownloadReportModal.js\";\nimport React, { useCallback, useRef, useMemo, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport map from 'lodash/map';\nimport Grid from '@material-ui/core/Grid';\nimport vpcReportSchema, { INITIAL_VALUES } from '@britania-crm/forms/schemas/vpc/vpc.report.schema';\nimport I18n from '@britania-crm/i18n';\nimport { vpc as vpcCrmRoutes } from '@britania-crm/services/apis/crmApi/resources/routes';\nimport { FileActions } from '@britania-crm/stores/file';\nimport { generateParamsUrl } from '@britania-crm/utils/generateParamsUrl';\nimport Button from '@britania-crm/web-components/Button';\nimport Form from '@britania-crm/web-components/Form';\nimport Modal from '@britania-crm/web-components/Modal';\nimport RadioGroup from '@britania-crm/web-components/RadioGroup';\n\nconst DownloadReportModal = props => {\n  const {\n    id,\n    open,\n    handleClose,\n    selectedItens,\n    filters\n  } = props;\n  const formRef = useRef(null);\n  const dispatch = useCallback(useDispatch(), []);\n  const [downloadLoading, setDownloadLoading] = useState(false);\n  const downloadOptionMock = useMemo(() => [{\n    id: 'synthetic',\n    name: 'Sintético'\n  }, {\n    id: 'analytical',\n    name: 'Analítico'\n  }], []);\n  const handleSubmit = useCallback(values => {\n    setDownloadLoading(true);\n    let ids = map(selectedItens, 'id');\n    ids = ids.join(',');\n    dispatch(FileActions.download(`${vpcCrmRoutes.download}/${values.reportOption}?${generateParamsUrl({ ...filters,\n      ids\n    })}`, 'Relátorio.xlsx', handleClose));\n  }, [dispatch, filters, handleClose, selectedItens]);\n  return /*#__PURE__*/React.createElement(Modal, {\n    id: id,\n    open: open,\n    maxWidth: \"xs\",\n    variant: \"space\",\n    escape: !downloadLoading,\n    loading: downloadLoading,\n    fullWidth: true,\n    FooterComponent: () => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(I18n, {\n      as: Button,\n      onClick: handleClose,\n      color: \"secondary\",\n      variant: \"outlined\",\n      disabled: downloadLoading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, \"cancel\"), /*#__PURE__*/React.createElement(I18n, {\n      as: Button,\n      onClick: () => formRef.current.submit(),\n      color: \"secondary\",\n      style: {\n        marginLeft: 10\n      },\n      disabled: downloadLoading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }, \"datagrid toolbar export title\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    ref: formRef,\n    onSubmit: handleSubmit,\n    schemaConstructor: vpcReportSchema,\n    defaultValues: INITIAL_VALUES,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(RadioGroup, {\n    name: \"reportOption\",\n    options: downloadOptionMock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  })))));\n};\n\nDownloadReportModal.propTypes = {\n  id: PropTypes.string.isRequired,\n  open: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  filters: PropTypes.array.isRequired,\n  selectedItens: PropTypes.array.isRequired\n};\nexport default DownloadReportModal;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/vpc/modals/DownloadReportModal/DownloadReportModal.js"],"names":["React","useCallback","useRef","useMemo","useState","useDispatch","PropTypes","map","Grid","vpcReportSchema","INITIAL_VALUES","I18n","vpc","vpcCrmRoutes","FileActions","generateParamsUrl","Button","Form","Modal","RadioGroup","DownloadReportModal","props","id","open","handleClose","selectedItens","filters","formRef","dispatch","downloadLoading","setDownloadLoading","downloadOptionMock","name","handleSubmit","values","ids","join","download","reportOption","current","submit","marginLeft","propTypes","string","isRequired","bool","func","array"],"mappings":"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","sourcesContent":["import React, {\n  useCallback,\n  useRef,\n  useMemo,\n  useState\n} from 'react'\nimport { useDispatch } from 'react-redux'\n\nimport PropTypes from 'prop-types'\n\nimport map from 'lodash/map'\n\nimport Grid from '@material-ui/core/Grid'\n\nimport vpcReportSchema, { INITIAL_VALUES } from '@britania-crm/forms/schemas/vpc/vpc.report.schema'\nimport I18n from '@britania-crm/i18n'\nimport { vpc as vpcCrmRoutes } from '@britania-crm/services/apis/crmApi/resources/routes'\nimport { FileActions } from '@britania-crm/stores/file'\nimport { generateParamsUrl } from '@britania-crm/utils/generateParamsUrl'\nimport Button from '@britania-crm/web-components/Button'\nimport Form from '@britania-crm/web-components/Form'\nimport Modal from '@britania-crm/web-components/Modal'\nimport RadioGroup from '@britania-crm/web-components/RadioGroup'\n\nconst DownloadReportModal = (props) => {\n  const {\n    id,\n    open,\n    handleClose,\n    selectedItens,\n    filters\n  } = props\n\n  const formRef = useRef(null)\n  const dispatch = useCallback(useDispatch(), [])\n\n  const [downloadLoading, setDownloadLoading] = useState(false)\n\n  const downloadOptionMock = useMemo(() =>\n    [\n      { id: 'synthetic', name: 'Sintético' },\n      { id: 'analytical', name: 'Analítico' }\n    ],\n  [])\n\n  const handleSubmit = useCallback(\n    (values) => {\n      setDownloadLoading(true)\n      let ids = (map(selectedItens, 'id'))\n      ids = ids.join(',')\n\n      dispatch(FileActions.download(\n        `${ vpcCrmRoutes.download }/${ values.reportOption }?${ generateParamsUrl({ ...filters, ids }) }`,\n        'Relátorio.xlsx',\n        handleClose\n      ))\n    },\n    [dispatch, filters, handleClose, selectedItens]\n  )\n\n  return (\n    <Modal\n      id={ id }\n      open={ open }\n      maxWidth=\"xs\"\n      variant=\"space\"\n      escape={ !downloadLoading }\n      loading={ downloadLoading }\n      fullWidth\n      FooterComponent={ () => (\n        <>\n          <I18n as={ Button }\n            onClick={ handleClose }\n            color=\"secondary\"\n            variant=\"outlined\"\n            disabled={ downloadLoading }\n          >\n            cancel\n          </I18n>\n          <I18n as={ Button }\n            onClick={ () => formRef.current.submit() }\n            color=\"secondary\"\n            style={ { marginLeft: 10 } }\n            disabled={ downloadLoading }\n          >\n            datagrid toolbar export title\n          </I18n>\n        </>\n      ) }\n    >\n      <Form\n        ref={ formRef }\n        onSubmit={ handleSubmit }\n        schemaConstructor={ vpcReportSchema }\n        defaultValues={ INITIAL_VALUES }\n      >\n        <Grid container spacing={ 1 }>\n          <Grid item xs={ 12 } md={ 12 }>\n            <RadioGroup\n              name=\"reportOption\"\n              options={ downloadOptionMock }\n            />\n          </Grid>\n\n        </Grid>\n      </Form>\n    </Modal>\n  )\n}\n\nDownloadReportModal.propTypes = {\n  id: PropTypes.string.isRequired,\n  open: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  filters: PropTypes.array.isRequired,\n  selectedItens: PropTypes.array.isRequired\n}\nexport default DownloadReportModal\n"]},"metadata":{},"sourceType":"module"}