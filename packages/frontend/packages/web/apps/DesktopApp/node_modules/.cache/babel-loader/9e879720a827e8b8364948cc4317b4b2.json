{"ast":null,"code":"import * as Yup from 'yup';\nimport dateRange from '@britania-crm/forms/validators/dateRange.validator';\nimport required from '@britania-crm/forms/validators/required.validator';\nconst VALUES = {\n  company: 'BRITÂNIA ELETRÔNICOS S/A',\n  code: {},\n  matrix: {},\n  responsible: {},\n  regionalManager: {},\n  date: {\n    from: '',\n    to: ''\n  },\n  directorShip: '',\n  lines: [],\n  linesFromBack: [],\n  linesExceptions: [],\n  linesExceptionsFromBack: [],\n  families: [],\n  familiesFromBack: [],\n  familiesExceptions: [],\n  familiesExceptionsFromBack: [],\n  achivements: [],\n  negotiatedFunds: [],\n  percentages: [],\n  observation: '',\n  attachments: [],\n  active: false\n};\nexport const INITIAL_VALUES = {\n  fan: { ...VALUES\n  },\n  lastFan: { ...VALUES\n  }\n};\nexport default (({\n  t\n}) => {\n  const fan = () => Yup.object().shape({\n    company: Yup.string(),\n    code: required({\n      t,\n      isNotText: true\n    })(Yup.object()),\n    matrix: required({\n      t,\n      isNotText: true\n    })(Yup.object()),\n    responsible: required({\n      t,\n      isNotText: true\n    })(Yup.object()),\n    directorship: Yup.string(),\n    regionalManager: required({\n      t,\n      isNotText: true\n    })(Yup.object()),\n    date: dateRange({\n      t\n    })(Yup.object()),\n    observation: Yup.string(),\n    active: Yup.bool(),\n    lines: required({\n      t,\n      isNotText: true\n    })(Yup.array()),\n    linesFromBack: required({\n      t,\n      isNotText: true\n    })(Yup.array()),\n    linesExceptions: required({\n      t,\n      isNotText: true\n    })(Yup.array()),\n    families: required({\n      t,\n      isNotText: true\n    })(Yup.array()),\n    familiesFromBack: required({\n      t,\n      isNotText: true\n    })(Yup.array()),\n    familiesExceptions: Yup.array(),\n    familiesExceptionsFromBack: Yup.array(),\n    linesExceptionsFromBack: Yup.array(),\n    achivements: required({\n      t,\n      isNotText: true\n    })(Yup.array()),\n    negotiatedFunds: required({\n      t,\n      isNotText: true\n    })(Yup.array()),\n    percentages: required({\n      t,\n      isNotText: true\n    })(Yup.array()),\n    attachments: Yup.array()\n  });\n\n  const lastFan = () => Yup.object().shape({\n    company: Yup.string(),\n    code: Yup.object(),\n    matrix: Yup.object(),\n    cliente: Yup.object(),\n    responsible: Yup.object(),\n    directorship: Yup.string(),\n    regionalManager: Yup.object(),\n    date: dateRange({\n      t\n    })(Yup.object()),\n    observation: Yup.string(),\n    active: Yup.bool(),\n    lines: Yup.array(),\n    linesFromBack: Yup.array(),\n    linesExceptions: Yup.array(),\n    families: Yup.array(),\n    familiesFromBack: Yup.array(),\n    familiesExceptions: Yup.array(),\n    familiesExceptionsFromBack: Yup.array(),\n    linesExceptionsFromBack: Yup.array(),\n    achivements: Yup.array(),\n    negotiatedFunds: Yup.array(),\n    percentages: Yup.array(),\n    attachments: Yup.array()\n  });\n\n  return Yup.object().shape({\n    fan: fan(t),\n    lastFan: lastFan(t)\n  });\n});","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/core/forms/schemas/fan/fan.schema.js"],"names":["Yup","dateRange","required","VALUES","company","code","matrix","responsible","regionalManager","date","from","to","directorShip","lines","linesFromBack","linesExceptions","linesExceptionsFromBack","families","familiesFromBack","familiesExceptions","familiesExceptionsFromBack","achivements","negotiatedFunds","percentages","observation","attachments","active","INITIAL_VALUES","fan","lastFan","t","object","shape","string","isNotText","directorship","bool","array","cliente"],"mappings":"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","sourcesContent":["import * as Yup from 'yup'\n\nimport dateRange from '@britania-crm/forms/validators/dateRange.validator'\nimport required from '@britania-crm/forms/validators/required.validator'\n\nconst VALUES = {\n  company: 'BRITÂNIA ELETRÔNICOS S/A',\n  code: {},\n  matrix: {},\n  responsible: {},\n  regionalManager: {},\n  date: { from: '', to: '' },\n  directorShip: '',\n  lines: [],\n  linesFromBack: [],\n  linesExceptions: [],\n  linesExceptionsFromBack: [],\n  families: [],\n  familiesFromBack: [],\n  familiesExceptions: [],\n  familiesExceptionsFromBack: [],\n  achivements: [],\n  negotiatedFunds: [],\n  percentages: [],\n  observation: '',\n  attachments: [],\n  active: false\n}\n\nexport const INITIAL_VALUES = {\n  fan: { ...VALUES },\n  lastFan: { ...VALUES }\n}\n\nexport default ({ t }) => {\n  const fan = () => Yup.object().shape({\n    company: Yup.string(),\n    code: required({ t, isNotText: true })(Yup.object()),\n    matrix: required({ t, isNotText: true })(Yup.object()),\n    responsible: required({ t, isNotText: true })(Yup.object()),\n    directorship: Yup.string(),\n    regionalManager: required({ t, isNotText: true })(Yup.object()),\n    date: dateRange({ t })(Yup.object()),\n    observation: Yup.string(),\n    active: Yup.bool(),\n    lines: required({ t, isNotText: true })(Yup.array()),\n    linesFromBack: required({ t, isNotText: true })(Yup.array()),\n    linesExceptions: required({ t, isNotText: true })(Yup.array()),\n    families: required({ t, isNotText: true })(Yup.array()),\n    familiesFromBack: required({ t, isNotText: true })(Yup.array()),\n    familiesExceptions: Yup.array(),\n    familiesExceptionsFromBack: Yup.array(),\n    linesExceptionsFromBack: Yup.array(),\n\n    achivements: required({ t, isNotText: true })(Yup.array()),\n    negotiatedFunds: required({ t, isNotText: true })(Yup.array()),\n    percentages: required({ t, isNotText: true })(Yup.array()),\n    attachments: Yup.array()\n  })\n\n  const lastFan = () => Yup.object().shape({\n    company: Yup.string(),\n    code: Yup.object(),\n    matrix: Yup.object(),\n    cliente: Yup.object(),\n    responsible: Yup.object(),\n    directorship: Yup.string(),\n    regionalManager: Yup.object(),\n    date: dateRange({ t })(Yup.object()),\n    observation: Yup.string(),\n    active: Yup.bool(),\n    lines: Yup.array(),\n    linesFromBack: Yup.array(),\n    linesExceptions: Yup.array(),\n    families: Yup.array(),\n    familiesFromBack: Yup.array(),\n    familiesExceptions: Yup.array(),\n    familiesExceptionsFromBack: Yup.array(),\n    linesExceptionsFromBack: Yup.array(),\n\n    achivements: Yup.array(),\n    negotiatedFunds: Yup.array(),\n    percentages: Yup.array(),\n    attachments: Yup.array()\n  })\n\n  return Yup.object().shape({\n    fan: fan(t),\n    lastFan: lastFan(t)\n  })\n}\n"]},"metadata":{},"sourceType":"module"}