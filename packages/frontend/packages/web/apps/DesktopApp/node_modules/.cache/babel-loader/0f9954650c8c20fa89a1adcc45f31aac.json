{"ast":null,"code":"import { eventChannel } from 'redux-saga';\nimport { all, spawn } from 'redux-saga/effects';\nimport access from '@britania-crm/stores/access/access.sagas';\nimport app from '@britania-crm/stores/app/app.sagas';\nimport auth from '@britania-crm/stores/auth/auth.sagas';\nimport buyer from '@britania-crm/stores/buyer/buyer.sagas';\nimport companies from '@britania-crm/stores/companies/companies.sagas';\nimport customer from '@britania-crm/stores/customer/customer.sagas';\nimport documents from '@britania-crm/stores/documents/documents.sagas';\nimport fan from '@britania-crm/stores/fan/fan.sagas';\nimport field from '@britania-crm/stores/field/field.sagas';\nimport file from '@britania-crm/stores/file/file.sagas';\nimport message from '@britania-crm/stores/message/message.sagas';\nimport { startWatchingNetworkConnectivity } from '@britania-crm/stores/network/network.sagas';\nimport profiles from '@britania-crm/stores/profiles/profiles.sagas';\nimport representative from '@britania-crm/stores/representative/representative.sagas';\nimport users from '@britania-crm/stores/users/users.sagas';\nimport vpc from '@britania-crm/stores/vpc/vpc.sagas';\nimport workflow from '@britania-crm/stores/workflow/workflow.sagas';\nconst networkChannel = eventChannel(emitter => {\n  const onOnline = () => emitter(true);\n\n  const onOffline = () => emitter(false);\n\n  window.addEventListener('online', onOnline);\n  window.addEventListener('offline', onOffline);\n  setTimeout(() => {\n    if (navigator.onLine) {\n      onOnline();\n    } else {\n      onOffline();\n    }\n  }, 100);\n  return () => {\n    window.removeEventListener('offline', onOnline);\n    window.removeEventListener('online', onOffline);\n  };\n});\nexport default function* root() {\n  yield all([spawn(startWatchingNetworkConnectivity(networkChannel)), ...app, ...auth, ...message, ...workflow, ...profiles, ...file, ...access, ...field, ...users, ...buyer, ...customer, ...representative, ...documents, ...vpc, ...fan, ...companies]);\n}","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/src/store/sagas.js"],"names":["eventChannel","all","spawn","access","app","auth","buyer","companies","customer","documents","fan","field","file","message","startWatchingNetworkConnectivity","profiles","representative","users","vpc","workflow","networkChannel","emitter","onOnline","onOffline","window","addEventListener","setTimeout","navigator","onLine","removeEventListener","root"],"mappings":"AACA,SAASA,YAAT,QAA6B,YAA7B;AACA,SACEC,GADF,EAEEC,KAFF,QAGO,oBAHP;AAKA,OAAOC,MAAP,MAAmB,0CAAnB;AACA,OAAOC,GAAP,MAAgB,oCAAhB;AACA,OAAOC,IAAP,MAAiB,sCAAjB;AACA,OAAOC,KAAP,MAAkB,wCAAlB;AACA,OAAOC,SAAP,MAAsB,gDAAtB;AACA,OAAOC,QAAP,MAAqB,8CAArB;AACA,OAAOC,SAAP,MAAsB,gDAAtB;AACA,OAAOC,GAAP,MAAgB,oCAAhB;AACA,OAAOC,KAAP,MAAkB,wCAAlB;AACA,OAAOC,IAAP,MAAiB,sCAAjB;AACA,OAAOC,OAAP,MAAoB,4CAApB;AACA,SAASC,gCAAT,QAAiD,4CAAjD;AACA,OAAOC,QAAP,MAAqB,8CAArB;AACA,OAAOC,cAAP,MAA2B,0DAA3B;AACA,OAAOC,KAAP,MAAkB,wCAAlB;AACA,OAAOC,GAAP,MAAgB,oCAAhB;AACA,OAAOC,QAAP,MAAqB,8CAArB;AAEA,MAAMC,cAAc,GAAGpB,YAAY,CAAEqB,OAAD,IAAa;AAC/C,QAAMC,QAAQ,GAAG,MAAMD,OAAO,CAAC,IAAD,CAA9B;;AACA,QAAME,SAAS,GAAG,MAAMF,OAAO,CAAC,KAAD,CAA/B;;AAEAG,EAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCH,QAAlC;AACAE,EAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmCF,SAAnC;AAEAG,EAAAA,UAAU,CAAC,MAAM;AACf,QAAIC,SAAS,CAACC,MAAd,EAAsB;AACpBN,MAAAA,QAAQ;AACT,KAFD,MAEO;AACLC,MAAAA,SAAS;AACV;AACF,GANS,EAMP,GANO,CAAV;AAQA,SAAO,MAAM;AACXC,IAAAA,MAAM,CAACK,mBAAP,CAA2B,SAA3B,EAAsCP,QAAtC;AACAE,IAAAA,MAAM,CAACK,mBAAP,CAA2B,QAA3B,EAAqCN,SAArC;AACD,GAHD;AAID,CAnBkC,CAAnC;AAqBA,eAAe,UAAUO,IAAV,GAAkB;AAC/B,QAAM7B,GAAG,CAAC,CACRC,KAAK,CAACY,gCAAgC,CAACM,cAAD,CAAjC,CADG,EAER,GAAGhB,GAFK,EAGR,GAAGC,IAHK,EAIR,GAAGQ,OAJK,EAKR,GAAGM,QALK,EAMR,GAAGJ,QANK,EAOR,GAAGH,IAPK,EAQR,GAAGT,MARK,EASR,GAAGQ,KATK,EAUR,GAAGM,KAVK,EAWR,GAAGX,KAXK,EAYR,GAAGE,QAZK,EAaR,GAAGQ,cAbK,EAcR,GAAGP,SAdK,EAeR,GAAGS,GAfK,EAgBR,GAAGR,GAhBK,EAiBR,GAAGH,SAjBK,CAAD,CAAT;AAmBD","sourcesContent":["\nimport { eventChannel } from 'redux-saga'\nimport {\n  all,\n  spawn\n} from 'redux-saga/effects'\n\nimport access from '@britania-crm/stores/access/access.sagas'\nimport app from '@britania-crm/stores/app/app.sagas'\nimport auth from '@britania-crm/stores/auth/auth.sagas'\nimport buyer from '@britania-crm/stores/buyer/buyer.sagas'\nimport companies from '@britania-crm/stores/companies/companies.sagas'\nimport customer from '@britania-crm/stores/customer/customer.sagas'\nimport documents from '@britania-crm/stores/documents/documents.sagas'\nimport fan from '@britania-crm/stores/fan/fan.sagas'\nimport field from '@britania-crm/stores/field/field.sagas'\nimport file from '@britania-crm/stores/file/file.sagas'\nimport message from '@britania-crm/stores/message/message.sagas'\nimport { startWatchingNetworkConnectivity } from '@britania-crm/stores/network/network.sagas'\nimport profiles from '@britania-crm/stores/profiles/profiles.sagas'\nimport representative from '@britania-crm/stores/representative/representative.sagas'\nimport users from '@britania-crm/stores/users/users.sagas'\nimport vpc from '@britania-crm/stores/vpc/vpc.sagas'\nimport workflow from '@britania-crm/stores/workflow/workflow.sagas'\n\nconst networkChannel = eventChannel((emitter) => {\n  const onOnline = () => emitter(true)\n  const onOffline = () => emitter(false)\n\n  window.addEventListener('online', onOnline)\n  window.addEventListener('offline', onOffline)\n\n  setTimeout(() => {\n    if (navigator.onLine) {\n      onOnline()\n    } else {\n      onOffline()\n    }\n  }, 100)\n\n  return () => {\n    window.removeEventListener('offline', onOnline)\n    window.removeEventListener('online', onOffline)\n  }\n})\n\nexport default function* root () {\n  yield all([\n    spawn(startWatchingNetworkConnectivity(networkChannel)),\n    ...app,\n    ...auth,\n    ...message,\n    ...workflow,\n    ...profiles,\n    ...file,\n    ...access,\n    ...field,\n    ...users,\n    ...buyer,\n    ...customer,\n    ...representative,\n    ...documents,\n    ...vpc,\n    ...fan,\n    ...companies\n  ])\n}\n"]},"metadata":{},"sourceType":"module"}