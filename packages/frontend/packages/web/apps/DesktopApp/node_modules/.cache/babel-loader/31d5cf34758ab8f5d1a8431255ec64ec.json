{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/components/InputCEP/InputCEP.js\";\nimport React, { useCallback, useRef, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport cepMask from '@britania-crm/forms/masks/cep.mask';\nimport { searchCep } from '@britania-crm/services/apis/brasilApi';\nimport TextField from '@britania-crm/web-components/TextField';\n\nconst InputCep = props => {\n  const {\n    onChange,\n    onAddressChange,\n    ...rest\n  } = props;\n  const [loading, setLoading] = useState(false);\n  const fieldRef = useRef(null);\n  const mounted = useRef(false);\n  const handleChange = useCallback(async event => {\n    var _fieldRef$current3;\n\n    const {\n      value\n    } = event.target;\n    onChange(value);\n\n    if ((value === null || value === void 0 ? void 0 : value.length) === 9) {\n      var _fieldRef$current;\n\n      if (fieldRef === null || fieldRef === void 0 ? void 0 : (_fieldRef$current = fieldRef.current) === null || _fieldRef$current === void 0 ? void 0 : _fieldRef$current.setCustomError) {\n        fieldRef.current.setCustomError(null);\n      }\n\n      try {\n        setLoading(true);\n        const address = await searchCep(value);\n\n        if (mounted.current) {\n          onAddressChange(address);\n          setLoading(false);\n        }\n      } catch (err) {\n        var _fieldRef$current2;\n\n        if (fieldRef === null || fieldRef === void 0 ? void 0 : (_fieldRef$current2 = fieldRef.current) === null || _fieldRef$current2 === void 0 ? void 0 : _fieldRef$current2.setCustomError) {\n          fieldRef.current.setCustomError(err.message);\n        }\n\n        if (mounted.current) {\n          setLoading(false);\n        }\n      }\n    } else if (fieldRef === null || fieldRef === void 0 ? void 0 : (_fieldRef$current3 = fieldRef.current) === null || _fieldRef$current3 === void 0 ? void 0 : _fieldRef$current3.customError) {\n      fieldRef.current.setCustomError(null);\n    }\n  }, [onAddressChange, onChange]);\n  useEffect(() => {\n    mounted.current = true;\n    return () => {\n      mounted.current = false;\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(TextField, Object.assign({\n    ref: fieldRef\n  }, rest, {\n    type: \"tel\",\n    setMask: cepMask,\n    onChange: handleChange,\n    InputProps: {\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }\n      }, loading && /*#__PURE__*/React.createElement(CircularProgress, {\n        color: \"inherit\",\n        size: 18,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }\n      }))\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }));\n};\n\nInputCep.propTypes = {\n  onChange: PropTypes.func,\n  onAddressChange: PropTypes.func\n};\nInputCep.defaultProps = {\n  onChange() {},\n\n  onAddressChange() {}\n\n};\nexport default InputCep;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/components/InputCEP/InputCEP.js"],"names":["React","useCallback","useRef","useState","useEffect","PropTypes","CircularProgress","InputAdornment","cepMask","searchCep","TextField","InputCep","props","onChange","onAddressChange","rest","loading","setLoading","fieldRef","mounted","handleChange","event","value","target","length","current","setCustomError","address","err","message","customError","endAdornment","propTypes","func","defaultProps"],"mappings":"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","sourcesContent":["import React, {\n  useCallback,\n  useRef,\n  useState,\n  useEffect\n} from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport InputAdornment from '@material-ui/core/InputAdornment'\n\nimport cepMask from '@britania-crm/forms/masks/cep.mask'\nimport { searchCep } from '@britania-crm/services/apis/brasilApi'\nimport TextField from '@britania-crm/web-components/TextField'\n\nconst InputCep = (props) => {\n  const {\n    onChange,\n    onAddressChange,\n    ...rest\n  } = props\n\n  const [loading, setLoading] = useState(false)\n\n  const fieldRef = useRef(null)\n  const mounted = useRef(false)\n\n  const handleChange = useCallback(\n    async (event) => {\n      const { value } = event.target\n      onChange(value)\n      if (value?.length === 9) {\n        if (fieldRef?.current?.setCustomError) {\n          fieldRef.current.setCustomError(null)\n        }\n        try {\n          setLoading(true)\n          const address = await searchCep(value)\n          if (mounted.current) {\n            onAddressChange(address)\n            setLoading(false)\n          }\n        } catch (err) {\n          if (fieldRef?.current?.setCustomError) {\n            fieldRef.current.setCustomError(err.message)\n          }\n          if (mounted.current) {\n            setLoading(false)\n          }\n        }\n      } else if (fieldRef?.current?.customError) {\n        fieldRef.current.setCustomError(null)\n      }\n    },\n    [onAddressChange, onChange]\n  )\n\n  useEffect(\n    () => {\n      mounted.current = true\n      return () => {\n        mounted.current = false\n      }\n    },\n    []\n  )\n\n  return (\n    <TextField\n      ref={ fieldRef }\n      { ...rest }\n      type=\"tel\"\n      setMask={ cepMask }\n      onChange={ handleChange }\n      InputProps={ {\n        endAdornment: (\n          <InputAdornment position=\"end\">\n            {loading && (\n              <CircularProgress\n                color=\"inherit\"\n                size={ 18 }\n              />\n            ) }\n          </InputAdornment>\n        )\n      } }\n    />\n  )\n}\n\nInputCep.propTypes = {\n  onChange: PropTypes.func,\n  onAddressChange: PropTypes.func\n}\n\nInputCep.defaultProps = {\n  onChange () {},\n  onAddressChange () {}\n}\n\nexport default InputCep\n"]},"metadata":{},"sourceType":"module"}