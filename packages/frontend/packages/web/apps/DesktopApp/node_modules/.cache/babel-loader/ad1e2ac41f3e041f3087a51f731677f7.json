{"ast":null,"code":"var _curry1 = /*#__PURE__*/require('./internal/_curry1');\n/**\n * Creates a new object from a list key-value pairs. If a key appears in\n * multiple pairs, the rightmost pair is included in the object.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [[k,v]] -> {k: v}\n * @param {Array} pairs An array of two-element arrays that will be the keys and values of the output object.\n * @return {Object} The object made by pairing up `keys` and `values`.\n * @see R.toPairs, R.pair\n * @example\n *\n *      R.fromPairs([['a', 1], ['b', 2], ['c', 3]]); //=> {a: 1, b: 2, c: 3}\n */\n\n\nvar fromPairs = /*#__PURE__*/_curry1(function fromPairs(pairs) {\n  var result = {};\n  var idx = 0;\n\n  while (idx < pairs.length) {\n    result[pairs[idx][0]] = pairs[idx][1];\n    idx += 1;\n  }\n\n  return result;\n});\n\nmodule.exports = fromPairs;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/node_modules/ramda/src/fromPairs.js"],"names":["_curry1","require","fromPairs","pairs","result","idx","length","module","exports"],"mappings":"AAAA,IAAIA,OAAO,GAAG,aAAaC,OAAO,CAAC,oBAAD,CAAlC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,IAAIC,SAAS,GAAG,aAAaF,OAAO,CAAC,SAASE,SAAT,CAAmBC,KAAnB,EAA0B;AAC7D,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,GAAG,GAAG,CAAV;;AACA,SAAOA,GAAG,GAAGF,KAAK,CAACG,MAAnB,EAA2B;AACzBF,IAAAA,MAAM,CAACD,KAAK,CAACE,GAAD,CAAL,CAAW,CAAX,CAAD,CAAN,GAAwBF,KAAK,CAACE,GAAD,CAAL,CAAW,CAAX,CAAxB;AACAA,IAAAA,GAAG,IAAI,CAAP;AACD;;AACD,SAAOD,MAAP;AACD,CARmC,CAApC;;AASAG,MAAM,CAACC,OAAP,GAAiBN,SAAjB","sourcesContent":["var _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\n/**\n * Creates a new object from a list key-value pairs. If a key appears in\n * multiple pairs, the rightmost pair is included in the object.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [[k,v]] -> {k: v}\n * @param {Array} pairs An array of two-element arrays that will be the keys and values of the output object.\n * @return {Object} The object made by pairing up `keys` and `values`.\n * @see R.toPairs, R.pair\n * @example\n *\n *      R.fromPairs([['a', 1], ['b', 2], ['c', 3]]); //=> {a: 1, b: 2, c: 3}\n */\n\n\nvar fromPairs = /*#__PURE__*/_curry1(function fromPairs(pairs) {\n  var result = {};\n  var idx = 0;\n  while (idx < pairs.length) {\n    result[pairs[idx][0]] = pairs[idx][1];\n    idx += 1;\n  }\n  return result;\n});\nmodule.exports = fromPairs;"]},"metadata":{},"sourceType":"script"}