{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/documentation/screens/DocumentationListScreen/DocumentationListScreen.js\";\nimport React, { useCallback, useMemo, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { isEmpty } from 'lodash';\nimport { useDialog } from '@britania-crm/dialog';\nimport { useT } from '@britania-crm/i18n';\nimport { documents as documentsCrmRoutes } from '@britania-crm/services/apis/crmApi/resources/routes';\nimport useCrmApi from '@britania-crm/services/hooks/useCrmApi';\nimport { DocumentsActions } from '@britania-crm/stores/documents';\nimport DataTable from '@britania-crm/web-components/DataTable';\nimport ConfirmModal from '@britania-crm/web-components/Modal/ConfirmModal';\nimport { useRoutes } from '@britania-crm/web-src/routes/authenticated.routes';\nimport { Container } from './styles';\n\nconst DocumentationListScreen = () => {\n  const t = useT();\n  const dispatch = useCallback(useDispatch(), []);\n  const {\n    createDialog\n  } = useDialog();\n  const {\n    routes,\n    currentRoutePermissions\n  } = useRoutes();\n  const history = useHistory();\n  const [loadingState, setLoading] = useState(false);\n  const {\n    data,\n    loading: loadingHook,\n    mutate\n  } = useCrmApi([documentsCrmRoutes.getAll]);\n  const loading = useMemo(() => loadingState || loadingHook, [loadingHook, loadingState]);\n  const columns = useMemo(() => [{\n    title: t('title'),\n    field: 'title'\n  }, {\n    title: t('attachment'),\n    field: 'file.filename'\n  }, {\n    title: t('guidelines'),\n    field: 'observation',\n\n    render(row) {\n      if ((row === null || row === void 0 ? void 0 : row.observation) && (row === null || row === void 0 ? void 0 : row.observation.length) > 20) {\n        const newString = row === null || row === void 0 ? void 0 : row.observation.slice(0, 20);\n        return newString.concat('...');\n      }\n\n      return row === null || row === void 0 ? void 0 : row.observation;\n    }\n\n  }], [t]);\n  const onEditClick = useCallback((event, row) => {\n    history.push(routes.editDocumentation.path, {\n      params: {\n        mode: 'edit',\n        alias: row.alias\n      }\n    });\n  }, [history, routes]);\n  const handleDelete = useCallback(id => {\n    setLoading(true);\n    dispatch(DocumentsActions.deleteDocument(id, () => {\n      mutate();\n      setLoading(false);\n    }));\n  }, [dispatch, mutate]);\n  const onDeleteClick = useCallback((event, row) => createDialog({\n    id: 'delete-document-modal',\n    Component: ConfirmModal,\n    props: {\n      onConfirm() {\n        handleDelete(row.id);\n      }\n\n    }\n  }), [createDialog, handleDelete]);\n  const onCreateClick = useCallback(() => {\n    history.push(routes.newDocumentation.path, {\n      params: {\n        mode: 'create'\n      }\n    });\n  }, [history, routes]); // Foi feito esse método pois no momento só existe um tipo de documentação (pré cadastro de cliente)\n  // No futuro, quando houverem mais, essa tabela se tornará genérica e será necessário inserir um inputselect\n  // no componente de criação para determinar a página que irá a documentação\n\n  const alreadyHavePreCadClient = useMemo(() => {\n    if (isEmpty(data)) {\n      return onCreateClick;\n    }\n  }, [data, onCreateClick]);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DataTable, {\n    data: data,\n    columns: columns,\n    loading: loading,\n    title: t('customer pre-registration {this}', {\n      this: t('documentation', {\n        howMany: 1\n      })\n    }),\n    addTitle: t('add new {this}', {\n      gender: 'male',\n      this: t('document', {\n        howMany: 1\n      })\n    }),\n    onAddClick: currentRoutePermissions.INCLUIR && alreadyHavePreCadClient,\n    onEditClick: currentRoutePermissions.EDITAR && onEditClick,\n    onDeleteClick: currentRoutePermissions.EXCLUIR && onDeleteClick,\n    onGoBack: history.goBack,\n    options: {\n      search: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default DocumentationListScreen;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/documentation/screens/DocumentationListScreen/DocumentationListScreen.js"],"names":["React","useCallback","useMemo","useState","useDispatch","useHistory","isEmpty","useDialog","useT","documents","documentsCrmRoutes","useCrmApi","DocumentsActions","DataTable","ConfirmModal","useRoutes","Container","DocumentationListScreen","t","dispatch","createDialog","routes","currentRoutePermissions","history","loadingState","setLoading","data","loading","loadingHook","mutate","getAll","columns","title","field","render","row","observation","length","newString","slice","concat","onEditClick","event","push","editDocumentation","path","params","mode","alias","handleDelete","id","deleteDocument","onDeleteClick","Component","props","onConfirm","onCreateClick","newDocumentation","alreadyHavePreCadClient","this","howMany","gender","INCLUIR","EDITAR","EXCLUIR","goBack","search"],"mappings":"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","sourcesContent":["import React, {\n  useCallback,\n  useMemo,\n  useState\n} from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\n\nimport { isEmpty } from 'lodash'\n\nimport { useDialog } from '@britania-crm/dialog'\nimport { useT } from '@britania-crm/i18n'\nimport { documents as documentsCrmRoutes } from '@britania-crm/services/apis/crmApi/resources/routes'\nimport useCrmApi from '@britania-crm/services/hooks/useCrmApi'\nimport { DocumentsActions } from '@britania-crm/stores/documents'\nimport DataTable from '@britania-crm/web-components/DataTable'\nimport ConfirmModal from '@britania-crm/web-components/Modal/ConfirmModal'\nimport { useRoutes } from '@britania-crm/web-src/routes/authenticated.routes'\n\nimport { Container } from './styles'\n\nconst DocumentationListScreen = () => {\n  const t = useT()\n  const dispatch = useCallback(useDispatch(), [])\n  const { createDialog } = useDialog()\n  const { routes, currentRoutePermissions } = useRoutes()\n  const history = useHistory()\n\n  const [loadingState, setLoading] = useState(false)\n\n  const {\n    data,\n    loading: loadingHook,\n    mutate\n  } = useCrmApi([documentsCrmRoutes.getAll])\n\n  const loading = useMemo(() => loadingState || loadingHook, [loadingHook, loadingState])\n\n  const columns = useMemo(() => [\n    {\n      title: t('title'),\n      field: 'title'\n    },\n    {\n      title: t('attachment'),\n      field: 'file.filename'\n    },\n    {\n      title: t('guidelines'),\n      field: 'observation',\n      render (row) {\n        if (row?.observation && row?.observation.length > 20) {\n          const newString = row?.observation.slice(0, 20)\n          return newString.concat('...')\n        }\n        return row?.observation\n      }\n    }\n  ], [t])\n\n  const onEditClick = useCallback((event, row) => {\n    history.push(routes.editDocumentation.path, {\n      params: {\n        mode: 'edit',\n        alias: row.alias\n      }\n    })\n  }, [history, routes])\n\n  const handleDelete = useCallback((id) => {\n    setLoading(true)\n    dispatch(DocumentsActions.deleteDocument(id, () => {\n      mutate()\n      setLoading(false)\n    }))\n  }, [dispatch, mutate])\n\n  const onDeleteClick = useCallback(\n    (event, row) => createDialog({\n      id: 'delete-document-modal',\n      Component: ConfirmModal,\n      props: {\n        onConfirm () {\n          handleDelete(row.id)\n        }\n      }\n    }),\n    [createDialog, handleDelete]\n  )\n\n  const onCreateClick = useCallback(\n    () => {\n      history.push(routes.newDocumentation.path, { params: { mode: 'create' } })\n    },\n    [history, routes]\n  )\n\n  // Foi feito esse método pois no momento só existe um tipo de documentação (pré cadastro de cliente)\n  // No futuro, quando houverem mais, essa tabela se tornará genérica e será necessário inserir um inputselect\n  // no componente de criação para determinar a página que irá a documentação\n  const alreadyHavePreCadClient = useMemo(() => {\n    if (isEmpty(data)) {\n      return onCreateClick\n    }\n  }, [data, onCreateClick])\n\n  return (\n    <Container>\n      <DataTable\n        data={ data }\n        columns={ columns }\n        loading={ loading }\n        title={ t('customer pre-registration {this}', { this: t('documentation', { howMany: 1 }) }) }\n        addTitle={ t('add new {this}', { gender: 'male', this: t('document', { howMany: 1 }) }) }\n        onAddClick={ currentRoutePermissions.INCLUIR && alreadyHavePreCadClient }\n        onEditClick={ currentRoutePermissions.EDITAR && onEditClick }\n        onDeleteClick={ currentRoutePermissions.EXCLUIR && onDeleteClick }\n        onGoBack={ history.goBack }\n        options={ { search: false } }\n      />\n    </Container>\n  )\n}\n\nexport default DocumentationListScreen\n"]},"metadata":{},"sourceType":"module"}