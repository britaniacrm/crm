{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/src/routes/ScreenRouter/AuthenticatedScreenRouter.js\";\nimport React, { memo, useEffect } from 'react';\nimport { useDialog } from '@britania-crm/dialog';\nimport { useRoutes } from '@britania-crm/web-src/routes/authenticated.routes';\nimport RouterSwitch from './RouterSwitch';\n\nconst AuthenticatedScreenRouter = props => {\n  const {\n    routes\n  } = useRoutes();\n  const {\n    resetDialogs\n  } = useDialog();\n  useEffect(() => {\n    resetDialogs();\n  }, [resetDialogs]);\n  return /*#__PURE__*/React.createElement(RouterSwitch, Object.assign({\n    routes: routes,\n    escapeTo: routes.home.path\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default memo(AuthenticatedScreenRouter);","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/src/routes/ScreenRouter/AuthenticatedScreenRouter.js"],"names":["React","memo","useEffect","useDialog","useRoutes","RouterSwitch","AuthenticatedScreenRouter","props","routes","resetDialogs","home","path"],"mappings":";AAAA,OAAOA,KAAP,IACEC,IADF,EAEEC,SAFF,QAGO,OAHP;AAKA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,SAAT,QAA0B,mDAA1B;AAEA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,MAAMC,yBAAyB,GAAIC,KAAD,IAAW;AAC3C,QAAM;AAAEC,IAAAA;AAAF,MAAaJ,SAAS,EAA5B;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAmBN,SAAS,EAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,YAAY;AACb,GAFQ,EAEN,CAACA,YAAD,CAFM,CAAT;AAIA,sBACE,oBAAC,YAAD;AACE,IAAA,MAAM,EAAGD,MADX;AAEE,IAAA,QAAQ,EAAGA,MAAM,CAACE,IAAP,CAAYC;AAFzB,KAGOJ,KAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAOD,CAfD;;AAiBA,eAAeN,IAAI,CAACK,yBAAD,CAAnB","sourcesContent":["import React, {\n  memo,\n  useEffect\n} from 'react'\n\nimport { useDialog } from '@britania-crm/dialog'\nimport { useRoutes } from '@britania-crm/web-src/routes/authenticated.routes'\n\nimport RouterSwitch from './RouterSwitch'\n\nconst AuthenticatedScreenRouter = (props) => {\n  const { routes } = useRoutes()\n  const { resetDialogs } = useDialog()\n\n  useEffect(() => {\n    resetDialogs()\n  }, [resetDialogs])\n\n  return (\n    <RouterSwitch\n      routes={ routes }\n      escapeTo={ routes.home.path }\n      { ...props }\n    />\n  )\n}\n\nexport default memo(AuthenticatedScreenRouter)\n"]},"metadata":{},"sourceType":"module"}