{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/companies/screens/CompanyFormScreen/CompanyFormScreen.js\";\nimport React, { useCallback, useMemo, useRef, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport isEmpty from 'lodash/isEmpty';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { useFormEffect } from '@britania-crm/forms';\nimport companiesSchema, { INITIAL_VALUES } from '@britania-crm/forms/schemas/companies/companies.schema';\nimport I18n, { useT } from '@britania-crm/i18n';\nimport { useBanksList } from '@britania-crm/services/apis/bancoCentralApi';\nimport { companies as companiesRoutes } from '@britania-crm/services/apis/crmApi/resources/routes';\nimport useCrmApi from '@britania-crm/services/hooks/useCrmApi';\nimport { CompanyActions } from '@britania-crm/stores/companies';\nimport { trimMask } from '@britania-crm/utils/formatters';\nimport Button from '@britania-crm/web-components/Button';\nimport Form from '@britania-crm/web-components/Form';\nimport InputCpfCnpj from '@britania-crm/web-components/InputCpfCnpj';\nimport InputSelect from '@britania-crm/web-components/InputSelect';\nimport InputText from '@britania-crm/web-components/InputText';\nimport { CircularLoader } from '@britania-crm/web-components/Loader';\nimport TextArea from '@britania-crm/web-components/TextArea';\nimport { useRoutes } from '@britania-crm/web-src/routes/authenticated.routes';\nimport useStyles from './styles';\n\nconst CompanyFormScreen = () => {\n  const t = useT();\n  const classes = useStyles();\n  const {\n    routes,\n    currentRoute\n  } = useRoutes();\n  const dispatch = useCallback(useDispatch(), []);\n  const history = useHistory();\n  const {\n    state\n  } = useLocation();\n  const formRef = useRef(null);\n  const [loader, setLoader] = useState(false);\n  const [title, setTitle] = useState();\n  const mode = useMemo(() => {\n    var _routes$viewCompany, _routes$newCompany, _routes$editCompany;\n\n    switch (currentRoute.path) {\n      case (_routes$viewCompany = routes.viewCompany) === null || _routes$viewCompany === void 0 ? void 0 : _routes$viewCompany.path:\n        return 'view';\n\n      case (_routes$newCompany = routes.newCompany) === null || _routes$newCompany === void 0 ? void 0 : _routes$newCompany.path:\n        return 'create';\n\n      case (_routes$editCompany = routes.editCompany) === null || _routes$editCompany === void 0 ? void 0 : _routes$editCompany.path:\n        return 'edit';\n\n      default:\n        return 'view';\n    }\n  }, [currentRoute, routes]);\n  const isEdit = useMemo(() => mode === 'edit', [mode]);\n  const companyId = useMemo(() => {\n    var _state$params;\n\n    return state === null || state === void 0 ? void 0 : (_state$params = state.params) === null || _state$params === void 0 ? void 0 : _state$params.id;\n  }, [state]);\n  const disabled = useMemo(() => mode === 'view', [mode]);\n  const pageTitle = useMemo(() => {\n    switch (mode) {\n      case 'edit':\n        return t('editing {this}', {\n          this: t('company', {\n            howMany: 1\n          })\n        });\n\n      case 'view':\n        return t('view of {this}', {\n          this: t('company', {\n            howMany: 1\n          })\n        });\n\n      default:\n        return t('new {this}', {\n          gender: 'female',\n          this: t('company', {\n            howMany: 1\n          })\n        });\n    }\n  }, [mode, t]);\n  const {\n    data: companyFromApi,\n    loading\n  } = useCrmApi(companyId ? [companiesRoutes.getOne.replace(':id', companyId), companyId] : null);\n  const onSuccessCallBack = useCallback(() => {\n    history.push(routes.companies.path);\n    setLoader(false);\n  }, [history, routes.companies.path]);\n  const handleSubmit = useCallback(values => {\n    const payload = { ...values,\n      cnpj: values.cnpj ? trimMask(values.cnpj) : null\n    };\n\n    if (mode === 'edit') {\n      dispatch(CompanyActions.updateCompany(payload, companyId, onSuccessCallBack, () => setLoader(false)));\n    } else {\n      dispatch(CompanyActions.saveCompany(payload, onSuccessCallBack, () => setLoader(false)));\n    }\n  }, [companyId, dispatch, mode, onSuccessCallBack]);\n  useFormEffect(() => {\n    if (!isEmpty(companyFromApi)) {\n      formRef.current.setData({ ...companyFromApi\n      });\n    }\n  }, [companyFromApi]);\n  const {\n    data: banksList,\n    loading: banksListLoading\n  } = useBanksList();\n  return /*#__PURE__*/React.createElement(Form, {\n    ref: formRef,\n    onSubmit: handleSubmit,\n    schemaConstructor: companiesSchema,\n    defaultValues: INITIAL_VALUES,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 5\n    }\n  }, (loader || loading) && /*#__PURE__*/React.createElement(CircularLoader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    className: classes.header,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    variant: \"h4\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, pageTitle)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputText, {\n    name: \"name\",\n    label: t('company'),\n    onValueChange: setTitle,\n    readOnly: disabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputCpfCnpj, {\n    name: \"cnpj\",\n    mode: \"cnpj\",\n    label: t('cnpj'),\n    onValueChange: setTitle,\n    readOnly: disabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputSelect, {\n    name: \"bankCode\",\n    label: t('bank'),\n    options: banksList,\n    valueKey: \"label\",\n    idKey: \"CodigoSicap\",\n    loading: banksListLoading,\n    readOnly: disabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputText, {\n    name: \"agency\",\n    label: t('agency', {\n      howMany: 1\n    }),\n    onValueChange: setTitle,\n    readOnly: disabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputText, {\n    name: \"account\",\n    label: t('account', {\n      howMany: 1\n    }),\n    onValueChange: setTitle,\n    readOnly: disabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputText, {\n    name: \"identifier\",\n    label: t('identifier'),\n    onValueChange: setTitle,\n    readOnly: disabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextArea, {\n    name: \"message\",\n    label: t('message label'),\n    onValueChange: setTitle,\n    readOnly: disabled,\n    rows: 3,\n    inputProps: {\n      maxLength: 500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: classes.buttons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 11\n    }\n  }), mode === 'view' ? /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(I18n, {\n    as: Button,\n    variant: \"outlined\",\n    color: \"secondary\",\n    readOnly: loader,\n    onClick: () => history.push(routes.companies.path),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 15\n    }\n  }, \"back\")) : /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(I18n, {\n    as: Button,\n    variant: \"outlined\",\n    color: \"secondary\",\n    readOnly: loader,\n    onClick: () => history.push(routes.companies.path),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 15\n    }\n  }, \"cancel\"), /*#__PURE__*/React.createElement(I18n, {\n    as: Button,\n    color: \"secondary\",\n    variant: \"contained\",\n    readOnly: !title,\n    className: classes.btnSave,\n    isLoading: loader,\n    onClick: () => formRef.current.submit(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 15\n    }\n  }, isEdit ? 'request atualization' : 'finish registration')))));\n};\n\nexport default CompanyFormScreen;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/companies/screens/CompanyFormScreen/CompanyFormScreen.js"],"names":["React","useCallback","useMemo","useRef","useState","useDispatch","useHistory","useLocation","isEmpty","Grid","Typography","useFormEffect","companiesSchema","INITIAL_VALUES","I18n","useT","useBanksList","companies","companiesRoutes","useCrmApi","CompanyActions","trimMask","Button","Form","InputCpfCnpj","InputSelect","InputText","CircularLoader","TextArea","useRoutes","useStyles","CompanyFormScreen","t","classes","routes","currentRoute","dispatch","history","state","formRef","loader","setLoader","title","setTitle","mode","path","viewCompany","newCompany","editCompany","isEdit","companyId","params","id","disabled","pageTitle","this","howMany","gender","data","companyFromApi","loading","getOne","replace","onSuccessCallBack","push","handleSubmit","values","payload","cnpj","updateCompany","saveCompany","current","setData","banksList","banksListLoading","container","header","maxLength","buttons","btnSave","submit"],"mappings":"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","sourcesContent":["import React, {\n  useCallback,\n  useMemo,\n  useRef,\n  useState\n} from 'react'\nimport { useDispatch } from 'react-redux'\nimport {\n  useHistory,\n  useLocation\n} from 'react-router-dom'\n\nimport isEmpty from 'lodash/isEmpty'\n\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\n\nimport { useFormEffect } from '@britania-crm/forms'\nimport companiesSchema, { INITIAL_VALUES } from '@britania-crm/forms/schemas/companies/companies.schema'\nimport I18n, { useT } from '@britania-crm/i18n'\nimport { useBanksList } from '@britania-crm/services/apis/bancoCentralApi'\nimport { companies as companiesRoutes } from '@britania-crm/services/apis/crmApi/resources/routes'\nimport useCrmApi from '@britania-crm/services/hooks/useCrmApi'\nimport { CompanyActions } from '@britania-crm/stores/companies'\nimport { trimMask } from '@britania-crm/utils/formatters'\nimport Button from '@britania-crm/web-components/Button'\nimport Form from '@britania-crm/web-components/Form'\nimport InputCpfCnpj from '@britania-crm/web-components/InputCpfCnpj'\nimport InputSelect from '@britania-crm/web-components/InputSelect'\nimport InputText from '@britania-crm/web-components/InputText'\nimport { CircularLoader } from '@britania-crm/web-components/Loader'\nimport TextArea from '@britania-crm/web-components/TextArea'\nimport { useRoutes } from '@britania-crm/web-src/routes/authenticated.routes'\n\nimport useStyles from './styles'\n\nconst CompanyFormScreen = () => {\n  const t = useT()\n  const classes = useStyles()\n  const { routes, currentRoute } = useRoutes()\n  const dispatch = useCallback(useDispatch(), [])\n  const history = useHistory()\n\n  const { state } = useLocation()\n  const formRef = useRef(null)\n\n  const [loader, setLoader] = useState(false)\n  const [title, setTitle] = useState()\n\n  const mode = useMemo(\n    () => {\n      switch (currentRoute.path) {\n        case routes.viewCompany?.path: return 'view'\n        case routes.newCompany?.path: return 'create'\n        case routes.editCompany?.path: return 'edit'\n        default: return 'view'\n      }\n    },\n    [currentRoute, routes]\n  )\n  const isEdit = useMemo(() => mode === 'edit', [mode])\n  const companyId = useMemo(() => state?.params?.id, [state])\n  const disabled = useMemo(() => mode === 'view', [mode])\n\n  const pageTitle = useMemo(() => {\n    switch (mode) {\n      case 'edit':\n        return t('editing {this}', { this: t('company', { howMany: 1 }) })\n      case 'view':\n        return t('view of {this}', { this: t('company', { howMany: 1 }) })\n      default:\n        return t('new {this}', { gender: 'female', this: t('company', { howMany: 1 }) })\n    }\n  }, [mode, t])\n\n  const { data: companyFromApi, loading } = useCrmApi(companyId ? [companiesRoutes.getOne.replace(':id', companyId), companyId] : null)\n\n  const onSuccessCallBack = useCallback(\n    () => {\n      history.push(routes.companies.path)\n      setLoader(false)\n    }\n    ,\n    [history, routes.companies.path]\n  )\n\n  const handleSubmit = useCallback(\n    (values) => {\n      const payload = {\n        ...values,\n        cnpj: values.cnpj ? trimMask(values.cnpj) : null\n      }\n      if (mode === 'edit') {\n        dispatch(CompanyActions.updateCompany(\n          payload,\n          companyId,\n          onSuccessCallBack,\n          () => setLoader(false)\n        ))\n      } else {\n        dispatch(CompanyActions.saveCompany(\n          payload,\n          onSuccessCallBack,\n          () => setLoader(false)\n        ))\n      }\n    },\n    [companyId, dispatch, mode, onSuccessCallBack]\n  )\n\n  useFormEffect(() => {\n    if (!isEmpty(companyFromApi)) {\n      formRef.current.setData({ ...companyFromApi })\n    }\n  }, [companyFromApi])\n\n  const {\n    data: banksList,\n    loading: banksListLoading\n  } = useBanksList()\n\n  return (\n    <Form\n      ref={ formRef }\n      onSubmit={ handleSubmit }\n      schemaConstructor={ companiesSchema }\n      defaultValues={ INITIAL_VALUES }\n    >\n      {(loader || loading) && <CircularLoader/>}\n      <Grid container spacing={ 2 } className={ classes.container } >\n        <Grid item className={ classes.header } sm={ 12 }>\n          <Typography className={ classes.title } variant=\"h4\" gutterBottom >\n            {pageTitle}\n          </Typography>\n        </Grid>\n\n        <Grid item sm={ 12 } md={ 8 }>\n          <InputText\n            name=\"name\"\n            label={ t('company') }\n            onValueChange={ setTitle }\n            readOnly={ disabled }\n          />\n        </Grid>\n        <Grid item sm={ 12 } md={ 4 }>\n          <InputCpfCnpj\n            name=\"cnpj\"\n            mode=\"cnpj\"\n            label={ t('cnpj') }\n            onValueChange={ setTitle }\n            readOnly={ disabled }\n          />\n        </Grid>\n        <Grid item sm={ 12 } md={ 4 }>\n          <InputSelect\n            name=\"bankCode\"\n            label={ t('bank') }\n            options={ banksList }\n            valueKey=\"label\"\n            idKey=\"CodigoSicap\"\n            loading={ banksListLoading }\n            readOnly={ disabled }\n          />\n        </Grid>\n        <Grid item sm={ 12 } md={ 2 }>\n          <InputText\n            name=\"agency\"\n            label={ t('agency', { howMany: 1 }) }\n            onValueChange={ setTitle }\n            readOnly={ disabled }\n          />\n        </Grid>\n        <Grid item sm={ 12 } md={ 2 }>\n          <InputText\n            name=\"account\"\n            label={ t('account', { howMany: 1 }) }\n            onValueChange={ setTitle }\n            readOnly={ disabled }\n          />\n        </Grid>\n        <Grid item sm={ 12 } md={ 4 }>\n          <InputText\n            name=\"identifier\"\n            label={ t('identifier') }\n            onValueChange={ setTitle }\n            readOnly={ disabled }\n          />\n        </Grid>\n        <Grid item sm={ 12 } md={ 12 }>\n          <TextArea\n            name=\"message\"\n            label={ t('message label') }\n            onValueChange={ setTitle }\n            readOnly={ disabled }\n            rows={ 3 }\n            inputProps={ { maxLength: 500 } }\n          />\n\n        </Grid>\n        <Grid item xs={ 12 } className={ classes.buttons }>\n          <Grid>\n          </Grid>\n          {mode === 'view' ? (\n            <Grid>\n              <I18n\n                as={ Button }\n                variant=\"outlined\"\n                color=\"secondary\"\n                readOnly={ loader }\n                onClick={ () => history.push(routes.companies.path) }\n              >\n              back\n              </I18n>\n\n            </Grid>\n          ) : (\n            <Grid>\n              <I18n\n                as={ Button }\n                variant=\"outlined\"\n                color=\"secondary\"\n                readOnly={ loader }\n                onClick={ () => history.push(routes.companies.path) }\n              >\n              cancel\n              </I18n>\n              <I18n as={ Button }\n                color=\"secondary\"\n                variant=\"contained\"\n                readOnly={ !title }\n                className={ classes.btnSave }\n                isLoading={ loader }\n                onClick={ () => formRef.current.submit() }\n              >\n                {isEdit ? 'request atualization' : 'finish registration'}\n              </I18n>\n            </Grid>\n          )}\n\n        </Grid>\n      </Grid>\n    </Form>\n  )\n}\n\nexport default CompanyFormScreen\n"]},"metadata":{},"sourceType":"module"}