{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/components/RankingBadge/RankingBadge.js\";\nimport React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { useT } from '@britania-crm/i18n';\nimport { Container, Star } from './styles';\n\nconst RankingBadge = ({\n  type\n}) => {\n  const t = useT();\n  const rankings = useMemo(() => [{\n    name: t('bronze'),\n    color: '#EA9E5B'\n  }, {\n    name: t('silver'),\n    color: '#CED4DA'\n  }, {\n    name: t('gold'),\n    color: '#FFDD64'\n  }, {\n    name: t('diamond'),\n    color: '#94D8FF'\n  }], [t]);\n  const ranking = useMemo(() => {\n    if (type === 'SILVER') {\n      return rankings[1];\n    } else if (type === 'GOLD') {\n      return rankings[2];\n    } else if (type === 'DIAMOND') {\n      return rankings[3];\n    }\n\n    return rankings[0];\n  }, [rankings, type]);\n  const color = (ranking === null || ranking === void 0 ? void 0 : ranking.color) || '';\n  const name = (ranking === null || ranking === void 0 ? void 0 : ranking.name) || '';\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Star, {\n    iconcolor: color,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), \" \", name);\n};\n\nRankingBadge.propTypes = {\n  type: PropTypes.string\n};\nRankingBadge.defaultProps = {\n  type: 'BRONZE'\n};\nexport default RankingBadge;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/components/RankingBadge/RankingBadge.js"],"names":["React","useMemo","PropTypes","useT","Container","Star","RankingBadge","type","t","rankings","name","color","ranking","propTypes","string","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,IAAT,QAAqB,oBAArB;AAEA,SACEC,SADF,EAEEC,IAFF,QAGO,UAHP;;AAKA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AACjC,QAAMC,CAAC,GAAGL,IAAI,EAAd;AAEA,QAAMM,QAAQ,GAAGR,OAAO,CAAC,MAAM,CAC7B;AAAES,IAAAA,IAAI,EAAEF,CAAC,CAAC,QAAD,CAAT;AAAqBG,IAAAA,KAAK,EAAE;AAA5B,GAD6B,EAE7B;AAAED,IAAAA,IAAI,EAAEF,CAAC,CAAC,QAAD,CAAT;AAAqBG,IAAAA,KAAK,EAAE;AAA5B,GAF6B,EAG7B;AAAED,IAAAA,IAAI,EAAEF,CAAC,CAAC,MAAD,CAAT;AAAmBG,IAAAA,KAAK,EAAE;AAA1B,GAH6B,EAI7B;AAAED,IAAAA,IAAI,EAAEF,CAAC,CAAC,SAAD,CAAT;AAAsBG,IAAAA,KAAK,EAAE;AAA7B,GAJ6B,CAAP,EAKrB,CAACH,CAAD,CALqB,CAAxB;AAOA,QAAMI,OAAO,GAAGX,OAAO,CAAC,MAAM;AAC5B,QAAIM,IAAI,KAAK,QAAb,EAAuB;AACrB,aAAOE,QAAQ,CAAC,CAAD,CAAf;AACD,KAFD,MAEO,IAAIF,IAAI,KAAK,MAAb,EAAqB;AAC1B,aAAOE,QAAQ,CAAC,CAAD,CAAf;AACD,KAFM,MAEA,IAAIF,IAAI,KAAK,SAAb,EAAwB;AAC7B,aAAOE,QAAQ,CAAC,CAAD,CAAf;AACD;;AACD,WAAOA,QAAQ,CAAC,CAAD,CAAf;AACD,GATsB,EASpB,CAACA,QAAD,EAAWF,IAAX,CAToB,CAAvB;AAWA,QAAMI,KAAK,GAAG,CAAAC,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAED,KAAT,KAAkB,EAAhC;AACA,QAAMD,IAAI,GAAG,CAAAE,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEF,IAAT,KAAiB,EAA9B;AAEA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAGC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,OACiCD,IADjC,CADF;AAKD,CA7BD;;AA+BAJ,YAAY,CAACO,SAAb,GAAyB;AAAEN,EAAAA,IAAI,EAAEL,SAAS,CAACY;AAAlB,CAAzB;AAEAR,YAAY,CAACS,YAAb,GAA4B;AAAER,EAAAA,IAAI,EAAE;AAAR,CAA5B;AAEA,eAAeD,YAAf","sourcesContent":["import React, { useMemo } from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport { useT } from '@britania-crm/i18n'\n\nimport {\n  Container,\n  Star\n} from './styles'\n\nconst RankingBadge = ({ type }) => {\n  const t = useT()\n\n  const rankings = useMemo(() => [\n    { name: t('bronze'), color: '#EA9E5B' },\n    { name: t('silver'), color: '#CED4DA' },\n    { name: t('gold'), color: '#FFDD64' },\n    { name: t('diamond'), color: '#94D8FF' }\n  ], [t])\n\n  const ranking = useMemo(() => {\n    if (type === 'SILVER') {\n      return rankings[1]\n    } else if (type === 'GOLD') {\n      return rankings[2]\n    } else if (type === 'DIAMOND') {\n      return rankings[3]\n    }\n    return rankings[0]\n  }, [rankings, type])\n\n  const color = ranking?.color || ''\n  const name = ranking?.name || ''\n\n  return (\n    <Container>\n      <Star iconcolor={ color } /> { name }\n    </Container>\n  )\n}\n\nRankingBadge.propTypes = { type: PropTypes.string }\n\nRankingBadge.defaultProps = { type: 'BRONZE' }\n\nexport default RankingBadge\n"]},"metadata":{},"sourceType":"module"}