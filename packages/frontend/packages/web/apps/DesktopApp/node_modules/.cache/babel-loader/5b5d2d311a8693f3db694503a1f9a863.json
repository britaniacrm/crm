{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/workflow/modals/WorkFlowHistoryModal/WorkFlowHistoryModal.js\";\nimport React, { useMemo, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid } from '@material-ui/core';\nimport Add from '@material-ui/icons/Add';\nimport Remove from '@material-ui/icons/Remove';\nimport I18n, { useT } from '@britania-crm/i18n';\nimport useCrmApi from '@britania-crm/services/hooks/useCrmApi';\nimport { formatBackDateTimeToFriendlyDateFormat } from '@britania-crm/utils/date';\nimport DataTable from '@britania-crm/web-components/DataTable';\nimport Modal from '@britania-crm/web-components/Modal';\nimport HistoryTableDetails from './HistoryTableDetails';\nimport { Container, MainTitle } from './styles';\n\nconst WorkFlowHistoryModal = props => {\n  const {\n    id,\n    open,\n    baseUrl\n  } = props;\n  const t = useT();\n  const tableRef = useRef(null);\n  const historyUrl = `${baseUrl}/workflow-history`;\n  const {\n    data,\n    loading\n  } = useCrmApi(baseUrl ? historyUrl : null);\n  const columns = useMemo(() => [{\n    title: t('requester'),\n    field: 'requester'\n  }, {\n    title: t('date and hour'),\n    field: 'requestedAt',\n    type: 'date',\n    render: row => formatBackDateTimeToFriendlyDateFormat(row.requestedAt)\n  }, {\n    title: t('current status'),\n    field: 'lastResponseDescription'\n  }, {\n    title: t('responsible', {\n      howMany: 1\n    }),\n    field: 'lastResponseResponder'\n  }, {\n    title: t('workflow'),\n    field: 'workflowVersion'\n  }, {\n    title: t('workflow type'),\n    field: 'workflowType'\n  }], [t]);\n  const detailPanel = useMemo(() => [{\n    icon: Add,\n    openIcon: Remove,\n    iconProps: {\n      fontSize: 'small'\n    },\n    tooltip: t('view more'),\n    render: rowData => /*#__PURE__*/React.createElement(HistoryTableDetails, {\n      detailsUrl: baseUrl ? `${historyUrl}/${rowData.workflowPerformedId}` : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    })\n  }], [baseUrl, historyUrl, t]);\n  return /*#__PURE__*/React.createElement(Modal, {\n    id: id,\n    open: open,\n    maxWidth: \"lg\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(I18n, {\n    as: MainTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, \"workflow history\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DataTable, {\n    ref: tableRef,\n    data: data,\n    columns: columns,\n    detailPanel: detailPanel,\n    options: {\n      search: true\n    },\n    minimalistToolbar: true,\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }))));\n};\n\nWorkFlowHistoryModal.propTypes = {\n  id: PropTypes.string.isRequired,\n  open: PropTypes.bool.isRequired,\n  baseUrl: PropTypes.string\n};\nWorkFlowHistoryModal.defaultProps = {\n  baseUrl: null\n};\nexport default WorkFlowHistoryModal;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/workflow/modals/WorkFlowHistoryModal/WorkFlowHistoryModal.js"],"names":["React","useMemo","useRef","PropTypes","Grid","Add","Remove","I18n","useT","useCrmApi","formatBackDateTimeToFriendlyDateFormat","DataTable","Modal","HistoryTableDetails","Container","MainTitle","WorkFlowHistoryModal","props","id","open","baseUrl","t","tableRef","historyUrl","data","loading","columns","title","field","type","render","row","requestedAt","howMany","detailPanel","icon","openIcon","iconProps","fontSize","tooltip","rowData","workflowPerformedId","search","propTypes","string","isRequired","bool","defaultProps"],"mappings":"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","sourcesContent":["import React, {\n  useMemo,\n  useRef\n} from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport { Grid } from '@material-ui/core'\nimport Add from '@material-ui/icons/Add'\nimport Remove from '@material-ui/icons/Remove'\n\nimport I18n, { useT } from '@britania-crm/i18n'\nimport useCrmApi from '@britania-crm/services/hooks/useCrmApi'\nimport { formatBackDateTimeToFriendlyDateFormat } from '@britania-crm/utils/date'\nimport DataTable from '@britania-crm/web-components/DataTable'\nimport Modal from '@britania-crm/web-components/Modal'\n\nimport HistoryTableDetails from './HistoryTableDetails'\nimport {\n  Container,\n  MainTitle\n} from './styles'\n\nconst WorkFlowHistoryModal = (props) => {\n  const {\n    id,\n    open,\n    baseUrl\n  } = props\n\n  const t = useT()\n\n  const tableRef = useRef(null)\n\n  const historyUrl = `${ baseUrl }/workflow-history`\n\n  const { data, loading } = useCrmApi(baseUrl ? historyUrl : null)\n\n  const columns = useMemo(\n    () => [\n      {\n        title: t('requester'),\n        field: 'requester'\n      },\n      {\n        title: t('date and hour'),\n        field: 'requestedAt',\n        type: 'date',\n        render: (row) => formatBackDateTimeToFriendlyDateFormat(row.requestedAt)\n      },\n      {\n        title: t('current status'),\n        field: 'lastResponseDescription'\n      },\n      {\n        title: t('responsible', { howMany: 1 }),\n        field: 'lastResponseResponder'\n      },\n      {\n        title: t('workflow'),\n        field: 'workflowVersion'\n      },\n      {\n        title: t('workflow type'),\n        field: 'workflowType'\n      }\n    ],\n    [t]\n  )\n\n  const detailPanel = useMemo(\n    () => [{\n      icon: Add,\n      openIcon: Remove,\n      iconProps: { fontSize: 'small' },\n      tooltip: t('view more'),\n      render: (rowData) => (\n        <HistoryTableDetails\n          detailsUrl={ baseUrl ? `${ historyUrl }/${ rowData.workflowPerformedId }` : null }\n        />\n      )\n    }],\n    [baseUrl, historyUrl, t]\n  )\n\n  return (\n    <Modal\n      id={ id }\n      open={ open }\n      maxWidth=\"lg\"\n      fullWidth\n    >\n      <Container>\n        <I18n as={ MainTitle }>\n          workflow history\n        </I18n>\n        <Grid container spacing={ 1 }>\n          <DataTable\n            ref={ tableRef }\n            data={ data }\n            columns={ columns }\n            detailPanel={ detailPanel }\n            options={ { search: true } }\n            minimalistToolbar\n            loading={ loading }\n          />\n        </Grid>\n      </Container>\n    </Modal>\n  )\n}\n\nWorkFlowHistoryModal.propTypes = {\n  id: PropTypes.string.isRequired,\n  open: PropTypes.bool.isRequired,\n  baseUrl: PropTypes.string\n}\n\nWorkFlowHistoryModal.defaultProps = { baseUrl: null }\n\nexport default WorkFlowHistoryModal\n"]},"metadata":{},"sourceType":"module"}