{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/customers/screens/CustomerPreRegistrationFormScreen/tabs/RegistrationParameters/sections/CadastralCheck.js\";\nimport React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport { Scope } from '@britania-crm/forms';\nimport { useT } from '@britania-crm/i18n';\nimport InputSelect from '@britania-crm/web-components/InputSelect';\nimport RadioGroup from '@britania-crm/web-components/RadioGroup';\n\nconst CadastralCheck = ({\n  disabled\n}) => {\n  const t = useT();\n  const radioOptions = useMemo(() => [{\n    id: true,\n    name: 'Sim'\n  }, {\n    id: false,\n    name: 'Não'\n  }], []);\n  const selectOptions = useMemo(() => [{\n    id: 'A',\n    name: 'A'\n  }, {\n    id: 'B',\n    name: 'B'\n  }, {\n    id: 'C',\n    name: 'C'\n  }, {\n    id: 'D',\n    name: 'D'\n  }], []);\n  return /*#__PURE__*/React.createElement(Scope, {\n    path: \"cadastralCheck\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    style: {\n      marginTop: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(RadioGroup, {\n    label: t('cadastral check'),\n    name: \"cadastralCheck\",\n    options: radioOptions,\n    disabled: disabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(RadioGroup, {\n    label: t('new customer'),\n    name: \"newClient\",\n    options: radioOptions,\n    disabled: disabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputSelect, {\n    id: \"riskClass\",\n    name: \"riskClass\",\n    label: t('risk class'),\n    options: selectOptions,\n    disabled: disabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }))));\n};\n\nCadastralCheck.propTypes = {\n  // formRef: PropTypes.any.isRequired,\n  disabled: PropTypes.bool.isRequired\n};\nexport default CadastralCheck;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/customers/screens/CustomerPreRegistrationFormScreen/tabs/RegistrationParameters/sections/CadastralCheck.js"],"names":["React","useMemo","PropTypes","Grid","Scope","useT","InputSelect","RadioGroup","CadastralCheck","disabled","t","radioOptions","id","name","selectOptions","marginTop","propTypes","bool","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,IAAP,MAAiB,wBAAjB;AAEA,SAASC,KAAT,QAAsB,qBAAtB;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,OAAOC,WAAP,MAAwB,0CAAxB;AACA,OAAOC,UAAP,MAAuB,yCAAvB;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACvC,QAAMC,CAAC,GAAGL,IAAI,EAAd;AAEA,QAAMM,YAAY,GAAGV,OAAO,CAAC,MAAM,CACjC;AAAEW,IAAAA,EAAE,EAAE,IAAN;AAAYC,IAAAA,IAAI,EAAE;AAAlB,GADiC,EAEjC;AAAED,IAAAA,EAAE,EAAE,KAAN;AAAaC,IAAAA,IAAI,EAAE;AAAnB,GAFiC,CAAP,EAGzB,EAHyB,CAA5B;AAKA,QAAMC,aAAa,GAAGb,OAAO,CAAC,MAAM,CAClC;AAAEW,IAAAA,EAAE,EAAE,GAAN;AAAWC,IAAAA,IAAI,EAAE;AAAjB,GADkC,EAElC;AAAED,IAAAA,EAAE,EAAE,GAAN;AAAWC,IAAAA,IAAI,EAAE;AAAjB,GAFkC,EAGlC;AAAED,IAAAA,EAAE,EAAE,GAAN;AAAWC,IAAAA,IAAI,EAAE;AAAjB,GAHkC,EAIlC;AAAED,IAAAA,EAAE,EAAE,GAAN;AAAWC,IAAAA,IAAI,EAAE;AAAjB,GAJkC,CAAP,EAK1B,EAL0B,CAA7B;AAOA,sBACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,gBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAG,CAA1B;AAA8B,IAAA,KAAK,EAAG;AAAEE,MAAAA,SAAS,EAAE;AAAb,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAG,EAAhB;AAAqB,IAAA,EAAE,EAAG,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AACE,IAAA,KAAK,EAAGL,CAAC,CAAC,iBAAD,CADX;AAEE,IAAA,IAAI,EAAC,gBAFP;AAGE,IAAA,OAAO,EAAGC,YAHZ;AAIE,IAAA,QAAQ,EAAGF,QAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eASE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAG,EAAhB;AAAqB,IAAA,EAAE,EAAG,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AACE,IAAA,KAAK,EAAGC,CAAC,CAAC,cAAD,CADX;AAEE,IAAA,IAAI,EAAC,WAFP;AAGE,IAAA,OAAO,EAAGC,YAHZ;AAIE,IAAA,QAAQ,EAAGF,QAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CATF,eAiBE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAG,EAAhB;AAAqB,IAAA,EAAE,EAAG,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,WAAD;AACE,IAAA,EAAE,EAAC,WADL;AAEE,IAAA,IAAI,EAAC,WAFP;AAGE,IAAA,KAAK,EAAGC,CAAC,CAAC,YAAD,CAHX;AAIE,IAAA,OAAO,EAAGI,aAJZ;AAKE,IAAA,QAAQ,EAAGL,QALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAjBF,CADF,CADF;AAgCD,CA/CD;;AAiDAD,cAAc,CAACQ,SAAf,GAA2B;AACzB;AACAP,EAAAA,QAAQ,EAAEP,SAAS,CAACe,IAAV,CAAeC;AAFA,CAA3B;AAKA,eAAeV,cAAf","sourcesContent":["import React, { useMemo } from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport Grid from '@material-ui/core/Grid'\n\nimport { Scope } from '@britania-crm/forms'\nimport { useT } from '@britania-crm/i18n'\nimport InputSelect from '@britania-crm/web-components/InputSelect'\nimport RadioGroup from '@britania-crm/web-components/RadioGroup'\n\nconst CadastralCheck = ({ disabled }) => {\n  const t = useT()\n\n  const radioOptions = useMemo(() => [\n    { id: true, name: 'Sim' },\n    { id: false, name: 'Não' }\n  ], [])\n\n  const selectOptions = useMemo(() => [\n    { id: 'A', name: 'A' },\n    { id: 'B', name: 'B' },\n    { id: 'C', name: 'C' },\n    { id: 'D', name: 'D' }\n  ], [])\n\n  return (\n    <Scope path=\"cadastralCheck\">\n      <Grid container spacing={ 1 } style={ { marginTop: 10 } }>\n        <Grid item sm={ 12 } md={ 3 }>\n          <RadioGroup\n            label={ t('cadastral check') }\n            name=\"cadastralCheck\"\n            options={ radioOptions }\n            disabled={ disabled }\n          />\n        </Grid>\n        <Grid item sm={ 12 } md={ 3 }>\n          <RadioGroup\n            label={ t('new customer') }\n            name=\"newClient\"\n            options={ radioOptions }\n            disabled={ disabled }\n          />\n        </Grid>\n        <Grid item sm={ 12 } md={ 3 }>\n          {/* TODO: CORRIGIR NÃO VALIDAÇÃO E ACRESCENTAR EXIBIÇÃO DE LABEL */}\n          <InputSelect\n            id=\"riskClass\"\n            name=\"riskClass\"\n            label={ t('risk class') }\n            options={ selectOptions }\n            disabled={ disabled }\n          />\n        </Grid>\n      </Grid>\n    </Scope>\n  )\n}\n\nCadastralCheck.propTypes = {\n  // formRef: PropTypes.any.isRequired,\n  disabled: PropTypes.bool.isRequired\n}\n\nexport default CadastralCheck\n"]},"metadata":{},"sourceType":"module"}