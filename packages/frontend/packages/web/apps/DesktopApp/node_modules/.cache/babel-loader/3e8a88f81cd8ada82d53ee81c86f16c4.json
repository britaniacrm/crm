{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/customers/screens/CustomerPreRegistrationFormScreen/tabs/Customer/sections/AdditionalInformation.js\";\nimport React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { Scope } from '@britania-crm/forms';\nimport I18n, { useT } from '@britania-crm/i18n';\nimport CardRounded from '@britania-crm/web-components/CardRounded';\nimport InputMoney from '@britania-crm/web-components/InputMoney';\nimport InputNumber from '@britania-crm/web-components/InputNumber';\nimport InputPhone from '@britania-crm/web-components/InputPhone';\nimport InputSelect from '@britania-crm/web-components/InputSelect';\nimport InputText from '@britania-crm/web-components/InputText';\nimport BankReferencesTable from '@britania-crm/web-src/modules/customers/containers/BankReferencesTable';\nimport CommercialReferencesTable from '@britania-crm/web-src/modules/customers/containers/CommercialReferencesTable';\nimport CompanyHoldingParticipationTable from '@britania-crm/web-src/modules/customers/containers/CompanyHoldingParticipationTable';\nimport CounterPropertiesTable from '@britania-crm/web-src/modules/customers/containers/CounterPropertiesTable';\nimport RevenuesTable from '@britania-crm/web-src/modules/customers/containers/RevenuesTable';\nimport useStyles from '../styles';\n\nconst AdditionalInformation = ({\n  formRef,\n  disabled\n}) => {\n  const t = useT();\n  const classes = useStyles();\n  const initialContactOptions = useMemo(() => [{\n    id: 'CLIENTE',\n    name: t('client', {\n      howMany: 1\n    })\n  }, {\n    id: 'REPRESENTANTE',\n    name: `${t('representative', {\n      howMany: 1\n    })}/${t('consultant', {\n      howMany: 1\n    })}`\n  }], [t]);\n  return /*#__PURE__*/React.createElement(Scope, {\n    path: \"additionalInformation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputSelect, {\n    name: \"initialContact\",\n    label: t('initial contact'),\n    options: initialContactOptions,\n    readOnly: disabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputNumber, {\n    name: \"numbersOfEmployes\",\n    label: t('number of employers'),\n    readOnly: disabled,\n    maxLength: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputMoney, {\n    name: \"suggestedLimit\",\n    label: t('suggested limit'),\n    readOnly: disabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputMoney, {\n    name: \"shareCapital\",\n    label: t('social capital'),\n    readOnly: disabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardRounded, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(RevenuesTable, {\n    disabled: disabled,\n    formRef: formRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardRounded, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CommercialReferencesTable, {\n    disabled: disabled,\n    formRef: formRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardRounded, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(BankReferencesTable, {\n    disabled: disabled,\n    formRef: formRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardRounded, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Scope, {\n    path: \"counter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(I18n, {\n    as: Typography,\n    variant: \"h6\",\n    color: \"primary\",\n    params: {\n      howMany: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 19\n    }\n  }, \"counter\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InputText, {\n    name: \"counter\",\n    label: t('name', {\n      howMany: 1\n    }),\n    readOnly: disabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InputPhone, {\n    name: \"counterPhone\",\n    label: t('phone', {\n      howMany: 1\n    }),\n    readOnly: disabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InputText, {\n    name: \"counterCrc\",\n    label: t('crc'),\n    readOnly: disabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CounterPropertiesTable, {\n    disabled: disabled,\n    formRef: formRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardRounded, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CompanyHoldingParticipationTable, {\n    disabled: disabled,\n    formRef: formRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  })))));\n};\n\nAdditionalInformation.propTypes = {\n  formRef: PropTypes.any.isRequired,\n  disabled: PropTypes.bool.isRequired\n};\nexport default AdditionalInformation;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/customers/screens/CustomerPreRegistrationFormScreen/tabs/Customer/sections/AdditionalInformation.js"],"names":["React","useMemo","PropTypes","Grid","Typography","Scope","I18n","useT","CardRounded","InputMoney","InputNumber","InputPhone","InputSelect","InputText","BankReferencesTable","CommercialReferencesTable","CompanyHoldingParticipationTable","CounterPropertiesTable","RevenuesTable","useStyles","AdditionalInformation","formRef","disabled","t","classes","initialContactOptions","id","name","howMany","container","propTypes","any","isRequired","bool"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\n\nimport { Scope } from '@britania-crm/forms'\nimport I18n, { useT } from '@britania-crm/i18n'\nimport CardRounded from '@britania-crm/web-components/CardRounded'\nimport InputMoney from '@britania-crm/web-components/InputMoney'\nimport InputNumber from '@britania-crm/web-components/InputNumber'\nimport InputPhone from '@britania-crm/web-components/InputPhone'\nimport InputSelect from '@britania-crm/web-components/InputSelect'\nimport InputText from '@britania-crm/web-components/InputText'\nimport BankReferencesTable from '@britania-crm/web-src/modules/customers/containers/BankReferencesTable'\nimport CommercialReferencesTable from '@britania-crm/web-src/modules/customers/containers/CommercialReferencesTable'\nimport CompanyHoldingParticipationTable from '@britania-crm/web-src/modules/customers/containers/CompanyHoldingParticipationTable'\nimport CounterPropertiesTable from '@britania-crm/web-src/modules/customers/containers/CounterPropertiesTable'\nimport RevenuesTable from '@britania-crm/web-src/modules/customers/containers/RevenuesTable'\n\nimport useStyles from '../styles'\n\nconst AdditionalInformation = ({ formRef, disabled }) => {\n  const t = useT()\n  const classes = useStyles()\n\n  const initialContactOptions = useMemo(\n    () => [\n      { id: 'CLIENTE', name: t('client', { howMany: 1 }) },\n      { id: 'REPRESENTANTE', name: `${ t('representative', { howMany: 1 }) }/${ t('consultant', { howMany: 1 }) }` }\n    ],\n    [t]\n  )\n\n  return (\n    <Scope path=\"additionalInformation\">\n      <Grid container spacing={ 1 } className={ classes.container }>\n        <Grid item sm={ 12 } md={ 3 }>\n          <InputSelect\n            name=\"initialContact\"\n            label={ t('initial contact') }\n            options={ initialContactOptions }\n            readOnly={ disabled }\n          />\n        </Grid>\n        <Grid item sm={ 12 } md={ 3 }>\n          <InputNumber\n            name=\"numbersOfEmployes\"\n            label={ t('number of employers') }\n            readOnly={ disabled }\n            maxLength={ 7 }\n          />\n        </Grid>\n        <Grid item sm={ 12 } md={ 3 }>\n          <InputMoney\n            name=\"suggestedLimit\"\n            label={ t('suggested limit') }\n            readOnly={ disabled }\n          />\n        </Grid>\n        <Grid item sm={ 12 } md={ 3 }>\n          <InputMoney\n            name=\"shareCapital\"\n            label={ t('social capital') }\n            readOnly={ disabled }\n          />\n        </Grid>\n        <Grid item sm={ 12 }>\n          <CardRounded>\n            <RevenuesTable\n              disabled={ disabled }\n              formRef={ formRef }\n            />\n          </CardRounded>\n        </Grid>\n        <Grid item sm={ 12 }>\n          <CardRounded>\n            <CommercialReferencesTable\n              disabled={ disabled }\n              formRef={ formRef }\n            />\n          </CardRounded>\n        </Grid>\n        <Grid item sm={ 12 }>\n          <CardRounded>\n            <BankReferencesTable\n              disabled={ disabled }\n              formRef={ formRef }\n            />\n          </CardRounded>\n        </Grid>\n\n        <Grid item sm={ 12 }>\n          <CardRounded>\n            <Scope path=\"counter\">\n              <Grid container spacing={ 1 }>\n                <Grid item xs={ 12 }>\n                  <I18n as={ Typography }\n                    variant=\"h6\"\n                    color=\"primary\"\n                    params={ { howMany: 1 } }\n                  >\n                counter\n                  </I18n>\n                </Grid>\n                <Grid item sm={ 12 } md={ 6 }>\n                  <InputText\n                    name=\"counter\"\n                    label={ t('name', { howMany: 1 }) }\n                    readOnly={ disabled }\n                  />\n                </Grid>\n                <Grid item sm={ 12 } md={ 3 }>\n                  <InputPhone\n                    name=\"counterPhone\"\n                    label={ t('phone', { howMany: 1 }) }\n                    readOnly={ disabled }\n                  />\n                </Grid>\n                <Grid item sm={ 12 } md={ 3 }>\n                  <InputText\n                    name=\"counterCrc\"\n                    label={ t('crc') }\n                    readOnly={ disabled }\n                  />\n                </Grid>\n              </Grid>\n\n              <Grid item sm={ 12 }>\n                <CounterPropertiesTable\n                  disabled={ disabled }\n                  formRef={ formRef }\n                />\n              </Grid>\n            </Scope>\n          </CardRounded>\n        </Grid>\n\n        <Grid item sm={ 12 }>\n          <CardRounded>\n            <CompanyHoldingParticipationTable\n              disabled={ disabled }\n              formRef={ formRef }\n            />\n          </CardRounded>\n        </Grid>\n      </Grid>\n    </Scope>\n  )\n}\n\nAdditionalInformation.propTypes = {\n  formRef: PropTypes.any.isRequired,\n  disabled: PropTypes.bool.isRequired\n}\n\nexport default AdditionalInformation\n"]},"metadata":{},"sourceType":"module"}