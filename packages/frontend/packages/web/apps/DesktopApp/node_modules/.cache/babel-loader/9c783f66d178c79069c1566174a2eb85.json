{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/components/InputHidden/InputHiddenForm.js\";\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport Box from '@material-ui/core/Box';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport InfoIcon from '@material-ui/icons/Info';\nimport { FieldProvider, useField } from '@britania-crm/forms';\nimport { colors } from '@britania-crm/styles';\n\nconst InputHiddenForm = props => {\n  const {\n    showError\n  } = props;\n  const {\n    error\n  } = useField();\n  return showError && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginLeft: 10,\n      marginBottom: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, !!error && /*#__PURE__*/React.createElement(FormHelperText, {\n    error: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    style: {\n      color: colors.error.main\n    },\n    component: \"span\",\n    display: \"flex\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InfoIcon, {\n    fontSize: \"small\",\n    style: {\n      marginRight: '8px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }), ' ', error)));\n};\n\nInputHiddenForm.propTypes = {\n  showError: PropTypes.bool.isRequired\n};\nconst Field = forwardRef(({\n  path,\n  ...props\n}, ref) => /*#__PURE__*/React.createElement(FieldProvider, Object.assign({\n  ref: ref\n}, props, {\n  registerFieldOptions: {\n    path\n  },\n  FieldComponent: InputHiddenForm,\n  touchOnChange: true,\n  validateOnBlur: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 3\n  }\n})));\nField.propTypes = {\n  showError: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onChange: PropTypes.func,\n  onBlur: PropTypes.func,\n  onValueChange: PropTypes.func,\n  path: PropTypes.string\n};\nField.defaultProps = {\n  showError: false,\n  disabled: false,\n\n  onChange() {},\n\n  onValueChange() {},\n\n  onBlur() {},\n\n  path: 'value'\n};\nexport default Field;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/components/InputHidden/InputHiddenForm.js"],"names":["React","forwardRef","PropTypes","Box","FormHelperText","InfoIcon","FieldProvider","useField","colors","InputHiddenForm","props","showError","error","marginLeft","marginBottom","color","main","marginRight","propTypes","bool","isRequired","Field","path","ref","disabled","onChange","func","onBlur","onValueChange","string","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,QAAP,MAAqB,yBAArB;AAEA,SACEC,aADF,EAEEC,QAFF,QAGO,qBAHP;AAIA,SAASC,MAAT,QAAuB,sBAAvB;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,QAAM;AAAEC,IAAAA;AAAF,MAAgBD,KAAtB;AAEA,QAAM;AAAEE,IAAAA;AAAF,MAAYL,QAAQ,EAA1B;AAEA,SAAOI,SAAS,iBACd;AAAK,IAAA,KAAK,EAAG;AAAEE,MAAAA,UAAU,EAAE,EAAd;AAAkBC,MAAAA,YAAY,EAAE;AAAhC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC,CAACF,KAAF,iBACC,oBAAC,cAAD;AAAgB,IAAA,KAAK,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAG;AAAEG,MAAAA,KAAK,EAAEP,MAAM,CAACI,KAAP,CAAaI;AAAtB,KAAb;AAA4C,IAAA,SAAS,EAAC,MAAtD;AAA6D,IAAA,OAAO,EAAC,MAArE;AAA4E,IAAA,UAAU,EAAC,QAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAC,OAAnB;AAA2B,IAAA,KAAK,EAAG;AAAEC,MAAAA,WAAW,EAAE;AAAf,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEG,GAFH,EAESL,KAFT,CADF,CAFJ,CADF;AAYD,CAjBD;;AAmBAH,eAAe,CAACS,SAAhB,GAA4B;AAAEP,EAAAA,SAAS,EAAET,SAAS,CAACiB,IAAV,CAAeC;AAA5B,CAA5B;AAEA,MAAMC,KAAK,GAAGpB,UAAU,CAAC,CAAC;AAAEqB,EAAAA,IAAF;AAAQ,KAAGZ;AAAX,CAAD,EAAqBa,GAArB,kBACvB,oBAAC,aAAD;AACE,EAAA,GAAG,EAAGA;AADR,GAEOb,KAFP;AAGE,EAAA,oBAAoB,EAAG;AAAEY,IAAAA;AAAF,GAHzB;AAIE,EAAA,cAAc,EAAGb,eAJnB;AAKE,EAAA,aAAa,MALf;AAME,EAAA,cAAc,MANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADsB,CAAxB;AAWAY,KAAK,CAACH,SAAN,GAAkB;AAChBP,EAAAA,SAAS,EAAET,SAAS,CAACiB,IADL;AAEhBK,EAAAA,QAAQ,EAAEtB,SAAS,CAACiB,IAFJ;AAGhBM,EAAAA,QAAQ,EAAEvB,SAAS,CAACwB,IAHJ;AAIhBC,EAAAA,MAAM,EAAEzB,SAAS,CAACwB,IAJF;AAKhBE,EAAAA,aAAa,EAAE1B,SAAS,CAACwB,IALT;AAMhBJ,EAAAA,IAAI,EAAEpB,SAAS,CAAC2B;AANA,CAAlB;AASAR,KAAK,CAACS,YAAN,GAAqB;AACnBnB,EAAAA,SAAS,EAAE,KADQ;AAEnBa,EAAAA,QAAQ,EAAE,KAFS;;AAGnBC,EAAAA,QAAQ,GAAI,CAAE,CAHK;;AAInBG,EAAAA,aAAa,GAAI,CAAE,CAJA;;AAKnBD,EAAAA,MAAM,GAAI,CAAE,CALO;;AAMnBL,EAAAA,IAAI,EAAE;AANa,CAArB;AASA,eAAeD,KAAf","sourcesContent":["import React, { forwardRef } from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport Box from '@material-ui/core/Box'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport InfoIcon from '@material-ui/icons/Info'\n\nimport {\n  FieldProvider,\n  useField\n} from '@britania-crm/forms'\nimport { colors } from '@britania-crm/styles'\n\nconst InputHiddenForm = (props) => {\n  const { showError } = props\n\n  const { error } = useField()\n\n  return showError && (\n    <div style={ { marginLeft: 10, marginBottom: 10 } }>\n      {!!error && (\n        <FormHelperText error>\n          <Box style={ { color: colors.error.main } } component=\"span\" display=\"flex\" alignItems=\"center\">\n            <InfoIcon fontSize=\"small\" style={ { marginRight: '8px' } } />\n            {' '}{ error }\n          </Box>\n        </FormHelperText>\n      )}\n    </div>\n  )\n}\n\nInputHiddenForm.propTypes = { showError: PropTypes.bool.isRequired }\n\nconst Field = forwardRef(({ path, ...props }, ref) => (\n  <FieldProvider\n    ref={ ref }\n    { ...props }\n    registerFieldOptions={ { path } }\n    FieldComponent={ InputHiddenForm }\n    touchOnChange\n    validateOnBlur\n  />\n))\n\nField.propTypes = {\n  showError: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onChange: PropTypes.func,\n  onBlur: PropTypes.func,\n  onValueChange: PropTypes.func,\n  path: PropTypes.string\n}\n\nField.defaultProps = {\n  showError: false,\n  disabled: false,\n  onChange () {},\n  onValueChange () {},\n  onBlur () {},\n  path: 'value'\n}\n\nexport default Field\n"]},"metadata":{},"sourceType":"module"}