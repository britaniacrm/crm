{"ast":null,"code":"import * as Yup from 'yup';\nimport flow from 'lodash/fp/flow';\nimport reduce from 'lodash/reduce';\nimport cpfCnpj from '@britania-crm/forms/validators/cpfCnpj.validator';\nimport dateRange from '@britania-crm/forms/validators/dateRange.validator';\nimport maxLength from '@britania-crm/forms/validators/maxLength.validator';\nimport required from '@britania-crm/forms/validators/required.validator';\nexport const INITIAL_VALUES = {\n  cnpj: '',\n  parentCompany: {},\n  parentCompanyCode: {},\n  companyName: '',\n  foundsType: '',\n  paymentType: '',\n  bank: {},\n  bankAgency: '',\n  bankAccount: '',\n  bankCnpj: '',\n  requestNumber: '',\n  value: '',\n  negotiationNumber: '',\n  campaignReason: '',\n  period: {\n    from: '',\n    to: ''\n  },\n  directorshipCode: '',\n  directorshipDescription: '',\n  approverCode: {},\n  status: true,\n  linesFamilies: [],\n  nds: [],\n  products: [],\n  requests: [],\n  attachments: [],\n  situation: '',\n  responsible: ''\n};\nexport default (({\n  t\n}) => {\n  const validateNdsValue = ({\n    nds,\n    value\n  }) => {\n    const totalValue = Number(value || 0);\n    const sum = reduce(nds, (acc, nd) => acc + (nd.active ? Number(nd.value) : 0), 0);\n    return sum <= totalValue;\n  };\n\n  return Yup.object().shape({\n    cnpj: cpfCnpj({\n      t\n    })(Yup.string()),\n    parentCompany: Yup.object(),\n    parentCompanyCode: required({\n      t,\n      isNotText: true\n    })(Yup.object()),\n    companyName: maxLength({\n      t,\n      length: 70,\n      type: t('characters', {\n        howMany: 1\n      }),\n      field: t('company name')\n    })(Yup.string()),\n    foundsType: required({\n      t\n    })(Yup.string()),\n    paymentType: required({\n      t\n    })(Yup.string()),\n    requestNumber: Yup.string(),\n    bank: Yup.object(),\n    bankAgency: maxLength({\n      t,\n      length: 4,\n      type: t('characters', {\n        howMany: 1\n      }),\n      field: t('agency', {\n        howMany: 1\n      })\n    })(Yup.string()),\n    bankAccount: Yup.string(),\n    bankCnpj: cpfCnpj({\n      t,\n      mode: 'cnpj'\n    })(Yup.string()),\n    value: flow(YupInstance => YupInstance.test('nds', t('nds may be less then total value'), (value, {\n      parent\n    }) => validateNdsValue({\n      nds: parent.nds,\n      value\n    })), required({\n      t\n    }))(Yup.string()),\n    negotiationNumber: Yup.string(),\n    campaignReason: flow(maxLength({\n      t,\n      length: 500,\n      type: t('characters', {\n        howMany: 1\n      })\n    }), required({\n      t\n    }))(Yup.string()),\n    period: flow(dateRange({\n      t\n    }), required({\n      t,\n      isNotText: true,\n      isDateRange: true\n    }))(Yup.object()),\n    directorshipCode: required({\n      t\n    })(Yup.string()),\n    directorshipDescription: required({\n      t\n    })(Yup.string()),\n    approverCode: required({\n      t,\n      isNotText: true\n    })(Yup.object()),\n    status: Yup.boolean(),\n    linesFamilies: required({\n      t,\n      isNotText: true\n    })(Yup.array()),\n    nds: Yup.array().test('nds', t('nds may be less then total value'), (nds, {\n      parent\n    }) => validateNdsValue({\n      nds,\n      value: parent.value\n    })),\n    products: Yup.array(),\n    requests: Yup.array(),\n    attachments: Yup.array(),\n    situation: Yup.string(),\n    responsible: Yup.string()\n  });\n});","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/core/forms/schemas/vpc/vpc.schema.js"],"names":["Yup","flow","reduce","cpfCnpj","dateRange","maxLength","required","INITIAL_VALUES","cnpj","parentCompany","parentCompanyCode","companyName","foundsType","paymentType","bank","bankAgency","bankAccount","bankCnpj","requestNumber","value","negotiationNumber","campaignReason","period","from","to","directorshipCode","directorshipDescription","approverCode","status","linesFamilies","nds","products","requests","attachments","situation","responsible","t","validateNdsValue","totalValue","Number","sum","acc","nd","active","object","shape","string","isNotText","length","type","howMany","field","mode","YupInstance","test","parent","isDateRange","boolean","array"],"mappings":"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","sourcesContent":["import * as Yup from 'yup'\n\nimport flow from 'lodash/fp/flow'\nimport reduce from 'lodash/reduce'\n\nimport cpfCnpj from '@britania-crm/forms/validators/cpfCnpj.validator'\nimport dateRange from '@britania-crm/forms/validators/dateRange.validator'\nimport maxLength from '@britania-crm/forms/validators/maxLength.validator'\nimport required from '@britania-crm/forms/validators/required.validator'\n\nexport const INITIAL_VALUES = {\n  cnpj: '',\n  parentCompany: {},\n  parentCompanyCode: {},\n  companyName: '',\n  foundsType: '',\n  paymentType: '',\n  bank: {},\n  bankAgency: '',\n  bankAccount: '',\n  bankCnpj: '',\n  requestNumber: '',\n  value: '',\n  negotiationNumber: '',\n  campaignReason: '',\n  period: { from: '', to: '' },\n  directorshipCode: '',\n  directorshipDescription: '',\n  approverCode: {},\n  status: true,\n  linesFamilies: [],\n  nds: [],\n  products: [],\n  requests: [],\n  attachments: [],\n  situation: '',\n  responsible: ''\n}\n\nexport default ({ t }) => {\n  const validateNdsValue = ({ nds, value }) => {\n    const totalValue = Number(value || 0)\n    const sum = reduce(nds, (acc, nd) => acc + (nd.active ? Number(nd.value) : 0), 0)\n    return sum <= totalValue\n  }\n\n  return Yup.object().shape({\n    cnpj: cpfCnpj({ t })(Yup.string()),\n    parentCompany: Yup.object(),\n    parentCompanyCode: required({ t, isNotText: true })(Yup.object()),\n    companyName: maxLength({\n      t,\n      length: 70,\n      type: t('characters', { howMany: 1 }),\n      field: t('company name')\n    })(Yup.string()),\n    foundsType: required({ t })(Yup.string()),\n    paymentType: required({ t })(Yup.string()),\n    requestNumber: Yup.string(),\n    bank: Yup.object(),\n    bankAgency: maxLength({\n      t,\n      length: 4,\n      type: t('characters', { howMany: 1 }),\n      field: t('agency', { howMany: 1 })\n    })(Yup.string()),\n    bankAccount: Yup.string(),\n    bankCnpj: cpfCnpj({ t, mode: 'cnpj' })(Yup.string()),\n    value: flow(\n      (YupInstance) => YupInstance.test(\n        'nds',\n        t('nds may be less then total value'),\n        (value, { parent }) => validateNdsValue({ nds: parent.nds, value })\n      ),\n      required({ t })\n    )(Yup.string()),\n    negotiationNumber: Yup.string(),\n    campaignReason: flow(\n      maxLength({\n        t,\n        length: 500,\n        type: t('characters', { howMany: 1 })\n      }),\n      required({ t })\n    )(Yup.string()),\n    period: flow(\n      dateRange({ t }),\n      required({\n        t,\n        isNotText: true,\n        isDateRange: true\n      })\n    )(Yup.object()),\n    directorshipCode: required({ t })(Yup.string()),\n    directorshipDescription: required({ t })(Yup.string()),\n    approverCode: required({ t, isNotText: true })(Yup.object()),\n    status: Yup.boolean(),\n    linesFamilies: required({ t, isNotText: true })(Yup.array()),\n    nds: Yup.array().test(\n      'nds',\n      t('nds may be less then total value'),\n      (nds, { parent }) => validateNdsValue({ nds, value: parent.value })\n    ),\n    products: Yup.array(),\n    requests: Yup.array(),\n    attachments: Yup.array(),\n    situation: Yup.string(),\n    responsible: Yup.string()\n  })\n}\n"]},"metadata":{},"sourceType":"module"}