{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/fan/containers/OtherNegotiatedFunds/OtherNegotiatedFunds.js\";\nimport React, { useMemo, useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport filter from 'lodash/filter';\nimport map from 'lodash/map';\nimport Grid from '@material-ui/core/Grid';\nimport { useDialog } from '@britania-crm/dialog';\nimport { useT } from '@britania-crm/i18n';\nimport { lowerAndStartCase } from '@britania-crm/utils/formatters';\nimport DataTable from '@britania-crm/web-components/DataTable';\nimport InputHidden from '@britania-crm/web-components/InputHidden';\nimport InputText from '@britania-crm/web-components/InputText';\nimport AchivementsModal from '../../modals/AchivementsModal/AchivementsModal';\n\nconst OtherNegotiatedFunds = ({\n  isDisabled,\n  formRef,\n  slaghterReturnOptions,\n  rangeOptions,\n  calculationOptions,\n  basisOfCalculationOptions\n}) => {\n  const t = useT();\n  const {\n    createDialog\n  } = useDialog();\n  const [percentage, setPercentage] = useState([]);\n  const columns = useMemo(() => [{\n    title: t('frequency', {\n      howMany: 1\n    }),\n    field: 'periodicity',\n    render: row => lowerAndStartCase(row.periodicity)\n  }, {\n    title: t('calculation basis'),\n    field: 'determinationBasis',\n    render: row => lowerAndStartCase(row.determinationBasis)\n  }, {\n    title: t('slaughter return'),\n    field: 'slaughterReturn',\n    render: row => row.slaughterReturn ? 'Sim' : 'NÃ£o'\n  }, {\n    title: t('start percentage'),\n    field: 'startPercentage'\n  }, {\n    title: t('end percentage'),\n    field: 'endPercentage'\n  }, {\n    title: t('bonus'),\n    field: 'bonus'\n  }, {\n    title: t('basis of calculation'),\n    field: 'basisOfCalculation',\n    render: row => lowerAndStartCase(row.basisOfCalculation)\n  }], [t]);\n  const onCreateClick = useCallback(() => createDialog({\n    id: 'add-new-achivements-modal',\n    Component: AchivementsModal,\n    props: {\n      slaghterReturnOptions,\n      rangeOptions,\n      calculationOptions,\n      basisOfCalculationOptions,\n\n      onSubmit(porcentage) {\n        formRef.current.setFieldValue('fan.achivements', old => [...old, porcentage]);\n      }\n\n    }\n  }), [basisOfCalculationOptions, calculationOptions, createDialog, formRef, rangeOptions, slaghterReturnOptions]);\n  const onEditClick = useCallback((event, row) => createDialog({\n    id: 'add-edit-achivements-modal',\n    Component: AchivementsModal,\n    props: {\n      slaghterReturnOptions,\n      rangeOptions,\n      calculationOptions,\n      basisOfCalculationOptions,\n      row,\n\n      onSubmit(porcentage) {\n        formRef.current.setFieldValue('fan.achivements', old => map(old, item => {\n          var _item$tableData, _row$tableData;\n\n          if (((_item$tableData = item.tableData) === null || _item$tableData === void 0 ? void 0 : _item$tableData.id) === (row === null || row === void 0 ? void 0 : (_row$tableData = row.tableData) === null || _row$tableData === void 0 ? void 0 : _row$tableData.id)) {\n            return { ...porcentage,\n              tableData: item.tableData\n            };\n          }\n\n          return item;\n        }));\n      }\n\n    }\n  }), [basisOfCalculationOptions, calculationOptions, createDialog, formRef, rangeOptions, slaghterReturnOptions]);\n  const onDeleteClick = useCallback((event, row) => {\n    formRef.current.setFieldValue('fan.achivements', old => filter(old, ({\n      tableData\n    }) => {\n      var _row$tableData2;\n\n      return tableData.id !== (row === null || row === void 0 ? void 0 : (_row$tableData2 = row.tableData) === null || _row$tableData2 === void 0 ? void 0 : _row$tableData2.id);\n    }));\n  }, [formRef]);\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DataTable, {\n    data: percentage,\n    columns: columns,\n    addTitle: t('add new {this}', {\n      gender: 'female',\n      this: t('bonus')\n    }),\n    onAddClick: !isDisabled && onCreateClick,\n    onEditClick: !isDisabled && onEditClick,\n    onDeleteClick: !isDisabled && onDeleteClick,\n    emptyMessage: t('{this} datagrid body empty data source message', {\n      this: t('bonus')\n    }),\n    options: {\n      search: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(InputHidden, {\n    name: \"achivements\",\n    showError: true,\n    onValueChange: setPercentage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputText, {\n    label: t('observation', {\n      howMany: 1\n    }),\n    name: \"observation\",\n    disabled: isDisabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  })));\n};\n\nOtherNegotiatedFunds.propTypes = {\n  isDisabled: PropTypes.bool.isRequired,\n  formRef: PropTypes.any.isRequired,\n  slaghterReturnOptions: PropTypes.array.isRequired,\n  rangeOptions: PropTypes.array.isRequired,\n  calculationOptions: PropTypes.array.isRequired,\n  basisOfCalculationOptions: PropTypes.array.isRequired\n};\nOtherNegotiatedFunds.defaultProps = {};\nexport default OtherNegotiatedFunds;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/fan/containers/OtherNegotiatedFunds/OtherNegotiatedFunds.js"],"names":["React","useMemo","useCallback","useState","PropTypes","filter","map","Grid","useDialog","useT","lowerAndStartCase","DataTable","InputHidden","InputText","AchivementsModal","OtherNegotiatedFunds","isDisabled","formRef","slaghterReturnOptions","rangeOptions","calculationOptions","basisOfCalculationOptions","t","createDialog","percentage","setPercentage","columns","title","howMany","field","render","row","periodicity","determinationBasis","slaughterReturn","basisOfCalculation","onCreateClick","id","Component","props","onSubmit","porcentage","current","setFieldValue","old","onEditClick","event","item","tableData","onDeleteClick","gender","this","search","propTypes","bool","isRequired","any","array","defaultProps"],"mappings":"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","sourcesContent":["import React, {\n  useMemo,\n  useCallback,\n  useState\n} from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport filter from 'lodash/filter'\nimport map from 'lodash/map'\n\nimport Grid from '@material-ui/core/Grid'\n\nimport { useDialog } from '@britania-crm/dialog'\nimport { useT } from '@britania-crm/i18n'\nimport { lowerAndStartCase } from '@britania-crm/utils/formatters'\nimport DataTable from '@britania-crm/web-components/DataTable'\nimport InputHidden from '@britania-crm/web-components/InputHidden'\nimport InputText from '@britania-crm/web-components/InputText'\n\nimport AchivementsModal from '../../modals/AchivementsModal/AchivementsModal'\n\nconst OtherNegotiatedFunds = ({\n  isDisabled,\n  formRef,\n  slaghterReturnOptions,\n  rangeOptions,\n  calculationOptions,\n  basisOfCalculationOptions\n}) => {\n  const t = useT()\n  const { createDialog } = useDialog()\n\n  const [percentage, setPercentage] = useState([])\n\n  const columns = useMemo(() => [\n    {\n      title: t('frequency', { howMany: 1 }),\n      field: 'periodicity',\n      render: (row) => lowerAndStartCase(row.periodicity)\n    },\n    {\n      title: t('calculation basis'),\n      field: 'determinationBasis',\n      render: (row) => lowerAndStartCase(row.determinationBasis)\n    },\n    {\n      title: t('slaughter return'),\n      field: 'slaughterReturn',\n      render: (row) => row.slaughterReturn ? 'Sim' : 'NÃ£o'\n    },\n    {\n      title: t('start percentage'),\n      field: 'startPercentage'\n    },\n    {\n      title: t('end percentage'),\n      field: 'endPercentage'\n    },\n    {\n      title: t('bonus'),\n      field: 'bonus'\n    },\n    {\n      title: t('basis of calculation'),\n      field: 'basisOfCalculation',\n      render: (row) => lowerAndStartCase(row.basisOfCalculation)\n    }\n  ], [t])\n\n  const onCreateClick = useCallback(\n    () => createDialog({\n      id: 'add-new-achivements-modal',\n      Component: AchivementsModal,\n      props: {\n        slaghterReturnOptions,\n        rangeOptions,\n        calculationOptions,\n        basisOfCalculationOptions,\n        onSubmit (porcentage) {\n          formRef.current.setFieldValue('fan.achivements', (old) => [...old, porcentage])\n        }\n      }\n    }),\n    [basisOfCalculationOptions, calculationOptions, createDialog, formRef, rangeOptions, slaghterReturnOptions]\n  )\n\n  const onEditClick = useCallback(\n    (event, row) => createDialog({\n      id: 'add-edit-achivements-modal',\n      Component: AchivementsModal,\n      props: {\n        slaghterReturnOptions,\n        rangeOptions,\n        calculationOptions,\n        basisOfCalculationOptions,\n        row,\n        onSubmit (porcentage) {\n          formRef.current.setFieldValue('fan.achivements',\n            (old) =>\n              map(old, (item) => {\n                if (item.tableData?.id === row?.tableData?.id) {\n                  return { ...porcentage, tableData: item.tableData }\n                }\n                return item\n              })\n          )\n        }\n      }\n    }),\n    [basisOfCalculationOptions, calculationOptions, createDialog, formRef, rangeOptions, slaghterReturnOptions]\n  )\n\n  const onDeleteClick = useCallback(\n    (event, row) => {\n      formRef.current.setFieldValue('fan.achivements', (old) => filter(old, ({ tableData }) => tableData.id !== row?.tableData?.id))\n    },\n    [formRef]\n  )\n\n  return (\n    <Grid container spacing={ 1 }>\n      <Grid item sm={ 12 }>\n        <DataTable\n          data={ percentage }\n          columns={ columns }\n          addTitle={ t('add new {this}', {\n            gender: 'female',\n            this: t('bonus')\n          }) }\n          onAddClick={ !isDisabled && onCreateClick }\n          onEditClick={ !isDisabled && onEditClick }\n          onDeleteClick={ !isDisabled && onDeleteClick }\n          emptyMessage={ t('{this} datagrid body empty data source message', { this: t('bonus') }) }\n          options={ { search: false } }\n        />\n        <InputHidden\n          name=\"achivements\"\n          showError\n          onValueChange={ setPercentage }\n        />\n      </Grid>\n      <Grid item sm={ 12 }>\n        <InputText\n          label={ t('observation', { howMany: 1 }) }\n          name=\"observation\"\n          disabled={ isDisabled }\n        />\n      </Grid>\n    </Grid>\n  )\n}\n\nOtherNegotiatedFunds.propTypes = {\n  isDisabled: PropTypes.bool.isRequired,\n  formRef: PropTypes.any.isRequired,\n  slaghterReturnOptions: PropTypes.array.isRequired,\n  rangeOptions: PropTypes.array.isRequired,\n  calculationOptions: PropTypes.array.isRequired,\n  basisOfCalculationOptions: PropTypes.array.isRequired\n}\n\nOtherNegotiatedFunds.defaultProps = {}\n\nexport default OtherNegotiatedFunds\n"]},"metadata":{},"sourceType":"module"}