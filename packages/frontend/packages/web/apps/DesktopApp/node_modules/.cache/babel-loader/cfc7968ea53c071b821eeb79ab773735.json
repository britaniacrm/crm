{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/profiles/modals/LinkProfileUserModal/LinkProfileUserModal.js\";\nimport React, { useCallback, useState, useEffect, useMemo } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport isEmpty from 'lodash/isEmpty';\nimport map from 'lodash/map';\nimport I18n, { useT } from '@britania-crm/i18n';\nimport { users as usersCrmRoutes, profiles as profilesCrmRoutes } from '@britania-crm/services/apis/crmApi/resources/routes';\nimport useCrmApi from '@britania-crm/services/hooks/useCrmApi';\nimport { ProfilesActions } from '@britania-crm/stores/profiles';\nimport Button from '@britania-crm/web-components/Button';\nimport Modal from '@britania-crm/web-components/Modal';\nimport TransferList from '@britania-crm/web-components/TransferList';\nimport { BindContainer, ButtonContainer } from './styles';\n\nconst LinkProfileUserModal = props => {\n  const {\n    id,\n    profileId,\n    profileName,\n    open,\n    handleClose,\n    enableLoading\n  } = props;\n  const t = useT();\n  const dispatch = useCallback(useDispatch(), []);\n  const {\n    data: usersFromApi,\n    loading: usersLoading\n  } = useCrmApi(usersCrmRoutes.list);\n  const {\n    data: profilesFromApi,\n    loading: profilesLoading,\n    mutate: profilesMutate\n  } = useCrmApi(profileId ? [`${profilesCrmRoutes.list}/${profileId}`, profileId] : null);\n  const [loading, setLoading] = useState(false);\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  useEffect(() => {\n    if (!isEmpty(profilesFromApi)) {\n      getProfileById();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [profilesFromApi]);\n  const users = useMemo(() => map(usersFromApi, user => ({\n    id: user.id,\n    name: user.username\n  })), [usersFromApi]);\n  const getProfileById = useCallback(() => {\n    setLoading(true);\n    const {\n      userProfile\n    } = profilesFromApi;\n    const users = map(userProfile, user => ({\n      id: user.userId\n    }));\n    setSelectedUsers(users);\n    setLoading(false);\n  }, [profilesFromApi]);\n  const handleConfirm = useCallback(() => {\n    if (enableLoading) {\n      setLoading(true);\n    }\n\n    const {\n      name,\n      active,\n      permissions,\n      accesses,\n      micros,\n      exceptions\n    } = profilesFromApi;\n    const payload = {\n      name,\n      active,\n      permissions: !isEmpty(permissions) ? permissions.map(item => item.permissionId) : [],\n      access: !isEmpty(accesses) ? accesses.map(item => item.accessId) : [],\n      micros: !isEmpty(micros) ? micros.map(item => item.fieldId) : [],\n      users: !isEmpty(selectedUsers) ? selectedUsers.map(item => item.id) : [],\n      exceptions: !isEmpty(exceptions) ? exceptions.map(item => ({\n        access: item.accessId,\n        permission: item.permissionId\n      })) : []\n    };\n    dispatch(ProfilesActions.editProfile(profileId, payload, () => {\n      profilesMutate();\n      setLoading(false);\n      handleClose();\n    }));\n  }, [dispatch, enableLoading, handleClose, profileId, profilesFromApi, profilesMutate, selectedUsers]);\n  return /*#__PURE__*/React.createElement(Modal, {\n    id: id,\n    title: t('link of {this}', {\n      this: t('user', {\n        howMany: 2\n      })\n    }),\n    open: open,\n    maxWidth: \"md\",\n    loading: loading || usersLoading || profilesLoading,\n    fullWidth: true,\n    FooterComponent: () => /*#__PURE__*/React.createElement(ButtonContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"secondary\",\n      variant: \"outlined\",\n      onClick: handleClose,\n      disabled: loading || usersLoading || profilesLoading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(I18n, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }, \"cancel\")), /*#__PURE__*/React.createElement(Button, {\n      color: \"secondary\",\n      variant: \"contained\",\n      onClick: handleConfirm,\n      disabled: loading || usersLoading || profilesLoading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(I18n, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }, \"save\"))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(BindContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TransferList, {\n    detached: true,\n    title: t('user', {\n      howMany: 2\n    }),\n    options: users,\n    value: selectedUsers,\n    onChange: setSelectedUsers,\n    loading: usersLoading || profilesLoading,\n    header: profileName,\n    type: t('perfil'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  })));\n};\n\nLinkProfileUserModal.propTypes = {\n  id: PropTypes.string.isRequired,\n  profileId: PropTypes.number.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  profileName: PropTypes.string,\n  enableLoading: PropTypes.bool\n};\nLinkProfileUserModal.defaultProps = {\n  profileName: '',\n  enableLoading: false\n};\nexport default LinkProfileUserModal;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/profiles/modals/LinkProfileUserModal/LinkProfileUserModal.js"],"names":["React","useCallback","useState","useEffect","useMemo","useDispatch","PropTypes","isEmpty","map","I18n","useT","users","usersCrmRoutes","profiles","profilesCrmRoutes","useCrmApi","ProfilesActions","Button","Modal","TransferList","BindContainer","ButtonContainer","LinkProfileUserModal","props","id","profileId","profileName","open","handleClose","enableLoading","t","dispatch","data","usersFromApi","loading","usersLoading","list","profilesFromApi","profilesLoading","mutate","profilesMutate","setLoading","selectedUsers","setSelectedUsers","getProfileById","user","name","username","userProfile","userId","handleConfirm","active","permissions","accesses","micros","exceptions","payload","item","permissionId","access","accessId","fieldId","permission","editProfile","this","howMany","propTypes","string","isRequired","number","func","bool","defaultProps"],"mappings":"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","sourcesContent":["import React, {\n  useCallback,\n  useState,\n  useEffect,\n  useMemo\n} from 'react'\nimport { useDispatch } from 'react-redux'\n\nimport PropTypes from 'prop-types'\n\nimport isEmpty from 'lodash/isEmpty'\nimport map from 'lodash/map'\n\nimport I18n, { useT } from '@britania-crm/i18n'\nimport {\n  users as usersCrmRoutes,\n  profiles as profilesCrmRoutes\n} from '@britania-crm/services/apis/crmApi/resources/routes'\nimport useCrmApi from '@britania-crm/services/hooks/useCrmApi'\nimport { ProfilesActions } from '@britania-crm/stores/profiles'\nimport Button from '@britania-crm/web-components/Button'\nimport Modal from '@britania-crm/web-components/Modal'\nimport TransferList from '@britania-crm/web-components/TransferList'\n\nimport {\n  BindContainer,\n  ButtonContainer\n} from './styles'\n\nconst LinkProfileUserModal = (props) => {\n  const {\n    id,\n    profileId,\n    profileName,\n    open,\n    handleClose,\n    enableLoading\n  } = props\n\n  const t = useT()\n  const dispatch = useCallback(useDispatch(), [])\n\n  const {\n    data: usersFromApi,\n    loading: usersLoading\n  } = useCrmApi(usersCrmRoutes.list)\n\n  const {\n    data: profilesFromApi,\n    loading: profilesLoading,\n    mutate: profilesMutate\n  } = useCrmApi(profileId ? [`${ profilesCrmRoutes.list }/${ profileId }`, profileId] : null)\n\n  const [loading, setLoading] = useState(false)\n  const [selectedUsers, setSelectedUsers] = useState([])\n\n  useEffect(() => {\n    if (!isEmpty(profilesFromApi)) { getProfileById() }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [profilesFromApi])\n\n  const users = useMemo(() => map(usersFromApi, (user) => ({ id: user.id, name: user.username })), [usersFromApi])\n\n  const getProfileById = useCallback(() => {\n    setLoading(true)\n    const { userProfile } = profilesFromApi\n    const users = map(userProfile, (user) => ({ id: user.userId }))\n    setSelectedUsers(users)\n    setLoading(false)\n  }, [profilesFromApi])\n\n  const handleConfirm = useCallback(\n    () => {\n      if (enableLoading) {\n        setLoading(true)\n      }\n      const {\n        name,\n        active,\n        permissions,\n        accesses,\n        micros,\n        exceptions\n      } = profilesFromApi\n\n      const payload = {\n        name,\n        active,\n        permissions: !isEmpty(permissions) ? permissions.map((item) => item.permissionId) : [],\n        access: !isEmpty(accesses) ? accesses.map((item) => item.accessId) : [],\n        micros: !isEmpty(micros) ? micros.map((item) => item.fieldId) : [],\n        users: !isEmpty(selectedUsers) ? selectedUsers.map((item) => item.id) : [],\n        exceptions: !isEmpty(exceptions) ? exceptions.map((item) => ({\n          access: item.accessId,\n          permission: item.permissionId\n        })) : []\n      }\n\n      dispatch(ProfilesActions.editProfile(profileId, payload, () => {\n        profilesMutate()\n        setLoading(false)\n        handleClose()\n      }))\n    },\n    [dispatch, enableLoading, handleClose, profileId, profilesFromApi, profilesMutate, selectedUsers]\n  )\n\n  return (\n    <Modal\n      id={ id }\n      title={ t('link of {this}', { this: t('user', { howMany: 2 }) }) }\n      open={ open }\n      maxWidth=\"md\"\n      loading={ loading || usersLoading || profilesLoading }\n      fullWidth\n      FooterComponent={ () => (\n        <ButtonContainer>\n          <Button\n            color=\"secondary\"\n            variant=\"outlined\"\n            onClick={ handleClose }\n            disabled={ loading || usersLoading || profilesLoading }\n          >\n            <I18n>cancel</I18n>\n          </Button>\n          <Button\n            color=\"secondary\"\n            variant=\"contained\"\n            onClick={ handleConfirm }\n            disabled={ loading || usersLoading || profilesLoading }\n          >\n            <I18n>save</I18n>\n          </Button>\n        </ButtonContainer>\n      ) }\n    >\n      <BindContainer>\n        <TransferList\n          detached\n          title={ t('user', { howMany: 2 }) }\n          options={ users }\n          value={ selectedUsers }\n          onChange={ setSelectedUsers }\n          loading={ usersLoading || profilesLoading }\n          header={ profileName }\n          type={ t('perfil') }\n        />\n      </BindContainer>\n    </Modal>\n  )\n}\n\nLinkProfileUserModal.propTypes = {\n  id: PropTypes.string.isRequired,\n  profileId: PropTypes.number.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  profileName: PropTypes.string,\n  enableLoading: PropTypes.bool\n}\n\nLinkProfileUserModal.defaultProps = {\n  profileName: '',\n  enableLoading: false\n}\n\nexport default LinkProfileUserModal\n"]},"metadata":{},"sourceType":"module"}