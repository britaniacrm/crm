{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/src/routes/ScreenRouter/ScreenRouter.js\";\nimport React, { Suspense, memo, useMemo, useLayoutEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport supportsHistory from '@meta-awesome/functions/src/supportsHistory';\nimport { useT } from '@britania-crm/i18n';\nimport crmApi from '@britania-crm/services/apis/crmApi';\nimport { useSnackbar } from '@britania-crm/snackbar';\nimport { selectIsAuthenticated } from '@britania-crm/stores/auth/auth.selectors';\nimport CircularLoader from '@britania-crm/web-components/Loader/CircularLoader';\nimport GuestLayout from '@britania-crm/web-src/layouts/GuestLayout';\nimport MainLayout from '@britania-crm/web-src/layouts/MainLayout';\nimport AuthenticatedScreenRouter from './AuthenticatedScreenRouter';\nimport GuestScreenRouter from './GuestScreenRouter';\nconst forceRefresh = !supportsHistory();\n\nconst ScreenRouter = () => {\n  const snackbar = useSnackbar();\n  const t = useT();\n  const isAuthenticated = useSelector(selectIsAuthenticated);\n  const RouterContext = useMemo(() => isAuthenticated ? AuthenticatedScreenRouter : GuestScreenRouter, [isAuthenticated]);\n  const Layout = useMemo(() => isAuthenticated ? MainLayout : GuestLayout, [isAuthenticated]);\n  useLayoutEffect(() => {\n    crmApi.interceptors.response.use(response => response, error => {\n      var _response$data;\n\n      const {\n        response\n      } = error;\n\n      if (((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.errorCode) !== 'VALIDATION_FAILED' && response.status !== 404 && response.status !== 403 && response.status !== 401) {\n        var _response$data2;\n\n        let msg = response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.message;\n\n        if (msg === 'Internal server error') {\n          msg = t('occurred an error when execute the operation');\n        }\n\n        snackbar.error(msg);\n      }\n\n      return Promise.reject(error);\n    });\n  }, [snackbar, t]);\n  return /*#__PURE__*/React.createElement(Router, {\n    forceRefresh: forceRefresh,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Suspense, {\n    fallback: /*#__PURE__*/React.createElement(CircularLoader, {\n      fullSpace: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 30\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(RouterContext, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default memo(ScreenRouter);","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/src/routes/ScreenRouter/ScreenRouter.js"],"names":["React","Suspense","memo","useMemo","useLayoutEffect","useSelector","BrowserRouter","Router","supportsHistory","useT","crmApi","useSnackbar","selectIsAuthenticated","CircularLoader","GuestLayout","MainLayout","AuthenticatedScreenRouter","GuestScreenRouter","forceRefresh","ScreenRouter","snackbar","t","isAuthenticated","RouterContext","Layout","interceptors","response","use","error","data","errorCode","status","msg","message","Promise","reject"],"mappings":";AAAA,OAAOA,KAAP,IACEC,QADF,EAEEC,IAFF,EAGEC,OAHF,EAIEC,eAJF,QAKO,OALP;AAMA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,aAAa,IAAIC,MAA1B,QAAwC,kBAAxC;AAEA,OAAOC,eAAP,MAA4B,6CAA5B;AAEA,SAASC,IAAT,QAAqB,oBAArB;AACA,OAAOC,MAAP,MAAmB,oCAAnB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,qBAAT,QAAsC,0CAAtC;AACA,OAAOC,cAAP,MAA2B,oDAA3B;AACA,OAAOC,WAAP,MAAwB,2CAAxB;AACA,OAAOC,UAAP,MAAuB,0CAAvB;AAEA,OAAOC,yBAAP,MAAsC,6BAAtC;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,MAAMC,YAAY,GAAG,CAACV,eAAe,EAArC;;AAEA,MAAMW,YAAY,GAAG,MAAM;AACzB,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,CAAC,GAAGZ,IAAI,EAAd;AACA,QAAMa,eAAe,GAAGjB,WAAW,CAACO,qBAAD,CAAnC;AAEA,QAAMW,aAAa,GAAGpB,OAAO,CAC3B,MAAMmB,eAAe,GAAGN,yBAAH,GAA+BC,iBADzB,EAE3B,CAACK,eAAD,CAF2B,CAA7B;AAKA,QAAME,MAAM,GAAGrB,OAAO,CACpB,MAAMmB,eAAe,GAAGP,UAAH,GAAgBD,WADjB,EAEpB,CAACQ,eAAD,CAFoB,CAAtB;AAKAlB,EAAAA,eAAe,CACb,MAAM;AACJM,IAAAA,MAAM,CAACe,YAAP,CAAoBC,QAApB,CAA6BC,GAA7B,CACGD,QAAD,IAAcA,QADhB,EAEGE,KAAD,IAAW;AAAA;;AACT,YAAM;AAAEF,QAAAA;AAAF,UAAeE,KAArB;;AACA,UACE,mBAAAF,QAAQ,CAACG,IAAT,kEAAeC,SAAf,MAA6B,mBAA7B,IACAJ,QAAQ,CAACK,MAAT,KAAoB,GADpB,IAEAL,QAAQ,CAACK,MAAT,KAAoB,GAFpB,IAGAL,QAAQ,CAACK,MAAT,KAAoB,GAJtB,EAKE;AAAA;;AACA,YAAIC,GAAG,GAAGN,QAAH,aAAGA,QAAH,0CAAGA,QAAQ,CAAEG,IAAb,oDAAG,gBAAgBI,OAA1B;;AACA,YAAID,GAAG,KAAK,uBAAZ,EAAqC;AACnCA,UAAAA,GAAG,GAAGX,CAAC,CAAC,8CAAD,CAAP;AACD;;AACDD,QAAAA,QAAQ,CAACQ,KAAT,CAAeI,GAAf;AACD;;AACD,aAAOE,OAAO,CAACC,MAAR,CAAeP,KAAf,CAAP;AACD,KAjBH;AAmBD,GArBY,EAsBb,CAACR,QAAD,EAAWC,CAAX,CAtBa,CAAf;AAyBA,sBACE,oBAAC,MAAD;AAAQ,IAAA,YAAY,EAAGH,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,QAAQ,eAAG,oBAAC,cAAD;AAAgB,MAAA,SAAS,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CADF;AASD,CAjDD;;AAmDA,eAAehB,IAAI,CAACiB,YAAD,CAAnB","sourcesContent":["import React, {\n  Suspense,\n  memo,\n  useMemo,\n  useLayoutEffect\n} from 'react'\nimport { useSelector } from 'react-redux'\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nimport supportsHistory from '@meta-awesome/functions/src/supportsHistory'\n\nimport { useT } from '@britania-crm/i18n'\nimport crmApi from '@britania-crm/services/apis/crmApi'\nimport { useSnackbar } from '@britania-crm/snackbar'\nimport { selectIsAuthenticated } from '@britania-crm/stores/auth/auth.selectors'\nimport CircularLoader from '@britania-crm/web-components/Loader/CircularLoader'\nimport GuestLayout from '@britania-crm/web-src/layouts/GuestLayout'\nimport MainLayout from '@britania-crm/web-src/layouts/MainLayout'\n\nimport AuthenticatedScreenRouter from './AuthenticatedScreenRouter'\nimport GuestScreenRouter from './GuestScreenRouter'\nconst forceRefresh = !supportsHistory()\n\nconst ScreenRouter = () => {\n  const snackbar = useSnackbar()\n  const t = useT()\n  const isAuthenticated = useSelector(selectIsAuthenticated)\n\n  const RouterContext = useMemo(\n    () => isAuthenticated ? AuthenticatedScreenRouter : GuestScreenRouter,\n    [isAuthenticated]\n  )\n\n  const Layout = useMemo(\n    () => isAuthenticated ? MainLayout : GuestLayout,\n    [isAuthenticated]\n  )\n\n  useLayoutEffect(\n    () => {\n      crmApi.interceptors.response.use(\n        (response) => response,\n        (error) => {\n          const { response } = error\n          if (\n            response.data?.errorCode !== 'VALIDATION_FAILED' &&\n            response.status !== 404 &&\n            response.status !== 403 &&\n            response.status !== 401\n          ) {\n            let msg = response?.data?.message\n            if (msg === 'Internal server error') {\n              msg = t('occurred an error when execute the operation')\n            }\n            snackbar.error(msg)\n          }\n          return Promise.reject(error)\n        }\n      )\n    },\n    [snackbar, t]\n  )\n\n  return (\n    <Router forceRefresh={ forceRefresh }>\n      <Layout>\n        <Suspense fallback={ <CircularLoader fullSpace /> }>\n          <RouterContext />\n        </Suspense>\n      </Layout>\n    </Router>\n  )\n}\n\nexport default memo(ScreenRouter)\n"]},"metadata":{},"sourceType":"module"}