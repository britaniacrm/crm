{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/profiles/screens/ProfileFormScreen/ProfileFormScreen.js\";\nimport React, { useState, useEffect, useMemo, useCallback, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\nimport filter from 'lodash/filter';\nimport isEmpty from 'lodash/isEmpty';\nimport isEqual from 'lodash/isEqual';\nimport map from 'lodash/map';\nimport uniqWith from 'lodash/uniqWith';\nimport { useDialog } from '@britania-crm/dialog';\nimport profileSchema, { INITIAL_VALUES } from '@britania-crm/forms/schemas/profile/profile.schema';\nimport I18n, { useT } from '@britania-crm/i18n';\nimport { users as usersCrmRoutes, access as accessCrmRoutes, permissions as permissionsCrmRoutes, profiles as profilesCrmRoutes } from '@britania-crm/services/apis/crmApi/resources/routes';\nimport useCrmApi from '@britania-crm/services/hooks/useCrmApi';\nimport { ProfilesActions } from '@britania-crm/stores/profiles/';\nimport { colors } from '@britania-crm/styles';\nimport Badges from '@britania-crm/web-components/Badges';\nimport Button from '@britania-crm/web-components/Button';\nimport Form from '@britania-crm/web-components/Form';\nimport MicroViewIcon from '@britania-crm/web-components/Icons/MicroViewIcon';\nimport PermissionExceptionIcon from '@britania-crm/web-components/Icons/PermissionExceptionIcon';\nimport InputHidden from '@britania-crm/web-components/InputHidden';\nimport InputText from '@britania-crm/web-components/InputText';\nimport StatusSwitch from '@britania-crm/web-components/StatusSwitch';\nimport TransferList from '@britania-crm/web-components/TransferList';\nimport { useRoutes } from '@britania-crm/web-src/routes/authenticated.routes';\nimport MicroViewingModal from '../../modals/MicroViewingModal/MicroViewingModal';\nimport PermissionExceptionsModal from '../../modals/PermissionExceptionsModal/PermissionExceptionsModal';\nimport MicroViewingTable from '../../tables/MicroViewingTable/MicroViewingTable';\nimport PermissionExceptionsTable from '../../tables/PermissionExceptionsTable/PermissionExceptionsTable';\nimport useStyles, { Grid, Container, Footer } from './styles';\n\nconst ProfileFormScreen = () => {\n  const t = useT();\n  const {\n    createDialog\n  } = useDialog();\n  const classes = useStyles();\n  const dispatch = useCallback(useDispatch(), []);\n  const history = useHistory();\n  const {\n    state\n  } = useLocation();\n  const {\n    routes,\n    currentRoutePermissions\n  } = useRoutes();\n  const formRef = useRef(null);\n  const [mounted, setMounted] = useState(false);\n  const [submitLoading, setSubmitLoading] = useState(false);\n  const [accessesSelected, setAccessesSelected] = useState([]);\n  const [microsSelected, setMicrosSelected] = useState([]);\n  const [permissionsSelected, setPermissionsSelected] = useState([]);\n  const [exceptionsSelected, setExceptionsSelected] = useState([]);\n  const [queryParams, setQueryParams] = useState({\n    name: ''\n  });\n  const {\n    data: usersFromApi,\n    loading: userFromApiLoading\n  } = useCrmApi([usersCrmRoutes.list, queryParams], {\n    params: queryParams\n  });\n  const {\n    data: permissionFromApi\n  } = useCrmApi(permissionsCrmRoutes.base);\n  const {\n    data: viewsListFromApi\n  } = useCrmApi(accessCrmRoutes.getAll);\n  const {\n    data: profilesFromApi\n  } = useCrmApi((state === null || state === void 0 ? void 0 : state.profileId) ? [`${profilesCrmRoutes.list}/${state.profileId}`, state] : null);\n  const loading = useMemo(() => userFromApiLoading || submitLoading, [submitLoading, userFromApiLoading]);\n  const viewsListOptions = useMemo(() => map(viewsListFromApi, option => ({\n    id: option.id,\n    name: option.name\n  })), [viewsListFromApi]);\n  const permissionsOptions = useMemo(() => map(permissionFromApi, option => ({\n    id: option.id,\n    name: option.name\n  })), [permissionFromApi]);\n  const usersOptions = useMemo(() => map(usersFromApi, option => ({\n    id: option.id,\n    name: option.username\n  })), [usersFromApi]);\n  const formatMicroViewList = useMemo(() => {\n    const arrayhiddenFields = map(profilesFromApi === null || profilesFromApi === void 0 ? void 0 : profilesFromApi.micros, ({\n      field\n    }) => ({\n      id: field.id,\n      name: field.name,\n      accessId: field.accessId\n    }));\n    const arrayAccess = map(profilesFromApi === null || profilesFromApi === void 0 ? void 0 : profilesFromApi.micros, ({\n      field\n    }) => ({\n      access: {\n        id: field.access.id,\n        name: field.access.name\n      },\n      hiddenFields: filter(arrayhiddenFields, {\n        accessId: field.accessId\n      })\n    }));\n    return uniqWith(arrayAccess, isEqual);\n  }, [profilesFromApi]);\n  const formatExceptionsAndPermissionList = useMemo(() => {\n    const permissionArr = map(profilesFromApi === null || profilesFromApi === void 0 ? void 0 : profilesFromApi.exceptions, item => ({\n      id: item.permission.id,\n      name: item.permission.name,\n      accessId: item.accessId\n    }));\n    const accessArr = map(profilesFromApi === null || profilesFromApi === void 0 ? void 0 : profilesFromApi.exceptions, ({\n      access,\n      accessId\n    }) => ({\n      access: {\n        id: access.id,\n        name: access.name\n      },\n      permission: filter(permissionArr, {\n        accessId\n      })\n    }));\n    return uniqWith(accessArr, isEqual);\n  }, [profilesFromApi]);\n  const handleSubmit = useCallback(values => {\n    const formattedValues = { ...values,\n      permissions: map(values.permissions, permission => permission.id),\n      access: map(values.access, access => access.id),\n      micros: map(values.micros, micro => map(micro.hiddenFields, field => field.id)).flat(),\n      users: map(values.users, user => user.userId || user.id),\n      exceptions: map(values.exceptions, ({\n        access,\n        permission\n      }) => map(permission, item => ({\n        access: access.id,\n        permission: item.id\n      }))).flat()\n    };\n\n    const onSuccess = () => {\n      history.push(routes.profiles.path);\n    };\n\n    if (state === null || state === void 0 ? void 0 : state.profileId) {\n      dispatch(ProfilesActions.editProfile(state.profileId, formattedValues, onSuccess, () => setSubmitLoading(false)));\n    } else {\n      dispatch(ProfilesActions.createProfile(formattedValues, onSuccess, () => setSubmitLoading(false)));\n    }\n  }, [dispatch, history, routes.profiles.path, state]);\n  const handleExceptionsEdit = useCallback(exception => {\n    formRef.current.setFieldValue('exceptions', oldExceptions => map(oldExceptions, item => {\n      var _item$access;\n\n      if ((item === null || item === void 0 ? void 0 : (_item$access = item.access) === null || _item$access === void 0 ? void 0 : _item$access.id) === exception.access.id) {\n        return exception;\n      }\n\n      return item;\n    }));\n  }, []);\n  const handleDeleteException = useCallback(exception => {\n    formRef.current.setFieldValue('exceptions', oldExceptions => filter(oldExceptions, ({\n      access\n    }) => access.id !== exception.accessId));\n  }, []);\n  const handleDeleteMicro = useCallback(micro => {\n    formRef.current.setFieldValue('micros', (old = []) => filter(old, ({\n      access\n    }) => {\n      var _micro$access;\n\n      return (access === null || access === void 0 ? void 0 : access.id) !== (micro === null || micro === void 0 ? void 0 : (_micro$access = micro.access) === null || _micro$access === void 0 ? void 0 : _micro$access.id);\n    }));\n  }, []);\n  const handleEditMicro = useCallback(micro => {\n    formRef.current.setFieldValue('micros', (old = []) => map(old, item => {\n      var _item$access2, _micro$access2;\n\n      return (item === null || item === void 0 ? void 0 : (_item$access2 = item.access) === null || _item$access2 === void 0 ? void 0 : _item$access2.id) === (micro === null || micro === void 0 ? void 0 : (_micro$access2 = micro.access) === null || _micro$access2 === void 0 ? void 0 : _micro$access2.id) ? micro : item;\n    }));\n  }, []);\n  const debounceQuery = useCallback(debounce(filter => {\n    if (filter.length >= 3) {\n      setQueryParams({\n        name: filter\n      });\n    }\n  }, 300), []);\n  const onFilterChange = useCallback((side, filter) => {\n    if (side === 'left') {\n      debounceQuery(filter);\n    }\n  }, [debounceQuery]);\n  const handleOpenMicroViewingModal = useCallback(() => createDialog({\n    id: 'microview-modal',\n    Component: MicroViewingModal,\n    props: {\n      accessesSelected: formRef.current.getFieldValue('access'),\n      microViewList: formRef.current.getFieldValue('micros'),\n      onSave: micro => formRef.current.setFieldValue('micros', (old = []) => [...old, micro])\n    }\n  }), [createDialog]);\n  const handleOpenPermissionExceptionsModal = useCallback(() => createDialog({\n    id: 'permission-modal',\n    Component: PermissionExceptionsModal,\n    props: {\n      access: formRef.current.getFieldValue('access'),\n      permissions: formRef.current.getFieldValue('permissions'),\n      exceptionsList: formRef.current.getFieldValue('exceptions'),\n      onSave: exception => formRef.current.setFieldValue('exceptions', (old = []) => [...old, exception])\n    }\n  }), [createDialog]);\n  useEffect(() => {\n    if (!isEmpty(profilesFromApi) && mounted) {\n      formRef.current.setData({ ...profilesFromApi,\n        permissions: map(profilesFromApi === null || profilesFromApi === void 0 ? void 0 : profilesFromApi.permissions, item => ({\n          id: item.permission.id,\n          name: item.permission.name\n        })),\n        access: map(profilesFromApi === null || profilesFromApi === void 0 ? void 0 : profilesFromApi.accesses, ({\n          accessId,\n          access\n        }) => ({\n          id: accessId,\n          name: access.name\n        })),\n        micros: formatMicroViewList,\n        users: map(profilesFromApi === null || profilesFromApi === void 0 ? void 0 : profilesFromApi.userProfile, ({\n          user\n        }) => ({\n          id: user.id,\n          name: user.username\n        })),\n        exceptions: formatExceptionsAndPermissionList\n      });\n    } else if (!mounted) {\n      setMounted(true);\n    }\n  }, [profilesFromApi, mounted, formatMicroViewList, formatExceptionsAndPermissionList]);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }\n  }, (state === null || state === void 0 ? void 0 : state.profileId) ? t('edit profile') : t('new profile')), /*#__PURE__*/React.createElement(Form, {\n    ref: formRef,\n    onSubmit: handleSubmit,\n    schemaConstructor: profileSchema,\n    defaultValues: INITIAL_VALUES,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    alignItems: \"center\",\n    justify: \"space-between\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputText, {\n    name: \"name\",\n    label: t('profile', {\n      howMany: 1\n    }),\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(StatusSwitch, {\n    name: \"active\",\n    disabled: !currentRoutePermissions.INATIVAR,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    className: classes.grid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Badges, {\n    name: \"permissions\",\n    label: `${t('permission', {\n      howMany: 2\n    })}:`,\n    options: permissionsOptions,\n    onValueChange: setPermissionsSelected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    className: classes.grid,\n    container: true,\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Badges, {\n    name: \"access\",\n    label: `${t('view', {\n      howMany: 2\n    })}:`,\n    options: viewsListOptions,\n    onValueChange: setAccessesSelected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    alignItems: \"center\",\n    justify: \"center\",\n    className: [classes.btn, classes.grid],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(I18n, {\n    as: Button,\n    id: \"AddMicroViewingButton\",\n    disabled: isEmpty(accessesSelected),\n    className: classes.addMicroView,\n    onClick: handleOpenMicroViewingModal,\n    startIcon: /*#__PURE__*/React.createElement(MicroViewIcon, {\n      color: colors.white,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 25\n      }\n    }),\n    variant: \"contained\",\n    style: {\n      marginRight: 6\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 11\n    }\n  }, \"add micro view\"), /*#__PURE__*/React.createElement(InputHidden, {\n    name: \"micros\",\n    onValueChange: setMicrosSelected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(I18n, {\n    as: Button,\n    id: \"AddPermissionExcetionButton\",\n    disabled: isEmpty(accessesSelected) || isEmpty(permissionsSelected),\n    className: classes.addPermissionException,\n    onClick: handleOpenPermissionExceptionsModal,\n    startIcon: /*#__PURE__*/React.createElement(PermissionExceptionIcon, {\n      color: colors.white,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 25\n      }\n    }),\n    variant: \"contained\",\n    style: {\n      marginLeft: 6\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 11\n    }\n  }, \"add permission exceptions\"), /*#__PURE__*/React.createElement(InputHidden, {\n    name: \"exceptions\",\n    onValueChange: setExceptionsSelected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 11\n    }\n  })), !isEmpty(exceptionsSelected) && /*#__PURE__*/React.createElement(Grid, {\n    className: classes.grid,\n    container: true,\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(PermissionExceptionsTable, {\n    onEdit: handleExceptionsEdit,\n    exceptionsList: exceptionsSelected,\n    onDelete: handleDeleteException,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 13\n    }\n  })), !isEmpty(microsSelected) && /*#__PURE__*/React.createElement(Grid, {\n    className: classes.grid,\n    container: true,\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MicroViewingTable, {\n    microViewList: microsSelected,\n    onDelete: handleDeleteMicro,\n    onEdit: handleEditMicro,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    className: classes.grid,\n    container: true,\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TransferList, {\n    name: \"users\",\n    title: t('user', {\n      howMany: 2\n    }),\n    options: usersOptions,\n    loading: loading,\n    onFilterChange: onFilterChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(I18n, {\n    as: Button,\n    onClick: () => formRef.current.reset(),\n    color: \"secondary\",\n    variant: \"text\",\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 9\n    }\n  }, \"clean\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(I18n, {\n    as: Button,\n    color: \"secondary\",\n    onClick: () => history.push(routes.profiles.path),\n    size: \"small\",\n    variant: \"outlined\",\n    width: \"154px\",\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 11\n    }\n  }, \"cancel\"), /*#__PURE__*/React.createElement(I18n, {\n    as: Button,\n    onClick: () => formRef.current.submit(),\n    color: \"secondary\",\n    size: \"small\",\n    variant: \"contained\",\n    width: \"234px\",\n    isLoading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 11\n    }\n  }, \"finish registration\"))));\n};\n\nexport default ProfileFormScreen;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/profiles/screens/ProfileFormScreen/ProfileFormScreen.js"],"names":["React","useState","useEffect","useMemo","useCallback","useRef","useDispatch","useHistory","useLocation","debounce","filter","isEmpty","isEqual","map","uniqWith","useDialog","profileSchema","INITIAL_VALUES","I18n","useT","users","usersCrmRoutes","access","accessCrmRoutes","permissions","permissionsCrmRoutes","profiles","profilesCrmRoutes","useCrmApi","ProfilesActions","colors","Badges","Button","Form","MicroViewIcon","PermissionExceptionIcon","InputHidden","InputText","StatusSwitch","TransferList","useRoutes","MicroViewingModal","PermissionExceptionsModal","MicroViewingTable","PermissionExceptionsTable","useStyles","Grid","Container","Footer","ProfileFormScreen","t","createDialog","classes","dispatch","history","state","routes","currentRoutePermissions","formRef","mounted","setMounted","submitLoading","setSubmitLoading","accessesSelected","setAccessesSelected","microsSelected","setMicrosSelected","permissionsSelected","setPermissionsSelected","exceptionsSelected","setExceptionsSelected","queryParams","setQueryParams","name","data","usersFromApi","loading","userFromApiLoading","list","params","permissionFromApi","base","viewsListFromApi","getAll","profilesFromApi","profileId","viewsListOptions","option","id","permissionsOptions","usersOptions","username","formatMicroViewList","arrayhiddenFields","micros","field","accessId","arrayAccess","hiddenFields","formatExceptionsAndPermissionList","permissionArr","exceptions","item","permission","accessArr","handleSubmit","values","formattedValues","micro","flat","user","userId","onSuccess","push","path","editProfile","createProfile","handleExceptionsEdit","exception","current","setFieldValue","oldExceptions","handleDeleteException","handleDeleteMicro","old","handleEditMicro","debounceQuery","length","onFilterChange","side","handleOpenMicroViewingModal","Component","props","getFieldValue","microViewList","onSave","handleOpenPermissionExceptionsModal","exceptionsList","setData","accesses","userProfile","howMany","INATIVAR","grid","btn","addMicroView","white","marginRight","addPermissionException","marginLeft","reset","submit"],"mappings":"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","sourcesContent":["import React, {\n  useState,\n  useEffect,\n  useMemo,\n  useCallback,\n  useRef\n} from 'react'\nimport { useDispatch } from 'react-redux'\nimport {\n  useHistory,\n  useLocation\n} from 'react-router-dom'\n\nimport debounce from 'lodash/debounce'\nimport filter from 'lodash/filter'\nimport isEmpty from 'lodash/isEmpty'\nimport isEqual from 'lodash/isEqual'\nimport map from 'lodash/map'\nimport uniqWith from 'lodash/uniqWith'\n\nimport { useDialog } from '@britania-crm/dialog'\nimport profileSchema, { INITIAL_VALUES } from '@britania-crm/forms/schemas/profile/profile.schema'\nimport I18n, { useT } from '@britania-crm/i18n'\nimport {\n  users as usersCrmRoutes,\n  access as accessCrmRoutes,\n  permissions as permissionsCrmRoutes,\n  profiles as profilesCrmRoutes\n} from '@britania-crm/services/apis/crmApi/resources/routes'\nimport useCrmApi from '@britania-crm/services/hooks/useCrmApi'\nimport { ProfilesActions } from '@britania-crm/stores/profiles/'\nimport { colors } from '@britania-crm/styles'\nimport Badges from '@britania-crm/web-components/Badges'\nimport Button from '@britania-crm/web-components/Button'\nimport Form from '@britania-crm/web-components/Form'\nimport MicroViewIcon from '@britania-crm/web-components/Icons/MicroViewIcon'\nimport PermissionExceptionIcon from '@britania-crm/web-components/Icons/PermissionExceptionIcon'\nimport InputHidden from '@britania-crm/web-components/InputHidden'\nimport InputText from '@britania-crm/web-components/InputText'\nimport StatusSwitch from '@britania-crm/web-components/StatusSwitch'\nimport TransferList from '@britania-crm/web-components/TransferList'\nimport { useRoutes } from '@britania-crm/web-src/routes/authenticated.routes'\n\nimport MicroViewingModal from '../../modals/MicroViewingModal/MicroViewingModal'\nimport PermissionExceptionsModal from '../../modals/PermissionExceptionsModal/PermissionExceptionsModal'\nimport MicroViewingTable from '../../tables/MicroViewingTable/MicroViewingTable'\nimport PermissionExceptionsTable from '../../tables/PermissionExceptionsTable/PermissionExceptionsTable'\nimport useStyles, {\n  Grid,\n  Container,\n  Footer\n} from './styles'\n\nconst ProfileFormScreen = () => {\n  const t = useT()\n  const { createDialog } = useDialog()\n  const classes = useStyles()\n  const dispatch = useCallback(useDispatch(), [])\n\n  const history = useHistory()\n  const { state } = useLocation()\n  const { routes, currentRoutePermissions } = useRoutes()\n\n  const formRef = useRef(null)\n\n  const [mounted, setMounted] = useState(false)\n  const [submitLoading, setSubmitLoading] = useState(false)\n  const [accessesSelected, setAccessesSelected] = useState([])\n  const [microsSelected, setMicrosSelected] = useState([])\n  const [permissionsSelected, setPermissionsSelected] = useState([])\n  const [exceptionsSelected, setExceptionsSelected] = useState([])\n  const [queryParams, setQueryParams] = useState({ name: '' })\n\n  const { data: usersFromApi, loading: userFromApiLoading } = useCrmApi([usersCrmRoutes.list, queryParams], { params: queryParams })\n  const { data: permissionFromApi } = useCrmApi(permissionsCrmRoutes.base)\n  const { data: viewsListFromApi } = useCrmApi(accessCrmRoutes.getAll)\n  const { data: profilesFromApi } = useCrmApi(state?.profileId ? [`${ profilesCrmRoutes.list }/${ state.profileId }`, state] : null)\n\n  const loading = useMemo(\n    () => userFromApiLoading || submitLoading,\n    [submitLoading, userFromApiLoading]\n  )\n\n  const viewsListOptions = useMemo(\n    () => map(viewsListFromApi, (option) => ({\n      id: option.id,\n      name: option.name\n    })),\n    [viewsListFromApi]\n  )\n\n  const permissionsOptions = useMemo(\n    () => map(permissionFromApi, (option) => ({\n      id: option.id,\n      name: option.name\n    })),\n    [permissionFromApi]\n  )\n\n  const usersOptions = useMemo(\n    () => map(usersFromApi, (option) => ({\n      id: option.id,\n      name: option.username\n    }))\n    , [usersFromApi]\n  )\n\n  const formatMicroViewList = useMemo(() => {\n    const arrayhiddenFields = map(profilesFromApi?.micros, ({ field }) => ({\n      id: field.id,\n      name: field.name,\n      accessId: field.accessId\n    }\n    ))\n\n    const arrayAccess = map(profilesFromApi?.micros, ({ field }) => ({\n      access: { id: field.access.id, name: field.access.name },\n      hiddenFields: filter(arrayhiddenFields, { accessId: field.accessId })\n    }))\n\n    return uniqWith(arrayAccess, isEqual)\n  }, [profilesFromApi])\n\n  const formatExceptionsAndPermissionList = useMemo(() => {\n    const permissionArr = map(profilesFromApi?.exceptions, (item) => ({\n      id: item.permission.id,\n      name: item.permission.name,\n      accessId: item.accessId\n    }))\n\n    const accessArr = map(profilesFromApi?.exceptions, ({\n      access,\n      accessId\n    }) => ({\n      access: { id: access.id, name: access.name },\n      permission: filter(permissionArr, { accessId })\n    }))\n\n    return uniqWith(accessArr, isEqual)\n  }, [profilesFromApi])\n\n  const handleSubmit = useCallback(\n    (values) => {\n      const formattedValues = {\n        ...values,\n        permissions: map(values.permissions, (permission) => permission.id),\n        access: map(values.access, (access) => access.id),\n        micros: map(values.micros, (micro) => map(micro.hiddenFields, (field) => field.id)).flat(),\n        users: map(values.users, (user) => user.userId || user.id),\n        exceptions: map(\n          values.exceptions,\n          ({ access, permission }) => map(permission, (item) => ({\n            access: access.id,\n            permission: item.id\n          }))\n        ).flat()\n      }\n\n      const onSuccess = () => {\n        history.push(routes.profiles.path)\n      }\n\n      if (state?.profileId) {\n        dispatch(ProfilesActions.editProfile(\n          state.profileId,\n          formattedValues,\n          onSuccess,\n          () => setSubmitLoading(false)\n        ))\n      } else {\n        dispatch(ProfilesActions.createProfile(\n          formattedValues,\n          onSuccess,\n          () => setSubmitLoading(false)\n        ))\n      }\n    },\n    [dispatch, history, routes.profiles.path, state]\n  )\n\n  const handleExceptionsEdit = useCallback(\n    (exception) => {\n      formRef.current.setFieldValue(\n        'exceptions',\n        (oldExceptions) => map(oldExceptions, (item) => {\n          if (item?.access?.id === exception.access.id) {\n            return exception\n          }\n          return item\n        })\n      )\n    },\n    []\n  )\n\n  const handleDeleteException = useCallback(\n    (exception) => {\n      formRef.current.setFieldValue(\n        'exceptions',\n        (oldExceptions) => filter(oldExceptions, ({ access }) => access.id !== exception.accessId)\n      )\n    },\n    []\n  )\n\n  const handleDeleteMicro = useCallback(\n    (micro) => {\n      formRef.current.setFieldValue(\n        'micros',\n        (old = []) => filter(old, ({ access }) => access?.id !== micro?.access?.id)\n      )\n    },\n    []\n  )\n\n  const handleEditMicro = useCallback(\n    (micro) => {\n      formRef.current.setFieldValue(\n        'micros',\n        (old = []) => map(old, (item) => item?.access?.id === micro?.access?.id ? micro : item)\n      )\n    },\n    []\n  )\n\n  const debounceQuery = useCallback(\n    debounce((filter) => {\n      if (filter.length >= 3) {\n        setQueryParams({ name: filter })\n      }\n    }, 300),\n    []\n  )\n\n  const onFilterChange = useCallback(\n    (side, filter) => {\n      if (side === 'left') {\n        debounceQuery(filter)\n      }\n    },\n    [debounceQuery]\n  )\n\n  const handleOpenMicroViewingModal = useCallback(\n    () => createDialog({\n      id: 'microview-modal',\n      Component: MicroViewingModal,\n      props: {\n        accessesSelected: formRef.current.getFieldValue('access'),\n        microViewList: formRef.current.getFieldValue('micros'),\n        onSave: (micro) => formRef.current.setFieldValue('micros', (old = []) => [...old, micro])\n      }\n    }),\n    [createDialog]\n  )\n\n  const handleOpenPermissionExceptionsModal = useCallback(\n    () => createDialog({\n      id: 'permission-modal',\n      Component: PermissionExceptionsModal,\n      props: {\n        access: formRef.current.getFieldValue('access'),\n        permissions: formRef.current.getFieldValue('permissions'),\n        exceptionsList: formRef.current.getFieldValue('exceptions'),\n        onSave: (exception) => formRef.current.setFieldValue('exceptions', (old = []) => [...old, exception])\n      }\n    }),\n    [createDialog]\n  )\n\n  useEffect(() => {\n    if (!isEmpty(profilesFromApi) && mounted) {\n      formRef.current.setData({\n        ...profilesFromApi,\n        permissions: map(profilesFromApi?.permissions, (item) => ({ id: item.permission.id, name: item.permission.name })),\n        access: map(profilesFromApi?.accesses, ({ accessId, access }) => ({ id: accessId, name: access.name })),\n        micros: formatMicroViewList,\n        users: map(profilesFromApi?.userProfile, ({ user }) => ({ id: user.id, name: user.username })),\n        exceptions: formatExceptionsAndPermissionList\n      })\n    } else if (!mounted) {\n      setMounted(true)\n    }\n  }, [profilesFromApi, mounted, formatMicroViewList, formatExceptionsAndPermissionList])\n\n  return (\n    <Container>\n      <h1>{state?.profileId ? t('edit profile') : t('new profile') }</h1>\n\n      <Form\n        ref={ formRef }\n        onSubmit={ handleSubmit }\n        schemaConstructor={ profileSchema }\n        defaultValues={ INITIAL_VALUES }\n      >\n        <Grid container alignItems=\"center\" justify=\"space-between\" spacing={ 2 }>\n          <Grid item sm={ 10 }>\n            <InputText\n              name=\"name\"\n              label={ t('profile', { howMany: 1 }) }\n              fullWidth\n            />\n          </Grid>\n          <Grid item sm={ 2 }>\n            <StatusSwitch\n              name=\"active\"\n              disabled={ !currentRoutePermissions.INATIVAR }\n            />\n          </Grid>\n        </Grid>\n\n        <Grid container direction=\"column\" className={ classes.grid }>\n          <Badges\n            name=\"permissions\"\n            label={ `${ t('permission', { howMany: 2 }) }:` }\n            options={ permissionsOptions }\n            onValueChange={ setPermissionsSelected }\n          />\n        </Grid>\n\n        <Grid className={ classes.grid } container direction=\"column\">\n          <Badges\n            name=\"access\"\n            label={ `${ t('view', { howMany: 2 }) }:` }\n            options={ viewsListOptions }\n            onValueChange={ setAccessesSelected }\n          />\n        </Grid>\n\n        <Grid container direction=\"row\" alignItems=\"center\" justify=\"center\" className={ [classes.btn, classes.grid] }>\n          <I18n\n            as={ Button }\n            id=\"AddMicroViewingButton\"\n            disabled={ isEmpty(accessesSelected) }\n            className={ classes.addMicroView }\n            onClick={ handleOpenMicroViewingModal }\n            startIcon={ <MicroViewIcon color={ colors.white } /> }\n            variant=\"contained\"\n            style={ { marginRight: 6 } }\n          >\n            add micro view\n          </I18n>\n          <InputHidden name=\"micros\" onValueChange={ setMicrosSelected } />\n\n          <I18n\n            as={ Button }\n            id=\"AddPermissionExcetionButton\"\n            disabled={ isEmpty(accessesSelected) || isEmpty(permissionsSelected) }\n            className={ classes.addPermissionException }\n            onClick={ handleOpenPermissionExceptionsModal }\n            startIcon={ <PermissionExceptionIcon color={ colors.white } /> }\n            variant=\"contained\"\n            style={ { marginLeft: 6 } }\n          >\n            add permission exceptions\n          </I18n>\n          <InputHidden name=\"exceptions\" onValueChange={ setExceptionsSelected } />\n        </Grid>\n\n        {!isEmpty(exceptionsSelected) && (\n          <Grid className={ classes.grid } container direction=\"column\">\n            <PermissionExceptionsTable\n              onEdit={ handleExceptionsEdit }\n              exceptionsList={ exceptionsSelected }\n              onDelete={ handleDeleteException }\n            />\n          </Grid>\n        )}\n\n        {!isEmpty(microsSelected) && (\n          <Grid className={ classes.grid } container direction=\"column\">\n            <MicroViewingTable\n              microViewList={ microsSelected }\n              onDelete={ handleDeleteMicro }\n              onEdit={ handleEditMicro }\n            />\n          </Grid>\n        )}\n\n        <Grid className={ classes.grid } container direction=\"column\">\n          <TransferList\n            name=\"users\"\n            title={ t('user', { howMany: 2 }) }\n            options={ usersOptions }\n            loading={ loading }\n            onFilterChange={ onFilterChange }\n          />\n        </Grid>\n      </Form>\n\n      <Footer>\n        <I18n\n          as={ Button }\n          onClick={ () => formRef.current.reset() }\n          color=\"secondary\"\n          variant=\"text\"\n          disabled={ loading }\n        >\n            clean\n        </I18n>\n        <div>\n          <I18n\n            as={ Button }\n            color=\"secondary\"\n            onClick={ () => history.push(routes.profiles.path) }\n            size=\"small\"\n            variant=\"outlined\"\n            width=\"154px\"\n            disabled={ loading }\n          >\n              cancel\n          </I18n>\n          <I18n\n            as={ Button }\n            onClick={ () => formRef.current.submit() }\n            color=\"secondary\"\n            size=\"small\"\n            variant=\"contained\"\n            width=\"234px\"\n            isLoading={ loading }\n          >\n             finish registration\n          </I18n>\n        </div>\n      </Footer>\n    </Container>\n  )\n}\n\nexport default ProfileFormScreen\n"]},"metadata":{},"sourceType":"module"}