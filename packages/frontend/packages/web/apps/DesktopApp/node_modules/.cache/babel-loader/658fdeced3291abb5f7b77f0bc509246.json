{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/fan/modals/AchivementsModal/AchivementsModal.js\";\nimport React, { useRef, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport isEmpty from 'lodash/isEmpty';\nimport Grid from '@material-ui/core/Grid';\nimport { useFormEffect } from '@britania-crm/forms';\nimport percentageSchema, { INITIAL_VALUES } from '@britania-crm/forms/schemas/fan/achivements.schema';\nimport I18n, { useT } from '@britania-crm/i18n';\nimport Button from '@britania-crm/web-components/Button';\nimport Form from '@britania-crm/web-components/Form';\nimport InputPercentage from '@britania-crm/web-components/InputPercentage';\nimport InputSelect from '@britania-crm/web-components/InputSelect';\nimport Modal from '@britania-crm/web-components/Modal';\nimport useStyles from '../styles';\n\nconst AchivementsModal = ({\n  id,\n  open,\n  handleClose,\n  onSubmit,\n  slaghterReturnOptions,\n  rangeOptions,\n  calculationOptions,\n  basisOfCalculationOptions,\n  row\n}) => {\n  const t = useT();\n  const formRef = useRef(null);\n  const classes = useStyles();\n  const handleSubmit = useCallback(values => {\n    onSubmit({ ...values,\n      bonus: Number(values.bonus),\n      startPercentage: Number(values.startPercentage),\n      endPercentage: Number(values.endPercentage)\n    });\n    handleClose();\n  }, [handleClose, onSubmit]);\n  useFormEffect(() => {\n    if (!isEmpty(row)) {\n      formRef.current.setData({ ...row\n      });\n    }\n  }, [row]);\n  return /*#__PURE__*/React.createElement(Modal, {\n    id: id,\n    open: open,\n    title: t('other negotiated funds'),\n    maxWidth: \"md\",\n    fullWidth: true,\n    escapeWhenLoading: true,\n    FooterComponent: () => /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      className: classes.buttons,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(I18n, {\n      as: Button,\n      className: classes.resetBtn,\n      disabled: false,\n      variant: \"text\",\n      color: \"secondary\",\n      type: \"reset\",\n      onClick: () => formRef.current.reset(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, \"clean\")), /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(I18n, {\n      as: Button,\n      variant: \"outlined\",\n      color: \"secondary\",\n      disabled: false,\n      onClick: handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, \"cancel\"), /*#__PURE__*/React.createElement(I18n, {\n      as: Button,\n      color: \"secondary\",\n      variant: \"contained\",\n      className: classes.btnSave,\n      isLoading: false,\n      onClick: () => formRef.current.submit(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, \"finish registration\"))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    ref: formRef,\n    onSubmit: handleSubmit,\n    schemaConstructor: percentageSchema,\n    defaultValues: INITIAL_VALUES,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    sm: 12,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputPercentage, {\n    label: t('start percentage'),\n    name: \"startPercentage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputPercentage, {\n    label: t('end percentage'),\n    name: \"endPercentage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputPercentage, {\n    label: t('bonus'),\n    name: \"bonus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputSelect, {\n    label: t('calculation basis'),\n    name: \"determinationBasis\",\n    idKey: \"id\",\n    valueKey: \"name\",\n    options: calculationOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputSelect, {\n    label: t('basis of calculation'),\n    name: \"basisOfCalculation\",\n    idKey: \"id\",\n    valueKey: \"name\",\n    options: basisOfCalculationOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputSelect, {\n    label: t('slaughter return'),\n    name: \"slaughterReturn\",\n    idKey: \"id\",\n    valueKey: \"name\",\n    options: slaghterReturnOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputSelect, {\n    label: t('frequency', {\n      howMany: 1\n    }),\n    name: \"periodicity\",\n    idKey: \"id\",\n    valueKey: \"name\",\n    options: rangeOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  })))));\n};\n\nAchivementsModal.propTypes = {\n  id: PropTypes.string.isRequired,\n  open: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  slaghterReturnOptions: PropTypes.array.isRequired,\n  rangeOptions: PropTypes.array.isRequired,\n  calculationOptions: PropTypes.array.isRequired,\n  basisOfCalculationOptions: PropTypes.array.isRequired,\n  onSubmit: PropTypes.func,\n  row: PropTypes.object\n};\nAchivementsModal.defaultProps = {\n  onSubmit() {},\n\n  row: {}\n};\nexport default AchivementsModal;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/fan/modals/AchivementsModal/AchivementsModal.js"],"names":["React","useRef","useCallback","PropTypes","isEmpty","Grid","useFormEffect","percentageSchema","INITIAL_VALUES","I18n","useT","Button","Form","InputPercentage","InputSelect","Modal","useStyles","AchivementsModal","id","open","handleClose","onSubmit","slaghterReturnOptions","rangeOptions","calculationOptions","basisOfCalculationOptions","row","t","formRef","classes","handleSubmit","values","bonus","Number","startPercentage","endPercentage","current","setData","buttons","resetBtn","reset","btnSave","submit","howMany","propTypes","string","isRequired","bool","func","array","object","defaultProps"],"mappings":"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","sourcesContent":["import React, {\n  useRef,\n  useCallback\n} from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport isEmpty from 'lodash/isEmpty'\n\nimport Grid from '@material-ui/core/Grid'\n\nimport { useFormEffect } from '@britania-crm/forms'\nimport percentageSchema, { INITIAL_VALUES } from '@britania-crm/forms/schemas/fan/achivements.schema'\nimport I18n, { useT } from '@britania-crm/i18n'\nimport Button from '@britania-crm/web-components/Button'\nimport Form from '@britania-crm/web-components/Form'\nimport InputPercentage from '@britania-crm/web-components/InputPercentage'\nimport InputSelect from '@britania-crm/web-components/InputSelect'\nimport Modal from '@britania-crm/web-components/Modal'\n\nimport useStyles from '../styles'\n\nconst AchivementsModal = ({\n  id,\n  open,\n  handleClose,\n  onSubmit,\n  slaghterReturnOptions,\n  rangeOptions,\n  calculationOptions,\n  basisOfCalculationOptions,\n  row\n}) => {\n  const t = useT()\n  const formRef = useRef(null)\n  const classes = useStyles()\n\n  const handleSubmit = useCallback(\n    (values) => {\n      onSubmit({\n        ...values,\n        bonus: Number(values.bonus),\n        startPercentage: Number(values.startPercentage),\n        endPercentage: Number(values.endPercentage)\n      })\n      handleClose()\n    },\n    [handleClose, onSubmit]\n  )\n\n  useFormEffect(\n    () => {\n      if (!isEmpty(row)) {\n        formRef.current.setData({ ...row })\n      }\n    },\n    [row])\n\n  return (\n    <Modal\n      id={ id }\n      open={ open }\n      title={ t('other negotiated funds') }\n      maxWidth=\"md\"\n      fullWidth\n      escapeWhenLoading\n      FooterComponent={ () => (\n        <Grid item xs={ 12 } className={ classes.buttons }>\n          <Grid>\n            <I18n\n              as={ Button }\n              className={ classes.resetBtn }\n              disabled={ false }\n              variant=\"text\"\n              color=\"secondary\"\n              type=\"reset\"\n              onClick={ () => formRef.current.reset() }\n            >\n              clean\n            </I18n>\n          </Grid>\n          <Grid>\n            <I18n\n              as={ Button }\n              variant=\"outlined\"\n              color=\"secondary\"\n              disabled= { false }\n              onClick={ handleClose }\n            >\n            cancel\n            </I18n>\n            <I18n as={ Button }\n              color=\"secondary\"\n              variant=\"contained\"\n              className={ classes.btnSave }\n              isLoading={ false }\n              onClick={ () => formRef.current.submit() }\n            >\n            finish registration\n            </I18n>\n          </Grid>\n        </Grid>\n      ) }\n    >\n      <Form\n        ref={ formRef }\n        onSubmit={ handleSubmit }\n        schemaConstructor={ percentageSchema }\n        defaultValues={ INITIAL_VALUES }\n      >\n        <Grid container item sm={ 12 } spacing={ 1 } >\n          <Grid item sm={ 12 } md={ 4 }>\n            <InputPercentage\n              label={ t('start percentage') }\n              name=\"startPercentage\"\n            />\n          </Grid>\n          <Grid item sm={ 12 } md={ 4 }>\n            <InputPercentage\n              label={ t('end percentage') }\n              name=\"endPercentage\"\n            />\n          </Grid>\n          <Grid item sm={ 12 } md={ 4 }>\n            <InputPercentage\n              label={ t('bonus') }\n              name=\"bonus\"\n            />\n          </Grid>\n          <Grid item sm={ 12 } md={ 3 }>\n            <InputSelect\n              label={ t('calculation basis') }\n              name=\"determinationBasis\"\n              idKey=\"id\"\n              valueKey=\"name\"\n              options={ calculationOptions }\n            />\n          </Grid>\n\n          <Grid item sm={ 12 } md={ 3 }>\n            <InputSelect\n              label={ t('basis of calculation') }\n              name=\"basisOfCalculation\"\n              idKey=\"id\"\n              valueKey=\"name\"\n              options={ basisOfCalculationOptions }\n            />\n          </Grid>\n          <Grid item sm={ 12 } md={ 3 }>\n            <InputSelect\n              label={ t('slaughter return') }\n              name=\"slaughterReturn\"\n              idKey=\"id\"\n              valueKey=\"name\"\n              options={ slaghterReturnOptions }\n            />\n          </Grid>\n          <Grid item sm={ 12 } md={ 3 }>\n            <InputSelect\n              label={ t('frequency', { howMany: 1 }) }\n              name=\"periodicity\"\n              idKey=\"id\"\n              valueKey=\"name\"\n              options={ rangeOptions }\n            />\n          </Grid>\n        </Grid>\n      </Form>\n    </Modal>\n  )\n}\n\nAchivementsModal.propTypes = {\n  id: PropTypes.string.isRequired,\n  open: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  slaghterReturnOptions: PropTypes.array.isRequired,\n  rangeOptions: PropTypes.array.isRequired,\n  calculationOptions: PropTypes.array.isRequired,\n  basisOfCalculationOptions: PropTypes.array.isRequired,\n  onSubmit: PropTypes.func,\n  row: PropTypes.object\n}\n\nAchivementsModal.defaultProps = { onSubmit () {}, row: {} }\n\nexport default AchivementsModal\n"]},"metadata":{},"sourceType":"module"}