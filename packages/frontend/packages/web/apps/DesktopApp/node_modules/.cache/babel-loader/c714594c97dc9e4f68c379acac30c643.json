{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/representative/screens/RepresentativeScreen/RepresentativeScreen.js\";\nimport React, { useCallback, useMemo, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport identity from 'lodash/identity';\nimport pickBy from 'lodash/pickBy';\nimport { useT } from '@britania-crm/i18n';\nimport { representative as representativeCrmRoutes } from '@britania-crm/services/apis/crmApi/resources/routes';\nimport colors from '@britania-crm/styles/colors';\nimport { trimMask, formatCpfCnpj, formatPhone } from '@britania-crm/utils/formatters';\nimport CheckboxStatus from '@britania-crm/web-components/CheckboxStatus';\nimport DataTable from '@britania-crm/web-components/DataTable';\nimport PageFilter from '@britania-crm/web-components/PageFilter';\nimport { useRoutes } from '@britania-crm/web-src/routes/authenticated.routes';\nimport RepresentativeFormFilter from '../../containers/representativeFormFilter';\nimport { Container } from './styles';\n\nconst RepresentativeScreen = () => {\n  const t = useT();\n  const history = useHistory();\n  const {\n    routes,\n    currentRoutePermissions\n  } = useRoutes();\n  const [filters, setFilters] = useState({});\n  const columns = useMemo(() => [{\n    title: 'CNPJ',\n    field: 'cnpj',\n    render: row => formatCpfCnpj(row.cnpj)\n  }, {\n    title: t('company name'),\n    field: 'companyName'\n  }, {\n    title: t('commercial phone'),\n    field: 'commercialPhone',\n    render: row => formatPhone(row.commercialPhone)\n  }, {\n    title: t('short name'),\n    field: 'representativeFinancial.shortName'\n  }, {\n    title: t('email'),\n    field: 'email'\n  }, {\n    sorting: false,\n    title: t('status'),\n    field: 'status',\n\n    render(row) {\n      let status, color;\n\n      if (row.status === 'Em Aberto') {\n        status = t('running');\n      } else if (row.status === 'ConcluÃ­do') {\n        status = t('programmed');\n        color = colors.warning.main;\n      } else if (row.status === 'Cancelado') {\n        status = t('overdue');\n        color = colors.error.main;\n      } else {\n        status = t('workflow in progress');\n        color = colors.orange.base;\n      }\n\n      return /*#__PURE__*/React.createElement(CheckboxStatus, {\n        detached: true,\n        readOnly: true,\n        value: row.status !== 'Cancelado',\n        style: {\n          color: colors.black2\n        },\n        activeStatus: status,\n        activeColor: color,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }\n      });\n    }\n\n  }], [t]);\n  const onAddClick = useCallback(() => {\n    history.push(routes.newRepresentative.path, {\n      params: {\n        mode: 'create',\n        modeSave: 'save'\n      }\n    });\n  }, [history, routes.newRepresentative.path]);\n  const onEditClick = useCallback((event, row) => {\n    history.push(routes.editRepresentative.path, {\n      params: {\n        mode: 'edit',\n        id: row.id,\n        modeSave: 'conclude'\n      }\n    });\n  }, [history, routes.editRepresentative.path]);\n  const onViewClick = useCallback((event, row) => {\n    history.push(routes.viewRepresentative.path, {\n      params: {\n        mode: 'view',\n        id: row.id\n      }\n    });\n  }, [history, routes.viewRepresentative.path]);\n  const handleFilter = useCallback(values => {\n    const payload = { ...values,\n      cnpj: trimMask((values === null || values === void 0 ? void 0 : values.cnpj) || '')\n    };\n    setFilters(pickBy(payload, identity));\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PageFilter, {\n    Form: RepresentativeFormFilter,\n    handleFilter: handleFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DataTable, {\n    options: {\n      search: false\n    },\n    data: representativeCrmRoutes.getAll,\n    filters: filters,\n    columns: columns,\n    title: t('Pre registration {this}', {\n      this: t('representative', {\n        howMany: 1\n      })\n    }),\n    addTitle: t('add new {this}', {\n      gender: 'male',\n      this: t('representative', {\n        howMany: 1\n      })\n    }),\n    onAddClick: currentRoutePermissions.INCLUIR && onAddClick,\n    onEditClick: currentRoutePermissions.EDITAR && onEditClick,\n    onRowClick: onViewClick,\n    onGoBack: history.goBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default RepresentativeScreen;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/representative/screens/RepresentativeScreen/RepresentativeScreen.js"],"names":["React","useCallback","useMemo","useState","useHistory","identity","pickBy","useT","representative","representativeCrmRoutes","colors","trimMask","formatCpfCnpj","formatPhone","CheckboxStatus","DataTable","PageFilter","useRoutes","RepresentativeFormFilter","Container","RepresentativeScreen","t","history","routes","currentRoutePermissions","filters","setFilters","columns","title","field","render","row","cnpj","commercialPhone","sorting","status","color","warning","main","error","orange","base","black2","onAddClick","push","newRepresentative","path","params","mode","modeSave","onEditClick","event","editRepresentative","id","onViewClick","viewRepresentative","handleFilter","values","payload","search","getAll","this","howMany","gender","INCLUIR","EDITAR","goBack"],"mappings":"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","sourcesContent":["import React, {\n  useCallback,\n  useMemo,\n  useState\n} from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport identity from 'lodash/identity'\nimport pickBy from 'lodash/pickBy'\n\nimport { useT } from '@britania-crm/i18n'\nimport { representative as representativeCrmRoutes } from '@britania-crm/services/apis/crmApi/resources/routes'\nimport colors from '@britania-crm/styles/colors'\nimport {\n  trimMask,\n  formatCpfCnpj,\n  formatPhone\n} from '@britania-crm/utils/formatters'\nimport CheckboxStatus from '@britania-crm/web-components/CheckboxStatus'\nimport DataTable from '@britania-crm/web-components/DataTable'\nimport PageFilter from '@britania-crm/web-components/PageFilter'\nimport { useRoutes } from '@britania-crm/web-src/routes/authenticated.routes'\n\nimport RepresentativeFormFilter from '../../containers/representativeFormFilter'\nimport { Container } from './styles'\n\nconst RepresentativeScreen = () => {\n  const t = useT()\n  const history = useHistory()\n  const { routes, currentRoutePermissions } = useRoutes()\n\n  const [filters, setFilters] = useState({})\n\n  const columns = useMemo(() => [\n    {\n      title: 'CNPJ',\n      field: 'cnpj',\n      render: (row) => formatCpfCnpj(row.cnpj)\n    },\n    {\n      title: t('company name'),\n      field: 'companyName'\n    },\n    {\n      title: t('commercial phone'),\n      field: 'commercialPhone',\n      render: (row) => formatPhone(row.commercialPhone)\n    },\n    {\n      title: t('short name'),\n      field: 'representativeFinancial.shortName'\n    },\n    {\n      title: t('email'),\n      field: 'email'\n    },\n    {\n      sorting: false,\n      title: t('status'),\n      field: 'status',\n      render (row) {\n        let status, color\n\n        if (row.status === 'Em Aberto') {\n          status = t('running')\n        } else if (row.status === 'ConcluÃ­do') {\n          status = t('programmed')\n          color = colors.warning.main\n        } else if (row.status === 'Cancelado') {\n          status = t('overdue')\n          color = colors.error.main\n        } else {\n          status = t('workflow in progress')\n          color = colors.orange.base\n        }\n\n        return (\n          <CheckboxStatus\n            detached\n            readOnly\n            value={ row.status !== 'Cancelado' }\n            style={ { color: colors.black2 } }\n            activeStatus={ status }\n            activeColor={ color }\n          />\n        )\n      }\n    }\n  ], [t])\n\n  const onAddClick = useCallback(() => {\n    history.push(routes.newRepresentative.path, { params: { mode: 'create', modeSave: 'save' } })\n  }, [history, routes.newRepresentative.path])\n\n  const onEditClick = useCallback((event, row) => {\n    history.push(routes.editRepresentative.path, {\n      params: {\n        mode: 'edit',\n        id: row.id,\n        modeSave: 'conclude'\n      }\n    })\n  }, [history, routes.editRepresentative.path])\n\n  const onViewClick = useCallback((event, row) => {\n    history.push(routes.viewRepresentative.path, {\n      params: {\n        mode: 'view',\n        id: row.id\n      }\n    })\n  }, [history, routes.viewRepresentative.path])\n\n  const handleFilter = useCallback(\n    (values) => {\n      const payload = {\n        ...values,\n        cnpj: trimMask(values?.cnpj || '')\n      }\n      setFilters(pickBy(payload, identity))\n    },\n    []\n  )\n\n  return (\n    <>\n      <PageFilter\n        Form={ RepresentativeFormFilter }\n        handleFilter={ handleFilter }\n      />\n      <Container>\n        <DataTable\n          options={ { search: false } }\n          data={ representativeCrmRoutes.getAll }\n          filters={ filters }\n          columns={ columns }\n          title={ t('Pre registration {this}', { this: t('representative', { howMany: 1 }) }) }\n          addTitle={ t('add new {this}', { gender: 'male', this: t('representative', { howMany: 1 }) }) }\n          onAddClick={ currentRoutePermissions.INCLUIR && onAddClick }\n          onEditClick={ currentRoutePermissions.EDITAR && onEditClick }\n          onRowClick={ onViewClick }\n          onGoBack={ history.goBack }\n        />\n      </Container>\n    </>\n  )\n}\n\nexport default RepresentativeScreen\n"]},"metadata":{},"sourceType":"module"}