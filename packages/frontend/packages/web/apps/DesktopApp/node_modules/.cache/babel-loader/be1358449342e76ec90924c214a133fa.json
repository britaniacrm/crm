{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/vpc/screens/Vpc/tabs/vpcNd/VpcNd.js\";\nimport React, { useMemo, useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { map } from 'lodash';\nimport { useDialog } from '@britania-crm/dialog';\nimport { useT } from '@britania-crm/i18n';\nimport { formatBackDateToFriendlyFormat } from '@britania-crm/utils/date';\nimport { formatMoney } from '@britania-crm/utils/formatters';\nimport DataTable from '@britania-crm/web-components/DataTable';\nimport CancelIcon from '@britania-crm/web-components/Icons/CancelIcon';\nimport InputHidden from '@britania-crm/web-components/InputHidden';\nimport StatusSwitch from '@britania-crm/web-components/StatusSwitch';\nimport Tooltip from '@britania-crm/web-components/Tooltip';\nimport CancelNdModal from '@britania-crm/web-src/modules/vpc/modals/CancelNdModal';\nimport NewNdModal from '@britania-crm/web-src/modules/vpc/modals/NewNdModal';\nimport { Container } from './styles';\n\nconst VpcNd = ({\n  disabled,\n  formRef\n}) => {\n  const t = useT();\n  const {\n    createDialog\n  } = useDialog();\n  const [nds, setNds] = useState([]);\n  const columns = useMemo(() => [{\n    title: t('nd number'),\n    field: 'number',\n    defaultSort: 'asc'\n  }, {\n    title: t('issuing company nd'),\n    field: 'issuerCompanyName',\n    sorting: false\n  }, {\n    title: t('value'),\n    field: 'value',\n    sorting: false,\n    render: row => formatMoney(row.value)\n  }, {\n    title: t('company'),\n    field: 'company',\n    sorting: false\n  }, {\n    title: t('issue date'),\n    field: 'issueDate',\n    sorting: false,\n    render: row => formatBackDateToFriendlyFormat(row.issueDate)\n  }, {\n    title: t('due date'),\n    field: 'dueDate',\n    sorting: false,\n    render: row => formatBackDateToFriendlyFormat(row.dueDate)\n  }, {\n    title: t('observation', {\n      howMany: 2\n    }),\n    field: 'observation',\n    sorting: false,\n    width: 50,\n\n    render(row) {\n      if (row === null || row === void 0 ? void 0 : row.observation) {\n        const newString = row.observation.slice(0, 10);\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Tooltip, {\n          title: row.observation,\n          arrow: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }\n        }, newString.concat('...')));\n      }\n\n      return '';\n    }\n\n  }, {\n    title: t('status'),\n    field: 'active',\n    render: row => /*#__PURE__*/React.createElement(StatusSwitch, {\n      detached: true,\n      name: \"status\",\n      value: row.active,\n      readOnly: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    })\n  }], [t]);\n  const actions = useMemo(() => {\n    if (disabled) return [];\n    return [row => ({\n      icon: CancelIcon,\n      tooltip: row.reasonDeactivation || t('cancel'),\n      position: 'row',\n      disabled: !row.active,\n      iconButtonProps: {\n        style: {\n          marginLeft: 10\n        },\n        size: 'small'\n      },\n      onClick: () => createDialog({\n        id: 'cancel-nd-modal',\n        Component: CancelNdModal,\n        props: {\n          onConfirm({\n            reasonDeactivation\n          }) {\n            formRef.current.setFieldValue('nds', old => map(old, (nd, index) => index !== row.tableData.id ? nd : { ...nd,\n              active: false,\n              reasonDeactivation\n            }));\n          }\n\n        }\n      })\n    })];\n  }, [createDialog, disabled, formRef, t]);\n  const handleChangeNds = useCallback((value, fieldMounted) => {\n    setNds(value);\n\n    if (fieldMounted) {\n      formRef.current.validateField('value');\n    }\n  }, [formRef]);\n  const handleAddNewNd = useCallback(() => createDialog({\n    id: 'modal-add-new-product',\n    Component: NewNdModal,\n    props: {\n      onSubmit(nd) {\n        formRef.current.setFieldValue('nds', old => [...old, nd]);\n      }\n\n    }\n  }), [createDialog, formRef]);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DataTable, {\n    options: {\n      search: false\n    },\n    data: nds,\n    columns: columns,\n    actions: actions,\n    title: t('nd list'),\n    addTitle: t('add new nd'),\n    onAddClick: !disabled && handleAddNewNd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(InputHidden, {\n    name: \"nds\",\n    showError: true,\n    onValueChange: handleChangeNds,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }\n  }));\n};\n\nVpcNd.propTypes = {\n  formRef: PropTypes.any.isRequired,\n  disabled: PropTypes.bool.isRequired\n};\nexport default VpcNd;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/vpc/screens/Vpc/tabs/vpcNd/VpcNd.js"],"names":["React","useMemo","useCallback","useState","PropTypes","map","useDialog","useT","formatBackDateToFriendlyFormat","formatMoney","DataTable","CancelIcon","InputHidden","StatusSwitch","Tooltip","CancelNdModal","NewNdModal","Container","VpcNd","disabled","formRef","t","createDialog","nds","setNds","columns","title","field","defaultSort","sorting","render","row","value","issueDate","dueDate","howMany","width","observation","newString","slice","concat","active","actions","icon","tooltip","reasonDeactivation","position","iconButtonProps","style","marginLeft","size","onClick","id","Component","props","onConfirm","current","setFieldValue","old","nd","index","tableData","handleChangeNds","fieldMounted","validateField","handleAddNewNd","onSubmit","search","propTypes","any","isRequired","bool"],"mappings":"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","sourcesContent":["import React, {\n  useMemo,\n  useCallback,\n  useState\n} from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport { map } from 'lodash'\n\nimport { useDialog } from '@britania-crm/dialog'\nimport { useT } from '@britania-crm/i18n'\nimport { formatBackDateToFriendlyFormat } from '@britania-crm/utils/date'\nimport { formatMoney } from '@britania-crm/utils/formatters'\nimport DataTable from '@britania-crm/web-components/DataTable'\nimport CancelIcon from '@britania-crm/web-components/Icons/CancelIcon'\nimport InputHidden from '@britania-crm/web-components/InputHidden'\nimport StatusSwitch from '@britania-crm/web-components/StatusSwitch'\nimport Tooltip from '@britania-crm/web-components/Tooltip'\nimport CancelNdModal from '@britania-crm/web-src/modules/vpc/modals/CancelNdModal'\nimport NewNdModal from '@britania-crm/web-src/modules/vpc/modals/NewNdModal'\n\nimport { Container } from './styles'\n\nconst VpcNd = ({ disabled, formRef }) => {\n  const t = useT()\n  const { createDialog } = useDialog()\n\n  const [nds, setNds] = useState([])\n\n  const columns = useMemo(\n    () => [\n      {\n        title: t('nd number'),\n        field: 'number',\n        defaultSort: 'asc'\n      },\n      {\n        title: t('issuing company nd'),\n        field: 'issuerCompanyName',\n        sorting: false\n      },\n      {\n        title: t('value'),\n        field: 'value',\n        sorting: false,\n        render: (row) => formatMoney(row.value)\n      },\n      {\n        title: t('company'),\n        field: 'company',\n        sorting: false\n      },\n      {\n        title: t('issue date'),\n        field: 'issueDate',\n        sorting: false,\n        render: (row) => formatBackDateToFriendlyFormat(row.issueDate)\n      },\n      {\n        title: t('due date'),\n        field: 'dueDate',\n        sorting: false,\n        render: (row) => formatBackDateToFriendlyFormat(row.dueDate)\n      },\n      {\n        title: t('observation', { howMany: 2 }),\n        field: 'observation',\n        sorting: false,\n        width: 50,\n        render (row) {\n          if (row?.observation) {\n            const newString = row.observation.slice(0, 10)\n            return (\n              <div>\n                <Tooltip title={ row.observation } arrow>\n                  {newString.concat('...')}\n                </Tooltip>\n              </div>\n            )\n          }\n          return ''\n        }\n      },\n      {\n        title: t('status'),\n        field: 'active',\n        render: (row) => (\n          <StatusSwitch\n            detached\n            name=\"status\"\n            value={ row.active }\n            readOnly\n          />\n        )\n      }\n    ],\n    [t]\n  )\n\n  const actions = useMemo(\n    () => {\n      if (disabled) return []\n      return [\n        (row) => ({\n          icon: CancelIcon,\n          tooltip: row.reasonDeactivation || t('cancel'),\n          position: 'row',\n          disabled: !row.active,\n          iconButtonProps: {\n            style: { marginLeft: 10 },\n            size: 'small'\n          },\n          onClick: () => createDialog({\n            id: 'cancel-nd-modal',\n            Component: CancelNdModal,\n            props: {\n              onConfirm ({ reasonDeactivation }) {\n                formRef.current.setFieldValue(\n                  'nds',\n                  (old) => map(old, (nd, index) => index !== row.tableData.id ? nd : {\n                    ...nd,\n                    active: false,\n                    reasonDeactivation\n                  })\n                )\n              }\n            }\n          })\n        })\n      ]\n    },\n    [createDialog, disabled, formRef, t]\n  )\n\n  const handleChangeNds = useCallback(\n    (value, fieldMounted) => {\n      setNds(value)\n      if (fieldMounted) {\n        formRef.current.validateField('value')\n      }\n    },\n    [formRef]\n  )\n\n  const handleAddNewNd = useCallback(\n    () => createDialog({\n      id: 'modal-add-new-product',\n      Component: NewNdModal,\n      props: {\n        onSubmit (nd) {\n          formRef.current.setFieldValue('nds', (old) => [...old, nd])\n        }\n      }\n    }),\n    [createDialog, formRef]\n  )\n\n  return (\n    <Container>\n      <DataTable\n        options={ { search: false } }\n        data={ nds }\n        columns={ columns }\n        actions={ actions }\n        title={ t('nd list') }\n        addTitle={ t('add new nd') }\n        onAddClick={ !disabled && handleAddNewNd }\n      />\n      <InputHidden\n        name=\"nds\"\n        showError\n        onValueChange={ handleChangeNds }\n      />\n    </Container>\n  )\n}\n\nVpcNd.propTypes = {\n  formRef: PropTypes.any.isRequired,\n  disabled: PropTypes.bool.isRequired\n}\n\nexport default VpcNd\n"]},"metadata":{},"sourceType":"module"}