{"ast":null,"code":"import { createActions } from 'reduxsauce';\n/**\n * Creating actions and types with reduxsauce.\n */\n\nexport const {\n  Types,\n  Creators\n} = createActions({\n  getAllMessage: [],\n  setAllMessageSuccess: ['messages'],\n  getOneMessage: ['id'],\n  setOneMessageSuccess: ['message'],\n  createMessage: ['params', 'onSuccess', 'onError'],\n  updateMessage: ['id', 'params', 'onSuccess', 'onError'],\n  deleteMessage: ['id', 'onSuccess', 'onError'],\n  deleteMessageAttachment: ['id', 'files', 'onSuccess'],\n  cleanMessage: [],\n  getFilteredMessages: ['filters'],\n  setProfilesSelected: ['profile'],\n  setAllFilterMessageSuccess: ['messages'],\n  setLoading: ['loading']\n});\nexport { Types as MessageTypes, Creators as MessageActions };","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/core/stores/message/message.actions.js"],"names":["createActions","Types","Creators","getAllMessage","setAllMessageSuccess","getOneMessage","setOneMessageSuccess","createMessage","updateMessage","deleteMessage","deleteMessageAttachment","cleanMessage","getFilteredMessages","setProfilesSelected","setAllFilterMessageSuccess","setLoading","MessageTypes","MessageActions"],"mappings":"AAAA,SAASA,aAAT,QAA8B,YAA9B;AAEA;AACA;AACA;;AACA,OAAO,MAAM;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,IAAsBF,aAAa,CAAC;AAC/CG,EAAAA,aAAa,EAAE,EADgC;AAE/CC,EAAAA,oBAAoB,EAAE,CAAC,UAAD,CAFyB;AAG/CC,EAAAA,aAAa,EAAE,CAAC,IAAD,CAHgC;AAI/CC,EAAAA,oBAAoB,EAAE,CAAC,SAAD,CAJyB;AAK/CC,EAAAA,aAAa,EAAE,CAAC,QAAD,EAAW,WAAX,EAAwB,SAAxB,CALgC;AAM/CC,EAAAA,aAAa,EAAE,CAAC,IAAD,EAAO,QAAP,EAAiB,WAAjB,EAA8B,SAA9B,CANgC;AAO/CC,EAAAA,aAAa,EAAE,CAAC,IAAD,EAAO,WAAP,EAAoB,SAApB,CAPgC;AAQ/CC,EAAAA,uBAAuB,EAAE,CAAC,IAAD,EAAO,OAAP,EAAgB,WAAhB,CARsB;AAS/CC,EAAAA,YAAY,EAAE,EATiC;AAU/CC,EAAAA,mBAAmB,EAAE,CAAC,SAAD,CAV0B;AAW/CC,EAAAA,mBAAmB,EAAE,CAAC,SAAD,CAX0B;AAY/CC,EAAAA,0BAA0B,EAAE,CAAC,UAAD,CAZmB;AAa/CC,EAAAA,UAAU,EAAE,CAAC,SAAD;AAbmC,CAAD,CAAzC;AAgBP,SACEd,KAAK,IAAIe,YADX,EAEEd,QAAQ,IAAIe,cAFd","sourcesContent":["import { createActions } from 'reduxsauce'\n\n/**\n * Creating actions and types with reduxsauce.\n */\nexport const { Types, Creators } = createActions({\n  getAllMessage: [],\n  setAllMessageSuccess: ['messages'],\n  getOneMessage: ['id'],\n  setOneMessageSuccess: ['message'],\n  createMessage: ['params', 'onSuccess', 'onError'],\n  updateMessage: ['id', 'params', 'onSuccess', 'onError'],\n  deleteMessage: ['id', 'onSuccess', 'onError'],\n  deleteMessageAttachment: ['id', 'files', 'onSuccess'],\n  cleanMessage: [],\n  getFilteredMessages: ['filters'],\n  setProfilesSelected: ['profile'],\n  setAllFilterMessageSuccess: ['messages'],\n  setLoading: ['loading']\n})\n\nexport {\n  Types as MessageTypes,\n  Creators as MessageActions\n}\n"]},"metadata":{},"sourceType":"module"}