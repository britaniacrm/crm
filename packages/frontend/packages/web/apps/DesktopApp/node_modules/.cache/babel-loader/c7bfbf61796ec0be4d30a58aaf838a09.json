{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopDefault(ex) {\n  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;\n}\n\nvar isNil = _interopDefault(require('ramda/src/isNil'));\n\nvar is = _interopDefault(require('ramda/src/is'));\n\nvar has = _interopDefault(require('ramda/src/has'));\n\nvar any = _interopDefault(require('ramda/src/any'));\n\nvar equals = _interopDefault(require('ramda/src/equals'));\n\nvar keys = _interopDefault(require('ramda/src/keys'));\n\nvar pipe = _interopDefault(require('ramda/src/pipe'));\n\nvar trim = _interopDefault(require('ramda/src/trim'));\n\nvar merge = _interopDefault(require('ramda/src/merge'));\n\nvar split = _interopDefault(require('ramda/src/split'));\n\nvar reject = _interopDefault(require('ramda/src/reject'));\n\nvar map = _interopDefault(require('ramda/src/map'));\n\nvar fromPairs = _interopDefault(require('ramda/src/fromPairs'));\n\nvar anyPass = _interopDefault(require('ramda/src/anyPass'));\n\nvar isEmpty = _interopDefault(require('ramda/src/isEmpty'));\n\nvar join = _interopDefault(require('ramda/src/join'));\n\nvar mapObjIndexed = _interopDefault(require('ramda/src/mapObjIndexed'));\n\nvar pick = _interopDefault(require('ramda/src/pick'));\n\nvar replace = _interopDefault(require('ramda/src/replace'));\n\nvar toUpper = _interopDefault(require('ramda/src/toUpper'));\n\nvar zipObj = _interopDefault(require('ramda/src/zipObj'));\n\nvar curry = _interopDefault(require('ramda/src/curry'));\n\nvar DEFAULT = 'REDUXSAUCE.DEFAULT';\nvar Types = Object.freeze({\n  DEFAULT: DEFAULT\n});\n/**\n  Creates a reducer.\n  @param {string} initialState - The initial state for this reducer.\n  @param {object} handlers - Keys are action types (strings), values are reducers (functions).\n  @return {object} A reducer object.\n */\n\nvar cr = function (initialState, handlers) {\n  // initial state is required\n  if (initialState === undefined) {\n    throw new Error('initial state is required');\n  } // handlers must be an object\n\n\n  if (isNil(handlers) || !is(Object, handlers)) {\n    throw new Error('handlers must be an object');\n  } // handlers cannot have an undefined key\n\n\n  if (any(equals('undefined'))(keys(handlers))) {\n    throw new Error('handlers cannot have an undefined key');\n  } // create the reducer function\n\n\n  return function () {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n    var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null; // wrong actions, just return state\n\n    if (isNil(action)) return state;\n    if (!has('type', action)) return state; // look for the handler\n\n    var handler = handlers[action.type] || handlers[DEFAULT]; // no handler no cry\n\n    if (isNil(handler)) return state; // execute the handler\n\n    return handler(state, action);\n  };\n};\n\nvar isNilOrEmpty = anyPass([isNil, isEmpty]);\nvar defaultOptions = {\n  prefix: ''\n};\n\nvar createTypes$1 = function (types) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (isNilOrEmpty(types)) throw new Error('valid types are required');\n\n  var _merge = merge(defaultOptions, options),\n      prefix = _merge.prefix;\n\n  return pipe(trim, split(/\\s/), map(trim), reject(isNilOrEmpty), map(function (x) {\n    return [x, prefix + x];\n  }), fromPairs)(types);\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar defaultOptions$1 = {\n  prefix: '' // matches each word in a camelCaseString (except the first)\n  // consecutive capitals are treated as one word\n\n};\nvar RX_CAPS = /(?!^)([A-Z][a-z0-9]+|[A-Z][A-Z0-9]*(?=[A-Z]|\\b))/g; // converts a camelCaseWord into a SCREAMING_SNAKE_CASE word\n\nvar camelToScreamingSnake = pipe(replace(RX_CAPS, '_$1'), toUpper); // build Action Types out of an object\n\nvar convertToTypes = function convertToTypes(config, options) {\n  var opts = merge(defaultOptions$1, options);\n  return pipe(keys, // just the keys\n  map(camelToScreamingSnake), // CONVERT_THEM\n  join(' '), // space separated\n  function (types) {\n    return createTypes$1(types, opts);\n  } // make them into Redux Types\n  )(config);\n}; // an action creator with additional properties\n\n\nvar createActionCreator = function createActionCreator(name, extraPropNames, options) {\n  var _merge = merge(defaultOptions$1, options),\n      prefix = _merge.prefix; // types are upcase and snakey\n\n\n  var type = '' + prefix + camelToScreamingSnake(name); // do we need extra props for this?\n\n  var noKeys = isNil(extraPropNames) || isEmpty(extraPropNames); // a type-only action creator\n\n  if (noKeys) return function () {\n    return {\n      type: type\n    };\n  }; // an action creator with type + properties\n  // \"properties\" is defined as an array of prop names\n\n  if (is(Array, extraPropNames)) {\n    return function () {\n      for (var _len = arguments.length, values = Array(_len), _key = 0; _key < _len; _key++) {\n        values[_key] = arguments[_key];\n      }\n\n      var extraProps = zipObj(extraPropNames, values);\n      return _extends({\n        type: type\n      }, extraProps);\n    };\n  } // an action creator with type + properties\n  // \"properties\" is defined as an object of {prop name: default value}\n\n\n  if (is(Object, extraPropNames)) {\n    var defaultProps = extraPropNames;\n    return function () {\n      var valueObject = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var providedProps = pick(Object.keys(defaultProps), valueObject);\n      return _extends({\n        type: type\n      }, defaultProps, providedProps);\n    };\n  }\n\n  throw new Error('action props must be a null/array/object/function');\n}; // build Action Creators out of an object\n\n\nvar convertToCreators = function convertToCreators(config, options) {\n  return mapObjIndexed(function (num, key, value) {\n    if (typeof value[key] === 'function') {\n      // the user brought their own action creator\n      return value[key];\n    } else {\n      // lets make an action creator for them!\n      return createActionCreator(key, value[key], options);\n    }\n  })(config);\n};\n\nvar ca = function (config, options) {\n  if (isNil(config)) {\n    throw new Error('an object is required to setup types and creators');\n  }\n\n  if (isEmpty(config)) {\n    throw new Error('empty objects are not supported');\n  }\n\n  return {\n    Types: convertToTypes(config, options),\n    Creators: convertToCreators(config, options)\n  };\n};\n/**\n * Allows your reducers to be reset.\n *\n * @param {string} typeToReset - The action type to listen for.\n * @param {function} originalReducer - The reducer to wrap.\n */\n\n\nfunction resettableReducer$1(typeToReset, originalReducer) {\n  // a valid type is required\n  if (!is(String, typeToReset) || typeToReset === '') {\n    throw new Error('A valid reset type is required.');\n  } // an original reducer is required\n\n\n  if (typeof originalReducer !== 'function') {\n    throw new Error('A reducer is required.');\n  } // run it through first to get what the default state should be\n\n\n  var resetState = originalReducer(undefined, {}); // create our own reducer that wraps the original one and hijacks the reset\n\n  function reducer() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : resetState;\n    var action = arguments[1];\n\n    if (action && action.type === typeToReset) {\n      return resetState;\n    } else {\n      return originalReducer(state, action);\n    }\n  }\n\n  return reducer;\n}\n\nvar rr = curry(resettableReducer$1);\nvar createReducer = cr;\nvar createTypes = createTypes$1;\nvar createActions = ca;\nvar resettableReducer = rr;\nexports.createReducer = createReducer;\nexports.createTypes = createTypes;\nexports.createActions = createActions;\nexports.resettableReducer = resettableReducer;\nexports.Types = Types;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/node_modules/reduxsauce/dist/reduxsauce.js"],"names":["Object","defineProperty","exports","value","_interopDefault","ex","isNil","require","is","has","any","equals","keys","pipe","trim","merge","split","reject","map","fromPairs","anyPass","isEmpty","join","mapObjIndexed","pick","replace","toUpper","zipObj","curry","DEFAULT","Types","freeze","cr","initialState","handlers","undefined","Error","state","arguments","length","action","handler","type","isNilOrEmpty","defaultOptions","prefix","createTypes$1","types","options","_merge","x","_extends","assign","target","i","source","key","prototype","hasOwnProperty","call","defaultOptions$1","RX_CAPS","camelToScreamingSnake","convertToTypes","config","opts","createActionCreator","name","extraPropNames","noKeys","Array","_len","values","_key","extraProps","defaultProps","valueObject","providedProps","convertToCreators","num","ca","Creators","resettableReducer$1","typeToReset","originalReducer","String","resetState","reducer","rr","createReducer","createTypes","createActions","resettableReducer"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar isNil = _interopDefault(require('ramda/src/isNil'));\nvar is = _interopDefault(require('ramda/src/is'));\nvar has = _interopDefault(require('ramda/src/has'));\nvar any = _interopDefault(require('ramda/src/any'));\nvar equals = _interopDefault(require('ramda/src/equals'));\nvar keys = _interopDefault(require('ramda/src/keys'));\nvar pipe = _interopDefault(require('ramda/src/pipe'));\nvar trim = _interopDefault(require('ramda/src/trim'));\nvar merge = _interopDefault(require('ramda/src/merge'));\nvar split = _interopDefault(require('ramda/src/split'));\nvar reject = _interopDefault(require('ramda/src/reject'));\nvar map = _interopDefault(require('ramda/src/map'));\nvar fromPairs = _interopDefault(require('ramda/src/fromPairs'));\nvar anyPass = _interopDefault(require('ramda/src/anyPass'));\nvar isEmpty = _interopDefault(require('ramda/src/isEmpty'));\nvar join = _interopDefault(require('ramda/src/join'));\nvar mapObjIndexed = _interopDefault(require('ramda/src/mapObjIndexed'));\nvar pick = _interopDefault(require('ramda/src/pick'));\nvar replace = _interopDefault(require('ramda/src/replace'));\nvar toUpper = _interopDefault(require('ramda/src/toUpper'));\nvar zipObj = _interopDefault(require('ramda/src/zipObj'));\nvar curry = _interopDefault(require('ramda/src/curry'));\n\nvar DEFAULT = 'REDUXSAUCE.DEFAULT';\n\nvar Types = Object.freeze({\n\tDEFAULT: DEFAULT\n});\n\n/**\n  Creates a reducer.\n  @param {string} initialState - The initial state for this reducer.\n  @param {object} handlers - Keys are action types (strings), values are reducers (functions).\n  @return {object} A reducer object.\n */\nvar cr = (function (initialState, handlers) {\n  // initial state is required\n  if (initialState === undefined) {\n    throw new Error('initial state is required');\n  }\n\n  // handlers must be an object\n  if (isNil(handlers) || !is(Object, handlers)) {\n    throw new Error('handlers must be an object');\n  }\n\n  // handlers cannot have an undefined key\n  if (any(equals('undefined'))(keys(handlers))) {\n    throw new Error('handlers cannot have an undefined key');\n  }\n\n  // create the reducer function\n  return function () {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n    var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n    // wrong actions, just return state\n    if (isNil(action)) return state;\n    if (!has('type', action)) return state;\n\n    // look for the handler\n    var handler = handlers[action.type] || handlers[DEFAULT];\n\n    // no handler no cry\n    if (isNil(handler)) return state;\n\n    // execute the handler\n    return handler(state, action);\n  };\n});\n\nvar isNilOrEmpty = anyPass([isNil, isEmpty]);\n\nvar defaultOptions = {\n  prefix: ''\n};\n\nvar createTypes$1 = (function (types) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (isNilOrEmpty(types)) throw new Error('valid types are required');\n\n  var _merge = merge(defaultOptions, options),\n      prefix = _merge.prefix;\n\n  return pipe(trim, split(/\\s/), map(trim), reject(isNilOrEmpty), map(function (x) {\n    return [x, prefix + x];\n  }), fromPairs)(types);\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar defaultOptions$1 = {\n  prefix: ''\n\n  // matches each word in a camelCaseString (except the first)\n  // consecutive capitals are treated as one word\n};var RX_CAPS = /(?!^)([A-Z][a-z0-9]+|[A-Z][A-Z0-9]*(?=[A-Z]|\\b))/g;\n\n// converts a camelCaseWord into a SCREAMING_SNAKE_CASE word\nvar camelToScreamingSnake = pipe(replace(RX_CAPS, '_$1'), toUpper);\n\n// build Action Types out of an object\nvar convertToTypes = function convertToTypes(config, options) {\n  var opts = merge(defaultOptions$1, options);\n  return pipe(keys, // just the keys\n  map(camelToScreamingSnake), // CONVERT_THEM\n  join(' '), // space separated\n  function (types) {\n    return createTypes$1(types, opts);\n  } // make them into Redux Types\n  )(config);\n};\n\n// an action creator with additional properties\nvar createActionCreator = function createActionCreator(name, extraPropNames, options) {\n  var _merge = merge(defaultOptions$1, options),\n      prefix = _merge.prefix;\n  // types are upcase and snakey\n\n\n  var type = '' + prefix + camelToScreamingSnake(name);\n\n  // do we need extra props for this?\n  var noKeys = isNil(extraPropNames) || isEmpty(extraPropNames);\n\n  // a type-only action creator\n  if (noKeys) return function () {\n    return { type: type };\n  };\n\n  // an action creator with type + properties\n  // \"properties\" is defined as an array of prop names\n  if (is(Array, extraPropNames)) {\n    return function () {\n      for (var _len = arguments.length, values = Array(_len), _key = 0; _key < _len; _key++) {\n        values[_key] = arguments[_key];\n      }\n\n      var extraProps = zipObj(extraPropNames, values);\n      return _extends({ type: type }, extraProps);\n    };\n  }\n\n  // an action creator with type + properties\n  // \"properties\" is defined as an object of {prop name: default value}\n  if (is(Object, extraPropNames)) {\n    var defaultProps = extraPropNames;\n    return function () {\n      var valueObject = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      var providedProps = pick(Object.keys(defaultProps), valueObject);\n      return _extends({ type: type }, defaultProps, providedProps);\n    };\n  }\n\n  throw new Error('action props must be a null/array/object/function');\n};\n\n// build Action Creators out of an object\nvar convertToCreators = function convertToCreators(config, options) {\n  return mapObjIndexed(function (num, key, value) {\n    if (typeof value[key] === 'function') {\n      // the user brought their own action creator\n      return value[key];\n    } else {\n      // lets make an action creator for them!\n      return createActionCreator(key, value[key], options);\n    }\n  })(config);\n};\n\nvar ca = (function (config, options) {\n  if (isNil(config)) {\n    throw new Error('an object is required to setup types and creators');\n  }\n  if (isEmpty(config)) {\n    throw new Error('empty objects are not supported');\n  }\n\n  return {\n    Types: convertToTypes(config, options),\n    Creators: convertToCreators(config, options)\n  };\n});\n\n/**\n * Allows your reducers to be reset.\n *\n * @param {string} typeToReset - The action type to listen for.\n * @param {function} originalReducer - The reducer to wrap.\n */\nfunction resettableReducer$1(typeToReset, originalReducer) {\n  // a valid type is required\n  if (!is(String, typeToReset) || typeToReset === '') {\n    throw new Error('A valid reset type is required.');\n  }\n\n  // an original reducer is required\n  if (typeof originalReducer !== 'function') {\n    throw new Error('A reducer is required.');\n  }\n  // run it through first to get what the default state should be\n  var resetState = originalReducer(undefined, {});\n\n  // create our own reducer that wraps the original one and hijacks the reset\n  function reducer() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : resetState;\n    var action = arguments[1];\n\n    if (action && action.type === typeToReset) {\n      return resetState;\n    } else {\n      return originalReducer(state, action);\n    }\n  }\n  return reducer;\n}\n\nvar rr = curry(resettableReducer$1);\n\nvar createReducer = cr;\nvar createTypes = createTypes$1;\nvar createActions = ca;\nvar resettableReducer = rr;\n\nexports.createReducer = createReducer;\nexports.createTypes = createTypes;\nexports.createActions = createActions;\nexports.resettableReducer = resettableReducer;\nexports.Types = Types;\n"]},"metadata":{},"sourceType":"script"}