{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/components/FilterMessage/FilterMessage.js\";\nimport React, { useState, useCallback, useMemo } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport map from 'lodash/map';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport FormControl from '@material-ui/core/FormControl';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport I18n, { useT } from '@britania-crm/i18n';\nimport { MessageActions } from '@britania-crm/stores/message';\nimport Button from '@britania-crm/web-components/Button';\nimport useStyles from './styles';\n\nconst FilterMessage = ({\n  options,\n  handlePopoverClose\n}) => {\n  const classes = useStyles();\n  const t = useT();\n  const dispatch = useCallback(useDispatch(), []);\n  const [title, setTitle] = useState('');\n  const [profile, setProfile] = useState('');\n  const [expirationDate, setExpirationDate] = useState('');\n  const validForm = useMemo(() => {\n    if (title || profile || expirationDate) {\n      return false;\n    }\n\n    return true;\n  }, [title, profile, expirationDate]);\n  const handleFilter = useCallback(() => {\n    dispatch(MessageActions.getFilteredMessages({\n      title,\n      profiles: profile,\n      expirationDate\n    }));\n    handlePopoverClose();\n  }, [expirationDate, dispatch, handlePopoverClose, profile, title]);\n  return /*#__PURE__*/React.createElement(Card, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    classes: {\n      root: classes.cardContent\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"close\",\n    className: classes.closeButton,\n    onClick: handlePopoverClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(I18n, {\n    as: Typography,\n    variant: \"h4\",\n    gutterBottom: true,\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, \"tilte modal filter\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: classes.itens,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    value: title,\n    onChange: ({\n      target\n    }) => setTitle(target.value),\n    name: \"title\",\n    label: t('title'),\n    variant: \"outlined\",\n    classes: {\n      root: classes.input\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    classes: {\n      root: classes.input\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }, \"Perfil\"), /*#__PURE__*/React.createElement(Select, {\n    value: profile,\n    onChange: ({\n      target\n    }) => setProfile(target.value),\n    label: t('perfil'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }, map(options, ({\n    id,\n    name\n  }) => /*#__PURE__*/React.createElement(MenuItem, {\n    value: id,\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 19\n    }\n  }, name)))), /*#__PURE__*/React.createElement(TextField, {\n    label: t('date'),\n    type: \"date\",\n    value: expirationDate,\n    name: \"expirationDate\",\n    variant: \"outlined\",\n    onChange: ({\n      target\n    }) => setExpirationDate(target.value),\n    classes: {\n      root: classes.input\n    },\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(CardActions, {\n    className: classes.buttons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(I18n, {\n    as: Button,\n    color: \"secondary\",\n    variant: \"outlined\",\n    onClick: handlePopoverClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, \"cancel\"), /*#__PURE__*/React.createElement(I18n, {\n    as: Button,\n    color: \"secondary\",\n    variant: \"contained\",\n    onClick: handleFilter,\n    disabled: validForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, \"filter\")));\n};\n\nFilterMessage.propTypes = {\n  options: PropTypes.array.isRequired,\n  handlePopoverClose: PropTypes.func\n};\nFilterMessage.defaultProps = {\n  handlePopoverClose() {},\n\n  options: []\n};\nexport default FilterMessage;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/components/FilterMessage/FilterMessage.js"],"names":["React","useState","useCallback","useMemo","useDispatch","PropTypes","map","Card","CardActions","CardContent","FormControl","Grid","IconButton","InputLabel","MenuItem","Select","TextField","Typography","CloseIcon","I18n","useT","MessageActions","Button","useStyles","FilterMessage","options","handlePopoverClose","classes","t","dispatch","title","setTitle","profile","setProfile","expirationDate","setExpirationDate","validForm","handleFilter","getFilteredMessages","profiles","root","cardContent","container","closeButton","itens","target","value","input","id","name","shrink","buttons","propTypes","array","isRequired","func","defaultProps"],"mappings":"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","sourcesContent":["import React, {\n  useState,\n  useCallback,\n  useMemo\n} from 'react'\nimport { useDispatch } from 'react-redux'\n\nimport PropTypes from 'prop-types'\n\nimport map from 'lodash/map'\n\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport FormControl from '@material-ui/core/FormControl'\nimport Grid from '@material-ui/core/Grid'\nimport IconButton from '@material-ui/core/IconButton'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Select from '@material-ui/core/Select'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\nimport CloseIcon from '@material-ui/icons/Close'\n\nimport I18n, { useT } from '@britania-crm/i18n'\nimport { MessageActions } from '@britania-crm/stores/message'\nimport Button from '@britania-crm/web-components/Button'\n\nimport useStyles from './styles'\n\nconst FilterMessage = ({ options, handlePopoverClose }) => {\n  const classes = useStyles()\n  const t = useT()\n  const dispatch = useCallback(useDispatch(), [])\n\n  const [title, setTitle] = useState('')\n  const [profile, setProfile] = useState('')\n  const [expirationDate, setExpirationDate] = useState('')\n\n  const validForm = useMemo(() => {\n    if (title || profile || expirationDate) {\n      return false\n    }\n    return true\n  }, [title, profile, expirationDate])\n\n  const handleFilter = useCallback(\n    () => {\n      dispatch(MessageActions.getFilteredMessages({\n        title, profiles: profile, expirationDate\n      }))\n      handlePopoverClose()\n    },\n    [expirationDate, dispatch, handlePopoverClose, profile, title]\n  )\n\n  return (\n    <Card className={ classes.root }>\n      <CardContent classes={ { root: classes.cardContent } }>\n        <Grid className={ classes.container }>\n          <Grid item xs={ 12 }>\n            <IconButton\n              aria-label=\"close\"\n              className={ classes.closeButton }\n              onClick={ handlePopoverClose }\n            >\n              <CloseIcon />\n            </IconButton>\n            <I18n as={ Typography } variant=\"h4\" gutterBottom className={ classes.title } >\n            tilte modal filter\n            </I18n>\n          </Grid>\n          <Grid item xs={ 12 } className={ classes.itens }>\n            <TextField\n              value={ title }\n              onChange={ ({ target }) => setTitle(target.value) }\n              name=\"title\"\n              label={ t('title') }\n              variant=\"outlined\"\n              classes={ { root: classes.input } }\n            />\n            <FormControl variant=\"outlined\" classes={ { root: classes.input } }>\n              <InputLabel id=\"label\">Perfil</InputLabel>\n              <Select\n                value={ profile }\n                onChange={ ({ target }) => setProfile(target.value) }\n                label={ t('perfil') }\n              >\n                {map(options, ({ id, name }) => (\n                  <MenuItem value={ id } key={ id }>\n                    {name}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            <TextField\n              label={ t('date') }\n              type=\"date\"\n              value={ expirationDate }\n              name=\"expirationDate\"\n              variant=\"outlined\"\n              onChange={ ({ target }) => setExpirationDate(target.value) }\n              classes={ { root: classes.input } }\n              InputLabelProps={ { shrink: true } }\n            />\n          </Grid>\n        </Grid>\n      </CardContent>\n      <CardActions className={ classes.buttons }>\n        <I18n\n          as={ Button }\n          color=\"secondary\"\n          variant=\"outlined\"\n          onClick={ handlePopoverClose }\n        >\n          cancel\n        </I18n>\n\n        <I18n\n          as={ Button }\n          color=\"secondary\"\n          variant=\"contained\"\n          onClick={ handleFilter }\n          disabled={ validForm }\n        >\n          filter\n        </I18n>\n      </CardActions>\n    </Card>\n  )\n}\n\nFilterMessage.propTypes = {\n  options: PropTypes.array.isRequired,\n  handlePopoverClose: PropTypes.func\n}\n\nFilterMessage.defaultProps = {\n  handlePopoverClose () {},\n  options: []\n}\n\nexport default FilterMessage\n"]},"metadata":{},"sourceType":"module"}