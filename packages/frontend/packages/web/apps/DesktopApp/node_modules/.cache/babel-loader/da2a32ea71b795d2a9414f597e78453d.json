{"ast":null,"code":"import { put, call, takeLatest } from 'redux-saga/effects';\nimport { MSG026 } from '@britania-crm/constants/feedbackMessages.constants';\nimport { getAllAccesses } from '@britania-crm/services/apis/crmApi/resources/access.service';\nimport { AppActions } from '../app/app.actions';\nimport { AccessTypes, AccessActions } from './access.actions';\n\nfunction* doGetAllAccesses() {\n  try {\n    const response = yield call(getAllAccesses);\n    yield put(AccessActions.setAllAccesses(response));\n  } catch (error) {\n    yield put(AppActions.addAlert({\n      type: 'error',\n      message: MSG026\n    }));\n    console.error(error);\n  }\n}\n\nexport default [takeLatest(AccessTypes.GET_ALL_ACCESSES, doGetAllAccesses)];","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/core/stores/access/access.sagas.js"],"names":["put","call","takeLatest","MSG026","getAllAccesses","AppActions","AccessTypes","AccessActions","doGetAllAccesses","response","setAllAccesses","error","addAlert","type","message","console","GET_ALL_ACCESSES"],"mappings":"AAAA,SACEA,GADF,EAEEC,IAFF,EAGEC,UAHF,QAIO,oBAJP;AAMA,SAASC,MAAT,QAAuB,oDAAvB;AACA,SAASC,cAAT,QAA+B,6DAA/B;AAEA,SAASC,UAAT,QAA2B,oBAA3B;AACA,SACEC,WADF,EAEEC,aAFF,QAGO,kBAHP;;AAKA,UAAUC,gBAAV,GAA8B;AAC5B,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMR,IAAI,CAACG,cAAD,CAA3B;AAEA,UAAMJ,GAAG,CAACO,aAAa,CAACG,cAAd,CAA6BD,QAA7B,CAAD,CAAT;AACD,GAJD,CAIE,OAAOE,KAAP,EAAc;AACd,UAAMX,GAAG,CAACK,UAAU,CAACO,QAAX,CAAoB;AAAEC,MAAAA,IAAI,EAAE,OAAR;AAAiBC,MAAAA,OAAO,EAAEX;AAA1B,KAApB,CAAD,CAAT;AACAY,IAAAA,OAAO,CAACJ,KAAR,CAAcA,KAAd;AACD;AACF;;AAED,eAAe,CACbT,UAAU,CAACI,WAAW,CAACU,gBAAb,EAA+BR,gBAA/B,CADG,CAAf","sourcesContent":["import {\n  put,\n  call,\n  takeLatest\n} from 'redux-saga/effects'\n\nimport { MSG026 } from '@britania-crm/constants/feedbackMessages.constants'\nimport { getAllAccesses } from '@britania-crm/services/apis/crmApi/resources/access.service'\n\nimport { AppActions } from '../app/app.actions'\nimport {\n  AccessTypes,\n  AccessActions\n} from './access.actions'\n\nfunction* doGetAllAccesses () {\n  try {\n    const response = yield call(getAllAccesses)\n\n    yield put(AccessActions.setAllAccesses(response))\n  } catch (error) {\n    yield put(AppActions.addAlert({ type: 'error', message: MSG026 }))\n    console.error(error)\n  }\n}\n\nexport default [\n  takeLatest(AccessTypes.GET_ALL_ACCESSES, doGetAllAccesses)\n]\n"]},"metadata":{},"sourceType":"module"}