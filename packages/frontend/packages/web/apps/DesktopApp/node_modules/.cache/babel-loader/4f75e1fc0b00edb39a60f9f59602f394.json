{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/vpc/containers/reportVpcFormFilter/ReportVpcFormFilter.js\";\nimport React, { forwardRef, useMemo, useState } from 'react';\nimport isEmpty from 'lodash/isEmpty';\nimport Grid from '@material-ui/core/Grid';\nimport reportVpcFilterSchema, { INITIAL_VALUES } from '@britania-crm/forms/schemas/reportVpc/reportVpc.filter.schema';\nimport { useT } from '@britania-crm/i18n';\nimport { clients as clientsCrmRoutes, users as usersCrmRoutes, lines as linesCrmRoutes } from '@britania-crm/services/apis/crmApi/resources/routes';\nimport useCrmApi from '@britania-crm/services/hooks/useCrmApi';\nimport Form from '@britania-crm/web-components/Form';\nimport InputAutocomplete from '@britania-crm/web-components/InputAutocomplete';\nimport InputDateRange from '@britania-crm/web-components/InputDateRange';\nimport InputSelect from '@britania-crm/web-components/InputSelect';\nconst ReportVpcFormFilter = forwardRef((props, formRef) => {\n  const t = useT();\n  const [line, setLine] = useState([]);\n  const [matrix, setMatrix] = useState({});\n  const {\n    data: linesFromApi\n  } = useCrmApi(linesCrmRoutes.getAll);\n  const clientParams = useMemo(() => ({\n    page: 1,\n    pageSize: 10,\n    clientRegistrationType: 'REGISTER'\n  }), []);\n  const regionalParams = useMemo(() => ({\n    page: 1,\n    pageSize: 10,\n    lineCodes: line,\n    clientCode: matrix.parentCompanyCode\n  }), [line, matrix]);\n  return /*#__PURE__*/React.createElement(Form, Object.assign({\n    ref: formRef\n  }, props, {\n    schemaConstructor: reportVpcFilterSchema,\n    defaultValues: INITIAL_VALUES,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputSelect, {\n    idKey: \"lineCode\",\n    valueKey: \"lineDescription\",\n    name: \"line\",\n    value: line,\n    label: t('line', {\n      howMany: 1\n    }),\n    options: linesFromApi,\n    onValueChange: setLine,\n    multiple: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputAutocomplete, {\n    url: clientsCrmRoutes.get,\n    params: clientParams,\n    valueKey: \"parentCompany\",\n    paramName: \"parentCompany\",\n    name: \"matrix\",\n    label: t('matrix', {\n      howMany: 1\n    }),\n    onValueChange: setMatrix,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputAutocomplete, {\n    url: usersCrmRoutes.getRegional,\n    params: regionalParams,\n    valueKey: \"approverCode\",\n    paramName: \"approverDescription\",\n    name: \"regional\",\n    label: t('regional manager'),\n    disabled: isEmpty(matrix) && isEmpty(line),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputAutocomplete, {\n    url: usersCrmRoutes.autoComplete,\n    valueKey: \"name\",\n    paramName: \"name\",\n    name: \"responsibleForService\",\n    label: t('responsible', {\n      howMany: 1\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputDateRange, {\n    name: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }))));\n});\nexport default ReportVpcFormFilter;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/vpc/containers/reportVpcFormFilter/ReportVpcFormFilter.js"],"names":["React","forwardRef","useMemo","useState","isEmpty","Grid","reportVpcFilterSchema","INITIAL_VALUES","useT","clients","clientsCrmRoutes","users","usersCrmRoutes","lines","linesCrmRoutes","useCrmApi","Form","InputAutocomplete","InputDateRange","InputSelect","ReportVpcFormFilter","props","formRef","t","line","setLine","matrix","setMatrix","data","linesFromApi","getAll","clientParams","page","pageSize","clientRegistrationType","regionalParams","lineCodes","clientCode","parentCompanyCode","howMany","get","getRegional","autoComplete"],"mappings":"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","sourcesContent":["import React, {\n  forwardRef,\n  useMemo,\n  useState\n} from 'react'\n\nimport isEmpty from 'lodash/isEmpty'\n\nimport Grid from '@material-ui/core/Grid'\n\nimport reportVpcFilterSchema, { INITIAL_VALUES } from '@britania-crm/forms/schemas/reportVpc/reportVpc.filter.schema'\nimport { useT } from '@britania-crm/i18n'\nimport {\n  clients as clientsCrmRoutes,\n  users as usersCrmRoutes,\n  lines as linesCrmRoutes\n} from '@britania-crm/services/apis/crmApi/resources/routes'\nimport useCrmApi from '@britania-crm/services/hooks/useCrmApi'\nimport Form from '@britania-crm/web-components/Form'\nimport InputAutocomplete from '@britania-crm/web-components/InputAutocomplete'\nimport InputDateRange from '@britania-crm/web-components/InputDateRange'\nimport InputSelect from '@britania-crm/web-components/InputSelect'\n\nconst ReportVpcFormFilter = forwardRef((props, formRef) => {\n  const t = useT()\n\n  const [line, setLine] = useState([])\n  const [matrix, setMatrix] = useState({})\n\n  const { data: linesFromApi } = useCrmApi(linesCrmRoutes.getAll)\n\n  const clientParams = useMemo(\n    () => ({\n      page: 1,\n      pageSize: 10,\n      clientRegistrationType: 'REGISTER'\n    }),\n    []\n  )\n\n  const regionalParams = useMemo(\n    () => ({\n      page: 1,\n      pageSize: 10,\n      lineCodes: line,\n      clientCode: matrix.parentCompanyCode\n    })\n    , [line, matrix])\n\n  return (\n    <Form\n      ref={ formRef }\n      { ...props }\n      schemaConstructor={ reportVpcFilterSchema }\n      defaultValues={ INITIAL_VALUES }\n    >\n      <Grid container spacing={ 1 }>\n        <Grid item sm={ 12 } md={ 4 } >\n          <InputSelect\n            idKey=\"lineCode\"\n            valueKey=\"lineDescription\"\n            name=\"line\"\n            value={ line }\n            label={ t('line', { howMany: 1 }) }\n            options={ linesFromApi }\n            onValueChange={ setLine }\n            multiple\n          />\n        </Grid>\n        <Grid item xs={ 12 } md={ 4 }>\n          <InputAutocomplete\n            url={ clientsCrmRoutes.get }\n            params={ clientParams }\n            valueKey=\"parentCompany\"\n            paramName=\"parentCompany\"\n            name=\"matrix\"\n            label={ t('matrix', { howMany: 1 }) }\n            onValueChange={ setMatrix }\n          />\n        </Grid>\n        <Grid item sm={ 12 } md={ 4 } >\n          <InputAutocomplete\n            url={ usersCrmRoutes.getRegional }\n            params={ regionalParams }\n            valueKey=\"approverCode\"\n            paramName=\"approverDescription\"\n            name=\"regional\"\n            label={ t('regional manager') }\n            disabled={ isEmpty(matrix) && isEmpty(line) }\n          />\n        </Grid>\n        <Grid item xs={ 12 } md={ 4 }>\n          <InputAutocomplete\n            url={ usersCrmRoutes.autoComplete }\n            valueKey=\"name\"\n            paramName=\"name\"\n            name=\"responsibleForService\"\n            label={ t('responsible', { howMany: 1 }) }\n          />\n        </Grid>\n\n        <Grid item xs={ 12 } md={ 8 }>\n          <InputDateRange\n            name=\"date\"\n          />\n        </Grid>\n      </Grid>\n    </Form>\n  )\n})\n\nexport default ReportVpcFormFilter\n"]},"metadata":{},"sourceType":"module"}