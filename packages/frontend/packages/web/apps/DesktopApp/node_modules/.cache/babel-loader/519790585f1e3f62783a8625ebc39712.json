{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/components/DataTable/DataTable.js\";\nimport React, { useRef, useState, useEffect, useMemo, useCallback, forwardRef, useImperativeHandle } from 'react';\nimport { useT } from '@meta-react/i18n';\nimport MaterialTable from 'material-table';\nimport PropTypes from 'prop-types';\nimport uuid from 'short-uuid';\nimport filter from 'lodash/filter';\nimport get from 'lodash/get';\nimport isBoolean from 'lodash/isBoolean';\nimport isEmpty from 'lodash/isEmpty';\nimport isEqual from 'lodash/isEqual';\nimport isFunction from 'lodash/isFunction';\nimport isString from 'lodash/isString';\nimport map from 'lodash/map';\nimport omitBy from 'lodash/omitBy';\nimport upperCase from 'lodash/upperCase';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport crmApi from '@britania-crm/services/apis/crmApi';\nimport colors from '@britania-crm/styles/colors';\nimport Popover from '@britania-crm/web-components/Popover';\nimport Header from './components/Header';\nimport HeaderToolbar from './components/HeaderToolbar';\nimport Pagination from './components/Pagination';\nimport Table from './components/Table';\nimport datagridI18 from './i18n';\nimport icons from './icons';\nimport MTableOptions from './options';\nimport useStyles, { createTheme, ButtonFilterData, ButtonAddNew, PopoverItem } from './styles';\nconst DataTable = forwardRef((props, ref) => {\n  const {\n    api,\n    data,\n    pageSize,\n    params,\n    urlParams,\n    queryParams,\n    columns: propColumns,\n    options: propOptions,\n    shadow,\n    title,\n    titleProps,\n    onFilterClick,\n    addFilterTitle,\n    onAddClick,\n    addTitle,\n    addTooltip,\n    onEditClick,\n    onDeleteClick,\n    conditionToEdit,\n    conditionToDelete,\n    onExportClick,\n    onRowClick,\n    loading,\n    disabled,\n    disabledRow,\n    onSelectionChange,\n    tableBodyClassName,\n    tableHeaderClassName,\n    components: propComponents,\n    emptyMessage,\n    actions: propActions,\n    searchPlaceholder,\n    onGoBack,\n    style: propStyle,\n    filters,\n    backgroundColor,\n    dividerColor,\n    searchFieldAlignment,\n    minimalistToolbar,\n    onDownloadClick,\n    conditionToDownload,\n    onRedirectClick,\n    conditionToRedirect,\n    addMicroActions,\n    onBindClick,\n    conditionToBind,\n    disableRowClick,\n    ...rest\n  } = props;\n  const t = useT();\n  const classes = useStyles();\n  const mounted = useRef(false);\n  const configs = useRef({});\n  const tableRef = useRef(null);\n  const [filteredRows, setFilteredRows] = useState([]);\n  const tableId = useMemo(() => uuid().new(), []);\n  const i18n = useMemo(() => {\n    const translations = datagridI18(t);\n    return { ...(translations || {}),\n      body: { ...get(translations, 'body', {}),\n        emptyDataSourceMessage: emptyMessage || get(translations, 'body.emptyDataSourceMessage')\n      }\n    };\n  }, [t, emptyMessage]);\n  const options = useMemo(() => ({\n    selectionProps(row) {\n      const rowDisabled = disabledRow(row);\n      const response = {\n        // color: 'primary',\n        disabled: rowDisabled\n      };\n\n      if (rowDisabled) {\n        response.checked = false;\n      }\n\n      return response;\n    },\n\n    ...MTableOptions,\n    ...propOptions,\n    showTitle: !isEmpty(title),\n    pageSize,\n    paging: isString(data) ? true : isBoolean(MTableOptions === null || MTableOptions === void 0 ? void 0 : MTableOptions.paging) ? MTableOptions.paging : propOptions.paging,\n    headerStyle: { ...get(MTableOptions, 'headerStyle', {}),\n      ...get(propOptions, 'headerStyle', {})\n    },\n    searchFieldProps: { ...get(MTableOptions, 'searchFieldProps', {}),\n      ...get(propOptions, 'searchFieldProps', {}),\n      classes: {\n        root: classes.searchField,\n        ...get(MTableOptions, 'searchFieldProps.classes', {}),\n        ...get(propOptions, 'searchFieldProps.classes', {})\n      },\n      InputProps: {\n        endAdornment: null\n      }\n    }\n  }), [classes.searchField, data, disabledRow, pageSize, propOptions, title]);\n  const columns = useMemo(() => map(propColumns, column => {\n    const {\n      cellStyle = {}\n    } = column;\n    let columnStyle = cellStyle;\n\n    if (!isFunction(cellStyle)) {\n      columnStyle = () => cellStyle;\n    }\n\n    return {\n      emptyValue: column.render ? undefined : '-',\n      ...column,\n\n      cellStyle(_, rowData) {\n        let rowStyle = { ...(options.rowStyle || {}),\n          ...((isFunction(propOptions.rowStyle) ? propOptions.rowStyle(_, rowData) : propOptions.rowStyle) || {}),\n          ...((isFunction(column.cellStyle) ? column.cellStyle(_, rowData) : column.cellStyle) || {})\n        };\n\n        if (disabledRow(rowData)) {\n          rowStyle = {\n            opacity: 0.7,\n            ...rowStyle\n          };\n        }\n\n        return { ...columnStyle(_, rowData),\n          ...rowStyle\n        };\n      }\n\n    };\n  }), [disabledRow, options.rowStyle, propColumns, propOptions]);\n  const FilterButton = useMemo(() => onFilterClick && /*#__PURE__*/React.createElement(ButtonFilterData, {\n    id: `filter-${tableId}`,\n    color: \"primary\",\n    onClick: onFilterClick,\n    size: \"small\",\n    startIcon: /*#__PURE__*/React.createElement(icons.FilterIcon, {\n      color: colors.primary.main,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 21\n      }\n    }),\n    variant: \"outlined\",\n    disabled: loading || disabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }\n  }, addFilterTitle), [addFilterTitle, disabled, loading, onFilterClick, tableId]);\n  const AddButton = useMemo(() => onAddClick && /*#__PURE__*/React.createElement(ButtonAddNew, {\n    id: `new-${tableId}`,\n    color: \"warning\",\n    onClick: onAddClick,\n    size: \"small\",\n    startIcon: /*#__PURE__*/React.createElement(icons.Add, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 21\n      }\n    }),\n    variant: \"outlined\",\n    disabled: loading || disabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }\n  }, addTitle), [addTitle, disabled, loading, onAddClick, tableId]);\n  const actions = useMemo(() => {\n    let newActions = [];\n\n    if (onDeleteClick) {\n      const DeleteIcon = icons.Delete;\n      newActions = [row => {\n        const canDelete = conditionToDelete(row);\n        return {\n          icon: DeleteIcon,\n          tooltip: t('datagrid body delete tooltip'),\n          hidden: !canDelete,\n          onClick: onDeleteClick,\n          disabled: loading || disabled || !canDelete,\n          iconButtonProps: {\n            size: 'small',\n            color: 'default'\n          },\n          position: 'row'\n        };\n      }, ...newActions];\n    }\n\n    if (onDownloadClick) {\n      const DownloadIcon = icons.Download;\n      newActions = [row => {\n        const canDownload = conditionToDownload(row);\n        return {\n          icon: DownloadIcon,\n          tooltip: t('datagrid body dowload tooltip'),\n          hidden: !canDownload,\n          onClick: onDownloadClick,\n          disabled: loading || disabled || !canDownload,\n          iconButtonProps: {\n            size: 'small',\n            color: 'default'\n          },\n          position: 'row'\n        };\n      }, ...newActions];\n    }\n\n    if (onRedirectClick) {\n      const RedirectIcon = icons.Redirect;\n      newActions = [row => {\n        const canRedirect = conditionToRedirect(row);\n        return {\n          icon: RedirectIcon,\n          tooltip: t('datagrid body redirect tooltip'),\n          hidden: !canRedirect,\n          onClick: onRedirectClick,\n          disabled: loading || disabled || !canRedirect,\n          iconButtonProps: {\n            size: 'small',\n            color: 'default'\n          },\n          position: 'row'\n        };\n      }, ...newActions];\n    }\n\n    if (onEditClick) {\n      const EditIcon = icons.Edit;\n      newActions = [row => {\n        const canEdit = conditionToEdit(row);\n        return {\n          icon: EditIcon,\n          tooltip: t('datagrid body edit tooltip'),\n          hidden: !canEdit,\n          onClick: onEditClick,\n          disabled: loading || disabled || !canEdit,\n          iconButtonProps: {\n            size: 'small',\n            color: 'default'\n          },\n          position: 'row'\n        };\n      }, ...newActions];\n    }\n\n    if (!isEmpty(addMicroActions)) {\n      newActions = [...newActions, row => ({\n        icon: () => /*#__PURE__*/React.createElement(Popover, {\n          style: {\n            width: '100%'\n          },\n          popoverId: `microactions-${tableId}-${row.id}`,\n          Component: ({\n            popupState,\n            ...iconProps\n          }) => /*#__PURE__*/React.createElement(icons.Menu, Object.assign({}, iconProps, {\n            style: { ...(iconProps.style || {}),\n              color: popupState.isOpen ? colors.white : colors.secondary.main,\n              backgroundColor: popupState.isOpen ? colors.secondary.main : 'transparent',\n              borderRadius: '50%',\n              fontSize: 20\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 19\n            }\n          })),\n          popoverStyle: {\n            maxWidth: 250,\n            zIndex: 9999\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(React.Fragment, null, map(addMicroActions, option => /*#__PURE__*/React.createElement(PopoverItem, {\n          key: option.title,\n          onClick: () => option.action(row),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 21\n          }\n        }, option.title)))),\n        isFreeAction: false,\n        iconProps: {\n          size: 10\n        },\n        iconButtonProps: {\n          style: {\n            width: 20,\n            height: 20,\n            border: `2px solid ${colors.secondary.main}` // padding: 0\n\n          },\n          position: 'row'\n        }\n      })];\n    }\n\n    if (onBindClick) {\n      const BindIcon = icons.LinkIcon;\n      newActions = [row => {\n        const canBind = conditionToBind(row);\n        return {\n          icon: BindIcon,\n          tooltip: t('datagrid body bind tooltip'),\n          onClick: onBindClick,\n          disabled: loading || disabled || !canBind,\n          iconButtonProps: {\n            size: 'small',\n            color: 'default'\n          },\n          position: 'row'\n        };\n      }, ...newActions];\n    }\n\n    if (onRowClick) {\n      newActions = [{\n        icon: icons.AccessRow,\n        tooltip: t('datagrid body access tooltip'),\n        onClick: onRowClick,\n        disabled: loading || disabled,\n        iconButtonProps: {\n          size: 'small',\n          color: 'default'\n        },\n        position: 'row'\n      }, ...newActions];\n    }\n\n    return map([...propActions, ...newActions], action => {\n      if (isFunction(action)) return action;\n      return { ...action,\n        onClick: action.position === 'toolbarOnSelect' ? () => action.onClick(filteredRows) : action.onClick\n      };\n    });\n  }, [addMicroActions, conditionToBind, conditionToDelete, conditionToDownload, conditionToEdit, conditionToRedirect, disabled, filteredRows, loading, onBindClick, onDeleteClick, onDownloadClick, onEditClick, onRowClick, propActions, onRedirectClick, t, tableId]);\n  const enableToolbar = useMemo(() => !!(options.search || title || AddButton || FilterButton || onExportClick || onGoBack), [AddButton, FilterButton, onExportClick, onGoBack, options.search, title]);\n  const style = useMemo(() => ({ ...propStyle,\n    ...(!shadow ? {\n      boxShadow: 'none'\n    } : {})\n  }), [propStyle, shadow]);\n  const handleSelectionChange = useCallback(rows => {\n    const newFilteredRows = filter(rows, row => !disabledRow(row));\n    onSelectionChange(newFilteredRows);\n    setFilteredRows(newFilteredRows);\n  }, [disabledRow, onSelectionChange]);\n  const asyncData = useCallback(async query => {\n    try {\n      // const filters = get(query, 'filters')\n      const searchTerm = get(query, 'search');\n      const size = get(query, 'pageSize', pageSize);\n      const orderBy = get(query, 'orderBy.field');\n      const orderDirection = get(query, 'orderDirection');\n      let page = get(query, 'page', 0);\n      const currentConfigs = {\n        size,\n        searchTerm,\n        orderBy,\n        orderDirection\n      };\n\n      if (!isEqual(currentConfigs, configs.current)) {\n        page = 0; // if has changes, return to first page\n      }\n\n      configs.current = { ...currentConfigs\n      };\n      let requestQueryParams = {\n        page: page + 1,\n        pageSize: size\n      };\n\n      if (!isEmpty(orderBy)) {\n        requestQueryParams = { ...requestQueryParams,\n          orderBy,\n          sort: upperCase(orderDirection)\n        };\n      }\n\n      if (!isEmpty(searchTerm)) {\n        requestQueryParams = { ...requestQueryParams,\n          q: searchTerm\n        };\n      }\n\n      if (!isEmpty(queryParams)) {\n        requestQueryParams = { ...requestQueryParams,\n          ...omitBy(queryParams, param => !isBoolean(param) && param !== 0 && isEmpty(param))\n        };\n      }\n\n      const {\n        data: {\n          data: datagridData,\n          totalRegisters\n        }\n      } = await api.get(data, {\n        params: { ...params,\n          ...filters,\n          ...requestQueryParams\n        }\n      });\n      return {\n        data: datagridData,\n        page,\n        totalCount: totalRegisters || 0\n      };\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.error(i18n.fetchLoadError, e);\n      throw e;\n    }\n  }, [api, data, filters, i18n.fetchLoadError, pageSize, params, queryParams]);\n  const realData = useMemo(() => isString(data) ? asyncData : data, [asyncData, data]);\n  const components = useMemo(() => ({\n    Header: headerProps => /*#__PURE__*/React.createElement(Header, Object.assign({}, headerProps, {\n      tableHeaderClassName: tableHeaderClassName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 9\n      }\n    })),\n    Toolbar: toolbarProps => enableToolbar && /*#__PURE__*/React.createElement(HeaderToolbar, Object.assign({}, toolbarProps, {\n      id: tableId,\n      searchFieldAlignment: searchFieldAlignment,\n      titleProps: titleProps,\n      FilterButton: FilterButton,\n      AddButton: AddButton,\n      searchPlaceholder: searchPlaceholder,\n      onGoBack: onGoBack,\n      exportCsv: onExportClick,\n      minimalistToolbar: minimalistToolbar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 9\n      }\n    })),\n    Table,\n    Pagination,\n    ...propComponents\n  }), [AddButton, FilterButton, enableToolbar, minimalistToolbar, onExportClick, onGoBack, propComponents, searchFieldAlignment, searchPlaceholder, tableHeaderClassName, tableId, titleProps]);\n  useEffect( // didUpdate\n  () => {\n    if (mounted.current && tableRef && isString(data)) {\n      tableRef.current.onQueryChange();\n    }\n  }, [data, urlParams, queryParams, tableRef, asyncData]);\n  useEffect(() => {\n    mounted.current = true;\n    return () => {\n      mounted.current = false;\n    };\n  }, []);\n  useImperativeHandle(ref, () => tableRef.current);\n  return /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: createTheme({\n      dividerColor,\n      backgroundColor\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 592,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    style: style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 594,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MaterialTable, Object.assign({}, rest, {\n    tableRef: tableRef,\n    id: tableId,\n    icons: icons,\n    options: options,\n    columns: columns,\n    data: realData,\n    localization: i18n,\n    onRowClick: !disableRowClick ? onRowClick : undefined,\n    title: title,\n    actions: actions,\n    style: {\n      boxShadow: 'none'\n    },\n    isLoading: isString(data) ? undefined : loading,\n    components: components,\n    onSelectionChange: handleSelectionChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 595,\n      columnNumber: 11\n    }\n  })))));\n});\nDataTable.propTypes = {\n  /** columns by material-table */\n  columns: PropTypes.array.isRequired,\n\n  /** actions by material-table */\n  actions: PropTypes.array,\n\n  /** data by material-table */\n  data: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n\n  /** options by material-table */\n  options: PropTypes.object,\n\n  /** params to inject into request */\n  params: PropTypes.object,\n\n  /** pageSize by material-table */\n  pageSize: PropTypes.number,\n\n  /** remove shadow of the datagrid container */\n  shadow: PropTypes.bool,\n\n  /** title by material-table */\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n\n  /** set style props to table title */\n  titleProps: PropTypes.object,\n\n  /* Enable Add button, and set the callback called when this button is clicked */\n  onAddClick: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n\n  /* Enable Filter button, and set the callback called when this button is clicked */\n  onFilterClick: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n\n  /** tooltip for add button */\n  addTooltip: PropTypes.string,\n\n  /** title for filter button */\n  addFilterTitle: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n\n  /** title for add button */\n  addTitle: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  onSelectionChange: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n\n  /** Enable Edit button, and set the callback called when this button is clicked */\n  onEditClick: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n\n  /** Enable redirect button, and set the callback called when this button is clicked */\n  onRedirectClick: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n\n  /** Enable Delete button, and set the callback called when this button is clicked */\n  onDeleteClick: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n\n  /** Enable Download button, and set the callback called when this button is clicked */\n  onDownloadClick: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n\n  /** Enable Bind button, and set the callback called when this button is clicked */\n  onBindClick: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n\n  /** Enable Export button, and set the callback called when this button is clicked */\n  onExportClick: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n\n  /** Enable Row click */\n  onRowClick: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n\n  /** datagrid is loading */\n  loading: PropTypes.bool,\n\n  /** disable all actions */\n  disabled: PropTypes.bool,\n\n  /** customize row when row was softdeleted */\n  disabledRow: PropTypes.func,\n\n  /** customize row when row was softdeleted */\n  emptyMessage: PropTypes.string,\n  urlParams: PropTypes.object,\n  queryParams: PropTypes.object,\n  tableBodyClassName: PropTypes.string,\n  tableHeaderClassName: PropTypes.string,\n  components: PropTypes.object,\n  searchPlaceholder: PropTypes.string,\n  onGoBack: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  style: PropTypes.object,\n  filters: PropTypes.object,\n  backgroundColor: PropTypes.string,\n  dividerColor: PropTypes.string,\n  minimalistToolbar: PropTypes.bool,\n  searchFieldAlignment: PropTypes.oneOf(['left', 'right']),\n\n  /** Condition for display the Edit button */\n  conditionToEdit: PropTypes.func,\n\n  /** Condition for display the Delete button */\n  conditionToDelete: PropTypes.func,\n\n  /** Condition for display the Redirect button */\n  conditionToDownload: PropTypes.func,\n\n  /** Condition for display the Redirect button */\n  conditionToRedirect: PropTypes.func,\n\n  /** Condition for display the Bind button */\n  conditionToBind: PropTypes.func,\n  addMicroActions: PropTypes.array,\n  api: PropTypes.any,\n  disableRowClick: PropTypes.bool\n};\nDataTable.defaultProps = {\n  data: [],\n  options: {},\n  params: {},\n  shadow: false,\n  actions: [],\n  pageSize: 10,\n  title: '',\n  titleProps: undefined,\n  onAddClick: null,\n  onFilterClick: null,\n  addTooltip: '',\n  addTitle: null,\n  addFilterTitle: null,\n  onSelectionChange: () => [],\n  onEditClick: null,\n  conditionToEdit: () => true,\n  conditionToDelete: () => true,\n  onDeleteClick: null,\n  onExportClick: null,\n  onRowClick: undefined,\n  loading: undefined,\n  disabled: false,\n  disabledRow: () => false,\n  emptyMessage: null,\n  urlParams: {},\n  tableBodyClassName: null,\n  tableHeaderClassName: null,\n  components: {},\n  queryParams: {},\n  searchPlaceholder: undefined,\n  onGoBack: undefined,\n  style: {},\n  filters: {},\n  backgroundColor: colors.white,\n  dividerColor: colors.white3,\n  minimalistToolbar: false,\n  searchFieldAlignment: 'left',\n  onBindClick: null,\n  onRedirectClick: null,\n  conditionToDownload: () => true,\n  conditionToRedirect: () => true,\n  conditionToBind: () => true,\n  onDownloadClick: null,\n  addMicroActions: [],\n  api: crmApi,\n  disableRowClick: false\n};\nexport default DataTable;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/components/DataTable/DataTable.js"],"names":["React","useRef","useState","useEffect","useMemo","useCallback","forwardRef","useImperativeHandle","useT","MaterialTable","PropTypes","uuid","filter","get","isBoolean","isEmpty","isEqual","isFunction","isString","map","omitBy","upperCase","Card","CardContent","ThemeProvider","crmApi","colors","Popover","Header","HeaderToolbar","Pagination","Table","datagridI18","icons","MTableOptions","useStyles","createTheme","ButtonFilterData","ButtonAddNew","PopoverItem","DataTable","props","ref","api","data","pageSize","params","urlParams","queryParams","columns","propColumns","options","propOptions","shadow","title","titleProps","onFilterClick","addFilterTitle","onAddClick","addTitle","addTooltip","onEditClick","onDeleteClick","conditionToEdit","conditionToDelete","onExportClick","onRowClick","loading","disabled","disabledRow","onSelectionChange","tableBodyClassName","tableHeaderClassName","components","propComponents","emptyMessage","actions","propActions","searchPlaceholder","onGoBack","style","propStyle","filters","backgroundColor","dividerColor","searchFieldAlignment","minimalistToolbar","onDownloadClick","conditionToDownload","onRedirectClick","conditionToRedirect","addMicroActions","onBindClick","conditionToBind","disableRowClick","rest","t","classes","mounted","configs","tableRef","filteredRows","setFilteredRows","tableId","new","i18n","translations","body","emptyDataSourceMessage","selectionProps","row","rowDisabled","response","checked","showTitle","paging","headerStyle","searchFieldProps","root","searchField","InputProps","endAdornment","column","cellStyle","columnStyle","emptyValue","render","undefined","_","rowData","rowStyle","opacity","FilterButton","primary","main","AddButton","newActions","DeleteIcon","Delete","canDelete","icon","tooltip","hidden","onClick","iconButtonProps","size","color","position","DownloadIcon","Download","canDownload","RedirectIcon","Redirect","canRedirect","EditIcon","Edit","canEdit","width","id","popupState","iconProps","isOpen","white","secondary","borderRadius","fontSize","maxWidth","zIndex","option","action","isFreeAction","height","border","BindIcon","LinkIcon","canBind","AccessRow","enableToolbar","search","boxShadow","handleSelectionChange","rows","newFilteredRows","asyncData","query","searchTerm","orderBy","orderDirection","page","currentConfigs","current","requestQueryParams","sort","q","param","datagridData","totalRegisters","totalCount","e","console","error","fetchLoadError","realData","headerProps","Toolbar","toolbarProps","onQueryChange","propTypes","array","isRequired","oneOfType","string","object","number","bool","element","func","oneOf","any","defaultProps","white3"],"mappings":"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","sourcesContent":["import React, {\n  useRef,\n  useState,\n  useEffect,\n  useMemo,\n  useCallback,\n  forwardRef,\n  useImperativeHandle\n} from 'react'\n\nimport { useT } from '@meta-react/i18n'\nimport MaterialTable from 'material-table'\nimport PropTypes from 'prop-types'\nimport uuid from 'short-uuid'\n\nimport filter from 'lodash/filter'\nimport get from 'lodash/get'\nimport isBoolean from 'lodash/isBoolean'\nimport isEmpty from 'lodash/isEmpty'\nimport isEqual from 'lodash/isEqual'\nimport isFunction from 'lodash/isFunction'\nimport isString from 'lodash/isString'\nimport map from 'lodash/map'\nimport omitBy from 'lodash/omitBy'\nimport upperCase from 'lodash/upperCase'\n\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport { ThemeProvider } from '@material-ui/core/styles'\n\nimport crmApi from '@britania-crm/services/apis/crmApi'\nimport colors from '@britania-crm/styles/colors'\nimport Popover from '@britania-crm/web-components/Popover'\n\nimport Header from './components/Header'\nimport HeaderToolbar from './components/HeaderToolbar'\nimport Pagination from './components/Pagination'\nimport Table from './components/Table'\nimport datagridI18 from './i18n'\nimport icons from './icons'\nimport MTableOptions from './options'\nimport useStyles, {\n  createTheme,\n  ButtonFilterData,\n  ButtonAddNew,\n  PopoverItem\n} from './styles'\n\nconst DataTable = forwardRef((props, ref) => {\n  const {\n    api,\n    data,\n    pageSize,\n    params,\n    urlParams,\n    queryParams,\n    columns: propColumns,\n    options: propOptions,\n    shadow,\n    title,\n    titleProps,\n    onFilterClick,\n    addFilterTitle,\n    onAddClick,\n    addTitle,\n    addTooltip,\n    onEditClick,\n    onDeleteClick,\n    conditionToEdit,\n    conditionToDelete,\n    onExportClick,\n    onRowClick,\n    loading,\n    disabled,\n    disabledRow,\n    onSelectionChange,\n    tableBodyClassName,\n    tableHeaderClassName,\n    components: propComponents,\n    emptyMessage,\n    actions: propActions,\n    searchPlaceholder,\n    onGoBack,\n    style: propStyle,\n    filters,\n    backgroundColor,\n    dividerColor,\n    searchFieldAlignment,\n    minimalistToolbar,\n    onDownloadClick,\n    conditionToDownload,\n    onRedirectClick,\n    conditionToRedirect,\n    addMicroActions,\n    onBindClick,\n    conditionToBind,\n    disableRowClick,\n    ...rest\n  } = props\n\n  const t = useT()\n  const classes = useStyles()\n\n  const mounted = useRef(false)\n  const configs = useRef({})\n\n  const tableRef = useRef(null)\n\n  const [filteredRows, setFilteredRows] = useState([])\n\n  const tableId = useMemo(() => uuid().new(), [])\n\n  const i18n = useMemo(\n    () => {\n      const translations = datagridI18(t)\n      return {\n        ...(translations || {}),\n        body: {\n          ...get(translations, 'body', {}),\n          emptyDataSourceMessage: emptyMessage || get(translations, 'body.emptyDataSourceMessage')\n        }\n      }\n    },\n    [t, emptyMessage]\n  )\n\n  const options = useMemo(\n    () => ({\n      selectionProps (row) {\n        const rowDisabled = disabledRow(row)\n        const response = {\n          // color: 'primary',\n          disabled: rowDisabled\n        }\n        if (rowDisabled) {\n          response.checked = false\n        }\n        return response\n      },\n      ...MTableOptions,\n      ...propOptions,\n      showTitle: !isEmpty(title),\n      pageSize,\n      paging: isString(data) ? true : (isBoolean(MTableOptions?.paging) ? MTableOptions.paging : propOptions.paging),\n      headerStyle: {\n        ...get(MTableOptions, 'headerStyle', {}),\n        ...get(propOptions, 'headerStyle', {})\n      },\n      searchFieldProps: {\n        ...get(MTableOptions, 'searchFieldProps', {}),\n        ...get(propOptions, 'searchFieldProps', {}),\n        classes: {\n          root: classes.searchField,\n          ...get(MTableOptions, 'searchFieldProps.classes', {}),\n          ...get(propOptions, 'searchFieldProps.classes', {})\n        },\n        InputProps: { endAdornment: null }\n      }\n    }),\n    [classes.searchField, data, disabledRow, pageSize, propOptions, title]\n  )\n\n  const columns = useMemo(\n    () => map(propColumns, (column) => {\n      const { cellStyle = {} } = column\n\n      let columnStyle = cellStyle\n      if (!isFunction(cellStyle)) {\n        columnStyle = () => cellStyle\n      }\n\n      return {\n        emptyValue: column.render ? undefined : '-',\n        ...column,\n        cellStyle (_, rowData) {\n          let rowStyle = {\n            ...(options.rowStyle || {}),\n            ...((isFunction(propOptions.rowStyle) ? propOptions.rowStyle(_, rowData) : propOptions.rowStyle) || {}),\n            ...((isFunction(column.cellStyle) ? column.cellStyle(_, rowData) : column.cellStyle) || {})\n          }\n          if (disabledRow(rowData)) {\n            rowStyle = {\n              opacity: 0.7,\n              ...rowStyle\n            }\n          }\n          return {\n            ...columnStyle(_, rowData),\n            ...rowStyle\n          }\n        }\n      }\n    }),\n    [disabledRow, options.rowStyle, propColumns, propOptions]\n  )\n\n  const FilterButton = useMemo(\n    () => onFilterClick && (\n      <ButtonFilterData\n        id={ `filter-${ tableId }` }\n        color=\"primary\"\n        onClick={ onFilterClick }\n        size=\"small\"\n        startIcon={ <icons.FilterIcon color={ colors.primary.main } /> }\n        variant=\"outlined\"\n        disabled={ loading || disabled }\n      >\n        {addFilterTitle}\n      </ButtonFilterData>\n    ),\n    [addFilterTitle, disabled, loading, onFilterClick, tableId]\n  )\n\n  const AddButton = useMemo(\n    () => onAddClick && (\n      <ButtonAddNew\n        id={ `new-${ tableId }` }\n        color=\"warning\"\n        onClick={ onAddClick }\n        size=\"small\"\n        startIcon={ <icons.Add /> }\n        variant=\"outlined\"\n        disabled={ loading || disabled }\n      >\n        {addTitle}\n      </ButtonAddNew>\n    ),\n    [addTitle, disabled, loading, onAddClick, tableId]\n  )\n\n  const actions = useMemo(\n    () => {\n      let newActions = []\n\n      if (onDeleteClick) {\n        const DeleteIcon = icons.Delete\n        newActions = [\n          (row) => {\n            const canDelete = conditionToDelete(row)\n            return {\n              icon: DeleteIcon,\n              tooltip: t('datagrid body delete tooltip'),\n              hidden: !canDelete,\n              onClick: onDeleteClick,\n              disabled: loading || disabled || !canDelete,\n              iconButtonProps: {\n                size: 'small',\n                color: 'default'\n              },\n              position: 'row'\n            }\n          },\n          ...newActions\n        ]\n      }\n\n      if (onDownloadClick) {\n        const DownloadIcon = icons.Download\n        newActions = [\n          (row) => {\n            const canDownload = conditionToDownload(row)\n            return {\n              icon: DownloadIcon,\n              tooltip: t('datagrid body dowload tooltip'),\n              hidden: !canDownload,\n              onClick: onDownloadClick,\n              disabled: loading || disabled || !canDownload,\n              iconButtonProps: {\n                size: 'small',\n                color: 'default'\n              },\n              position: 'row'\n            }\n          },\n          ...newActions\n        ]\n      }\n\n      if (onRedirectClick) {\n        const RedirectIcon = icons.Redirect\n        newActions = [\n          (row) => {\n            const canRedirect = conditionToRedirect(row)\n            return {\n              icon: RedirectIcon,\n              tooltip: t('datagrid body redirect tooltip'),\n              hidden: !canRedirect,\n              onClick: onRedirectClick,\n              disabled: loading || disabled || !canRedirect,\n              iconButtonProps: {\n                size: 'small',\n                color: 'default'\n              },\n              position: 'row'\n            }\n          },\n          ...newActions\n        ]\n      }\n\n      if (onEditClick) {\n        const EditIcon = icons.Edit\n        newActions = [\n          (row) => {\n            const canEdit = conditionToEdit(row)\n            return {\n              icon: EditIcon,\n              tooltip: t('datagrid body edit tooltip'),\n              hidden: !canEdit,\n              onClick: onEditClick,\n              disabled: loading || disabled || !canEdit,\n              iconButtonProps: {\n                size: 'small',\n                color: 'default'\n              },\n              position: 'row'\n            }\n          },\n          ...newActions\n        ]\n      }\n\n      if (!isEmpty(addMicroActions)) {\n        newActions = [\n          ...newActions,\n          (row) => ({\n            icon: () => (\n              <Popover\n                style={ { width: '100%' } }\n                popoverId={ `microactions-${ tableId }-${ row.id }` }\n                Component={ ({ popupState, ...iconProps }) => (\n                  <icons.Menu\n                    { ...iconProps }\n                    style={ {\n                      ...(iconProps.style || {}),\n                      color: popupState.isOpen ? colors.white : colors.secondary.main,\n                      backgroundColor: popupState.isOpen ? colors.secondary.main : 'transparent',\n\n                      borderRadius: '50%',\n                      fontSize: 20\n\n                    } }\n                  />\n                ) }\n                popoverStyle={ {\n                  maxWidth: 250,\n                  zIndex: 9999\n                } }\n              >\n                <>\n                  {map(addMicroActions, (option) => (\n                    <PopoverItem\n                      key={ option.title }\n                      onClick={ () => option.action(row) }\n                    >\n                      { option.title }\n                    </PopoverItem>\n                  ))}\n                </>\n              </Popover>\n            ),\n            isFreeAction: false,\n            iconProps: { size: 10 },\n            iconButtonProps: {\n              style: {\n                width: 20,\n                height: 20,\n                border: `2px solid ${ colors.secondary.main }`\n                // padding: 0\n              },\n              position: 'row'\n            }\n          })\n        ]\n      }\n\n      if (onBindClick) {\n        const BindIcon = icons.LinkIcon\n        newActions = [\n          (row) => {\n            const canBind = conditionToBind(row)\n            return {\n              icon: BindIcon,\n              tooltip: t('datagrid body bind tooltip'),\n              onClick: onBindClick,\n              disabled: loading || disabled || !canBind,\n              iconButtonProps: {\n                size: 'small',\n                color: 'default'\n              },\n              position: 'row'\n            }\n          },\n          ...newActions\n        ]\n      }\n\n      if (onRowClick) {\n        newActions = [\n          {\n            icon: icons.AccessRow,\n            tooltip: t('datagrid body access tooltip'),\n            onClick: onRowClick,\n            disabled: loading || disabled,\n            iconButtonProps: {\n              size: 'small',\n              color: 'default'\n            },\n            position: 'row'\n          },\n          ...newActions\n        ]\n      }\n\n      return map(\n        [...propActions, ...newActions],\n        (action) => {\n          if (isFunction(action)) return action\n          return {\n            ...action,\n            onClick: action.position === 'toolbarOnSelect'\n              ? () => action.onClick(filteredRows)\n              : action.onClick\n          }\n        }\n      )\n    },\n    [addMicroActions, conditionToBind, conditionToDelete, conditionToDownload, conditionToEdit, conditionToRedirect, disabled, filteredRows, loading, onBindClick, onDeleteClick, onDownloadClick, onEditClick, onRowClick, propActions, onRedirectClick, t, tableId]\n  )\n\n  const enableToolbar = useMemo(\n    () => !!(\n      options.search ||\n      title ||\n      AddButton ||\n      FilterButton ||\n      onExportClick ||\n      onGoBack\n    ),\n    [AddButton, FilterButton, onExportClick, onGoBack, options.search, title]\n  )\n\n  const style = useMemo(\n    () => ({\n      ...propStyle,\n      ...(!shadow ? { boxShadow: 'none' } : {})\n    }),\n    [propStyle, shadow]\n  )\n\n  const handleSelectionChange = useCallback(\n    (rows) => {\n      const newFilteredRows = filter(rows, (row) => !disabledRow(row))\n      onSelectionChange(newFilteredRows)\n      setFilteredRows(newFilteredRows)\n    },\n    [disabledRow, onSelectionChange]\n  )\n\n  const asyncData = useCallback(\n    async (query) => {\n      try {\n        // const filters = get(query, 'filters')\n        const searchTerm = get(query, 'search')\n        const size = get(query, 'pageSize', pageSize)\n        const orderBy = get(query, 'orderBy.field')\n        const orderDirection = get(query, 'orderDirection')\n        let page = get(query, 'page', 0)\n\n        const currentConfigs = {\n          size,\n          searchTerm,\n          orderBy,\n          orderDirection\n        }\n\n        if (!isEqual(currentConfigs, configs.current)) {\n          page = 0 // if has changes, return to first page\n        }\n\n        configs.current = { ...currentConfigs }\n\n        let requestQueryParams = {\n          page: page + 1,\n          pageSize: size\n        }\n\n        if (!isEmpty(orderBy)) {\n          requestQueryParams = {\n            ...requestQueryParams,\n            orderBy,\n            sort: upperCase(orderDirection)\n          }\n        }\n        if (!isEmpty(searchTerm)) {\n          requestQueryParams = {\n            ...requestQueryParams,\n            q: searchTerm\n          }\n        }\n        if (!isEmpty(queryParams)) {\n          requestQueryParams = {\n            ...requestQueryParams,\n            ...omitBy(queryParams, (param) => !isBoolean(param) && param !== 0 && isEmpty(param))\n          }\n        }\n\n        const {\n          data: {\n            data: datagridData,\n            totalRegisters\n          }\n        } = await api.get(data, {\n          params: {\n            ...params,\n            ...filters,\n            ...requestQueryParams\n          }\n        })\n\n        return {\n          data: datagridData,\n          page,\n          totalCount: totalRegisters || 0\n        }\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.error(i18n.fetchLoadError, e)\n        throw e\n      }\n    },\n    [api, data, filters, i18n.fetchLoadError, pageSize, params, queryParams]\n  )\n\n  const realData = useMemo(\n    () => isString(data) ? asyncData : data,\n    [asyncData, data]\n  )\n\n  const components = useMemo(\n    () => ({\n      Header: (headerProps) => (\n        <Header\n          { ...headerProps }\n          tableHeaderClassName={ tableHeaderClassName }\n        />\n      ),\n      Toolbar: (toolbarProps) => enableToolbar && (\n        <HeaderToolbar\n          { ...toolbarProps }\n          id={ tableId }\n          searchFieldAlignment={ searchFieldAlignment }\n          titleProps={ titleProps }\n          FilterButton={ FilterButton }\n          AddButton={ AddButton }\n          searchPlaceholder={ searchPlaceholder }\n          onGoBack={ onGoBack }\n          exportCsv={ onExportClick }\n          minimalistToolbar={ minimalistToolbar }\n        />\n      ),\n      Table,\n      Pagination,\n      ...propComponents\n    }),\n    [AddButton, FilterButton, enableToolbar, minimalistToolbar, onExportClick, onGoBack, propComponents, searchFieldAlignment, searchPlaceholder, tableHeaderClassName, tableId, titleProps]\n  )\n\n  useEffect(\n    // didUpdate\n    () => {\n      if (mounted.current && tableRef && isString(data)) {\n        tableRef.current.onQueryChange()\n      }\n    },\n    [data, urlParams, queryParams, tableRef, asyncData]\n  )\n\n  useEffect(\n    () => {\n      mounted.current = true\n      return () => {\n        mounted.current = false\n      }\n    },\n    []\n  )\n\n  useImperativeHandle(ref, () => tableRef.current)\n\n  return (\n    <ThemeProvider theme={ createTheme({ dividerColor, backgroundColor }) }>\n      <Card style={ style }>\n        <CardContent>\n          <MaterialTable\n            { ...rest }\n            tableRef={ tableRef }\n            id={ tableId }\n            icons={ icons }\n            options={ options }\n            columns={ columns }\n            data={ realData }\n            localization={ i18n }\n            onRowClick={ !disableRowClick ? onRowClick : undefined }\n            title={ title }\n            actions={ actions }\n            style={ { boxShadow: 'none' } }\n            isLoading={ isString(data) ? undefined : loading }\n            components={ components }\n            onSelectionChange={ handleSelectionChange }\n          />\n        </CardContent>\n      </Card>\n    </ThemeProvider>\n\n  )\n})\n\nDataTable.propTypes = {\n  /** columns by material-table */\n  columns: PropTypes.array.isRequired,\n  /** actions by material-table */\n  actions: PropTypes.array,\n  /** data by material-table */\n  data: PropTypes.oneOfType([\n    PropTypes.array,\n    PropTypes.string\n  ]),\n  /** options by material-table */\n  options: PropTypes.object,\n  /** params to inject into request */\n  params: PropTypes.object,\n  /** pageSize by material-table */\n  pageSize: PropTypes.number,\n  /** remove shadow of the datagrid container */\n  shadow: PropTypes.bool,\n  /** title by material-table */\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  /** set style props to table title */\n  titleProps: PropTypes.object,\n  /* Enable Add button, and set the callback called when this button is clicked */\n  onAddClick: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.bool\n  ]),\n  /* Enable Filter button, and set the callback called when this button is clicked */\n  onFilterClick: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.bool\n  ]),\n  /** tooltip for add button */\n  addTooltip: PropTypes.string,\n  /** title for filter button */\n  addFilterTitle: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  /** title for add button */\n  addTitle: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  onSelectionChange: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.bool\n  ]),\n  /** Enable Edit button, and set the callback called when this button is clicked */\n  onEditClick: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.bool\n  ]),\n  /** Enable redirect button, and set the callback called when this button is clicked */\n  onRedirectClick: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.bool\n  ]),\n  /** Enable Delete button, and set the callback called when this button is clicked */\n  onDeleteClick: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.bool\n  ]),\n  /** Enable Download button, and set the callback called when this button is clicked */\n  onDownloadClick: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.bool\n  ]),\n  /** Enable Bind button, and set the callback called when this button is clicked */\n  onBindClick: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.bool\n  ]),\n  /** Enable Export button, and set the callback called when this button is clicked */\n  onExportClick: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.bool\n  ]),\n  /** Enable Row click */\n  onRowClick: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.bool\n  ]),\n  /** datagrid is loading */\n  loading: PropTypes.bool,\n  /** disable all actions */\n  disabled: PropTypes.bool,\n  /** customize row when row was softdeleted */\n  disabledRow: PropTypes.func,\n  /** customize row when row was softdeleted */\n  emptyMessage: PropTypes.string,\n  urlParams: PropTypes.object,\n  queryParams: PropTypes.object,\n  tableBodyClassName: PropTypes.string,\n  tableHeaderClassName: PropTypes.string,\n  components: PropTypes.object,\n  searchPlaceholder: PropTypes.string,\n  onGoBack: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.bool\n  ]),\n  style: PropTypes.object,\n  filters: PropTypes.object,\n  backgroundColor: PropTypes.string,\n  dividerColor: PropTypes.string,\n  minimalistToolbar: PropTypes.bool,\n  searchFieldAlignment: PropTypes.oneOf(['left', 'right']),\n  /** Condition for display the Edit button */\n  conditionToEdit: PropTypes.func,\n  /** Condition for display the Delete button */\n  conditionToDelete: PropTypes.func,\n  /** Condition for display the Redirect button */\n  conditionToDownload: PropTypes.func,\n  /** Condition for display the Redirect button */\n  conditionToRedirect: PropTypes.func,\n  /** Condition for display the Bind button */\n  conditionToBind: PropTypes.func,\n  addMicroActions: PropTypes.array,\n  api: PropTypes.any,\n  disableRowClick: PropTypes.bool\n}\n\nDataTable.defaultProps = {\n  data: [],\n  options: {},\n  params: {},\n  shadow: false,\n  actions: [],\n  pageSize: 10,\n  title: '',\n  titleProps: undefined,\n  onAddClick: null,\n  onFilterClick: null,\n  addTooltip: '',\n  addTitle: null,\n  addFilterTitle: null,\n  onSelectionChange: () => [],\n  onEditClick: null,\n  conditionToEdit: () => true,\n  conditionToDelete: () => true,\n  onDeleteClick: null,\n  onExportClick: null,\n  onRowClick: undefined,\n  loading: undefined,\n  disabled: false,\n  disabledRow: () => false,\n  emptyMessage: null,\n  urlParams: {},\n  tableBodyClassName: null,\n  tableHeaderClassName: null,\n  components: {},\n  queryParams: {},\n  searchPlaceholder: undefined,\n  onGoBack: undefined,\n  style: {},\n  filters: {},\n  backgroundColor: colors.white,\n  dividerColor: colors.white3,\n  minimalistToolbar: false,\n  searchFieldAlignment: 'left',\n  onBindClick: null,\n  onRedirectClick: null,\n  conditionToDownload: () => true,\n  conditionToRedirect: () => true,\n  conditionToBind: () => true,\n  onDownloadClick: null,\n  addMicroActions: [],\n  api: crmApi,\n  disableRowClick: false\n}\n\nexport default DataTable\n"]},"metadata":{},"sourceType":"module"}