{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/customers/screens/CustomerFormScreen/CustomerFormScreen.js\";\nimport React, { useCallback, useMemo, useEffect, useRef, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport trimMask from '@meta-awesome/functions/src/trimMask';\nimport { Scope } from '@unform/core';\nimport capitalize from 'lodash/capitalize';\nimport isEmpty from 'lodash/isEmpty';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { useDialog } from '@britania-crm/dialog';\nimport { useFormEffect } from '@britania-crm/forms';\nimport customerSchema, { INITIAL_VALUES } from '@britania-crm/forms/schemas/customer/customer.schema';\nimport I18n, { useT } from '@britania-crm/i18n';\nimport { customer as customerCrmRoutes, documents as documentsCrmRoutes } from '@britania-crm/services/apis/crmApi/resources/routes';\nimport { searchStates } from '@britania-crm/services/apis/ibgeApi';\nimport useCrmApi from '@britania-crm/services/hooks/useCrmApi';\nimport { AppActions } from '@britania-crm/stores/app';\nimport { CustomerActions } from '@britania-crm/stores/customer';\nimport defaultFile from '@britania-crm/styles/assets/images/default_login_bg.png';\nimport colors from '@britania-crm/styles/colors';\nimport Button from '@britania-crm/web-components/Button';\nimport CheckboxStatus from '@britania-crm/web-components/CheckboxStatus';\nimport Form from '@britania-crm/web-components/Form';\nimport { CircularLoader } from '@britania-crm/web-components/Loader';\nimport ConfirmModal from '@britania-crm/web-components/Modal/ConfirmModal';\nimport { useRoutes } from '@britania-crm/web-src/routes/authenticated.routes';\nimport DocumentationCustomerModal from '../../modals/DocumentationCustomerModal';\nimport Address from './Address';\nimport ContractPercentage from './ContractPercentage';\nimport MainData from './MainData';\nimport Ranking from './Ranking';\nimport useStyles from './styles';\n\nconst CustomerFormScreen = () => {\n  var _state$params, _state$params2, _customerFromApi$main3, _customerFromApi$rank3, _customerFromApi$rank4;\n\n  const t = useT();\n  const classes = useStyles();\n  const {\n    routes,\n    currentRoutePermissions\n  } = useRoutes();\n  const dispatch = useCallback(useDispatch(), []);\n  const history = useHistory();\n  const {\n    createDialog\n  } = useDialog();\n  const {\n    state\n  } = useLocation();\n  const formRef = useRef(null);\n  const [contractPercentage, setContractPercentage] = useState([]);\n  const [indicators, setIndicators] = useState([]);\n  const [currentRanking, setCurrentRanking] = useState('');\n  const [oldRanking, setOldRanking] = useState('');\n  const [nameCustomer, setNameCustomer] = useState('');\n  const [stateOptions, setStateOptions] = useState([]);\n  const [loader, setLoader] = useState(false);\n  const {\n    data: customerFromApi,\n    loading\n  } = useCrmApi((state === null || state === void 0 ? void 0 : (_state$params = state.params) === null || _state$params === void 0 ? void 0 : _state$params.id) ? [`${customerCrmRoutes.getOne}/${state === null || state === void 0 ? void 0 : (_state$params2 = state.params) === null || _state$params2 === void 0 ? void 0 : _state$params2.id}`, state] : null, null, {\n    onErrorRetry(error, key, config, revalidate, {\n      retryCount\n    }) {\n      if (error.response.status === 500 && retryCount < 5) {\n        createDialog({\n          id: 'new-request-modal',\n          Component: ConfirmModal,\n          props: {\n            onConfirm() {\n              revalidate({\n                retryCount\n              });\n            },\n\n            onNegative() {\n              history.goBack();\n            },\n\n            text: t('search error customer')\n          }\n        });\n      } else {\n        dispatch(AppActions.addAlert({\n          type: 'error',\n          message: t('maximum number of attempts reached')\n        }));\n        history.goBack();\n      }\n    },\n\n    revalidateOnFocus: false\n  });\n  const {\n    data: documentFromApi\n  } = useCrmApi([`${documentsCrmRoutes.getOne}/PRE_CAD_CLIENTE_DOCUMENTACAO`]);\n  const imagePreview = useMemo(() => {\n    if (!isEmpty(documentFromApi)) {\n      return { ...documentFromApi.file,\n        type: documentFromApi.file.contentType\n      };\n    }\n\n    return defaultFile;\n  }, [documentFromApi]);\n  const mode = useMemo(() => {\n    var _state$params3;\n\n    return state === null || state === void 0 ? void 0 : (_state$params3 = state.params) === null || _state$params3 === void 0 ? void 0 : _state$params3.mode;\n  }, [state]);\n  const modeView = useMemo(() => mode === 'view', [mode]);\n  const idCustomer = useMemo(() => {\n    var _state$params4;\n\n    return state === null || state === void 0 ? void 0 : (_state$params4 = state.params) === null || _state$params4 === void 0 ? void 0 : _state$params4.id;\n  }, [state]);\n  const title = useMemo(() => {\n    switch (mode) {\n      case 'create':\n        return t('new {this}', {\n          gender: 'male',\n          this: t('customer', {\n            howMany: 1\n          })\n        });\n\n      default:\n        return nameCustomer;\n    }\n  }, [mode, nameCustomer, t]);\n  const onSuccessCallBack = useCallback(() => {\n    history.push(routes.customers.path);\n    setLoader(false);\n  }, [history, routes.customers.path]);\n  const statusCustomer = useMemo(() => {\n    var _customerFromApi$main, _customerFromApi$main2;\n\n    let status, color;\n\n    if ((customerFromApi === null || customerFromApi === void 0 ? void 0 : (_customerFromApi$main = customerFromApi.mainData) === null || _customerFromApi$main === void 0 ? void 0 : _customerFromApi$main.status) === 'ACTIVE') {\n      status = t('active');\n    } else if ((customerFromApi === null || customerFromApi === void 0 ? void 0 : (_customerFromApi$main2 = customerFromApi.mainData) === null || _customerFromApi$main2 === void 0 ? void 0 : _customerFromApi$main2.status) === 'INACTIVE') {\n      status = t('inactive');\n      color = colors.error.main;\n    } else {\n      status = t('registration in process of change');\n      color = colors.warning.main;\n    }\n\n    return /*#__PURE__*/React.createElement(CheckboxStatus, {\n      detached: true,\n      readOnly: true,\n      value: (customerFromApi === null || customerFromApi === void 0 ? void 0 : customerFromApi.mainData.status) !== 'INACTIVE',\n      style: {\n        color: colors.black2\n      },\n      activeStatus: status,\n      activeColor: color,\n      notFistLabel: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }\n    });\n  }, [customerFromApi, t]);\n  const handleSubmit = useCallback(values => {\n    var _values$mainData, _values$deliveryAddre, _values$deliveryAddre2, _values$deliveryAddre3, _values$deliveryAddre4, _values$billingAddres, _values$billingAddres2, _values$billingAddres3, _values$billingAddres4;\n\n    setLoader(true);\n    const customer = {\n      commercialPhone: trimMask(values.mainData.commercialPhone),\n      cellPhone: trimMask(values.mainData.cellPhone),\n      logisticsInformation: values.mainData.logisticsInformation,\n      creditSituation: String(values.mainData.creditSituation),\n      regimeLetter: String(values.mainData.regimeLetter),\n      daysWithoutBilling: Number(values === null || values === void 0 ? void 0 : (_values$mainData = values.mainData) === null || _values$mainData === void 0 ? void 0 : _values$mainData.daysWithoutBilling),\n      deliveryAddress: { ...values.deliveryAddress,\n        zipCode: values.deliveryAddress.zipCode.toString(),\n        phone: ((_values$deliveryAddre = values.deliveryAddress) === null || _values$deliveryAddre === void 0 ? void 0 : _values$deliveryAddre.phone) ? trimMask((_values$deliveryAddre2 = values.deliveryAddress) === null || _values$deliveryAddre2 === void 0 ? void 0 : _values$deliveryAddre2.phone) : '',\n        number: ((_values$deliveryAddre3 = values.deliveryAddress) === null || _values$deliveryAddre3 === void 0 ? void 0 : _values$deliveryAddre3.number) ? Number((_values$deliveryAddre4 = values.deliveryAddress) === null || _values$deliveryAddre4 === void 0 ? void 0 : _values$deliveryAddre4.number) : 0\n      },\n      billingAddress: { ...values.billingAddress,\n        zipCode: values.billingAddress.zipCode.toString(),\n        phone: ((_values$billingAddres = values.billingAddress) === null || _values$billingAddres === void 0 ? void 0 : _values$billingAddres.phone) ? trimMask((_values$billingAddres2 = values.billingAddress) === null || _values$billingAddres2 === void 0 ? void 0 : _values$billingAddres2.phone) : '',\n        number: ((_values$billingAddres3 = values.billingAddress) === null || _values$billingAddres3 === void 0 ? void 0 : _values$billingAddres3.number) ? Number((_values$billingAddres4 = values.billingAddress) === null || _values$billingAddres4 === void 0 ? void 0 : _values$billingAddres4.number) : 0\n      }\n    };\n\n    if (mode === 'edit') {\n      dispatch(CustomerActions.updateCustomer(customer, customerFromApi.mainData.clientTotvsCode, onSuccessCallBack, () => setLoader(false)));\n    }\n  }, [customerFromApi, dispatch, mode, onSuccessCallBack]);\n  const getFieldAddressDelivery = useCallback(address => {\n    formRef.current.setData(data => ({ ...data,\n      deliveryAddress: { ...data.deliveryAddress,\n        publicPlace: address.street,\n        district: address.neighborhood || '',\n        city: address.city,\n        state: address.state,\n        address: address.street || ''\n      }\n    }));\n  }, []);\n  const getFieldAddressBilling = useCallback(address => {\n    formRef.current.setData(data => ({ ...data,\n      billingAddress: { ...data.billingAddress,\n        publicPlace: address.street,\n        district: address.neighborhood || '',\n        city: address.city,\n        state: address.state,\n        address: address.street || ''\n      }\n    }));\n  }, []);\n  const formatterString = useCallback(str => str ? capitalize(str.toLowerCase()) : '', []);\n  const getStateOptions = useCallback(async () => {\n    const states = await searchStates();\n    setStateOptions(states);\n  }, []);\n  const handleSetEdit = useCallback(() => {\n    var _state$params5;\n\n    history.push(routes.editCustomer.path, {\n      params: {\n        mode: 'edit',\n        id: state === null || state === void 0 ? void 0 : (_state$params5 = state.params) === null || _state$params5 === void 0 ? void 0 : _state$params5.id\n      }\n    });\n  }, [history, routes, state]);\n  const handleDocumentation = useCallback(() => createDialog({\n    id: 'new-user-modal',\n    Component: DocumentationCustomerModal,\n    props: {\n      imagePreview\n    }\n  }), [createDialog, imagePreview]);\n  useEffect(() => {\n    getStateOptions();\n  }, [getStateOptions]);\n  useFormEffect(() => {\n    if (!isEmpty(customerFromApi)) {\n      var _customerFromApi$rank, _customerFromApi$rank2;\n\n      formRef.current.setData({ ...customerFromApi,\n        deliveryAddress: { ...customerFromApi.deliveryAddress,\n          number: customerFromApi.deliveryAddress.number > 0 ? customerFromApi.deliveryAddress.number : ''\n        },\n        billingAddress: { ...customerFromApi.billingAddress,\n          number: customerFromApi.billingAddress.number > 0 ? customerFromApi.billingAddress.number : ''\n        }\n      });\n      setContractPercentage(customerFromApi.contractPercentage);\n      setIndicators(customerFromApi.rankingDetails.indicators);\n      setCurrentRanking((_customerFromApi$rank = customerFromApi.rankingDetails.currentRanking) === null || _customerFromApi$rank === void 0 ? void 0 : _customerFromApi$rank.alias);\n      setOldRanking((_customerFromApi$rank2 = customerFromApi.rankingDetails.oldRanking) === null || _customerFromApi$rank2 === void 0 ? void 0 : _customerFromApi$rank2.alias);\n      setNameCustomer(customerFromApi.mainData.socialReason || '');\n    }\n  }, [customerFromApi, formatterString]);\n  useEffect(() => {\n    var _state$params6;\n\n    if (!(state === null || state === void 0 ? void 0 : (_state$params6 = state.params) === null || _state$params6 === void 0 ? void 0 : _state$params6.id) && mode !== 'create') history.goBack();\n  }, [history, mode, state]);\n  return /*#__PURE__*/React.createElement(Form, {\n    ref: formRef,\n    onSubmit: handleSubmit,\n    schemaConstructor: customerSchema,\n    defaultValues: INITIAL_VALUES,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 5\n    }\n  }, (loading || loader) && /*#__PURE__*/React.createElement(CircularLoader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 32\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    className: classes.header,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    variant: \"h4\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 11\n    }\n  }, title)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Scope, {\n    path: \"mainData\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MainData, {\n    isDisabled: modeView || loading || loader,\n    handleDocumentation: handleDocumentation,\n    hasPermission: currentRoutePermissions.INCLUIR || currentRoutePermissions.EDITAR,\n    workflowTaskInProgress: customerFromApi === null || customerFromApi === void 0 ? void 0 : customerFromApi.workflowTaskInProgress,\n    id: idCustomer,\n    status: statusCustomer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(ContractPercentage, {\n    data: contractPercentage,\n    handleDocumentation: handleDocumentation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Scope, {\n    path: \"deliveryAddress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Address, {\n    title: t('address of {this}', {\n      gender: 'male',\n      this: t('delivery', {\n        howMany: 1\n      })\n    }),\n    phoneTitle: t('phone shopping'),\n    emailTitle: t('email invoice sending'),\n    isDisabled: modeView || loader,\n    getNewAddress: getFieldAddressDelivery,\n    stateOptions: stateOptions,\n    handleDocumentation: handleDocumentation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Scope, {\n    path: \"billingAddress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Address, {\n    title: t('address of {this}', {\n      gender: 'male',\n      this: t('charge', {\n        howMany: 1\n      })\n    }),\n    phoneTitle: t('billing phone'),\n    emailTitle: t('billing email'),\n    isDisabled: modeView || loading || loader,\n    getNewAddress: getFieldAddressBilling,\n    stateOptions: stateOptions,\n    handleDocumentation: handleDocumentation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Ranking, {\n    matrixCode: customerFromApi === null || customerFromApi === void 0 ? void 0 : (_customerFromApi$main3 = customerFromApi.mainData) === null || _customerFromApi$main3 === void 0 ? void 0 : _customerFromApi$main3.clientTotvsCode,\n    data: indicators,\n    currentRanking: currentRanking,\n    oldRanking: oldRanking,\n    isDisabled: modeView || loading || loader,\n    viewMode: modeView && !loading && !loader,\n    handleDocumentation: handleDocumentation,\n    hasPermission: currentRoutePermissions.INCLUIR || currentRoutePermissions.EDITAR,\n    workflowTaskInProgress: customerFromApi === null || customerFromApi === void 0 ? void 0 : (_customerFromApi$rank3 = customerFromApi.rankingDetails) === null || _customerFromApi$rank3 === void 0 ? void 0 : _customerFromApi$rank3.workflowTaskInProgress,\n    workflowInProgress: customerFromApi === null || customerFromApi === void 0 ? void 0 : (_customerFromApi$rank4 = customerFromApi.rankingDetails) === null || _customerFromApi$rank4 === void 0 ? void 0 : _customerFromApi$rank4.workflowInProgress,\n    id: idCustomer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: classes.buttons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 11\n    }\n  }, !modeView && /*#__PURE__*/React.createElement(I18n, {\n    as: Button,\n    className: classes.resetBtn,\n    disabled: loader,\n    variant: \"text\",\n    color: \"secondary\",\n    onClick: () => formRef.current.reset(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 15\n    }\n  }, \"clean\")), /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(I18n, {\n    as: Button,\n    variant: \"outlined\",\n    color: \"secondary\",\n    disabled: loader,\n    onClick: () => history.push(routes.customers.path),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 13\n    }\n  }, modeView ? 'turn back' : 'cancel'), /*#__PURE__*/React.createElement(I18n, {\n    as: Button,\n    color: \"secondary\",\n    variant: \"contained\",\n    className: classes.btnSave,\n    isLoading: loader,\n    onClick: () => modeView ? handleSetEdit() : formRef.current.submit(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 13\n    }\n  }, modeView ? 'datagrid body edit all' : 'request change')))));\n};\n\nexport default CustomerFormScreen;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/customers/screens/CustomerFormScreen/CustomerFormScreen.js"],"names":["React","useCallback","useMemo","useEffect","useRef","useState","useDispatch","useHistory","useLocation","trimMask","Scope","capitalize","isEmpty","Grid","Typography","useDialog","useFormEffect","customerSchema","INITIAL_VALUES","I18n","useT","customer","customerCrmRoutes","documents","documentsCrmRoutes","searchStates","useCrmApi","AppActions","CustomerActions","defaultFile","colors","Button","CheckboxStatus","Form","CircularLoader","ConfirmModal","useRoutes","DocumentationCustomerModal","Address","ContractPercentage","MainData","Ranking","useStyles","CustomerFormScreen","t","classes","routes","currentRoutePermissions","dispatch","history","createDialog","state","formRef","contractPercentage","setContractPercentage","indicators","setIndicators","currentRanking","setCurrentRanking","oldRanking","setOldRanking","nameCustomer","setNameCustomer","stateOptions","setStateOptions","loader","setLoader","data","customerFromApi","loading","params","id","getOne","onErrorRetry","error","key","config","revalidate","retryCount","response","status","Component","props","onConfirm","onNegative","goBack","text","addAlert","type","message","revalidateOnFocus","documentFromApi","imagePreview","file","contentType","mode","modeView","idCustomer","title","gender","this","howMany","onSuccessCallBack","push","customers","path","statusCustomer","color","mainData","main","warning","black2","handleSubmit","values","commercialPhone","cellPhone","logisticsInformation","creditSituation","String","regimeLetter","daysWithoutBilling","Number","deliveryAddress","zipCode","toString","phone","number","billingAddress","updateCustomer","clientTotvsCode","getFieldAddressDelivery","address","current","setData","publicPlace","street","district","neighborhood","city","getFieldAddressBilling","formatterString","str","toLowerCase","getStateOptions","states","handleSetEdit","editCustomer","handleDocumentation","rankingDetails","alias","socialReason","container","header","INCLUIR","EDITAR","workflowTaskInProgress","workflowInProgress","buttons","resetBtn","reset","btnSave","submit"],"mappings":"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","sourcesContent":["import React, {\n  useCallback,\n  useMemo,\n  useEffect,\n  useRef,\n  useState\n} from 'react'\nimport { useDispatch } from 'react-redux'\nimport {\n  useHistory,\n  useLocation\n} from 'react-router-dom'\n\nimport trimMask from '@meta-awesome/functions/src/trimMask'\nimport { Scope } from '@unform/core'\n\nimport capitalize from 'lodash/capitalize'\nimport isEmpty from 'lodash/isEmpty'\n\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\n\nimport { useDialog } from '@britania-crm/dialog'\nimport { useFormEffect } from '@britania-crm/forms'\nimport customerSchema, { INITIAL_VALUES } from '@britania-crm/forms/schemas/customer/customer.schema'\nimport I18n, { useT } from '@britania-crm/i18n'\nimport {\n  customer as customerCrmRoutes,\n  documents as documentsCrmRoutes\n} from '@britania-crm/services/apis/crmApi/resources/routes'\nimport { searchStates } from '@britania-crm/services/apis/ibgeApi'\nimport useCrmApi from '@britania-crm/services/hooks/useCrmApi'\nimport { AppActions } from '@britania-crm/stores/app'\nimport { CustomerActions } from '@britania-crm/stores/customer'\nimport defaultFile from '@britania-crm/styles/assets/images/default_login_bg.png'\nimport colors from '@britania-crm/styles/colors'\nimport Button from '@britania-crm/web-components/Button'\nimport CheckboxStatus from '@britania-crm/web-components/CheckboxStatus'\nimport Form from '@britania-crm/web-components/Form'\nimport { CircularLoader } from '@britania-crm/web-components/Loader'\nimport ConfirmModal from '@britania-crm/web-components/Modal/ConfirmModal'\nimport { useRoutes } from '@britania-crm/web-src/routes/authenticated.routes'\n\nimport DocumentationCustomerModal from '../../modals/DocumentationCustomerModal'\nimport Address from './Address'\nimport ContractPercentage from './ContractPercentage'\nimport MainData from './MainData'\nimport Ranking from './Ranking'\nimport useStyles from './styles'\n\nconst CustomerFormScreen = () => {\n  const t = useT()\n  const classes = useStyles()\n  const { routes, currentRoutePermissions } = useRoutes()\n  const dispatch = useCallback(useDispatch(), [])\n  const history = useHistory()\n  const { createDialog } = useDialog()\n  const { state } = useLocation()\n  const formRef = useRef(null)\n\n  const [contractPercentage, setContractPercentage] = useState([])\n  const [indicators, setIndicators] = useState([])\n  const [currentRanking, setCurrentRanking] = useState('')\n  const [oldRanking, setOldRanking] = useState('')\n  const [nameCustomer, setNameCustomer] = useState('')\n  const [stateOptions, setStateOptions] = useState([])\n  const [loader, setLoader] = useState(false)\n\n  const { data: customerFromApi, loading } = useCrmApi(\n    state?.params?.id\n      ? [`${ customerCrmRoutes.getOne }/${ state?.params?.id }`, state]\n      : null,\n    null,\n    {\n      onErrorRetry (error, key, config, revalidate, { retryCount }) {\n        if (error.response.status === 500 && retryCount < 5) {\n          createDialog({\n            id: 'new-request-modal',\n            Component: ConfirmModal,\n            props: {\n              onConfirm () {\n                revalidate({ retryCount })\n              },\n              onNegative () {\n                history.goBack()\n              },\n              text: t('search error customer')\n            }\n          })\n        } else {\n          dispatch(AppActions.addAlert({ type: 'error', message: t('maximum number of attempts reached') }))\n          history.goBack()\n        }\n      },\n      revalidateOnFocus: false\n    }\n  )\n\n  const { data: documentFromApi } = useCrmApi([`${ documentsCrmRoutes.getOne }/PRE_CAD_CLIENTE_DOCUMENTACAO`])\n\n  const imagePreview = useMemo(() => {\n    if (!isEmpty(documentFromApi)) {\n      return {\n        ...documentFromApi.file,\n        type: documentFromApi.file.contentType\n      }\n    }\n    return defaultFile\n  }\n  , [documentFromApi])\n\n  const mode = useMemo(() => state?.params?.mode, [state])\n  const modeView = useMemo(() => mode === 'view', [mode])\n  const idCustomer = useMemo(() => state?.params?.id, [state])\n\n  const title = useMemo(() => {\n    switch (mode) {\n      case 'create':\n        return t('new {this}', { gender: 'male', this: t('customer', { howMany: 1 }) })\n      default:\n        return nameCustomer\n    }\n  }, [mode, nameCustomer, t])\n\n  const onSuccessCallBack = useCallback(\n    () => {\n      history.push(routes.customers.path)\n      setLoader(false)\n    },\n    [history, routes.customers.path]\n  )\n\n  const statusCustomer = useMemo(\n    () => {\n      let status, color\n\n      if (customerFromApi?.mainData?.status === 'ACTIVE') {\n        status = t('active')\n      } else if (customerFromApi?.mainData?.status === 'INACTIVE') {\n        status = t('inactive')\n        color = colors.error.main\n      } else {\n        status = t('registration in process of change')\n        color = colors.warning.main\n      }\n\n      return (\n        <CheckboxStatus\n          detached\n          readOnly\n          value={ customerFromApi?.mainData.status !== 'INACTIVE' }\n          style={ { color: colors.black2 } }\n          activeStatus={ status }\n          activeColor={ color }\n          notFistLabel\n        />\n      )\n    }, [customerFromApi, t])\n\n  const handleSubmit = useCallback(\n    (values) => {\n      setLoader(true)\n      const customer = {\n        commercialPhone: trimMask(values.mainData.commercialPhone),\n        cellPhone: trimMask(values.mainData.cellPhone),\n        logisticsInformation: values.mainData.logisticsInformation,\n        creditSituation: String(values.mainData.creditSituation),\n        regimeLetter: String(values.mainData.regimeLetter),\n        daysWithoutBilling: Number(values?.mainData?.daysWithoutBilling),\n        deliveryAddress: {\n          ...values.deliveryAddress,\n          zipCode: values.deliveryAddress.zipCode.toString(),\n          phone: values.deliveryAddress?.phone ? trimMask(values.deliveryAddress?.phone) : '',\n          number: values.deliveryAddress?.number ? Number(values.deliveryAddress?.number) : 0\n        },\n        billingAddress: {\n          ...values.billingAddress,\n          zipCode: values.billingAddress.zipCode.toString(),\n          phone: values.billingAddress?.phone ? trimMask(values.billingAddress?.phone) : '',\n          number: values.billingAddress?.number ? Number(values.billingAddress?.number) : 0\n        }\n      }\n\n      if (mode === 'edit') {\n        dispatch(CustomerActions.updateCustomer(\n          customer,\n          customerFromApi.mainData.clientTotvsCode,\n          onSuccessCallBack,\n          () => setLoader(false)\n        ))\n      }\n    },\n    [customerFromApi, dispatch, mode, onSuccessCallBack]\n  )\n\n  const getFieldAddressDelivery = useCallback(\n    (address) => {\n      formRef.current.setData((data) => ({\n        ...data,\n        deliveryAddress: {\n          ...data.deliveryAddress,\n          publicPlace: address.street,\n          district: address.neighborhood || '',\n          city: address.city,\n          state: address.state,\n          address: address.street || ''\n        }\n      }))\n    },\n    []\n  )\n\n  const getFieldAddressBilling = useCallback(\n    (address) => {\n      formRef.current.setData((data) => ({\n        ...data,\n        billingAddress: {\n          ...data.billingAddress,\n          publicPlace: address.street,\n          district: address.neighborhood || '',\n          city: address.city,\n          state: address.state,\n          address: address.street || ''\n        }\n      }))\n    },\n    []\n  )\n\n  const formatterString = useCallback(\n    (str) =>\n      str ? capitalize(str.toLowerCase()) : ''\n    ,\n    []\n  )\n\n  const getStateOptions = useCallback(\n    async () => {\n      const states = await searchStates()\n      setStateOptions(states)\n    },\n    []\n  )\n\n  const handleSetEdit = useCallback(\n    () => {\n      history.push(routes.editCustomer.path, {\n        params: {\n          mode: 'edit',\n          id: state?.params?.id\n        }\n      })\n    },\n    [history, routes, state]\n  )\n\n  const handleDocumentation = useCallback(\n    () => createDialog({\n      id: 'new-user-modal',\n      Component: DocumentationCustomerModal,\n      props: { imagePreview }\n    }),\n    [createDialog, imagePreview]\n  )\n\n  useEffect(() => {\n    getStateOptions()\n  }, [getStateOptions])\n\n  useFormEffect(() => {\n    if (!isEmpty(customerFromApi)) {\n      formRef.current.setData({\n        ...customerFromApi,\n        deliveryAddress: {\n          ...customerFromApi.deliveryAddress,\n          number: customerFromApi.deliveryAddress.number > 0 ? customerFromApi.deliveryAddress.number : ''\n        },\n        billingAddress: {\n          ...customerFromApi.billingAddress,\n          number: customerFromApi.billingAddress.number > 0 ? customerFromApi.billingAddress.number : ''\n        }\n      })\n      setContractPercentage(customerFromApi.contractPercentage)\n      setIndicators(customerFromApi.rankingDetails.indicators)\n      setCurrentRanking(customerFromApi.rankingDetails.currentRanking?.alias)\n      setOldRanking(customerFromApi.rankingDetails.oldRanking?.alias)\n      setNameCustomer(customerFromApi.mainData.socialReason || '')\n    }\n  }, [customerFromApi, formatterString])\n\n  useEffect(() => {\n    if (!state?.params?.id && mode !== 'create') history.goBack()\n  }, [history, mode, state])\n\n  return (\n    <Form\n      ref={ formRef }\n      onSubmit={ handleSubmit }\n      schemaConstructor={ customerSchema }\n      defaultValues={ INITIAL_VALUES }\n    >\n      { (loading || loader) && <CircularLoader /> }\n\n      <Grid container spacing={ 1 } className={ classes.container } >\n        <Grid item className={ classes.header } sm={ 12 }>\n          <Typography className={ classes.title } variant=\"h4\" gutterBottom >\n            {title}\n          </Typography>\n        </Grid>\n        <Grid item xs={ 12 }>\n\n          <Scope path=\"mainData\">\n            <MainData\n              isDisabled={ modeView || loading || loader }\n              handleDocumentation={ handleDocumentation }\n              hasPermission={ currentRoutePermissions.INCLUIR || currentRoutePermissions.EDITAR }\n              workflowTaskInProgress={ customerFromApi?.workflowTaskInProgress }\n              id={ idCustomer }\n              status={ statusCustomer }\n            />\n          </Scope>\n\n          <ContractPercentage\n            data={ contractPercentage }\n            handleDocumentation={ handleDocumentation }\n          />\n\n          <Scope path=\"deliveryAddress\">\n            <Address\n              title={ t('address of {this}', { gender: 'male', this: t('delivery', { howMany: 1 }) }) }\n              phoneTitle={ t('phone shopping') }\n              emailTitle={ t('email invoice sending') }\n              isDisabled={ modeView || loader }\n              getNewAddress={ getFieldAddressDelivery }\n              stateOptions={ stateOptions }\n              handleDocumentation={ handleDocumentation }\n            />\n          </Scope>\n\n          <Scope path=\"billingAddress\">\n            <Address\n              title={ t('address of {this}', { gender: 'male', this: t('charge', { howMany: 1 }) }) }\n              phoneTitle={ t('billing phone') }\n              emailTitle={ t('billing email') }\n              isDisabled={ modeView || loading || loader }\n              getNewAddress={ getFieldAddressBilling }\n              stateOptions={ stateOptions }\n              handleDocumentation={ handleDocumentation }\n            />\n          </Scope>\n\n          <Ranking\n            matrixCode={ customerFromApi?.mainData?.clientTotvsCode }\n            data={ indicators }\n            currentRanking={ currentRanking }\n            oldRanking={ oldRanking }\n            isDisabled={ modeView || loading || loader }\n            viewMode={ modeView && !loading && !loader }\n            handleDocumentation={ handleDocumentation }\n            hasPermission={ currentRoutePermissions.INCLUIR || currentRoutePermissions.EDITAR }\n            workflowTaskInProgress={ customerFromApi?.rankingDetails?.workflowTaskInProgress }\n            workflowInProgress={ customerFromApi?.rankingDetails?.workflowInProgress }\n            id={ idCustomer }\n          />\n\n        </Grid>\n        <Grid item xs={ 12 } className={ classes.buttons }>\n          <Grid >\n            {!modeView && (\n              <I18n\n                as={ Button }\n                className={ classes.resetBtn }\n                disabled={ loader }\n                variant=\"text\"\n                color=\"secondary\"\n                onClick={ () => formRef.current.reset() }\n              >\n              clean\n              </I18n>\n            )}\n          </Grid>\n          <Grid >\n            <I18n as={ Button }\n              variant=\"outlined\"\n              color=\"secondary\"\n              disabled= { loader }\n              onClick={ () => history.push(routes.customers.path) }\n            >\n              { modeView ? 'turn back' : 'cancel' }\n            </I18n>\n            <I18n as={ Button }\n              color=\"secondary\"\n              variant=\"contained\"\n              className={ classes.btnSave }\n              isLoading={ loader }\n              onClick={ () => modeView ? handleSetEdit() : formRef.current.submit() }\n            >\n              { modeView ? 'datagrid body edit all' : 'request change' }\n            </I18n>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Form>\n  )\n}\n\nexport default CustomerFormScreen\n"]},"metadata":{},"sourceType":"module"}