{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/users/modals/LinkRepresentativeModal/LinkRepresentativeModal.js\";\nimport React, { useCallback, useMemo, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nimport isEmpty from 'lodash/isEmpty';\nimport uniqBy from 'lodash/uniqBy';\nimport I18n, { useT } from '@britania-crm/i18n';\nimport * as crmApiRoutes from '@britania-crm/services/apis/crmApi/resources/routes';\nimport useCrmApi from '@britania-crm/services/hooks/useCrmApi';\nimport Button from '@britania-crm/web-components/Button';\nimport Modal from '@britania-crm/web-components/Modal';\nimport TransferList from '@britania-crm/web-components/TransferList';\nimport { BindContainer, ButtonContainer } from '../styles';\n\nconst LinkRepresentativeModal = props => {\n  const {\n    id,\n    open,\n    handleClose,\n    onSave,\n    initialRepresentatives,\n    username\n  } = props;\n  const t = useT();\n  const [queryParams, setQueryParams] = useState({\n    name: ''\n  });\n  const {\n    data: representatives = [],\n    loading\n  } = useCrmApi([crmApiRoutes.representatives.baseRoute, queryParams], {\n    params: queryParams\n  });\n  const [selectedRepresentatives, setSelectedRepresentatives] = useState(initialRepresentatives);\n  const debounceQuery = debounce(filter => {\n    if (filter.length >= 3) setQueryParams({\n      name: filter\n    });\n  }, 300);\n  const loadingRepresentatives = useMemo(() => isEmpty(representatives) && loading, [loading, representatives]);\n  const handleConfirm = useCallback(() => {\n    onSave(selectedRepresentatives);\n    handleClose();\n  }, [handleClose, onSave, selectedRepresentatives]);\n  const onFilterChange = useCallback((side, filter) => {\n    if (side === 'left') debounceQuery(filter);\n  }, [debounceQuery]);\n  const options = useMemo(() => queryParams.name || selectedRepresentatives ? uniqBy([...selectedRepresentatives, ...representatives], 'code') : [], [queryParams.name, representatives, selectedRepresentatives]);\n  return /*#__PURE__*/React.createElement(Modal, {\n    id: id,\n    title: t('link of {this}', {\n      this: t('representative', {\n        howMany: 2\n      })\n    }),\n    open: open,\n    maxWidth: \"md\",\n    fullWidth: true,\n    FooterComponent: () => /*#__PURE__*/React.createElement(ButtonContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"secondary\",\n      variant: \"outlined\",\n      onClick: handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(I18n, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, \"cancel\")), /*#__PURE__*/React.createElement(Button, {\n      color: \"secondary\",\n      variant: \"contained\",\n      onClick: handleConfirm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(I18n, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, \"save\"))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(BindContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TransferList, {\n    detached: true,\n    title: t('representative', {\n      howMany: 2\n    }),\n    value: selectedRepresentatives,\n    options: options,\n    onChange: setSelectedRepresentatives,\n    loading: loadingRepresentatives,\n    onFilterChange: onFilterChange,\n    valueKey: \"code\",\n    header: username,\n    type: t('user', {\n      howMany: 1\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  })));\n};\n\nLinkRepresentativeModal.propTypes = {\n  id: PropTypes.string.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  onSave: PropTypes.func.isRequired,\n  initialRepresentatives: PropTypes.array,\n  username: PropTypes.string\n};\nLinkRepresentativeModal.defaultProps = {\n  initialRepresentatives: [],\n  username: ''\n};\nexport default LinkRepresentativeModal;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/users/modals/LinkRepresentativeModal/LinkRepresentativeModal.js"],"names":["React","useCallback","useMemo","useState","PropTypes","debounce","isEmpty","uniqBy","I18n","useT","crmApiRoutes","useCrmApi","Button","Modal","TransferList","BindContainer","ButtonContainer","LinkRepresentativeModal","props","id","open","handleClose","onSave","initialRepresentatives","username","t","queryParams","setQueryParams","name","data","representatives","loading","baseRoute","params","selectedRepresentatives","setSelectedRepresentatives","debounceQuery","filter","length","loadingRepresentatives","handleConfirm","onFilterChange","side","options","this","howMany","propTypes","string","isRequired","func","bool","array","defaultProps"],"mappings":"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","sourcesContent":["import React, {\n  useCallback,\n  useMemo,\n  useState\n} from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport debounce from 'lodash/debounce'\nimport isEmpty from 'lodash/isEmpty'\nimport uniqBy from 'lodash/uniqBy'\n\nimport I18n, { useT } from '@britania-crm/i18n'\nimport * as crmApiRoutes from '@britania-crm/services/apis/crmApi/resources/routes'\nimport useCrmApi from '@britania-crm/services/hooks/useCrmApi'\nimport Button from '@britania-crm/web-components/Button'\nimport Modal from '@britania-crm/web-components/Modal'\nimport TransferList from '@britania-crm/web-components/TransferList'\n\nimport {\n  BindContainer,\n  ButtonContainer\n} from '../styles'\n\nconst LinkRepresentativeModal = (props) => {\n  const {\n    id,\n    open,\n    handleClose,\n    onSave,\n    initialRepresentatives,\n    username\n  } = props\n\n  const t = useT()\n  const [queryParams, setQueryParams] = useState({ name: '' })\n\n  const {\n    data: representatives = [],\n    loading\n  } = useCrmApi([crmApiRoutes.representatives.baseRoute, queryParams], { params: queryParams })\n  const [selectedRepresentatives, setSelectedRepresentatives] = useState(initialRepresentatives)\n\n  const debounceQuery = debounce((filter) => {\n    if (filter.length >= 3)setQueryParams({ name: filter })\n  }, 300)\n\n  const loadingRepresentatives = useMemo(\n    () => isEmpty(representatives) && loading,\n    [loading, representatives]\n  )\n\n  const handleConfirm = useCallback(\n    () => {\n      onSave(selectedRepresentatives)\n      handleClose()\n    },\n    [handleClose, onSave, selectedRepresentatives]\n  )\n\n  const onFilterChange = useCallback((side, filter) => {\n    if (side === 'left')debounceQuery(filter)\n  }, [debounceQuery])\n\n  const options = useMemo(() =>\n    queryParams.name || selectedRepresentatives ? uniqBy([...selectedRepresentatives, ...representatives], 'code') : [],\n  [queryParams.name, representatives, selectedRepresentatives])\n\n  return (\n    <Modal\n      id={ id }\n      title={ t('link of {this}', { this: t('representative', { howMany: 2 }) }) }\n      open={ open }\n      maxWidth=\"md\"\n      fullWidth\n      FooterComponent={ () => (\n        <ButtonContainer>\n          <Button\n            color=\"secondary\"\n            variant=\"outlined\"\n            onClick={ handleClose }\n          >\n            <I18n>cancel</I18n>\n          </Button>\n          <Button\n            color=\"secondary\"\n            variant=\"contained\"\n            onClick={ handleConfirm }\n          >\n            <I18n>save</I18n>\n          </Button>\n        </ButtonContainer>\n      ) }\n    >\n      <BindContainer>\n        <TransferList\n          detached\n          title={ t('representative', { howMany: 2 }) }\n          value={ selectedRepresentatives }\n          options={ options }\n          onChange={ setSelectedRepresentatives }\n          loading={ loadingRepresentatives }\n          onFilterChange = { onFilterChange }\n          valueKey=\"code\"\n          header={ username }\n          type={ t('user', { howMany: 1 }) }\n        />\n      </BindContainer>\n    </Modal>\n  )\n}\n\nLinkRepresentativeModal.propTypes = {\n  id: PropTypes.string.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  onSave: PropTypes.func.isRequired,\n  initialRepresentatives: PropTypes.array,\n  username: PropTypes.string\n}\n\nLinkRepresentativeModal.defaultProps = { initialRepresentatives: [], username: '' }\n\nexport default LinkRepresentativeModal\n"]},"metadata":{},"sourceType":"module"}