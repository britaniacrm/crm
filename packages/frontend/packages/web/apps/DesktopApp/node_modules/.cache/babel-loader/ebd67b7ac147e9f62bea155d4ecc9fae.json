{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/vpc/screens/VpcListScreen/VpcListScreen.js\";\nimport React, { useCallback, useMemo, useState } from 'react'; // import { useDispatch } from 'react-redux'\n\nimport { useHistory } from 'react-router-dom';\nimport identity from 'lodash/identity';\nimport pickBy from 'lodash/pickBy';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport { useDialog } from '@britania-crm/dialog';\nimport { useT } from '@britania-crm/i18n';\nimport { vpc as vpcCrmRoutes } from '@britania-crm/services/apis/crmApi/resources/routes'; // import { FileActions } from '@britania-crm/stores/file'\n\nimport colors from '@britania-crm/styles/colors';\nimport { formatBackDateToFriendlyFormat, formatFriendlyDateToBackFormat } from '@britania-crm/utils/date';\nimport { trimMask, formatMoney } from '@britania-crm/utils/formatters';\nimport DataTable from '@britania-crm/web-components/DataTable';\nimport PageFilter from '@britania-crm/web-components/PageFilter';\nimport DownloadReportModal from '@britania-crm/web-src/modules/vpc/modals/DownloadReportModal';\nimport { useRoutes } from '@britania-crm/web-src/routes/authenticated.routes';\nimport VpcFormFilter from '../../containers/VpcFormFilter/VpcFormFilter';\nimport { Container, ButtonDownload } from './styles';\n\nconst VpcListScreen = () => {\n  const t = useT();\n  const {\n    routes,\n    currentRoutePermissions\n  } = useRoutes();\n  const history = useHistory();\n  const {\n    createDialog\n  } = useDialog();\n  const [filters, setFilters] = useState({});\n  const columns = useMemo(() => [{\n    title: t('request number'),\n    field: 'requestNumber'\n  }, {\n    title: t('matrix'),\n    field: 'parentCompanyName'\n  }, {\n    title: t('situation budget'),\n    field: 'situation'\n  }, {\n    title: t('line'),\n    field: 'linesDescription'\n  }, {\n    title: t('type of funds'),\n    field: 'foundsType'\n  }, {\n    title: t('implantation date'),\n    field: 'deploymentDate',\n    render: row => row.deploymentDate ? formatBackDateToFriendlyFormat(row.deploymentDate) : null\n  }, {\n    title: t('value', {\n      howMany: 1\n    }),\n    field: 'value',\n    render: row => row.value ? formatMoney(row.value) : null\n  }, {\n    title: t('responsible task'),\n    field: 'taskResponsible'\n  }, {\n    title: t('task', {\n      howMany: 1\n    }),\n    field: 'taskTitle'\n  }, {\n    title: t('workflow task profile/user'),\n    field: 'taskProfile'\n  }, {\n    title: 'SLA',\n    field: 'sla',\n    render: row => row.sla ? formatBackDateToFriendlyFormat(row.sla) : null\n  }], [t]);\n  const onEditClick = useCallback((event, row) => {\n    history.push(routes.editVpc.path, {\n      params: {\n        id: row.id\n      }\n    });\n  }, [history, routes]);\n  const onRowClick = useCallback((event, row) => {\n    history.push(routes.viewVpc.path, {\n      params: {\n        id: row.id\n      }\n    });\n  }, [history, routes]);\n  const handleFilter = useCallback(values => {\n    var _values$matrix, _values$codMatrix;\n\n    const payload = {\n      cnpj: values.cnpj ? trimMask(values.cnpj) : null,\n      parentCompanyName: (_values$matrix = values.matrix) === null || _values$matrix === void 0 ? void 0 : _values$matrix.parentCompanyName,\n      parentCompanyCode: (_values$codMatrix = values.codMatrix) === null || _values$codMatrix === void 0 ? void 0 : _values$codMatrix.parentCompanyCode,\n      requestNumber: values.numberBudget,\n      foundsType: values.typeBudget,\n      startDate: values.date.from ? formatFriendlyDateToBackFormat(values.date.from) : null,\n      endDate: values.date.to ? formatFriendlyDateToBackFormat(values.date.to) : null,\n      pendingApproval: values.pendingApproval,\n      lineCode: values.line,\n      approverCode: values.regional,\n      initialValue: values.minValue,\n      finalValue: values.maxValue,\n      workflowTaskId: values.taskWorkflow,\n      workflowId: values.version,\n      sla: values.sla ? formatFriendlyDateToBackFormat(values.sla) : null,\n      foundsSituation: values.foundsSituation,\n      responsible: values.responsible\n    };\n    setFilters(pickBy(payload, identity));\n  }, []);\n  const onAddClick = useCallback(() => {\n    history.push(routes.newVpc.path, {\n      params: {\n        mode: 'create'\n      }\n    });\n  }, [history, routes]);\n  const onRedirectClick = useCallback((event, row) => {\n    var _row$performed, _row$performed$workfl;\n\n    history.push(routes.workflowPanelView.path, {\n      workflowId: (_row$performed = row.performed) === null || _row$performed === void 0 ? void 0 : (_row$performed$workfl = _row$performed.workflow) === null || _row$performed$workfl === void 0 ? void 0 : _row$performed$workfl.id,\n      goBackTo: routes.vpc.path\n    });\n  }, [history, routes]);\n  const handleDownload = useCallback(data => createDialog({\n    id: 'modal-add-new-product',\n    Component: DownloadReportModal,\n    props: {\n      selectedItens: data,\n      filters\n    }\n  }), [createDialog, filters]); // TODO: ajustar para a prop de Situação da Verba se ela existir\n\n  const getColor = useCallback(rowData => {\n    let workflowTaskProfile = '';\n\n    if (rowData === null || rowData === void 0 ? void 0 : rowData.workflowTaskProfile) {\n      workflowTaskProfile = rowData === null || rowData === void 0 ? void 0 : rowData.workflowTaskProfile;\n    }\n\n    switch (workflowTaskProfile) {\n      case 'ADM':\n        return colors.green.lightest;\n\n      case 'USER':\n        return colors.blue.lightest;\n\n      case 'VPC':\n        return colors.red.lightest;\n\n      default:\n        return colors.white;\n    }\n  }, []);\n  const options = useMemo(() => ({\n    rowStyle: rowData => ({\n      backgroundColor: getColor(rowData)\n    }),\n    selection: true\n  }), [getColor]);\n  const conditionToRedirect = useCallback(row => {\n    var _row$performed2, _row$performed2$workf;\n\n    return row === null || row === void 0 ? void 0 : (_row$performed2 = row.performed) === null || _row$performed2 === void 0 ? void 0 : (_row$performed2$workf = _row$performed2.workflow) === null || _row$performed2$workf === void 0 ? void 0 : _row$performed2$workf.id;\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PageFilter, {\n    handleFilter: handleFilter,\n    Form: VpcFormFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DataTable, {\n    data: vpcCrmRoutes.getAll,\n    columns: columns,\n    filters: filters // loading={ loading || downloadLoading }\n    ,\n    title: t('{this} requests', {\n      this: 'VPC'\n    }),\n    addTitle: t('add new {this}', {\n      gender: 'male',\n      this: t('budget', {\n        howMany: 1\n      })\n    }),\n    onAddClick: currentRoutePermissions.INCLUIR && onAddClick,\n    onEditClick: currentRoutePermissions.EDITAR && onEditClick,\n    onRedirectClick: onRedirectClick,\n    conditionToRedirect: conditionToRedirect,\n    onRowClick: onRowClick,\n    onGoBack: history.goBack,\n    addFilterTitle: t('filter data'),\n    emptyMessage: t('{this} datagrid body empty data source message', {\n      this: 'VPCs'\n    }),\n    options: options,\n    actions: [{\n      icon: () => /*#__PURE__*/React.createElement(ButtonDownload, {\n        size: \"small\",\n        color: \"warning\",\n        startIcon: /*#__PURE__*/React.createElement(SaveAlt, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 31\n          }\n        }),\n        variant: \"outlined\",\n        disabled: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 17\n        }\n      }, t('datagrid toolbar export title')),\n      onClick: (evt, data) => handleDownload(data)\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default VpcListScreen;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/vpc/screens/VpcListScreen/VpcListScreen.js"],"names":["React","useCallback","useMemo","useState","useHistory","identity","pickBy","SaveAlt","useDialog","useT","vpc","vpcCrmRoutes","colors","formatBackDateToFriendlyFormat","formatFriendlyDateToBackFormat","trimMask","formatMoney","DataTable","PageFilter","DownloadReportModal","useRoutes","VpcFormFilter","Container","ButtonDownload","VpcListScreen","t","routes","currentRoutePermissions","history","createDialog","filters","setFilters","columns","title","field","render","row","deploymentDate","howMany","value","sla","onEditClick","event","push","editVpc","path","params","id","onRowClick","viewVpc","handleFilter","values","payload","cnpj","parentCompanyName","matrix","parentCompanyCode","codMatrix","requestNumber","numberBudget","foundsType","typeBudget","startDate","date","from","endDate","to","pendingApproval","lineCode","line","approverCode","regional","initialValue","minValue","finalValue","maxValue","workflowTaskId","taskWorkflow","workflowId","version","foundsSituation","responsible","onAddClick","newVpc","mode","onRedirectClick","workflowPanelView","performed","workflow","goBackTo","handleDownload","data","Component","props","selectedItens","getColor","rowData","workflowTaskProfile","green","lightest","blue","red","white","options","rowStyle","backgroundColor","selection","conditionToRedirect","getAll","this","gender","INCLUIR","EDITAR","goBack","icon","onClick","evt"],"mappings":"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","sourcesContent":["import React, {\n  useCallback,\n  useMemo,\n  useState\n} from 'react'\n// import { useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\n\nimport identity from 'lodash/identity'\nimport pickBy from 'lodash/pickBy'\n\nimport SaveAlt from '@material-ui/icons/SaveAlt'\n\nimport { useDialog } from '@britania-crm/dialog'\nimport { useT } from '@britania-crm/i18n'\nimport { vpc as vpcCrmRoutes } from '@britania-crm/services/apis/crmApi/resources/routes'\n// import { FileActions } from '@britania-crm/stores/file'\nimport colors from '@britania-crm/styles/colors'\nimport {\n  formatBackDateToFriendlyFormat,\n  formatFriendlyDateToBackFormat\n} from '@britania-crm/utils/date'\nimport {\n  trimMask,\n  formatMoney\n} from '@britania-crm/utils/formatters'\nimport DataTable from '@britania-crm/web-components/DataTable'\nimport PageFilter from '@britania-crm/web-components/PageFilter'\nimport DownloadReportModal from '@britania-crm/web-src/modules/vpc/modals/DownloadReportModal'\nimport { useRoutes } from '@britania-crm/web-src/routes/authenticated.routes'\n\nimport VpcFormFilter from '../../containers/VpcFormFilter/VpcFormFilter'\nimport {\n  Container,\n  ButtonDownload\n} from './styles'\n\nconst VpcListScreen = () => {\n  const t = useT()\n  const { routes, currentRoutePermissions } = useRoutes()\n  const history = useHistory()\n  const { createDialog } = useDialog()\n\n  const [filters, setFilters] = useState({})\n\n  const columns = useMemo(() => [\n    {\n      title: t('request number'),\n      field: 'requestNumber'\n    },\n    {\n      title: t('matrix'),\n      field: 'parentCompanyName'\n    },\n    {\n      title: t('situation budget'),\n      field: 'situation'\n    },\n    {\n      title: t('line'),\n      field: 'linesDescription'\n    },\n    {\n      title: t('type of funds'),\n      field: 'foundsType'\n    },\n    {\n      title: t('implantation date'),\n      field: 'deploymentDate',\n      render: (row) => row.deploymentDate ? formatBackDateToFriendlyFormat(row.deploymentDate) : null\n    },\n    {\n      title: t('value', { howMany: 1 }),\n      field: 'value',\n      render: (row) => row.value ? formatMoney(row.value) : null\n    },\n    {\n      title: t('responsible task'),\n      field: 'taskResponsible'\n    },\n    {\n      title: t('task', { howMany: 1 }),\n      field: 'taskTitle'\n    },\n    {\n      title: t('workflow task profile/user'),\n      field: 'taskProfile'\n    },\n    {\n      title: 'SLA',\n      field: 'sla',\n      render: (row) => row.sla ? formatBackDateToFriendlyFormat(row.sla) : null\n    }\n\n  ], [t])\n\n  const onEditClick = useCallback((event, row) => {\n    history.push(routes.editVpc.path, { params: { id: row.id } })\n  }, [history, routes])\n\n  const onRowClick = useCallback((event, row) => {\n    history.push(routes.viewVpc.path, { params: { id: row.id } })\n  }, [history, routes])\n\n  const handleFilter = useCallback(\n    (values) => {\n      const payload = {\n        cnpj: values.cnpj ? trimMask(values.cnpj) : null,\n        parentCompanyName: values.matrix?.parentCompanyName,\n        parentCompanyCode: values.codMatrix?.parentCompanyCode,\n        requestNumber: values.numberBudget,\n        foundsType: values.typeBudget,\n        startDate: values.date.from ? formatFriendlyDateToBackFormat(values.date.from) : null,\n        endDate: values.date.to ? formatFriendlyDateToBackFormat(values.date.to) : null,\n        pendingApproval: values.pendingApproval,\n        lineCode: values.line,\n        approverCode: values.regional,\n        initialValue: values.minValue,\n        finalValue: values.maxValue,\n        workflowTaskId: values.taskWorkflow,\n        workflowId: values.version,\n        sla: values.sla ? formatFriendlyDateToBackFormat(values.sla) : null,\n        foundsSituation: values.foundsSituation,\n        responsible: values.responsible\n      }\n\n      setFilters(pickBy(payload, identity))\n    },\n    []\n  )\n\n  const onAddClick = useCallback(\n    () => {\n      history.push(routes.newVpc.path, { params: { mode: 'create' } })\n    },\n    [history, routes]\n  )\n\n  const onRedirectClick = useCallback(\n    (event, row) => {\n      history.push(routes.workflowPanelView.path, {\n        workflowId: row.performed?.workflow?.id,\n        goBackTo: routes.vpc.path\n      })\n    },\n    [history, routes]\n  )\n\n  const handleDownload = useCallback(\n    (data) => createDialog({\n      id: 'modal-add-new-product',\n      Component: DownloadReportModal,\n      props: { selectedItens: data, filters }\n\n    }),\n    [createDialog, filters]\n  )\n\n  // TODO: ajustar para a prop de Situação da Verba se ela existir\n  const getColor = useCallback(\n    (rowData) => {\n      let workflowTaskProfile = ''\n      if (rowData?.workflowTaskProfile) {\n        workflowTaskProfile = rowData?.workflowTaskProfile\n      }\n      switch (workflowTaskProfile) {\n        case 'ADM':\n          return colors.green.lightest\n        case 'USER':\n          return colors.blue.lightest\n        case 'VPC':\n          return colors.red.lightest\n        default:\n          return colors.white\n      }\n    },\n    []\n  )\n\n  const options = useMemo(\n    () => ({\n      rowStyle: (rowData) => ({ backgroundColor: getColor(rowData) }),\n      selection: true\n    }),\n    [getColor]\n  )\n\n  const conditionToRedirect = useCallback(\n    (row) => row?.performed?.workflow?.id,\n    []\n  )\n\n  return (\n    <>\n      <PageFilter\n        handleFilter={ handleFilter }\n        Form={ VpcFormFilter }\n      />\n      <Container>\n        <DataTable\n          data={ vpcCrmRoutes.getAll }\n          columns={ columns }\n          filters={ filters }\n          // loading={ loading || downloadLoading }\n          title={ t('{this} requests', { this: 'VPC' }) }\n          addTitle={ t('add new {this}', { gender: 'male', this: t('budget', { howMany: 1 }) }) }\n          onAddClick={ currentRoutePermissions.INCLUIR && onAddClick }\n          onEditClick={ currentRoutePermissions.EDITAR && onEditClick }\n          onRedirectClick={ onRedirectClick }\n          conditionToRedirect={ conditionToRedirect }\n          onRowClick={ onRowClick }\n          onGoBack={ history.goBack }\n          addFilterTitle={ t('filter data') }\n          emptyMessage={ t('{this} datagrid body empty data source message', { this: 'VPCs' }) }\n          options={ options }\n          actions={ [\n            {\n              icon: () =>\n                <ButtonDownload\n                  size=\"small\"\n                  color=\"warning\"\n                  startIcon={ <SaveAlt /> }\n                  variant=\"outlined\"\n                  disabled={ false }\n                >\n                  {t('datagrid toolbar export title')}\n                </ButtonDownload>,\n              onClick: (evt, data) => handleDownload(data)\n            }\n          ] }\n        />\n      </Container>\n    </>\n  )\n}\n\nexport default VpcListScreen\n"]},"metadata":{},"sourceType":"module"}