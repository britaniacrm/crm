{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/workflow/containers/WorkFlowProgress/WorkFlowProgress.js\";\nimport React, { useMemo, useEffect, useState, memo } from 'react';\nimport PropTypes from 'prop-types';\nimport isEmpty from 'lodash/isEmpty';\nimport { useT } from '@britania-crm/i18n';\nimport { formatBackDateTimeToFriendlyFormat } from '@britania-crm/utils/date';\nimport DataTable from '@britania-crm/web-components/DataTable';\n\nconst WorkFlowProgress = props => {\n  const {\n    workflowInProgress,\n    fieldDescription\n  } = props;\n  const t = useT();\n  const [data, setData] = useState([]);\n  const columns = useMemo(() => [{\n    title: t('requester'),\n    field: 'requester',\n    editable: 'never',\n    width: 100\n  }, {\n    title: t('date and hour'),\n    field: 'date',\n    editable: 'never',\n    width: 200,\n    render: row => formatBackDateTimeToFriendlyFormat(row.date)\n  }, {\n    title: t('change'),\n    field: fieldDescription,\n    editable: 'always',\n    width: 300\n  }, {\n    title: t('justification'),\n    field: 'justification',\n    editable: 'always'\n  }], [fieldDescription, t]);\n  const options = useMemo(() => ({\n    search: false,\n    sorting: false,\n    paging: false\n  }), []);\n  useEffect(() => {\n    setData(isEmpty(workflowInProgress) ? [] : [workflowInProgress]);\n  }, [workflowInProgress]);\n  return !isEmpty(data) && /*#__PURE__*/React.createElement(DataTable, {\n    options: options,\n    data: data,\n    columns: columns,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  });\n};\n\nWorkFlowProgress.propTypes = {\n  workflowInProgress: PropTypes.object,\n  fieldDescription: PropTypes.string.isRequired\n};\nWorkFlowProgress.defaultProps = {\n  workflowInProgress: {}\n};\nexport default memo(WorkFlowProgress);","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/workflow/containers/WorkFlowProgress/WorkFlowProgress.js"],"names":["React","useMemo","useEffect","useState","memo","PropTypes","isEmpty","useT","formatBackDateTimeToFriendlyFormat","DataTable","WorkFlowProgress","props","workflowInProgress","fieldDescription","t","data","setData","columns","title","field","editable","width","render","row","date","options","search","sorting","paging","propTypes","object","string","isRequired","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IACEC,OADF,EAEEC,SAFF,EAGEC,QAHF,EAIEC,IAJF,QAKO,OALP;AAOA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,OAAP,MAAoB,gBAApB;AAEA,SAASC,IAAT,QAAqB,oBAArB;AACA,SAASC,kCAAT,QAAmD,0BAAnD;AACA,OAAOC,SAAP,MAAsB,wCAAtB;;AAEA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAClC,QAAM;AAAEC,IAAAA,kBAAF;AAAsBC,IAAAA;AAAtB,MAA2CF,KAAjD;AAEA,QAAMG,CAAC,GAAGP,IAAI,EAAd;AAEA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAMc,OAAO,GAAGhB,OAAO,CACrB,MAAM,CACJ;AACEiB,IAAAA,KAAK,EAAEJ,CAAC,CAAC,WAAD,CADV;AAEEK,IAAAA,KAAK,EAAE,WAFT;AAGEC,IAAAA,QAAQ,EAAE,OAHZ;AAIEC,IAAAA,KAAK,EAAE;AAJT,GADI,EAOJ;AACEH,IAAAA,KAAK,EAAEJ,CAAC,CAAC,eAAD,CADV;AAEEK,IAAAA,KAAK,EAAE,MAFT;AAGEC,IAAAA,QAAQ,EAAE,OAHZ;AAIEC,IAAAA,KAAK,EAAE,GAJT;AAKEC,IAAAA,MAAM,EAAGC,GAAD,IAASf,kCAAkC,CAACe,GAAG,CAACC,IAAL;AALrD,GAPI,EAcJ;AACEN,IAAAA,KAAK,EAAEJ,CAAC,CAAC,QAAD,CADV;AAEEK,IAAAA,KAAK,EAAEN,gBAFT;AAGEO,IAAAA,QAAQ,EAAE,QAHZ;AAIEC,IAAAA,KAAK,EAAE;AAJT,GAdI,EAoBJ;AACEH,IAAAA,KAAK,EAAEJ,CAAC,CAAC,eAAD,CADV;AAEEK,IAAAA,KAAK,EAAE,eAFT;AAGEC,IAAAA,QAAQ,EAAE;AAHZ,GApBI,CADe,EA2BrB,CAACP,gBAAD,EAAmBC,CAAnB,CA3BqB,CAAvB;AA8BA,QAAMW,OAAO,GAAGxB,OAAO,CACrB,OAAO;AACLyB,IAAAA,MAAM,EAAE,KADH;AAELC,IAAAA,OAAO,EAAE,KAFJ;AAGLC,IAAAA,MAAM,EAAE;AAHH,GAAP,CADqB,EAMrB,EANqB,CAAvB;AASA1B,EAAAA,SAAS,CACP,MAAM;AACJc,IAAAA,OAAO,CAACV,OAAO,CAACM,kBAAD,CAAP,GAA8B,EAA9B,GAAmC,CAACA,kBAAD,CAApC,CAAP;AACD,GAHM,EAIP,CAACA,kBAAD,CAJO,CAAT;AAOA,SAAO,CAACN,OAAO,CAACS,IAAD,CAAR,iBACL,oBAAC,SAAD;AACE,IAAA,OAAO,EAAGU,OADZ;AAEE,IAAA,IAAI,EAAGV,IAFT;AAGE,IAAA,OAAO,EAAGE,OAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAOD,CA5DD;;AA8DAP,gBAAgB,CAACmB,SAAjB,GAA6B;AAC3BjB,EAAAA,kBAAkB,EAAEP,SAAS,CAACyB,MADH;AAE3BjB,EAAAA,gBAAgB,EAAER,SAAS,CAAC0B,MAAV,CAAiBC;AAFR,CAA7B;AAKAtB,gBAAgB,CAACuB,YAAjB,GAAgC;AAAErB,EAAAA,kBAAkB,EAAE;AAAtB,CAAhC;AAEA,eAAeR,IAAI,CAACM,gBAAD,CAAnB","sourcesContent":["import React, {\n  useMemo,\n  useEffect,\n  useState,\n  memo\n} from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport isEmpty from 'lodash/isEmpty'\n\nimport { useT } from '@britania-crm/i18n'\nimport { formatBackDateTimeToFriendlyFormat } from '@britania-crm/utils/date'\nimport DataTable from '@britania-crm/web-components/DataTable'\n\nconst WorkFlowProgress = (props) => {\n  const { workflowInProgress, fieldDescription } = props\n\n  const t = useT()\n\n  const [data, setData] = useState([])\n\n  const columns = useMemo(\n    () => [\n      {\n        title: t('requester'),\n        field: 'requester',\n        editable: 'never',\n        width: 100\n      },\n      {\n        title: t('date and hour'),\n        field: 'date',\n        editable: 'never',\n        width: 200,\n        render: (row) => formatBackDateTimeToFriendlyFormat(row.date)\n      },\n      {\n        title: t('change'),\n        field: fieldDescription,\n        editable: 'always',\n        width: 300\n      },\n      {\n        title: t('justification'),\n        field: 'justification',\n        editable: 'always'\n      }\n    ],\n    [fieldDescription, t]\n  )\n\n  const options = useMemo(\n    () => ({\n      search: false,\n      sorting: false,\n      paging: false\n    }),\n    []\n  )\n\n  useEffect(\n    () => {\n      setData(isEmpty(workflowInProgress) ? [] : [workflowInProgress])\n    },\n    [workflowInProgress]\n  )\n\n  return !isEmpty(data) && (\n    <DataTable\n      options={ options }\n      data={ data }\n      columns={ columns }\n    />\n  )\n}\n\nWorkFlowProgress.propTypes = {\n  workflowInProgress: PropTypes.object,\n  fieldDescription: PropTypes.string.isRequired\n}\n\nWorkFlowProgress.defaultProps = { workflowInProgress: {} }\n\nexport default memo(WorkFlowProgress)\n"]},"metadata":{},"sourceType":"module"}