{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/customers/screens/CustomerPreRegistrationFormScreen/tabs/Customer/sections/MainData.js\";\nimport React, { useState, useEffect, useCallback, useMemo, useRef, useLayoutEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { cnpj } from 'cpf-cnpj-validator';\nimport PropTypes from 'prop-types';\nimport first from 'lodash/first';\nimport isEmpty from 'lodash/isEmpty';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { useFormEffect } from '@britania-crm/forms';\nimport { useT } from '@britania-crm/i18n';\nimport { representative as representativeRoutes, customer as customerCrmRoutes } from '@britania-crm/services/apis/crmApi/resources/routes';\nimport { searchStates } from '@britania-crm/services/apis/ibgeApi';\nimport useCrmApi from '@britania-crm/services/hooks/useCrmApi';\nimport { selectUserRepresentative } from '@britania-crm/stores/auth/auth.selectors';\nimport { trimMask } from '@britania-crm/utils/formatters';\nimport InfoIcon from '@britania-crm/web-components/Icons/infoIcon';\nimport InputAutocomplete from '@britania-crm/web-components/InputAutocomplete';\nimport InputCEP from '@britania-crm/web-components/InputCEP';\nimport InputCpfCnpj from '@britania-crm/web-components/InputCpfCnpj';\nimport InputEmail from '@britania-crm/web-components/InputEmail';\nimport InputNumber from '@britania-crm/web-components/InputNumber';\nimport InputPhone from '@britania-crm/web-components/InputPhone';\nimport InputSelect from '@britania-crm/web-components/InputSelect';\nimport InputStateRegistration from '@britania-crm/web-components/InputStateRegistration';\nimport InputText from '@britania-crm/web-components/InputText';\nimport Tooltip from '@britania-crm/web-components/Tooltip';\nimport useStyles, { FlexContainer, Info } from '../styles';\n\nconst MainData = ({\n  formRef,\n  disabled,\n  status,\n  isEdit\n}) => {\n  const t = useT();\n  const classes = useStyles();\n  const representativeUser = useSelector(selectUserRepresentative);\n  const [state, setState] = useState('');\n  const [stateOptions, setStateOptions] = useState([]);\n  const [parentCnpj, setParentCnpj] = useState('');\n  const [parentData, setParentData] = useState({});\n  const addressLoaded = useRef(false);\n  const respresentativeParams = useMemo(() => ({\n    page: 1,\n    pageSize: 10\n  }), []);\n  const handleParentDataFromApi = useCallback(value => {\n    if (isEmpty(value)) {\n      formRef.current.setFieldError('parentCompanyCnpj', t('cnpj does not match matrix'));\n      formRef.current.setFieldValue('parentCompanyCnpj', '');\n      setParentCnpj('');\n    } else {\n      formRef.current.setFieldValue('parentCompanyName', first(value));\n      formRef.current.setFieldValue('parentCompanyCnpj', first(value === null || value === void 0 ? void 0 : value.cnpj));\n    }\n  }, [formRef, t]);\n  const {\n    loading: clientsFromApiLoading\n  } = useCrmApi(parentCnpj && parentCnpj !== (parentData === null || parentData === void 0 ? void 0 : parentData.cnpj) ? [customerCrmRoutes.getInfoCustomer, parentCnpj] : null, {\n    params: {\n      clientRegistrationType: 'REGISTER',\n      cnpj: parentCnpj,\n      page: 1,\n      pageSize: 10\n    }\n  }, {\n    onSuccess: handleParentDataFromApi,\n    revalidateOnFocus: false\n  });\n  const getStateOptions = useCallback(async () => {\n    const states = await searchStates();\n    setStateOptions(states);\n  }, []);\n  const handleChangeState = useCallback((newState, fieldMounted) => {\n    setState(newState);\n\n    if (fieldMounted) {\n      formRef.current.validateField('stateRegistration');\n    }\n  }, [formRef]);\n  const handleAddressChange = useCallback(address => {\n    if (addressLoaded.current) {\n      formRef.current.setData({ ...address,\n        district: address.neighborhood,\n        publicPlace: address.street\n      });\n    }\n\n    addressLoaded.current = true;\n  }, [formRef]);\n  const setRepresentativeName = useCallback(value => {\n    formRef.current.setFieldValue('responsibleCode', value);\n  }, [formRef]);\n  const setRepresentativeCode = useCallback(value => {\n    formRef.current.setFieldValue('responsibleName', value);\n  }, [formRef]);\n  const HandleCompanyName = useCallback(value => {\n    setParentData(value);\n\n    if (cnpj.isValid(value === null || value === void 0 ? void 0 : value.cnpj)) {\n      formRef.current.setFieldValue('parentCompanyCnpj', value.cnpj);\n    } else {\n      setParentCnpj('');\n      formRef.current.setFieldValue('parentCompanyCnpj', '');\n    }\n  }, [formRef]);\n  const HandleParentCnpj = useCallback(value => {\n    const rowValue = trimMask(value);\n\n    if (cnpj.isValid(rowValue)) {\n      rowValue !== (parentData === null || parentData === void 0 ? void 0 : parentData.cnpj) && setParentCnpj(rowValue);\n    }\n  }, [parentData.cnpj]);\n  useFormEffect(() => {\n    if (!isEmpty(representativeUser) && !isEdit) {\n      formRef.current.setFieldValue('responsibleCode', first(representativeUser));\n      formRef.current.setFieldValue('responsibleName', first(representativeUser));\n    }\n  }, [formRef, isEdit, representativeUser]);\n  useEffect(() => {\n    getStateOptions();\n  }, [getStateOptions]);\n  useLayoutEffect(() => {\n    if (!disabled && !isEdit) {\n      addressLoaded.current = true;\n    }\n  }, [disabled, getStateOptions, isEdit]);\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputAutocomplete, {\n    url: representativeRoutes.getRepresentativeList,\n    params: respresentativeParams,\n    valueKey: \"code\",\n    paramName: \"name\",\n    name: \"responsibleCode\",\n    label: t('code', {\n      howMany: 1\n    }),\n    readOnly: disabled,\n    onValueChange: setRepresentativeCode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputAutocomplete, {\n    url: representativeRoutes.getRepresentativeList,\n    params: respresentativeParams,\n    valueKey: \"name\",\n    paramName: \"name\",\n    name: \"responsibleName\",\n    label: t('responsible', {\n      howMany: 1\n    }),\n    readOnly: disabled,\n    onValueChange: setRepresentativeName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }\n  })), status && /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 4,\n    className: classes.status,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }\n  }, \" \", t('situation'), \" \"), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }\n  }, status, \" \")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputText, {\n    name: \"companyName\",\n    label: t('company name'),\n    readOnly: disabled,\n    maxLength: 71,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputCpfCnpj, {\n    name: \"cnpj\",\n    label: \"CNPJ\",\n    mode: \"cnpj\",\n    readOnly: disabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputStateRegistration, {\n    name: \"stateRegistration\",\n    label: t('state registration'),\n    readOnly: disabled,\n    state: state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputNumber, {\n    name: \"suframa\",\n    label: t('suframa'),\n    readOnly: disabled,\n    maxLength: 15,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputPhone, {\n    name: \"commercialPhone\",\n    label: t('commercial phone'),\n    readOnly: disabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputPhone, {\n    name: \"billingPhone\",\n    label: t('billing phone'),\n    readOnly: disabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputPhone, {\n    name: \"cellphone\",\n    label: t('cell {this}', {\n      this: t('phone', {\n        howMany: 1\n      })\n    }),\n    readOnly: disabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputPhone, {\n    name: \"shoppingPhone\",\n    label: t('phone shopping'),\n    readOnly: disabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputEmail, {\n    name: \"billingEmail\",\n    label: t('billing email'),\n    readOnly: disabled,\n    maxLength: 71,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputEmail, {\n    name: \"invoiceShippingEmail\",\n    label: t('invoice shipping email'),\n    readOnly: disabled,\n    maxLength: 71,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputEmail, {\n    name: \"businessEmail\",\n    label: t('business email'),\n    readOnly: disabled,\n    maxLength: 71,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputText, {\n    name: \"site\",\n    label: t('site'),\n    readOnly: disabled,\n    maxLength: 41,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputText, {\n    name: \"country\",\n    label: t('country'),\n    maxLength: 41,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputCEP, {\n    name: \"zipCode\",\n    label: \"CEP\",\n    readOnly: disabled,\n    onAddressChange: handleAddressChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputSelect, {\n    name: \"state\",\n    label: \"UF\",\n    readOnly: disabled,\n    valueKey: \"sigla\",\n    idKey: \"sigla\",\n    options: stateOptions,\n    onValueChange: handleChangeState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputText, {\n    name: \"city\",\n    label: t('city', {\n      howMany: 1\n    }),\n    readOnly: disabled,\n    maxLength: 41,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputText, {\n    name: \"district\",\n    label: t('district', {\n      howMany: 1\n    }),\n    readOnly: disabled,\n    maxLength: 41,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputText, {\n    name: \"publicPlace\",\n    label: t('public place'),\n    readOnly: disabled,\n    maxLength: 71,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputText, {\n    name: \"number\",\n    label: t('number', {\n      howMany: 1\n    }),\n    readOnly: disabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputText, {\n    name: \"complement\",\n    label: t('complement', {\n      howMany: 1\n    }),\n    readOnly: disabled,\n    maxLength: 71,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputAutocomplete, {\n    url: customerCrmRoutes.getInfoCustomer,\n    params: {\n      pageSize: 10,\n      page: 1\n    },\n    valueKey: \"companyName\",\n    paramName: \"companyName\",\n    name: \"parentCompanyName\",\n    label: `${t('company name')} ${t('matrix')}`,\n    disabled: disabled || clientsFromApiLoading,\n    onValueChange: HandleCompanyName,\n    loading: clientsFromApiLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FlexContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputCpfCnpj, {\n    name: \"parentCompanyCnpj\",\n    label: `CNPJ ${t('matrix')}`,\n    mode: \"cnpj\",\n    readOnly: disabled,\n    onValueChange: HandleParentCnpj,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Info, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: t('matrix fill information'),\n    arrow: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InfoIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 15\n    }\n  }))))));\n};\n\nMainData.propTypes = {\n  formRef: PropTypes.any.isRequired,\n  disabled: PropTypes.bool.isRequired,\n  status: PropTypes.string,\n  isEdit: PropTypes.bool\n};\nMainData.defaultProps = {\n  status: '',\n  isEdit: false\n};\nexport default MainData;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/customers/screens/CustomerPreRegistrationFormScreen/tabs/Customer/sections/MainData.js"],"names":["React","useState","useEffect","useCallback","useMemo","useRef","useLayoutEffect","useSelector","cnpj","PropTypes","first","isEmpty","Grid","Typography","useFormEffect","useT","representative","representativeRoutes","customer","customerCrmRoutes","searchStates","useCrmApi","selectUserRepresentative","trimMask","InfoIcon","InputAutocomplete","InputCEP","InputCpfCnpj","InputEmail","InputNumber","InputPhone","InputSelect","InputStateRegistration","InputText","Tooltip","useStyles","FlexContainer","Info","MainData","formRef","disabled","status","isEdit","t","classes","representativeUser","state","setState","stateOptions","setStateOptions","parentCnpj","setParentCnpj","parentData","setParentData","addressLoaded","respresentativeParams","page","pageSize","handleParentDataFromApi","value","current","setFieldError","setFieldValue","loading","clientsFromApiLoading","getInfoCustomer","params","clientRegistrationType","onSuccess","revalidateOnFocus","getStateOptions","states","handleChangeState","newState","fieldMounted","validateField","handleAddressChange","address","setData","district","neighborhood","publicPlace","street","setRepresentativeName","setRepresentativeCode","HandleCompanyName","isValid","HandleParentCnpj","rowValue","container","getRepresentativeList","howMany","this","propTypes","any","isRequired","bool","string","defaultProps"],"mappings":"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","sourcesContent":["import React, {\n  useState,\n  useEffect,\n  useCallback,\n  useMemo,\n  useRef,\n  useLayoutEffect\n} from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { cnpj } from 'cpf-cnpj-validator'\nimport PropTypes from 'prop-types'\n\nimport first from 'lodash/first'\nimport isEmpty from 'lodash/isEmpty'\n\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\n\nimport { useFormEffect } from '@britania-crm/forms'\nimport { useT } from '@britania-crm/i18n'\nimport {\n  representative as representativeRoutes,\n  customer as customerCrmRoutes\n} from '@britania-crm/services/apis/crmApi/resources/routes'\nimport { searchStates } from '@britania-crm/services/apis/ibgeApi'\nimport useCrmApi from '@britania-crm/services/hooks/useCrmApi'\nimport { selectUserRepresentative } from '@britania-crm/stores/auth/auth.selectors'\nimport { trimMask } from '@britania-crm/utils/formatters'\nimport InfoIcon from '@britania-crm/web-components/Icons/infoIcon'\nimport InputAutocomplete from '@britania-crm/web-components/InputAutocomplete'\nimport InputCEP from '@britania-crm/web-components/InputCEP'\nimport InputCpfCnpj from '@britania-crm/web-components/InputCpfCnpj'\nimport InputEmail from '@britania-crm/web-components/InputEmail'\nimport InputNumber from '@britania-crm/web-components/InputNumber'\nimport InputPhone from '@britania-crm/web-components/InputPhone'\nimport InputSelect from '@britania-crm/web-components/InputSelect'\nimport InputStateRegistration from '@britania-crm/web-components/InputStateRegistration'\nimport InputText from '@britania-crm/web-components/InputText'\nimport Tooltip from '@britania-crm/web-components/Tooltip'\n\nimport useStyles, {\n  FlexContainer,\n  Info\n} from '../styles'\n\nconst MainData = ({\n  formRef, disabled, status, isEdit\n}) => {\n  const t = useT()\n  const classes = useStyles()\n  const representativeUser = useSelector(selectUserRepresentative)\n\n  const [state, setState] = useState('')\n  const [stateOptions, setStateOptions] = useState([])\n  const [parentCnpj, setParentCnpj] = useState('')\n  const [parentData, setParentData] = useState({})\n\n  const addressLoaded = useRef(false)\n\n  const respresentativeParams = useMemo(\n    () => ({\n      page: 1,\n      pageSize: 10\n    }),\n    []\n  )\n\n  const handleParentDataFromApi = useCallback(\n    (value) => {\n      if (isEmpty(value)) {\n        formRef.current.setFieldError('parentCompanyCnpj', t('cnpj does not match matrix'))\n        formRef.current.setFieldValue('parentCompanyCnpj', '')\n        setParentCnpj('')\n      } else {\n        formRef.current.setFieldValue('parentCompanyName', first(value))\n        formRef.current.setFieldValue('parentCompanyCnpj', first(value?.cnpj))\n      }\n    },\n    [formRef, t]\n  )\n\n  const { loading: clientsFromApiLoading } = useCrmApi(\n    (parentCnpj && parentCnpj !== parentData?.cnpj)\n      ? [customerCrmRoutes.getInfoCustomer, parentCnpj]\n      : null,\n    {\n      params: {\n        clientRegistrationType: 'REGISTER',\n        cnpj: parentCnpj,\n        page: 1,\n        pageSize: 10\n      }\n    },\n    {\n      onSuccess: handleParentDataFromApi,\n      revalidateOnFocus: false\n    }\n  )\n\n  const getStateOptions = useCallback(\n    async () => {\n      const states = await searchStates()\n      setStateOptions(states)\n    },\n    []\n  )\n\n  const handleChangeState = useCallback(\n    (newState, fieldMounted) => {\n      setState(newState)\n      if (fieldMounted) {\n        formRef.current.validateField('stateRegistration')\n      }\n    },\n    [formRef]\n  )\n\n  const handleAddressChange = useCallback(\n    (address) => {\n      if (addressLoaded.current) {\n        formRef.current.setData({\n          ...address,\n          district: address.neighborhood,\n          publicPlace: address.street\n        })\n      }\n      addressLoaded.current = true\n    },\n    [formRef]\n  )\n\n  const setRepresentativeName = useCallback(\n    (value) => {\n      formRef.current.setFieldValue('responsibleCode', value)\n    },\n    [formRef]\n  )\n\n  const setRepresentativeCode = useCallback(\n    (value) => {\n      formRef.current.setFieldValue('responsibleName', value)\n    },\n    [formRef]\n  )\n\n  const HandleCompanyName = useCallback(\n    (value) => {\n      setParentData(value)\n      if (cnpj.isValid(value?.cnpj)) {\n        formRef.current.setFieldValue('parentCompanyCnpj', value.cnpj)\n      } else {\n        setParentCnpj('')\n        formRef.current.setFieldValue('parentCompanyCnpj', '')\n      }\n    },\n    [formRef]\n  )\n\n  const HandleParentCnpj = useCallback(\n    (value) => {\n      const rowValue = trimMask(value)\n      if (cnpj.isValid(rowValue)) {\n        rowValue !== parentData?.cnpj && setParentCnpj(rowValue)\n      }\n    },\n    [parentData.cnpj]\n  )\n\n  useFormEffect(\n    () => {\n      if (!isEmpty(representativeUser) && !isEdit) {\n        formRef.current.setFieldValue('responsibleCode', first(representativeUser))\n        formRef.current.setFieldValue('responsibleName', first(representativeUser))\n      }\n    },\n    [formRef, isEdit, representativeUser])\n\n  useEffect(\n    () => {\n      getStateOptions()\n    },\n    [getStateOptions]\n  )\n\n  useLayoutEffect(\n    () => {\n      if (!disabled && !isEdit) {\n        addressLoaded.current = true\n      }\n    },\n    [disabled, getStateOptions, isEdit]\n  )\n\n  return (\n    <Grid container spacing={ 1 } className={ classes.container }>\n      <Grid item xs={ 2 }>\n        <InputAutocomplete\n          url={ representativeRoutes.getRepresentativeList }\n          params={ respresentativeParams }\n          valueKey=\"code\"\n          paramName=\"name\"\n          name=\"responsibleCode\"\n          label={ t('code', { howMany: 1 }) }\n          readOnly={ disabled }\n          onValueChange={ setRepresentativeCode }\n        />\n\n      </Grid>\n      <Grid item xs={ 10 } md={ 4 }>\n        <InputAutocomplete\n          url={ representativeRoutes.getRepresentativeList }\n          params={ respresentativeParams }\n          valueKey=\"name\"\n          paramName=\"name\"\n          name=\"responsibleName\"\n          label={ t('responsible', { howMany: 1 }) }\n          readOnly={ disabled }\n          onValueChange={ setRepresentativeName }\n        />\n      </Grid>\n      {\n        status && (\n          <Grid item sm={ 4 } className={ classes.status }>\n            <Typography> { t('situation') } </Typography>\n            <Typography>{ status } </Typography>\n          </Grid>\n        )\n      }\n      <Grid item sm={ 12 } md={ 6 }>\n        <InputText\n          name=\"companyName\"\n          label={ t('company name') }\n          readOnly={ disabled }\n          maxLength={ 71 }\n        />\n      </Grid>\n\n      <Grid item sm={ 12 } md={ 3 }>\n        <InputCpfCnpj\n          name=\"cnpj\"\n          label=\"CNPJ\"\n          mode=\"cnpj\"\n          readOnly={ disabled }\n        />\n      </Grid>\n\n      <Grid item sm={ 12 } md={ 3 }>\n        <InputStateRegistration\n          name=\"stateRegistration\"\n          label={ t('state registration') }\n          readOnly={ disabled }\n          state={ state }\n        />\n      </Grid>\n\n      <Grid item sm={ 12 } md={ 3 }>\n        <InputNumber\n          name=\"suframa\"\n          label={ t('suframa') }\n          readOnly={ disabled }\n          maxLength={ 15 }\n        />\n      </Grid>\n\n      <Grid item sm={ 12 } md={ 3 }>\n        <InputPhone\n          name=\"commercialPhone\"\n          label={ t('commercial phone') }\n          readOnly={ disabled }\n        />\n      </Grid>\n\n      <Grid item sm={ 12 } md={ 3 }>\n        <InputPhone\n          name=\"billingPhone\"\n          label={ t('billing phone') }\n          readOnly={ disabled }\n        />\n      </Grid>\n\n      <Grid item sm={ 12 } md={ 3 }>\n        <InputPhone\n          name=\"cellphone\"\n          label={ t('cell {this}', { this: t('phone', { howMany: 1 }) }) }\n          readOnly={ disabled }\n        />\n      </Grid>\n\n      <Grid item sm={ 12 } md={ 3 }>\n        <InputPhone\n          name=\"shoppingPhone\"\n          label={ t('phone shopping') }\n          readOnly={ disabled }\n        />\n      </Grid>\n\n      <Grid item sm={ 12 } md={ 3 }>\n        <InputEmail\n          name=\"billingEmail\"\n          label={ t('billing email') }\n          readOnly={ disabled }\n          maxLength={ 71 }\n        />\n      </Grid>\n\n      <Grid item sm={ 12 } md={ 3 }>\n        <InputEmail\n          name=\"invoiceShippingEmail\"\n          label={ t('invoice shipping email') }\n          readOnly={ disabled }\n          maxLength={ 71 }\n        />\n      </Grid>\n\n      <Grid item sm={ 12 } md={ 3 }>\n        <InputEmail\n          name=\"businessEmail\"\n          label={ t('business email') }\n          readOnly={ disabled }\n          maxLength={ 71 }\n        />\n      </Grid>\n\n      <Grid item sm={ 12 } md={ 3 }>\n        <InputText\n          name=\"site\"\n          label={ t('site') }\n          readOnly={ disabled }\n          maxLength={ 41 }\n        />\n      </Grid>\n\n      <Grid item sm={ 12 } md={ 3 }>\n        <InputText\n          name=\"country\"\n          label={ t('country') }\n          maxLength={ 41 }\n        />\n      </Grid>\n\n      <Grid item sm={ 12 } md={ 2 }>\n        <InputCEP\n          name=\"zipCode\"\n          label=\"CEP\"\n          readOnly={ disabled }\n          onAddressChange={ handleAddressChange }\n        />\n      </Grid>\n\n      <Grid item sm={ 12 } md={ 1 }>\n        <InputSelect\n          name=\"state\"\n          label=\"UF\"\n          readOnly={ disabled }\n          valueKey=\"sigla\"\n          idKey=\"sigla\"\n          options={ stateOptions }\n          onValueChange={ handleChangeState }\n        />\n      </Grid>\n\n      <Grid item sm={ 12 } md={ 3 }>\n        <InputText\n          name=\"city\"\n          label={ t('city', { howMany: 1 }) }\n          readOnly={ disabled }\n          maxLength={ 41 }\n        />\n      </Grid>\n\n      <Grid item sm={ 12 } md={ 3 }>\n        <InputText\n          name=\"district\"\n          label={ t('district', { howMany: 1 }) }\n          readOnly={ disabled }\n          maxLength={ 41 }\n        />\n      </Grid>\n\n      <Grid item sm={ 12 } md={ 4 }>\n        <InputText\n          name=\"publicPlace\"\n          label={ t('public place') }\n          readOnly={ disabled }\n          maxLength={ 71 }\n        />\n      </Grid>\n\n      <Grid item sm={ 12 } md={ 2 }>\n        <InputText\n          name=\"number\"\n          label={ t('number', { howMany: 1 }) }\n          readOnly={ disabled }\n        />\n      </Grid>\n\n      <Grid item sm={ 12 } md={ 3 }>\n        <InputText\n          name=\"complement\"\n          label={ t('complement', { howMany: 1 }) }\n          readOnly={ disabled }\n          maxLength={ 71 }\n        />\n      </Grid>\n\n      <Grid item sm={ 12 } md={ 6 }>\n\n        <InputAutocomplete\n          url={ customerCrmRoutes.getInfoCustomer }\n          params={ { pageSize: 10, page: 1 } }\n          valueKey=\"companyName\"\n          paramName=\"companyName\"\n          name=\"parentCompanyName\"\n          label={ `${ t('company name') } ${ t('matrix') }` }\n          disabled={ disabled || clientsFromApiLoading }\n          onValueChange={ HandleCompanyName }\n          loading={ clientsFromApiLoading }\n        />\n      </Grid>\n\n      <Grid item sm={ 12 } md={ 3 }>\n        <FlexContainer>\n          <InputCpfCnpj\n            name=\"parentCompanyCnpj\"\n            label={ `CNPJ ${ t('matrix') }` }\n            mode=\"cnpj\"\n            readOnly={ disabled }\n            onValueChange={ HandleParentCnpj }\n          />\n          <Info>\n            <Tooltip title={ t('matrix fill information') } arrow>\n              <InfoIcon/>\n            </Tooltip>\n          </Info>\n\n        </FlexContainer>\n\n      </Grid>\n    </Grid>\n  )\n}\n\nMainData.propTypes = {\n  formRef: PropTypes.any.isRequired,\n  disabled: PropTypes.bool.isRequired,\n  status: PropTypes.string,\n  isEdit: PropTypes.bool\n}\n\nMainData.defaultProps = { status: '', isEdit: false }\n\nexport default MainData\n"]},"metadata":{},"sourceType":"module"}