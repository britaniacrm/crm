{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/representative/containers/commissionPercentage/CommissionPercentage.js\";\nimport React, { useCallback, useMemo, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport filter from 'lodash/filter';\nimport map from 'lodash/map';\nimport Grid from '@material-ui/core/Grid';\nimport { useDialog } from '@britania-crm/dialog';\nimport { useT } from '@britania-crm/i18n';\nimport DataTable from '@britania-crm/web-components/DataTable';\nimport InputHidden from '@britania-crm/web-components/InputHidden';\nimport CommissionPercentageModal from '../../modals/commissionPercentageModal/CommissionPercentageModal';\nimport useStyles from '../styles';\n\nconst CommissionPercentage = ({\n  disabled,\n  formRef\n}) => {\n  const t = useT();\n  const classes = useStyles();\n  const {\n    createDialog\n  } = useDialog();\n  const [commissionAndPorcentage, setCommissionAndPorcentage] = useState([]);\n  const columns = useMemo(() => [{\n    title: t('establishment'),\n    field: 'establishmentDescription',\n    defaultSort: 'asc'\n  }, {\n    title: t('child line'),\n    field: 'lineDescription'\n  }, {\n    title: t('commission'),\n    field: 'commissionPercentage'\n  }], [t]);\n  const onAddClick = useCallback(() => {\n    createDialog({\n      id: 'create-commission',\n      Component: CommissionPercentageModal,\n      props: {\n        commissionAndPorcentage,\n\n        onSave(values, setLoading) {\n          const newCommission = {\n            establishmentCode: values.establishment.establishmentCode,\n            establishmentDescription: values.establishment.establishmentDescription,\n            lineCode: Number(values.childLine.lineCode),\n            lineDescription: values.childLine.lineDescription,\n            commissionPercentage: Number(values.commission)\n          };\n          formRef.current.setFieldValue('commissionPercentage', old => [...old, newCommission]);\n          setLoading(false);\n        }\n\n      }\n    });\n  }, [commissionAndPorcentage, createDialog, formRef]);\n  const onEditClick = useCallback((event, row) => {\n    createDialog({\n      id: 'edit-commission',\n      Component: CommissionPercentageModal,\n      props: {\n        row,\n        commissionAndPorcentage,\n\n        onEdit(values, setLoading) {\n          formRef.current.setFieldValue('commissionPercentage', old => {\n            map(old, item => {\n              var _item$tableData, _row$tableData;\n\n              if (((_item$tableData = item.tableData) === null || _item$tableData === void 0 ? void 0 : _item$tableData.id) === (row === null || row === void 0 ? void 0 : (_row$tableData = row.tableData) === null || _row$tableData === void 0 ? void 0 : _row$tableData.id)) {\n                return {\n                  establishmentCode: values.establishment.establishmentCode,\n                  establishmentDescription: values.establishment.establishmentDescription,\n                  lineCode: Number(values.childLine.lineCode),\n                  lineDescription: values.childLine.lineDescription,\n                  commissionPercentage: Number(values.commission),\n                  tableData: item.tableData\n                };\n              }\n\n              return item;\n            });\n            setLoading(false);\n          });\n        }\n\n      }\n    });\n  }, [commissionAndPorcentage, createDialog, formRef]);\n  const onDeleteClick = useCallback((event, row) => formRef.current.setFieldValue('commissionPercentage', old => filter(old, ({\n    tableData\n  }) => tableData.id !== row.tableData.id)), [formRef]);\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    className: classes.containerMain,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DataTable, {\n    data: commissionAndPorcentage,\n    columns: columns,\n    addTitle: t('add new {this}', {\n      gender: 'male',\n      this: t('commission percentage')\n    }),\n    onAddClick: !disabled && onAddClick,\n    onEditClick: !disabled && onEditClick,\n    onDeleteClick: !disabled && onDeleteClick,\n    options: {\n      search: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(InputHidden, {\n    name: \"commissionPercentage\",\n    onValueChange: setCommissionAndPorcentage,\n    showError: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }));\n};\n\nCommissionPercentage.propTypes = {\n  disabled: PropTypes.bool.isRequired,\n  formRef: PropTypes.any.isRequired\n};\nexport default CommissionPercentage;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/representative/containers/commissionPercentage/CommissionPercentage.js"],"names":["React","useCallback","useMemo","useState","PropTypes","filter","map","Grid","useDialog","useT","DataTable","InputHidden","CommissionPercentageModal","useStyles","CommissionPercentage","disabled","formRef","t","classes","createDialog","commissionAndPorcentage","setCommissionAndPorcentage","columns","title","field","defaultSort","onAddClick","id","Component","props","onSave","values","setLoading","newCommission","establishmentCode","establishment","establishmentDescription","lineCode","Number","childLine","lineDescription","commissionPercentage","commission","current","setFieldValue","old","onEditClick","event","row","onEdit","item","tableData","onDeleteClick","containerMain","gender","this","search","propTypes","bool","isRequired","any"],"mappings":";AAAA,OAAOA,KAAP,IACEC,WADF,EAEEC,OAFF,EAGEC,QAHF,QAIO,OAJP;AAMA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAOC,GAAP,MAAgB,YAAhB;AAEA,OAAOC,IAAP,MAAiB,wBAAjB;AAEA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,OAAOC,SAAP,MAAsB,wCAAtB;AACA,OAAOC,WAAP,MAAwB,0CAAxB;AAEA,OAAOC,yBAAP,MAAsC,kEAAtC;AACA,OAAOC,SAAP,MAAsB,WAAtB;;AAEA,MAAMC,oBAAoB,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA2B;AACtD,QAAMC,CAAC,GAAGR,IAAI,EAAd;AACA,QAAMS,OAAO,GAAGL,SAAS,EAAzB;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAmBX,SAAS,EAAlC;AAEA,QAAM,CAACY,uBAAD,EAA0BC,0BAA1B,IAAwDlB,QAAQ,CAAC,EAAD,CAAtE;AAEA,QAAMmB,OAAO,GAAGpB,OAAO,CAAC,MAAM,CAC5B;AACEqB,IAAAA,KAAK,EAAEN,CAAC,CAAC,eAAD,CADV;AAEEO,IAAAA,KAAK,EAAE,0BAFT;AAGEC,IAAAA,WAAW,EAAE;AAHf,GAD4B,EAM5B;AACEF,IAAAA,KAAK,EAAEN,CAAC,CAAC,YAAD,CADV;AAEEO,IAAAA,KAAK,EAAE;AAFT,GAN4B,EAU5B;AACED,IAAAA,KAAK,EAAEN,CAAC,CAAC,YAAD,CADV;AAEEO,IAAAA,KAAK,EAAE;AAFT,GAV4B,CAAP,EAcpB,CAACP,CAAD,CAdoB,CAAvB;AAgBA,QAAMS,UAAU,GAAGzB,WAAW,CAC5B,MAAM;AACJkB,IAAAA,YAAY,CAAC;AACXQ,MAAAA,EAAE,EAAE,mBADO;AAEXC,MAAAA,SAAS,EAAEhB,yBAFA;AAGXiB,MAAAA,KAAK,EAAE;AACLT,QAAAA,uBADK;;AAELU,QAAAA,MAAM,CAAEC,MAAF,EAAUC,UAAV,EAAsB;AAC1B,gBAAMC,aAAa,GAAG;AACpBC,YAAAA,iBAAiB,EAAEH,MAAM,CAACI,aAAP,CAAqBD,iBADpB;AAEpBE,YAAAA,wBAAwB,EAAEL,MAAM,CAACI,aAAP,CAAqBC,wBAF3B;AAGpBC,YAAAA,QAAQ,EAAEC,MAAM,CAACP,MAAM,CAACQ,SAAP,CAAiBF,QAAlB,CAHI;AAIpBG,YAAAA,eAAe,EAAET,MAAM,CAACQ,SAAP,CAAiBC,eAJd;AAKpBC,YAAAA,oBAAoB,EAAEH,MAAM,CAACP,MAAM,CAACW,UAAR;AALR,WAAtB;AAOA1B,UAAAA,OAAO,CAAC2B,OAAR,CAAgBC,aAAhB,CAA8B,sBAA9B,EAAuDC,GAAD,IAAS,CAAC,GAAGA,GAAJ,EAASZ,aAAT,CAA/D;AACAD,UAAAA,UAAU,CAAC,KAAD,CAAV;AACD;;AAZI;AAHI,KAAD,CAAZ;AAkBD,GApB2B,EAoBzB,CAACZ,uBAAD,EAA0BD,YAA1B,EAAwCH,OAAxC,CApByB,CAA9B;AAsBA,QAAM8B,WAAW,GAAG7C,WAAW,CAAC,CAAC8C,KAAD,EAAQC,GAAR,KAAgB;AAC9C7B,IAAAA,YAAY,CAAC;AACXQ,MAAAA,EAAE,EAAE,iBADO;AAEXC,MAAAA,SAAS,EAAEhB,yBAFA;AAGXiB,MAAAA,KAAK,EAAE;AACLmB,QAAAA,GADK;AAEL5B,QAAAA,uBAFK;;AAGL6B,QAAAA,MAAM,CAAElB,MAAF,EAAUC,UAAV,EAAsB;AAC1BhB,UAAAA,OAAO,CAAC2B,OAAR,CAAgBC,aAAhB,CAA8B,sBAA9B,EACGC,GAAD,IAAS;AACPvC,YAAAA,GAAG,CAACuC,GAAD,EAAOK,IAAD,IAAU;AAAA;;AACjB,kBAAI,oBAAAA,IAAI,CAACC,SAAL,oEAAgBxB,EAAhB,OAAuBqB,GAAvB,aAAuBA,GAAvB,yCAAuBA,GAAG,CAAEG,SAA5B,mDAAuB,eAAgBxB,EAAvC,CAAJ,EAA+C;AAC7C,uBAAO;AACLO,kBAAAA,iBAAiB,EAAEH,MAAM,CAACI,aAAP,CAAqBD,iBADnC;AAELE,kBAAAA,wBAAwB,EAAEL,MAAM,CAACI,aAAP,CAAqBC,wBAF1C;AAGLC,kBAAAA,QAAQ,EAAEC,MAAM,CAACP,MAAM,CAACQ,SAAP,CAAiBF,QAAlB,CAHX;AAILG,kBAAAA,eAAe,EAAET,MAAM,CAACQ,SAAP,CAAiBC,eAJ7B;AAKLC,kBAAAA,oBAAoB,EAAEH,MAAM,CAACP,MAAM,CAACW,UAAR,CALvB;AAMLS,kBAAAA,SAAS,EAAED,IAAI,CAACC;AANX,iBAAP;AAQD;;AACD,qBAAOD,IAAP;AACD,aAZE,CAAH;AAaAlB,YAAAA,UAAU,CAAC,KAAD,CAAV;AACD,WAhBH;AAkBD;;AAtBI;AAHI,KAAD,CAAZ;AA4BD,GA7B8B,EA6B5B,CAACZ,uBAAD,EAA0BD,YAA1B,EAAwCH,OAAxC,CA7B4B,CAA/B;AA+BA,QAAMoC,aAAa,GAAGnD,WAAW,CAC/B,CAAC8C,KAAD,EAAQC,GAAR,KACEhC,OAAO,CAAC2B,OAAR,CAAgBC,aAAhB,CAA8B,sBAA9B,EAAuDC,GAAD,IAASxC,MAAM,CAACwC,GAAD,EAAM,CAAC;AAAEM,IAAAA;AAAF,GAAD,KAAmBA,SAAS,CAACxB,EAAV,KAAiBqB,GAAG,CAACG,SAAJ,CAAcxB,EAAxD,CAArE,CAF6B,EAI/B,CAACX,OAAD,CAJ+B,CAAjC;AAOA,sBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAG,CAA1B;AAA8B,IAAA,SAAS,EAAGE,OAAO,CAACmC,aAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAGjC,uBADT;AAEE,IAAA,OAAO,EAAGE,OAFZ;AAGE,IAAA,QAAQ,EAAGL,CAAC,CAAC,gBAAD,EAAmB;AAAEqC,MAAAA,MAAM,EAAE,MAAV;AAAkBC,MAAAA,IAAI,EAAEtC,CAAC,CAAC,uBAAD;AAAzB,KAAnB,CAHd;AAIE,IAAA,UAAU,EAAG,CAACF,QAAD,IAAaW,UAJ5B;AAKE,IAAA,WAAW,EAAG,CAACX,QAAD,IAAa+B,WAL7B;AAME,IAAA,aAAa,EAAG,CAAC/B,QAAD,IAAaqC,aAN/B;AAOE,IAAA,OAAO,EAAG;AAAEI,MAAAA,MAAM,EAAE;AAAV,KAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAUE,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAC,sBAAlB;AAAyC,IAAA,aAAa,EAAGnC,0BAAzD;AAAsF,IAAA,SAAS,MAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF;AAcD,CAjGD;;AAmGAP,oBAAoB,CAAC2C,SAArB,GAAiC;AAC/B1C,EAAAA,QAAQ,EAAEX,SAAS,CAACsD,IAAV,CAAeC,UADM;AAE/B3C,EAAAA,OAAO,EAAEZ,SAAS,CAACwD,GAAV,CAAcD;AAFQ,CAAjC;AAKA,eAAe7C,oBAAf","sourcesContent":["import React, {\n  useCallback,\n  useMemo,\n  useState\n} from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport filter from 'lodash/filter'\nimport map from 'lodash/map'\n\nimport Grid from '@material-ui/core/Grid'\n\nimport { useDialog } from '@britania-crm/dialog'\nimport { useT } from '@britania-crm/i18n'\nimport DataTable from '@britania-crm/web-components/DataTable'\nimport InputHidden from '@britania-crm/web-components/InputHidden'\n\nimport CommissionPercentageModal from '../../modals/commissionPercentageModal/CommissionPercentageModal'\nimport useStyles from '../styles'\n\nconst CommissionPercentage = ({ disabled, formRef }) => {\n  const t = useT()\n  const classes = useStyles()\n  const { createDialog } = useDialog()\n\n  const [commissionAndPorcentage, setCommissionAndPorcentage] = useState([])\n\n  const columns = useMemo(() => [\n    {\n      title: t('establishment'),\n      field: 'establishmentDescription',\n      defaultSort: 'asc'\n    },\n    {\n      title: t('child line'),\n      field: 'lineDescription'\n    },\n    {\n      title: t('commission'),\n      field: 'commissionPercentage'\n    }\n  ], [t])\n\n  const onAddClick = useCallback(\n    () => {\n      createDialog({\n        id: 'create-commission',\n        Component: CommissionPercentageModal,\n        props: {\n          commissionAndPorcentage,\n          onSave (values, setLoading) {\n            const newCommission = {\n              establishmentCode: values.establishment.establishmentCode,\n              establishmentDescription: values.establishment.establishmentDescription,\n              lineCode: Number(values.childLine.lineCode),\n              lineDescription: values.childLine.lineDescription,\n              commissionPercentage: Number(values.commission)\n            }\n            formRef.current.setFieldValue('commissionPercentage', (old) => [...old, newCommission])\n            setLoading(false)\n          }\n        }\n      })\n    }, [commissionAndPorcentage, createDialog, formRef])\n\n  const onEditClick = useCallback((event, row) => {\n    createDialog({\n      id: 'edit-commission',\n      Component: CommissionPercentageModal,\n      props: {\n        row,\n        commissionAndPorcentage,\n        onEdit (values, setLoading) {\n          formRef.current.setFieldValue('commissionPercentage',\n            (old) => {\n              map(old, (item) => {\n                if (item.tableData?.id === row?.tableData?.id) {\n                  return {\n                    establishmentCode: values.establishment.establishmentCode,\n                    establishmentDescription: values.establishment.establishmentDescription,\n                    lineCode: Number(values.childLine.lineCode),\n                    lineDescription: values.childLine.lineDescription,\n                    commissionPercentage: Number(values.commission),\n                    tableData: item.tableData\n                  }\n                }\n                return item\n              })\n              setLoading(false)\n            }\n          )\n        }\n      }\n    })\n  }, [commissionAndPorcentage, createDialog, formRef])\n\n  const onDeleteClick = useCallback(\n    (event, row) =>\n      formRef.current.setFieldValue('commissionPercentage', (old) => filter(old, ({ tableData }) => tableData.id !== row.tableData.id))\n    ,\n    [formRef]\n  )\n\n  return (\n    <Grid container spacing={ 1 } className={ classes.containerMain } >\n      <DataTable\n        data={ commissionAndPorcentage }\n        columns={ columns }\n        addTitle={ t('add new {this}', { gender: 'male', this: t('commission percentage') }) }\n        onAddClick={ !disabled && onAddClick }\n        onEditClick={ !disabled && onEditClick }\n        onDeleteClick={ !disabled && onDeleteClick }\n        options={ { search: false } }\n      />\n      <InputHidden name=\"commissionPercentage\" onValueChange={ setCommissionAndPorcentage } showError/>\n    </Grid>\n  )\n}\n\nCommissionPercentage.propTypes = {\n  disabled: PropTypes.bool.isRequired,\n  formRef: PropTypes.any.isRequired\n}\n\nexport default CommissionPercentage\n"]},"metadata":{},"sourceType":"module"}