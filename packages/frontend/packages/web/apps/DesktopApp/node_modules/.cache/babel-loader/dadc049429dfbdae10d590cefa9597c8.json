{"ast":null,"code":"var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _reduce = /*#__PURE__*/require('./internal/_reduce');\n\nvar keys = /*#__PURE__*/require('./keys');\n/**\n * An Object-specific version of [`map`](#map). The function is applied to three\n * arguments: *(value, key, obj)*. If only the value is significant, use\n * [`map`](#map) instead.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig ((*, String, Object) -> *) -> Object -> Object\n * @param {Function} fn\n * @param {Object} obj\n * @return {Object}\n * @see R.map\n * @example\n *\n *      const xyz = { x: 1, y: 2, z: 3 };\n *      const prependKeyAndDouble = (num, key, obj) => key + (num * 2);\n *\n *      R.mapObjIndexed(prependKeyAndDouble, xyz); //=> { x: 'x2', y: 'y4', z: 'z6' }\n */\n\n\nvar mapObjIndexed = /*#__PURE__*/_curry2(function mapObjIndexed(fn, obj) {\n  return _reduce(function (acc, key) {\n    acc[key] = fn(obj[key], key, obj);\n    return acc;\n  }, {}, keys(obj));\n});\n\nmodule.exports = mapObjIndexed;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/node_modules/ramda/src/mapObjIndexed.js"],"names":["_curry2","require","_reduce","keys","mapObjIndexed","fn","obj","acc","key","module","exports"],"mappings":"AAAA,IAAIA,OAAO,GAAG,aAAaC,OAAO,CAAC,oBAAD,CAAlC;;AAEA,IAAIC,OAAO,GAAG,aAAaD,OAAO,CAAC,oBAAD,CAAlC;;AAEA,IAAIE,IAAI,GAAG,aAAaF,OAAO,CAAC,QAAD,CAA/B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,IAAIG,aAAa,GAAG,aAAaJ,OAAO,CAAC,SAASI,aAAT,CAAuBC,EAAvB,EAA2BC,GAA3B,EAAgC;AACvE,SAAOJ,OAAO,CAAC,UAAUK,GAAV,EAAeC,GAAf,EAAoB;AACjCD,IAAAA,GAAG,CAACC,GAAD,CAAH,GAAWH,EAAE,CAACC,GAAG,CAACE,GAAD,CAAJ,EAAWA,GAAX,EAAgBF,GAAhB,CAAb;AACA,WAAOC,GAAP;AACD,GAHa,EAGX,EAHW,EAGPJ,IAAI,CAACG,GAAD,CAHG,CAAd;AAID,CALuC,CAAxC;;AAMAG,MAAM,CAACC,OAAP,GAAiBN,aAAjB","sourcesContent":["var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _reduce = /*#__PURE__*/require('./internal/_reduce');\n\nvar keys = /*#__PURE__*/require('./keys');\n\n/**\n * An Object-specific version of [`map`](#map). The function is applied to three\n * arguments: *(value, key, obj)*. If only the value is significant, use\n * [`map`](#map) instead.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig ((*, String, Object) -> *) -> Object -> Object\n * @param {Function} fn\n * @param {Object} obj\n * @return {Object}\n * @see R.map\n * @example\n *\n *      const xyz = { x: 1, y: 2, z: 3 };\n *      const prependKeyAndDouble = (num, key, obj) => key + (num * 2);\n *\n *      R.mapObjIndexed(prependKeyAndDouble, xyz); //=> { x: 'x2', y: 'y4', z: 'z6' }\n */\n\n\nvar mapObjIndexed = /*#__PURE__*/_curry2(function mapObjIndexed(fn, obj) {\n  return _reduce(function (acc, key) {\n    acc[key] = fn(obj[key], key, obj);\n    return acc;\n  }, {}, keys(obj));\n});\nmodule.exports = mapObjIndexed;"]},"metadata":{},"sourceType":"script"}