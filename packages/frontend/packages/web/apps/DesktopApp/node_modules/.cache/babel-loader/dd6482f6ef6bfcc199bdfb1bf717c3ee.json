{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.removeAction = exports.queueAction = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nexports.createOfflineActions = createOfflineActions;\nexports.markActionsOffline = markActionsOffline;\n\nvar _reduxsauce = require('reduxsauce');\n\nvar _lodash = require('lodash');\n\nvar _v = require('uuid/v4');\n\nvar _v2 = _interopRequireDefault(_v);\n\nvar _actions = require('./actions');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Wraps reduxsauce's creator function to append offline metadata.\n *\n * @param {Function} creator Reduxsauce's creator function.\n */\n\n\nvar appendOfflineMeta = function appendOfflineMeta(creator) {\n  return function () {\n    var creatorResult = creator.apply(undefined, arguments);\n    return _extends({}, creatorResult, {\n      meta: _extends({\n        uuid: (0, _v2.default)()\n      }, creatorResult.meta, {\n        queueIfOffline: true\n      })\n    });\n  };\n};\n/**\n * Custom wrapper around reduxsauce's `createActions` that automatically appends\n * offline meta required by offline queue.\n *\n * Sample usage:\n * ```\n * const { Types: OfflineTypes, Creators: OfflineCreators } = createOfflineActions({\n *   updateUser: ['userId'],\n * })\n * ```\n *\n * @param {Object} config Reduxsauce configuration object with action definitions.\n */\n\n\nfunction createOfflineActions(config) {\n  var _createActions = (0, _reduxsauce.createActions)(config),\n      Types = _createActions.Types,\n      Creators = _createActions.Creators;\n\n  var OfflineCreators = (0, _lodash.mapValues)(Creators, function (creator) {\n    return appendOfflineMeta(creator);\n  });\n  return {\n    Types: Types,\n    Creators: OfflineCreators\n  };\n}\n/**\n * Provides an alternative way to mark an action as offline action.\n *\n * Modifies given action creators object\n * by appending offline meta to specified action names.\n *\n * This is useful as it does not require merging back Creators and OfflineCreators.\n *\n * @param {Object} creators Reduxsauce's action creators.\n * @param {Array} offlineActions An array of action names.\n */\n\n\nfunction markActionsOffline(creators, offlineActions) {\n  (0, _lodash.forEach)(offlineActions, function (offlineAction) {\n    if ((0, _lodash.has)(creators, offlineAction)) {\n      // eslint-disable-next-line no-param-reassign\n      creators[offlineAction] = appendOfflineMeta(creators[offlineAction]);\n    }\n  });\n}\n/**\n * Provides an object with the action type that is utilized to queue request actions.\n * The action provided should include a type and the payload.\n *\n * @param {Object} action An action that needs to be queued.\n */\n\n\nvar queueAction = exports.queueAction = function queueAction(action) {\n  return {\n    type: _actions.QUEUE_ACTION,\n    payload: _extends({}, action, {\n      meta: _extends({\n        uuid: (0, _v2.default)()\n      }, action.meta)\n    })\n  };\n};\n\nvar removeAction = exports.removeAction = function removeAction(action) {\n  return {\n    type: _actions.REMOVE_ACTION,\n    payload: {\n      uuid: action.uuid\n    }\n  };\n};","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/node_modules/redux-offline-queue/lib/offlineActions.js"],"names":["Object","defineProperty","exports","value","removeAction","queueAction","undefined","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","createOfflineActions","markActionsOffline","_reduxsauce","require","_lodash","_v","_v2","_interopRequireDefault","_actions","obj","__esModule","default","appendOfflineMeta","creator","creatorResult","apply","meta","uuid","queueIfOffline","config","_createActions","createActions","Types","Creators","OfflineCreators","mapValues","creators","offlineActions","forEach","offlineAction","has","action","type","QUEUE_ACTION","payload","REMOVE_ACTION"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.removeAction = exports.queueAction = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.createOfflineActions = createOfflineActions;\nexports.markActionsOffline = markActionsOffline;\n\nvar _reduxsauce = require('reduxsauce');\n\nvar _lodash = require('lodash');\n\nvar _v = require('uuid/v4');\n\nvar _v2 = _interopRequireDefault(_v);\n\nvar _actions = require('./actions');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Wraps reduxsauce's creator function to append offline metadata.\n *\n * @param {Function} creator Reduxsauce's creator function.\n */\nvar appendOfflineMeta = function appendOfflineMeta(creator) {\n  return function () {\n    var creatorResult = creator.apply(undefined, arguments);\n\n    return _extends({}, creatorResult, {\n      meta: _extends({\n        uuid: (0, _v2.default)()\n      }, creatorResult.meta, {\n        queueIfOffline: true\n      })\n    });\n  };\n};\n\n/**\n * Custom wrapper around reduxsauce's `createActions` that automatically appends\n * offline meta required by offline queue.\n *\n * Sample usage:\n * ```\n * const { Types: OfflineTypes, Creators: OfflineCreators } = createOfflineActions({\n *   updateUser: ['userId'],\n * })\n * ```\n *\n * @param {Object} config Reduxsauce configuration object with action definitions.\n */\nfunction createOfflineActions(config) {\n  var _createActions = (0, _reduxsauce.createActions)(config),\n      Types = _createActions.Types,\n      Creators = _createActions.Creators;\n\n  var OfflineCreators = (0, _lodash.mapValues)(Creators, function (creator) {\n    return appendOfflineMeta(creator);\n  });\n\n  return {\n    Types: Types,\n    Creators: OfflineCreators\n  };\n}\n\n/**\n * Provides an alternative way to mark an action as offline action.\n *\n * Modifies given action creators object\n * by appending offline meta to specified action names.\n *\n * This is useful as it does not require merging back Creators and OfflineCreators.\n *\n * @param {Object} creators Reduxsauce's action creators.\n * @param {Array} offlineActions An array of action names.\n */\nfunction markActionsOffline(creators, offlineActions) {\n  (0, _lodash.forEach)(offlineActions, function (offlineAction) {\n    if ((0, _lodash.has)(creators, offlineAction)) {\n      // eslint-disable-next-line no-param-reassign\n      creators[offlineAction] = appendOfflineMeta(creators[offlineAction]);\n    }\n  });\n}\n\n/**\n * Provides an object with the action type that is utilized to queue request actions.\n * The action provided should include a type and the payload.\n *\n * @param {Object} action An action that needs to be queued.\n */\nvar queueAction = exports.queueAction = function queueAction(action) {\n  return {\n    type: _actions.QUEUE_ACTION,\n    payload: _extends({}, action, {\n      meta: _extends({\n        uuid: (0, _v2.default)()\n      }, action.meta)\n    })\n  };\n};\n\nvar removeAction = exports.removeAction = function removeAction(action) {\n  return {\n    type: _actions.REMOVE_ACTION,\n    payload: {\n      uuid: action.uuid\n    }\n  };\n};"]},"metadata":{},"sourceType":"script"}