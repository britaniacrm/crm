{"ast":null,"code":"import { createActions } from 'reduxsauce';\n/**\n * Creating actions and types with reduxsauce.\n */\n\nexport const {\n  Types,\n  Creators\n} = createActions({\n  getFields: ['accessId', 'onSuccess', 'onLoader']\n});\nexport { Types as FieldTypes, Creators as FieldActions };","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/core/stores/field/field.actions.js"],"names":["createActions","Types","Creators","getFields","FieldTypes","FieldActions"],"mappings":"AAAA,SAASA,aAAT,QAA8B,YAA9B;AAEA;AACA;AACA;;AACA,OAAO,MAAM;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,IAAsBF,aAAa,CAAC;AAAEG,EAAAA,SAAS,EAAE,CAAC,UAAD,EAAa,WAAb,EAA0B,UAA1B;AAAb,CAAD,CAAzC;AAEP,SACEF,KAAK,IAAIG,UADX,EAEEF,QAAQ,IAAIG,YAFd","sourcesContent":["import { createActions } from 'reduxsauce'\n\n/**\n * Creating actions and types with reduxsauce.\n */\nexport const { Types, Creators } = createActions({ getFields: ['accessId', 'onSuccess', 'onLoader'] })\n\nexport {\n  Types as FieldTypes,\n  Creators as FieldActions\n}\n"]},"metadata":{},"sourceType":"module"}