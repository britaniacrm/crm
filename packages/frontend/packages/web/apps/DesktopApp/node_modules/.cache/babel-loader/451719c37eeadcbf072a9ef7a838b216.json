{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/components/Modal/HeaderTitleClose/index.js\";\nimport React, { useMemo } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport DialogTitle from '@material-ui/core/DialogTitle/DialogTitle';\nimport CloseIconButton from '@britania-crm/web-components/IconButton/CloseIconButton/CloseIconButton';\nimport FullScreenExitIconButton from '@britania-crm/web-components/IconButton/FullScreenExitIconButton';\nimport FullScreenIconButton from '@britania-crm/web-components/IconButton/FullScreenIconButton/FullScreenIconButton';\nimport useStyles from './styles';\n\nconst HeaderTitleClose = props => {\n  const {\n    title,\n    disableTypography,\n    titleClass,\n    onClose,\n    escape,\n    containerClass,\n    fullScreenButton,\n    fullScreen,\n    onChangeFullScreen,\n    variant\n  } = props;\n  const classes = useStyles();\n  const fullScreenIconButton = useMemo(() => {\n    if (fullScreenButton) {\n      let CustomButton = FullScreenIconButton;\n\n      if (fullScreen) {\n        CustomButton = FullScreenExitIconButton;\n      }\n\n      return /*#__PURE__*/React.createElement(CustomButton, {\n        size: \"small\",\n        className: classes.fullScreenIcon,\n        marginHorizontal: true,\n        marginVertical: true,\n        onClick: onChangeFullScreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return null;\n  }, [fullScreenButton, fullScreen, classes.fullScreenIcon, onChangeFullScreen]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: [classes.header, containerClass].join(' '),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    className: clsx({\n      [classes.title]: true,\n      [titleClass]: true,\n      [classes.center]: variant === 'center'\n    }),\n    disableTypography: disableTypography,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, title), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: 'absolute',\n      width: '98%',\n      display: 'flex',\n      justifyContent: 'flex-end',\n      paddingTop: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, fullScreenIconButton, escape && /*#__PURE__*/React.createElement(CloseIconButton, {\n    size: \"small\",\n    className: classes.closeIcon,\n    marginHorizontal: true,\n    marginVertical: true,\n    onClick: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  })));\n};\n\nHeaderTitleClose.propTypes = {\n  escape: PropTypes.bool.isRequired,\n  disableTypography: PropTypes.bool,\n  titleClass: PropTypes.string,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  onClose: PropTypes.func,\n  containerClass: PropTypes.string,\n  fullScreenButton: PropTypes.bool,\n  fullScreen: PropTypes.bool.isRequired,\n  onChangeFullScreen: PropTypes.func.isRequired,\n  variant: PropTypes.string.isRequired\n};\nHeaderTitleClose.defaultProps = {\n  disableTypography: false,\n  title: null,\n  titleClass: null,\n\n  onClose() {},\n\n  containerClass: null,\n  fullScreenButton: false\n};\nexport default HeaderTitleClose;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/components/Modal/HeaderTitleClose/index.js"],"names":["React","useMemo","clsx","PropTypes","DialogTitle","CloseIconButton","FullScreenExitIconButton","FullScreenIconButton","useStyles","HeaderTitleClose","props","title","disableTypography","titleClass","onClose","escape","containerClass","fullScreenButton","fullScreen","onChangeFullScreen","variant","classes","fullScreenIconButton","CustomButton","fullScreenIcon","header","join","center","position","width","display","justifyContent","paddingTop","closeIcon","propTypes","bool","isRequired","string","oneOfType","element","func","defaultProps"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react'\n\nimport clsx from 'clsx'\nimport PropTypes from 'prop-types'\n\nimport DialogTitle from '@material-ui/core/DialogTitle/DialogTitle'\n\nimport CloseIconButton from '@britania-crm/web-components/IconButton/CloseIconButton/CloseIconButton'\nimport FullScreenExitIconButton from '@britania-crm/web-components/IconButton/FullScreenExitIconButton'\nimport FullScreenIconButton from '@britania-crm/web-components/IconButton/FullScreenIconButton/FullScreenIconButton'\n\nimport useStyles from './styles'\n\nconst HeaderTitleClose = (props) => {\n  const {\n    title,\n    disableTypography,\n    titleClass,\n    onClose,\n    escape,\n    containerClass,\n    fullScreenButton,\n    fullScreen,\n    onChangeFullScreen,\n    variant\n  } = props\n\n  const classes = useStyles()\n\n  const fullScreenIconButton = useMemo(() => {\n    if (fullScreenButton) {\n      let CustomButton = FullScreenIconButton\n      if (fullScreen) {\n        CustomButton = FullScreenExitIconButton\n      }\n      return <CustomButton size=\"small\" className={ classes.fullScreenIcon } marginHorizontal marginVertical onClick={ onChangeFullScreen } />\n    }\n    return null\n  }, [fullScreenButton, fullScreen, classes.fullScreenIcon, onChangeFullScreen])\n\n  return (\n    <div className={ [classes.header, containerClass].join(' ') }>\n      <DialogTitle\n        className={ clsx({\n          [classes.title]: true,\n          [titleClass]: true,\n          [classes.center]: variant === 'center'\n        }) }\n        disableTypography={ disableTypography }\n      >\n        {title}\n      </DialogTitle>\n      <div\n        style={ {\n          position: 'absolute',\n          width: '98%',\n          display: 'flex',\n          justifyContent: 'flex-end',\n          paddingTop: 10\n        } }\n      >\n        {fullScreenIconButton}\n        {escape && (\n          <CloseIconButton size=\"small\" className={ classes.closeIcon } marginHorizontal marginVertical onClick={ onClose } />\n        )}\n      </div>\n    </div>\n  )\n}\n\nHeaderTitleClose.propTypes = {\n  escape: PropTypes.bool.isRequired,\n  disableTypography: PropTypes.bool,\n  titleClass: PropTypes.string,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  onClose: PropTypes.func,\n  containerClass: PropTypes.string,\n  fullScreenButton: PropTypes.bool,\n  fullScreen: PropTypes.bool.isRequired,\n  onChangeFullScreen: PropTypes.func.isRequired,\n  variant: PropTypes.string.isRequired\n}\n\nHeaderTitleClose.defaultProps = {\n  disableTypography: false,\n  title: null,\n  titleClass: null,\n  onClose () {},\n  containerClass: null,\n  fullScreenButton: false\n}\n\nexport default HeaderTitleClose\n"]},"metadata":{},"sourceType":"module"}