{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/imagelogin/screens/ImageLoginScreen/ImageLoginScreen.js\";\nimport React, { useCallback, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport I18n, { useT } from '@britania-crm/i18n';\nimport { uploadFile, getFile, setDefaultImage } from '@britania-crm/services/apis/crmApi/resources/administration.service';\nimport Button from '@britania-crm/web-components/Button';\nimport Checkbox from '@britania-crm/web-components/Checkbox';\nimport InfoIcon from '@britania-crm/web-components/Icons/infoIcon';\nimport Upload from '@britania-crm/web-components/Upload';\nimport { PageWrapper, FooterContainer, InfoContainer, useStyles } from './styles';\n\nconst ImageLoginScreen = () => {\n  const t = useT();\n  const classes = useStyles();\n  const history = useHistory();\n  const [checked, setChecked] = useState(false);\n  const [makeUpload, setMakeUpload] = useState(false);\n  const [makeDelete, setMakeDelete] = useState(false);\n  const [showChecked, setShowChecked] = useState(true);\n  const [hasFile, setHasFile] = useState(false);\n  const [isPreview, setIsPreview] = useState(false);\n  const handleSave = useCallback(() => {\n    if (checked) {\n      setMakeDelete(true);\n      setMakeUpload(false);\n    } else {\n      setShowChecked(false);\n      setMakeDelete(false);\n      setMakeUpload(true);\n    }\n  }, [checked]);\n  const handleDefaultImageCheckboxChange = useCallback(async event => {\n    const {\n      checked: ch\n    } = event.target;\n    setChecked(!!ch);\n  }, []);\n  return /*#__PURE__*/React.createElement(PageWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    classes: {\n      root: classes.card\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    classes: {\n      root: classes.cardContent\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: classes.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(I18n, {\n    as: Button,\n    color: \"secondary\",\n    variant: \"outlined\",\n    onClick: history.goBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, \"back\"), /*#__PURE__*/React.createElement(I18n, {\n    as: Typography,\n    variant: \"h6\",\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, \"login image\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Upload, {\n    showsDefault: checked,\n    isPreview: value => setIsPreview(value),\n    uploadFile: uploadFile,\n    deleteFile: setDefaultImage,\n    getFile: getFile,\n    hasFile: value => setHasFile(value),\n    makeUpload: makeUpload,\n    makeDelete: makeDelete,\n    handleClose: () => history.go(0),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }), showChecked && /*#__PURE__*/React.createElement(FooterContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InfoContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(InfoIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }), \"A propor\\xE7\\xE3o ideal para sua imagem \\xE9 16:9\"), /*#__PURE__*/React.createElement(Checkbox, {\n    detached: true,\n    disabled: !hasFile,\n    checked: checked,\n    onChange: handleDefaultImageCheckboxChange,\n    name: \"defaultLoginImage\",\n    color: \"primary\",\n    label: t('login image use default'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: classes.buttons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(I18n, {\n    as: Button,\n    color: \"secondary\",\n    variant: \"outlined\",\n    onClick: () => history.go(0),\n    className: classes.btnCancel,\n    disabled: !checked && !hasFile || !checked && hasFile && !isPreview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, \"cancel\"), /*#__PURE__*/React.createElement(I18n, {\n    as: Button,\n    disabled: !checked && !hasFile || !checked && hasFile && !isPreview,\n    className: classes.saveChangesButton,\n    onClick: handleSave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, \"login image save\")))));\n};\n\nexport default ImageLoginScreen;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/imagelogin/screens/ImageLoginScreen/ImageLoginScreen.js"],"names":["React","useCallback","useState","useHistory","Card","CardActions","CardContent","Grid","Typography","I18n","useT","uploadFile","getFile","setDefaultImage","Button","Checkbox","InfoIcon","Upload","PageWrapper","FooterContainer","InfoContainer","useStyles","ImageLoginScreen","t","classes","history","checked","setChecked","makeUpload","setMakeUpload","makeDelete","setMakeDelete","showChecked","setShowChecked","hasFile","setHasFile","isPreview","setIsPreview","handleSave","handleDefaultImageCheckboxChange","event","ch","target","root","card","cardContent","header","goBack","title","value","go","buttons","btnCancel","saveChangesButton"],"mappings":"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","sourcesContent":["import React, {\n  useCallback,\n  useState\n} from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\n\nimport I18n, { useT } from '@britania-crm/i18n'\nimport {\n  uploadFile,\n  getFile,\n  setDefaultImage\n} from '@britania-crm/services/apis/crmApi/resources/administration.service'\nimport Button from '@britania-crm/web-components/Button'\nimport Checkbox from '@britania-crm/web-components/Checkbox'\nimport InfoIcon from '@britania-crm/web-components/Icons/infoIcon'\nimport Upload from '@britania-crm/web-components/Upload'\n\nimport {\n  PageWrapper,\n  FooterContainer,\n  InfoContainer,\n  useStyles\n} from './styles'\n\nconst ImageLoginScreen = () => {\n  const t = useT()\n  const classes = useStyles()\n  const history = useHistory()\n\n  const [checked, setChecked] = useState(false)\n  const [makeUpload, setMakeUpload] = useState(false)\n  const [makeDelete, setMakeDelete] = useState(false)\n  const [showChecked, setShowChecked] = useState(true)\n  const [hasFile, setHasFile] = useState(false)\n  const [isPreview, setIsPreview] = useState(false)\n\n  const handleSave = useCallback(() => {\n    if (checked) {\n      setMakeDelete(true)\n      setMakeUpload(false)\n    } else {\n      setShowChecked(false)\n      setMakeDelete(false)\n      setMakeUpload(true)\n    }\n  }, [checked])\n\n  const handleDefaultImageCheckboxChange = useCallback(\n    async (event) => {\n      const { checked: ch } = event.target\n      setChecked(!!ch)\n    },\n    []\n  )\n\n  return (\n    <PageWrapper>\n      <Card classes={ { root: classes.card } }>\n        <CardContent classes={ { root: classes.cardContent } }>\n          <Grid item xs={ 12 } className={ classes.header }>\n            <I18n as={ Button } color=\"secondary\" variant=\"outlined\" onClick={ history.goBack } >\n            back\n            </I18n>\n            <I18n as={ Typography } variant=\"h6\" className={ classes.title } >\n            login image\n            </I18n>\n          </Grid>\n          <Grid item xs={ 12 }>\n            <Upload\n              showsDefault={ checked }\n              isPreview={ (value) => setIsPreview(value) }\n              uploadFile={ uploadFile }\n              deleteFile={ setDefaultImage }\n              getFile={ getFile }\n              hasFile={ (value) => setHasFile(value) }\n              makeUpload={ makeUpload }\n              makeDelete={ makeDelete }\n              handleClose={ () => history.go(0) }\n            />\n            {\n              showChecked && (\n                <FooterContainer>\n                  <InfoContainer>\n                    <InfoIcon/>\n                    A proporção ideal para sua imagem é 16:9\n                  </InfoContainer>\n                  <Checkbox\n                    detached\n                    disabled={ !hasFile }\n                    checked={ checked }\n                    onChange={ handleDefaultImageCheckboxChange }\n                    name=\"defaultLoginImage\"\n                    color=\"primary\"\n                    label={ t('login image use default') }\n                  />\n                </FooterContainer>\n              )\n            }\n          </Grid>\n        </CardContent>\n        <CardActions>\n          <Grid item xs={ 12 } className={ classes.buttons }>\n            <I18n as={ Button }\n              color=\"secondary\"\n              variant=\"outlined\"\n              onClick={ () => history.go(0) }\n              className={ classes.btnCancel }\n              disabled={\n                (!checked && !hasFile) ||\n                  (!checked && hasFile && !isPreview)\n              }\n            >\n            cancel\n            </I18n>\n            <I18n as={ Button }\n              disabled={\n                (!checked && !hasFile) ||\n                  (!checked && hasFile && !isPreview)\n              }\n              className={ classes.saveChangesButton }\n              onClick={ handleSave }\n            >\n            login image save\n            </I18n>\n          </Grid>\n        </CardActions>\n      </Card>\n\n    </PageWrapper>\n  )\n}\n\nexport default ImageLoginScreen\n"]},"metadata":{},"sourceType":"module"}