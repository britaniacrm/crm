{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/equalization/containers/EqualizationFormFilter/EqualizationFormFilter.js\";\nimport React, { forwardRef, useMemo } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport equalizationFilterSchema, { INITIAL_VALUES } from '@britania-crm/forms/schemas/equalization/equalization.filter.schema';\nimport { useT } from '@britania-crm/i18n';\nimport { clients as clientsRoutes } from '@britania-crm/services/apis/crmApi/resources/routes';\nimport Form from '@britania-crm/web-components/Form';\nimport InputAutocomplete from '@britania-crm/web-components/InputAutocomplete';\nimport InputDateRange from '@britania-crm/web-components/InputDateRange';\nimport InputSelect from '@britania-crm/web-components/InputSelect';\nconst EqualizationFormFilter = forwardRef((props, formRef) => {\n  const t = useT();\n  const originMock = useMemo(() => [{\n    id: 0,\n    name: 'Britânia'\n  }, {\n    id: 1,\n    name: 'Philco'\n  }, {\n    id: 2,\n    name: 'Ambas'\n  }], []);\n  const parentCompanyParams = useMemo(() => ({\n    page: 1,\n    pageSize: 10,\n    clientRegistrationType: 'REGISTER'\n  }), []);\n  return /*#__PURE__*/React.createElement(Form, Object.assign({\n    ref: formRef\n  }, props, {\n    schemaConstructor: equalizationFilterSchema,\n    defaultValues: INITIAL_VALUES,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputSelect, {\n    clearable: true,\n    name: \"origin\",\n    label: t('establishment'),\n    options: originMock,\n    valueKey: \"name\",\n    loading: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputAutocomplete, {\n    name: \"destination\",\n    label: t('destination'),\n    url: clientsRoutes.get,\n    valueKey: \"parentCompany\",\n    paramName: \"parentCompany\",\n    params: parentCompanyParams,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputAutocomplete, {\n    name: \"client\",\n    label: t('client', {\n      howMany: 1\n    }),\n    url: clientsRoutes.get,\n    valueKey: \"parentCompany\",\n    paramName: \"parentCompany\",\n    params: parentCompanyParams,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputAutocomplete, {\n    name: \"product\",\n    label: t('product', {\n      howMany: 1\n    }),\n    url: clientsRoutes.get,\n    valueKey: \"parentCompany\",\n    paramName: \"parentCompany\",\n    params: parentCompanyParams,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputDateRange, {\n    name: \"date\",\n    label: t('date'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }))));\n});\nexport default EqualizationFormFilter;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/equalization/containers/EqualizationFormFilter/EqualizationFormFilter.js"],"names":["React","forwardRef","useMemo","Grid","equalizationFilterSchema","INITIAL_VALUES","useT","clients","clientsRoutes","Form","InputAutocomplete","InputDateRange","InputSelect","EqualizationFormFilter","props","formRef","t","originMock","id","name","parentCompanyParams","page","pageSize","clientRegistrationType","get","howMany"],"mappings":"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","sourcesContent":["import React, {\n  forwardRef,\n  useMemo\n} from 'react'\n\nimport Grid from '@material-ui/core/Grid'\n\nimport equalizationFilterSchema, { INITIAL_VALUES } from '@britania-crm/forms/schemas/equalization/equalization.filter.schema'\nimport { useT } from '@britania-crm/i18n'\nimport { clients as clientsRoutes } from '@britania-crm/services/apis/crmApi/resources/routes'\nimport Form from '@britania-crm/web-components/Form'\nimport InputAutocomplete from '@britania-crm/web-components/InputAutocomplete'\nimport InputDateRange from '@britania-crm/web-components/InputDateRange'\nimport InputSelect from '@britania-crm/web-components/InputSelect'\n\nconst EqualizationFormFilter = forwardRef((props, formRef) => {\n  const t = useT()\n\n  const originMock = useMemo(() =>\n    [\n      { id: 0, name: 'Britânia' },\n      { id: 1, name: 'Philco' },\n      { id: 2, name: 'Ambas' }\n    ],\n  [])\n\n  const parentCompanyParams = useMemo(\n    () => ({\n      page: 1,\n      pageSize: 10,\n      clientRegistrationType: 'REGISTER'\n    }),\n    []\n  )\n\n  return (\n    <Form\n      ref={ formRef }\n      { ...props }\n      schemaConstructor={ equalizationFilterSchema }\n      defaultValues={ INITIAL_VALUES }\n    >\n      <Grid container spacing={ 1 }>\n        <Grid item xs={ 12 } md={ 3 }>\n          <InputSelect\n            clearable\n            name=\"origin\"\n            label={ t('establishment') }\n            options={ originMock }\n            valueKey=\"name\"\n            loading={ false }\n          />\n        </Grid>\n        <Grid item xs={ 12 } md={ 3 }>\n          <InputAutocomplete\n            name=\"destination\"\n            label={ t('destination') }\n            url={ clientsRoutes.get }\n            valueKey=\"parentCompany\"\n            paramName=\"parentCompany\"\n            params={ parentCompanyParams }\n          />\n        </Grid>\n        <Grid item xs={ 12 } md={ 3 }>\n          <InputAutocomplete\n            name=\"client\"\n            label={ t('client', { howMany: 1 }) }\n            url={ clientsRoutes.get }\n            valueKey=\"parentCompany\"\n            paramName=\"parentCompany\"\n            params={ parentCompanyParams }\n          />\n        </Grid>\n        <Grid item xs={ 12 } md={ 3 }>\n          <InputAutocomplete\n            name=\"product\"\n            label={ t('product', { howMany: 1 }) }\n            url={ clientsRoutes.get }\n            valueKey=\"parentCompany\"\n            paramName=\"parentCompany\"\n            params={ parentCompanyParams }\n          />\n        </Grid>\n\n        <Grid item xs={ 12 } md={ 5 }>\n          <InputDateRange\n            name=\"date\"\n            label={ t('date') }\n          />\n        </Grid>\n\n      </Grid>\n    </Form>\n  )\n})\n\nexport default EqualizationFormFilter\n"]},"metadata":{},"sourceType":"module"}