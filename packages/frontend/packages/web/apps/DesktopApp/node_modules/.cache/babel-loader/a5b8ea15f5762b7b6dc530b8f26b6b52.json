{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/fan/containers/Attachments/Attachments.js\";\nimport React, { useCallback, useMemo, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport filter from 'lodash/filter';\nimport isEmpty from 'lodash/isEmpty';\nimport last from 'lodash/last';\nimport Grid from '@material-ui/core/Grid';\nimport { useDialog } from '@britania-crm/dialog';\nimport { useT } from '@britania-crm/i18n';\nimport { FanActions } from '@britania-crm/stores/fan';\nimport { formatBackDateToFriendlyFormat } from '@britania-crm/utils/date';\nimport DataTable from '@britania-crm/web-components/DataTable';\nimport InputHidden from '@britania-crm/web-components/InputHidden';\nimport FileModal from '../../modals/FileModal';\n\nconst Attachments = ({\n  isDisabled,\n  formRef,\n  idFan\n}) => {\n  const t = useT();\n  const {\n    createDialog\n  } = useDialog();\n  const dispatch = useCallback(useDispatch(), []);\n  const [attachments, setAttachments] = useState([]);\n  const version = useMemo(() => {\n    if (!isEmpty(attachments)) {\n      return last(attachments).version;\n    }\n\n    return 0;\n  }, [attachments]);\n  const columns = useMemo(() => [{\n    title: t('filename', {\n      howMany: 1\n    }),\n    field: 'filename',\n    defaultSort: 'asc',\n\n    render(row) {\n      let fileName;\n\n      if (!isEmpty(row.file)) {\n        fileName = row.file.filename.split('.');\n        return `${fileName[0]} (${row.version}).${fileName[1]}`;\n      }\n\n      fileName = row.filename.split('.');\n      return `${fileName[0]} (${row.version}).${fileName[1]}`;\n    }\n\n  }, {\n    title: t('description', {\n      howMany: 1\n    }),\n    field: 'description',\n    defaultSort: 'asc'\n  }, {\n    title: t('date'),\n    field: 'created_at',\n    defaultSort: 'asc',\n    render: row => formatBackDateToFriendlyFormat(row.created_at || row.file.created_at)\n  }], [t]);\n  const onAddClick = useCallback(() => {\n    createDialog({\n      id: 'createFileModal',\n      Component: FileModal,\n      props: {\n        mode: 'create',\n        idFan,\n        version,\n\n        onSave(values) {\n          formRef.current.setFieldValue('fan.attachments', old => [...old, { ...values,\n            fileId: values.id\n          }]);\n        }\n\n      }\n    });\n  }, [createDialog, formRef, idFan, version]);\n  const onViewFileClick = useCallback((event, row) => {\n    createDialog({\n      id: 'viewFileModal',\n      Component: FileModal,\n      props: {\n        row,\n        idFan,\n        version: row.version,\n        mode: 'view'\n      }\n    });\n  }, [createDialog, idFan]);\n  const onDeleteClick = useCallback((event, row) => {\n    dispatch(FanActions.deleteFileFan(row.id, () => formRef.current.setFieldValue('fan.attachments', old => filter(old, ({\n      tableData\n    }) => {\n      var _row$tableData;\n\n      return (tableData === null || tableData === void 0 ? void 0 : tableData.id) !== (row === null || row === void 0 ? void 0 : (_row$tableData = row.tableData) === null || _row$tableData === void 0 ? void 0 : _row$tableData.id);\n    }))));\n  }, [dispatch, formRef]);\n  const onDownloadClick = useCallback((event, row) => {\n    dispatch(FanActions.downloadFileFan(row === null || row === void 0 ? void 0 : row.path, row.filename));\n  }, [dispatch]);\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DataTable, {\n    data: attachments,\n    columns: columns,\n    addTitle: t('add new {this}', {\n      gender: 'male',\n      this: t('attachments', {\n        howMany: 1\n      })\n    }),\n    onAddClick: !isDisabled && onAddClick,\n    onDeleteClick: !isDisabled && onDeleteClick,\n    onDownloadClick: onDownloadClick,\n    onRowClick: onViewFileClick,\n    options: {\n      search: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(InputHidden, {\n    name: \"attachments\",\n    onValueChange: setAttachments,\n    showError: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }));\n};\n\nAttachments.propTypes = {\n  isDisabled: PropTypes.bool.isRequired,\n  formRef: PropTypes.any.isRequired,\n  idFan: PropTypes.number.isRequired\n};\nexport default Attachments;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/fan/containers/Attachments/Attachments.js"],"names":["React","useCallback","useMemo","useState","useDispatch","PropTypes","filter","isEmpty","last","Grid","useDialog","useT","FanActions","formatBackDateToFriendlyFormat","DataTable","InputHidden","FileModal","Attachments","isDisabled","formRef","idFan","t","createDialog","dispatch","attachments","setAttachments","version","columns","title","howMany","field","defaultSort","render","row","fileName","file","filename","split","created_at","onAddClick","id","Component","props","mode","onSave","values","current","setFieldValue","old","fileId","onViewFileClick","event","onDeleteClick","deleteFileFan","tableData","onDownloadClick","downloadFileFan","path","gender","this","search","propTypes","bool","isRequired","any","number"],"mappings":"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","sourcesContent":["import React, {\n  useCallback,\n  useMemo,\n  useState\n} from 'react'\nimport { useDispatch } from 'react-redux'\n\nimport PropTypes from 'prop-types'\n\nimport filter from 'lodash/filter'\nimport isEmpty from 'lodash/isEmpty'\nimport last from 'lodash/last'\n\nimport Grid from '@material-ui/core/Grid'\n\nimport { useDialog } from '@britania-crm/dialog'\nimport { useT } from '@britania-crm/i18n'\nimport { FanActions } from '@britania-crm/stores/fan'\nimport { formatBackDateToFriendlyFormat } from '@britania-crm/utils/date'\nimport DataTable from '@britania-crm/web-components/DataTable'\nimport InputHidden from '@britania-crm/web-components/InputHidden'\n\nimport FileModal from '../../modals/FileModal'\n\nconst Attachments = ({\n  isDisabled, formRef, idFan\n}) => {\n  const t = useT()\n  const { createDialog } = useDialog()\n  const dispatch = useCallback(useDispatch(), [])\n\n  const [attachments, setAttachments] = useState([])\n\n  const version = useMemo(\n    () => {\n      if (!isEmpty(attachments)) {\n        return last(attachments).version\n      }\n      return 0\n    }\n    , [attachments])\n\n  const columns = useMemo(() => [\n    {\n      title: t('filename', { howMany: 1 }),\n      field: 'filename',\n      defaultSort: 'asc',\n      render (row) {\n        let fileName\n        if (!isEmpty(row.file)) {\n          fileName = row.file.filename.split('.')\n          return `${ fileName[0] } (${ row.version }).${ fileName[1] }`\n        }\n        fileName = row.filename.split('.')\n        return `${ fileName[0] } (${ row.version }).${ fileName[1] }`\n      }\n    },\n    {\n      title: t('description', { howMany: 1 }),\n      field: 'description',\n      defaultSort: 'asc'\n    },\n    {\n      title: t('date'),\n      field: 'created_at',\n      defaultSort: 'asc',\n      render: (row) => formatBackDateToFriendlyFormat(row.created_at || row.file.created_at)\n    }\n  ], [t])\n\n  const onAddClick = useCallback(\n    () => {\n      createDialog({\n        id: 'createFileModal',\n        Component: FileModal,\n        props: {\n          mode: 'create',\n          idFan,\n          version,\n          onSave (values) {\n            formRef.current.setFieldValue('fan.attachments', (old) => [...old, { ...values, fileId: values.id }])\n          }\n        }\n      })\n    }, [createDialog, formRef, idFan, version])\n\n  const onViewFileClick = useCallback(\n    (event, row) => {\n      createDialog({\n        id: 'viewFileModal',\n        Component: FileModal,\n        props: {\n          row, idFan, version: row.version, mode: 'view'\n        }\n      })\n    }, [createDialog, idFan])\n\n  const onDeleteClick = useCallback(\n    (event, row) => {\n      dispatch(FanActions.deleteFileFan(\n        row.id,\n        () => formRef.current.setFieldValue('fan.attachments', (old) => filter(old, ({ tableData }) => tableData?.id !== row?.tableData?.id))\n      ))\n    },\n    [dispatch, formRef]\n  )\n\n  const onDownloadClick = useCallback(\n    (event, row) => {\n      dispatch(FanActions.downloadFileFan(row?.path, row.filename))\n    },\n    [dispatch]\n  )\n\n  return (\n    <Grid container spacing={ 1 }>\n      <DataTable\n        data={ attachments }\n        columns={ columns }\n        addTitle={ t('add new {this}', { gender: 'male', this: t('attachments', { howMany: 1 }) }) }\n        onAddClick={ !isDisabled && onAddClick }\n        onDeleteClick={ !isDisabled && onDeleteClick }\n        onDownloadClick={ onDownloadClick }\n        onRowClick={ onViewFileClick }\n        options={ { search: false } }\n      />\n      <InputHidden name=\"attachments\" onValueChange={ setAttachments } showError/>\n    </Grid>\n  )\n}\n\nAttachments.propTypes = {\n  isDisabled: PropTypes.bool.isRequired,\n  formRef: PropTypes.any.isRequired,\n  idFan: PropTypes.number.isRequired\n}\n\nexport default Attachments\n"]},"metadata":{},"sourceType":"module"}