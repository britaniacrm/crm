{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/messageboards/modals/ProfileLinkModal/ProfileLinkModal.js\";\nimport React, { useState, useCallback } from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getAllProfiles } from '@britania-crm/stores/profiles/profiles.selectors';\nimport Button from '@britania-crm/web-components/Button';\nimport Modal from '@britania-crm/web-components/Modal';\nimport TransferList from '@britania-crm/web-components/TransferList';\nimport useStyles, { Grid, BindContainer } from './styles';\n\nconst ProfileLinkModal = ({\n  id,\n  open,\n  handleClose,\n  title,\n  onSave,\n  initialProfiles\n}) => {\n  const classes = useStyles();\n  const [profilesSelected, setProfilesSelected] = useState(initialProfiles);\n  const profiles = useSelector(getAllProfiles);\n  const handleSubmit = useCallback(() => {\n    onSave(profilesSelected);\n    handleClose();\n  }, [handleClose, onSave, profilesSelected]);\n  return /*#__PURE__*/React.createElement(Modal, {\n    id: id,\n    open: open,\n    title: `Vínculo de ${title}`,\n    maxWidth: \"lg\",\n    FooterComponent: () => /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      alignItems: \"center\",\n      justify: \"center\",\n      className: classes.buttons,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"secondary\",\n      width: \"200px\",\n      variant: \"outlined\",\n      onClick: handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, \"Cancelar\"), /*#__PURE__*/React.createElement(Button, {\n      color: \"secondary\",\n      width: \"200px\",\n      variant: \"contained\",\n      onClick: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, \"Salvar\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(BindContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TransferList, {\n    detached: true,\n    title: title,\n    value: profilesSelected,\n    options: profiles,\n    onChange: setProfilesSelected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default ProfileLinkModal;\nProfileLinkModal.propTypes = {\n  id: PropTypes.string.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  title: PropTypes.string,\n  onSave: PropTypes.func,\n  initialProfiles: PropTypes.array\n};\nProfileLinkModal.defaultProps = {\n  handleSave() {},\n\n  title: 'Perfis',\n  rightData: [],\n  leftData: [],\n\n  onSave() {},\n\n  initialProfiles: []\n};","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/messageboards/modals/ProfileLinkModal/ProfileLinkModal.js"],"names":["React","useState","useCallback","useSelector","PropTypes","getAllProfiles","Button","Modal","TransferList","useStyles","Grid","BindContainer","ProfileLinkModal","id","open","handleClose","title","onSave","initialProfiles","classes","profilesSelected","setProfilesSelected","profiles","handleSubmit","buttons","propTypes","string","isRequired","func","bool","array","defaultProps","handleSave","rightData","leftData"],"mappings":"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","sourcesContent":["import React, {\n  useState,\n  useCallback\n} from 'react'\nimport { useSelector } from 'react-redux'\n\nimport PropTypes from 'prop-types'\n\nimport { getAllProfiles } from '@britania-crm/stores/profiles/profiles.selectors'\nimport Button from '@britania-crm/web-components/Button'\nimport Modal from '@britania-crm/web-components/Modal'\nimport TransferList from '@britania-crm/web-components/TransferList'\n\nimport useStyles, {\n  Grid,\n  BindContainer\n} from './styles'\n\nconst ProfileLinkModal = ({\n  id,\n  open,\n  handleClose,\n  title,\n  onSave,\n  initialProfiles\n}) => {\n  const classes = useStyles()\n\n  const [profilesSelected, setProfilesSelected] = useState(initialProfiles)\n\n  const profiles = useSelector(getAllProfiles)\n\n  const handleSubmit = useCallback(\n    () => {\n      onSave(profilesSelected)\n      handleClose()\n    },\n    [handleClose, onSave, profilesSelected]\n  )\n\n  return (\n    <Modal\n      id={ id }\n      open={ open }\n      title={ `Vínculo de ${ title }` }\n      maxWidth=\"lg\"\n      FooterComponent={ () => (\n        <Grid container alignItems=\"center\" justify=\"center\" className={ classes.buttons }>\n          <Button\n            color=\"secondary\"\n            width=\"200px\"\n            variant=\"outlined\"\n            onClick={ handleClose }\n          >\n            Cancelar\n          </Button>\n          <Button\n            color=\"secondary\"\n            width=\"200px\"\n            variant=\"contained\"\n            onClick={ handleSubmit }\n          >\n            Salvar\n          </Button>\n        </Grid>\n      ) }\n    >\n      <BindContainer>\n        <TransferList\n          detached\n          title={ title }\n          value={ profilesSelected }\n          options={ profiles }\n          onChange={ setProfilesSelected }\n        />\n      </BindContainer>\n    </Modal>\n  )\n}\n\nexport default ProfileLinkModal\n\nProfileLinkModal.propTypes = {\n  id: PropTypes.string.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  title: PropTypes.string,\n  onSave: PropTypes.func,\n  initialProfiles: PropTypes.array\n}\n\nProfileLinkModal.defaultProps = {\n  handleSave () {},\n  title: 'Perfis',\n  rightData: [],\n  leftData: [],\n  onSave () {},\n  initialProfiles: []\n}\n"]},"metadata":{},"sourceType":"module"}