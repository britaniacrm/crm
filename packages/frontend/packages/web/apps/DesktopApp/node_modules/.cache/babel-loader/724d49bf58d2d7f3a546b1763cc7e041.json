{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/core/stores/stores.js\";\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport { createTransform } from 'redux-persist';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { parse, stringify } from 'flatted';\nimport PropTypes from 'prop-types';\nimport find from 'lodash/find';\n\nconst StoreProvider = ({\n  store,\n  children\n}) => /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(PersistGate, {\n  loading: null,\n  persistor: store.persist(),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }\n}, children));\n\nStoreProvider.propTypes = {\n  store: PropTypes.object.isRequired,\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.func]).isRequired\n};\n\nconst blacklistTransform = (...blackListKey) => createTransform((inboundState, key) => {\n  if (!find(blackListKey, item => item === key)) {\n    return inboundState;\n  }\n\n  return undefined;\n});\n\nconst circularTransform = createTransform(inboundState => stringify(inboundState), outboundState => parse(outboundState));\nexport { StoreProvider, blacklistTransform, circularTransform };","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/core/stores/stores.js"],"names":["React","Provider","createTransform","PersistGate","parse","stringify","PropTypes","find","StoreProvider","store","children","persist","propTypes","object","isRequired","oneOfType","element","func","blacklistTransform","blackListKey","inboundState","key","item","undefined","circularTransform","outboundState"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AAEA,SAASC,eAAT,QAAgC,eAAhC;AACA,SAASC,WAAT,QAA4B,iCAA5B;AAEA,SACEC,KADF,EAEEC,SAFF,QAGO,SAHP;AAIA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,IAAP,MAAiB,aAAjB;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,kBACpB,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAGD,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,WAAD;AAAa,EAAA,OAAO,EAAG,IAAvB;AAA8B,EAAA,SAAS,EAAGA,KAAK,CAACE,OAAN,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGD,QADH,CADF,CADF;;AAQAF,aAAa,CAACI,SAAd,GAA0B;AACxBH,EAAAA,KAAK,EAAEH,SAAS,CAACO,MAAV,CAAiBC,UADA;AAExBJ,EAAAA,QAAQ,EAAEJ,SAAS,CAACS,SAAV,CAAoB,CAC5BT,SAAS,CAACU,OADkB,EAE5BV,SAAS,CAACW,IAFkB,CAApB,EAGPH;AALqB,CAA1B;;AAQA,MAAMI,kBAAkB,GAAG,CAAC,GAAGC,YAAJ,KAAqBjB,eAAe,CAC7D,CAACkB,YAAD,EAAeC,GAAf,KAAuB;AACrB,MAAI,CAACd,IAAI,CAACY,YAAD,EAAgBG,IAAD,IAAUA,IAAI,KAAKD,GAAlC,CAAT,EAAiD;AAC/C,WAAOD,YAAP;AACD;;AACD,SAAOG,SAAP;AACD,CAN4D,CAA/D;;AASA,MAAMC,iBAAiB,GAAGtB,eAAe,CACtCkB,YAAD,IAAkBf,SAAS,CAACe,YAAD,CADY,EAEtCK,aAAD,IAAmBrB,KAAK,CAACqB,aAAD,CAFe,CAAzC;AAKA,SACEjB,aADF,EAEEU,kBAFF,EAGEM,iBAHF","sourcesContent":["import React from 'react'\nimport { Provider } from 'react-redux'\n\nimport { createTransform } from 'redux-persist'\nimport { PersistGate } from 'redux-persist/integration/react'\n\nimport {\n  parse,\n  stringify\n} from 'flatted'\nimport PropTypes from 'prop-types'\n\nimport find from 'lodash/find'\n\nconst StoreProvider = ({ store, children }) => (\n  <Provider store={ store }>\n    <PersistGate loading={ null } persistor={ store.persist() }>\n      {children}\n    </PersistGate>\n  </Provider>\n)\n\nStoreProvider.propTypes = {\n  store: PropTypes.object.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func\n  ]).isRequired\n}\n\nconst blacklistTransform = (...blackListKey) => createTransform(\n  (inboundState, key) => {\n    if (!find(blackListKey, (item) => item === key)) {\n      return inboundState\n    }\n    return undefined\n  }\n)\n\nconst circularTransform = createTransform(\n  (inboundState) => stringify(inboundState),\n  (outboundState) => parse(outboundState)\n)\n\nexport {\n  StoreProvider,\n  blacklistTransform,\n  circularTransform\n}\n"]},"metadata":{},"sourceType":"module"}