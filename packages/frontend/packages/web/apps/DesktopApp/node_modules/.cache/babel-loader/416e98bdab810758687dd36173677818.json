{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/customers/containers/RevenuesTable/RevenuesTable.js\";\nimport React, { useMemo, useCallback, useState } from 'react';\nimport moment from 'moment/moment';\nimport PropTypes from 'prop-types';\nimport filter from 'lodash/filter';\nimport map from 'lodash/map';\nimport { useDialog } from '@britania-crm/dialog';\nimport { useT } from '@britania-crm/i18n';\nimport { formatMoney } from '@britania-crm/utils/formatters';\nimport DataTable from '@britania-crm/web-components/DataTable';\nimport InputHidden from '@britania-crm/web-components/InputHidden';\nimport ConfirmModal from '@britania-crm/web-components/Modal/ConfirmModal';\nimport NewRevenueModal from '@britania-crm/web-src/modules/customers/modals/NewRevenueModal';\n\nconst RevenuesTable = ({\n  disabled,\n  formRef\n}) => {\n  const t = useT();\n  const {\n    createDialog\n  } = useDialog();\n  const [revenues, setRevenues] = useState([]);\n  const columns = useMemo(() => [{\n    title: t('month'),\n    field: 'month',\n    render: row => moment(row.month, 'M').format('MMMM')\n  }, {\n    title: t('year'),\n    field: 'year'\n  }, {\n    title: t('value'),\n    field: 'value',\n    render: row => formatMoney(row.value) || '-'\n  }], [t]);\n  const onAddClick = useCallback(() => createDialog({\n    id: 'modal-add-new-revenue',\n    Component: NewRevenueModal,\n    props: {\n      onSubmit(revenue) {\n        formRef.current.setFieldValue('additionalInformation.revenues', old => [...old, revenue]);\n      }\n\n    }\n  }), [createDialog, formRef]);\n  const onEditClick = useCallback((_, row) => createDialog({\n    id: 'modal-edit-revenue',\n    Component: NewRevenueModal,\n    props: {\n      revenue: row,\n\n      onSubmit(revenue) {\n        formRef.current.setFieldValue('additionalInformation.revenues', old => map(old, (item, index) => index === row.tableData.id ? {\n          id: row.id,\n          ...revenue\n        } : item));\n      }\n\n    }\n  }), [createDialog, formRef]);\n  const onDeleteClick = useCallback((_, row) => createDialog({\n    id: 'modal-delete-revenue',\n    Component: ConfirmModal,\n    props: {\n      onConfirm() {\n        formRef.current.setFieldValue('additionalInformation.revenues', old => filter(old, (item, index) => index !== row.tableData.id));\n      }\n\n    }\n  }), [createDialog, formRef]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DataTable, {\n    options: {\n      search: false\n    },\n    data: revenues,\n    columns: columns,\n    title: t('revenue last 12 months'),\n    titleProps: {\n      variant: 'h6'\n    },\n    minimalistToolbar: true,\n    addTitle: t('add new {this}', {\n      this: t('revenue', {\n        howMany: 1\n      }),\n      gender: 'male'\n    }),\n    onAddClick: !disabled && onAddClick,\n    onEditClick: !disabled && onEditClick,\n    onDeleteClick: !disabled && onDeleteClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(InputHidden, {\n    name: \"revenues\",\n    showError: true,\n    onValueChange: setRevenues,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }));\n};\n\nRevenuesTable.propTypes = {\n  formRef: PropTypes.any.isRequired,\n  disabled: PropTypes.bool.isRequired\n};\nexport default RevenuesTable;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/customers/containers/RevenuesTable/RevenuesTable.js"],"names":["React","useMemo","useCallback","useState","moment","PropTypes","filter","map","useDialog","useT","formatMoney","DataTable","InputHidden","ConfirmModal","NewRevenueModal","RevenuesTable","disabled","formRef","t","createDialog","revenues","setRevenues","columns","title","field","render","row","month","format","value","onAddClick","id","Component","props","onSubmit","revenue","current","setFieldValue","old","onEditClick","_","item","index","tableData","onDeleteClick","onConfirm","search","variant","this","howMany","gender","propTypes","any","isRequired","bool"],"mappings":"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","sourcesContent":["import React, {\n  useMemo,\n  useCallback,\n  useState\n} from 'react'\n\nimport moment from 'moment/moment'\nimport PropTypes from 'prop-types'\n\nimport filter from 'lodash/filter'\nimport map from 'lodash/map'\n\nimport { useDialog } from '@britania-crm/dialog'\nimport { useT } from '@britania-crm/i18n'\nimport { formatMoney } from '@britania-crm/utils/formatters'\nimport DataTable from '@britania-crm/web-components/DataTable'\nimport InputHidden from '@britania-crm/web-components/InputHidden'\nimport ConfirmModal from '@britania-crm/web-components/Modal/ConfirmModal'\nimport NewRevenueModal from '@britania-crm/web-src/modules/customers/modals/NewRevenueModal'\n\nconst RevenuesTable = ({ disabled, formRef }) => {\n  const t = useT()\n  const { createDialog } = useDialog()\n\n  const [revenues, setRevenues] = useState([])\n\n  const columns = useMemo(\n    () => [\n      {\n        title: t('month'),\n        field: 'month',\n        render: (row) => moment(row.month, 'M').format('MMMM')\n      },\n      {\n        title: t('year'),\n        field: 'year'\n      },\n      {\n        title: t('value'),\n        field: 'value',\n        render: (row) => formatMoney(row.value) || '-'\n      }\n    ],\n    [t]\n  )\n\n  const onAddClick = useCallback(\n    () => createDialog({\n      id: 'modal-add-new-revenue',\n      Component: NewRevenueModal,\n      props: {\n        onSubmit (revenue) {\n          formRef.current.setFieldValue('additionalInformation.revenues', (old) => [...old, revenue])\n        }\n      }\n    }),\n    [createDialog, formRef]\n  )\n\n  const onEditClick = useCallback(\n    (_, row) => createDialog({\n      id: 'modal-edit-revenue',\n      Component: NewRevenueModal,\n      props: {\n        revenue: row,\n        onSubmit (revenue) {\n          formRef.current.setFieldValue(\n            'additionalInformation.revenues',\n            (old) => map(old, (item, index) => index === row.tableData.id ? { id: row.id, ...revenue } : item)\n          )\n        }\n      }\n    }),\n    [createDialog, formRef]\n  )\n\n  const onDeleteClick = useCallback(\n    (_, row) => createDialog({\n      id: 'modal-delete-revenue',\n      Component: ConfirmModal,\n      props: {\n        onConfirm () {\n          formRef.current.setFieldValue(\n            'additionalInformation.revenues',\n            (old) => filter(old, (item, index) => index !== row.tableData.id)\n          )\n        }\n      }\n    }),\n    [createDialog, formRef]\n  )\n\n  return (\n    <>\n      <DataTable\n        options={ { search: false } }\n        data={ revenues }\n        columns={ columns }\n        title={ t('revenue last 12 months') }\n        titleProps={ { variant: 'h6' } }\n        minimalistToolbar\n        addTitle={ t('add new {this}', {\n          this: t('revenue', { howMany: 1 }),\n          gender: 'male'\n        }) }\n        onAddClick={ !disabled && onAddClick }\n        onEditClick={ !disabled && onEditClick }\n        onDeleteClick={ !disabled && onDeleteClick }\n      />\n      <InputHidden\n        name=\"revenues\"\n        showError\n        onValueChange={ setRevenues }\n      />\n    </>\n  )\n}\n\nRevenuesTable.propTypes = {\n  formRef: PropTypes.any.isRequired,\n  disabled: PropTypes.bool.isRequired\n}\n\nexport default RevenuesTable\n"]},"metadata":{},"sourceType":"module"}