{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/components/CustomAccordion/CustomAccordion.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport Typography from '@material-ui/core/Typography';\nimport Add from '@material-ui/icons/Add';\nimport Remove from '@material-ui/icons/Remove';\nimport { useT } from '@britania-crm/i18n';\nimport IconButton from '@britania-crm/web-components/IconButton';\nimport InfoIcon from '@britania-crm/web-components/Icons/infoIcon';\nimport Tooltip from '@britania-crm/web-components/Tooltip';\nimport useStyles from './styles';\n\nconst CustomAccordion = ({\n  header,\n  children,\n  handleInfo\n}) => {\n  const classes = useStyles();\n  const t = useT();\n  const [expanded, setExpanded] = useState(false);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Accordion, {\n    onChange: (event, expanded) => setExpanded(expanded),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AccordionSummary, {\n    expandIcon: expanded ? /*#__PURE__*/React.createElement(Remove, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 35\n      }\n    }) : /*#__PURE__*/React.createElement(Add, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 47\n      }\n    }),\n    \"aria-controls\": \"panel1a-content\",\n    id: \"panel1a-header\",\n    classes: {\n      content: classes.header\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    as: Typography,\n    className: classes.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, header), handleInfo && /*#__PURE__*/React.createElement(Tooltip, {\n    title: t('documentation', {\n      howMany: 1\n    }),\n    arrow: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    color: \"care\",\n    onClick: handleInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(InfoIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(AccordionDetails, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, children)));\n};\n\nCustomAccordion.propTypes = {\n  children: PropTypes.element.isRequired,\n  header: PropTypes.string.isRequired,\n  handleInfo: PropTypes.func\n};\nCustomAccordion.defaultProps = {\n  handleInfo: undefined\n};\nexport default CustomAccordion;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/components/CustomAccordion/CustomAccordion.js"],"names":["React","useState","PropTypes","Accordion","AccordionDetails","AccordionSummary","Typography","Add","Remove","useT","IconButton","InfoIcon","Tooltip","useStyles","CustomAccordion","header","children","handleInfo","classes","t","expanded","setExpanded","root","event","content","heading","howMany","propTypes","element","isRequired","string","func","defaultProps","undefined"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,GAAP,MAAgB,wBAAhB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AAEA,SAASC,IAAT,QAAqB,oBAArB;AACA,OAAOC,UAAP,MAAuB,yCAAvB;AACA,OAAOC,QAAP,MAAqB,6CAArB;AACA,OAAOC,OAAP,MAAoB,sCAApB;AAEA,OAAOC,SAAP,MAAsB,UAAtB;;AAEA,MAAMC,eAAe,GAAG,CAAC;AACvBC,EAAAA,MADuB;AACfC,EAAAA,QADe;AACLC,EAAAA;AADK,CAAD,KAElB;AACJ,QAAMC,OAAO,GAAGL,SAAS,EAAzB;AACA,QAAMM,CAAC,GAAGV,IAAI,EAAd;AAEA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,CAAC,KAAD,CAAxC;AAEA,sBACE;AAAK,IAAA,SAAS,EAAGiB,OAAO,CAACI,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,QAAQ,EAAG,CAACC,KAAD,EAAQH,QAAR,KAAqBC,WAAW,CAACD,QAAD,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,gBAAD;AACE,IAAA,UAAU,EAAGA,QAAQ,gBAAG,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,gBAAe,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADtC;AAEE,qBAAc,iBAFhB;AAGE,IAAA,EAAE,EAAC,gBAHL;AAIE,IAAA,OAAO,EAAG;AAAEI,MAAAA,OAAO,EAAEN,OAAO,CAACH;AAAnB,KAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,oBAAC,UAAD;AAAY,IAAA,EAAE,EAAGT,UAAjB;AAA8B,IAAA,SAAS,EAAGY,OAAO,CAACO,OAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,MADH,CANF,EASGE,UAAU,iBACT,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAGE,CAAC,CAAC,eAAD,EAAkB;AAAEO,MAAAA,OAAO,EAAE;AAAX,KAAlB,CAAlB;AAAsD,IAAA,KAAK,MAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,MAAlB;AAAyB,IAAA,OAAO,EAAGT,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAVJ,CADF,eAkBE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,QADH,CAlBF,CADF,CADF;AA0BD,CAlCD;;AAoCAF,eAAe,CAACa,SAAhB,GAA4B;AAC1BX,EAAAA,QAAQ,EAAEd,SAAS,CAAC0B,OAAV,CAAkBC,UADF;AAE1Bd,EAAAA,MAAM,EAAEb,SAAS,CAAC4B,MAAV,CAAiBD,UAFC;AAG1BZ,EAAAA,UAAU,EAAEf,SAAS,CAAC6B;AAHI,CAA5B;AAMAjB,eAAe,CAACkB,YAAhB,GAA+B;AAAEf,EAAAA,UAAU,EAAEgB;AAAd,CAA/B;AAEA,eAAenB,eAAf","sourcesContent":["import React, { useState } from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport Accordion from '@material-ui/core/Accordion'\nimport AccordionDetails from '@material-ui/core/AccordionDetails'\nimport AccordionSummary from '@material-ui/core/AccordionSummary'\nimport Typography from '@material-ui/core/Typography'\nimport Add from '@material-ui/icons/Add'\nimport Remove from '@material-ui/icons/Remove'\n\nimport { useT } from '@britania-crm/i18n'\nimport IconButton from '@britania-crm/web-components/IconButton'\nimport InfoIcon from '@britania-crm/web-components/Icons/infoIcon'\nimport Tooltip from '@britania-crm/web-components/Tooltip'\n\nimport useStyles from './styles'\n\nconst CustomAccordion = ({\n  header, children, handleInfo\n}) => {\n  const classes = useStyles()\n  const t = useT()\n\n  const [expanded, setExpanded] = useState(false)\n\n  return (\n    <div className={ classes.root }>\n      <Accordion onChange={ (event, expanded) => setExpanded(expanded) }>\n        <AccordionSummary\n          expandIcon={ expanded ? <Remove/> : <Add /> }\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n          classes={ { content: classes.header } }\n        >\n          <Typography as={ Typography } className={ classes.heading }>\n            {header}\n          </Typography>\n          {handleInfo && (\n            <Tooltip title={ t('documentation', { howMany: 1 }) } arrow>\n              <IconButton color=\"care\" onClick={ handleInfo } >\n                <InfoIcon />\n              </IconButton>\n            </Tooltip>\n          )}\n        </AccordionSummary>\n        <AccordionDetails>\n          {children}\n        </AccordionDetails>\n      </Accordion>\n    </div>\n  )\n}\n\nCustomAccordion.propTypes = {\n  children: PropTypes.element.isRequired,\n  header: PropTypes.string.isRequired,\n  handleInfo: PropTypes.func\n}\n\nCustomAccordion.defaultProps = { handleInfo: undefined }\n\nexport default CustomAccordion\n"]},"metadata":{},"sourceType":"module"}