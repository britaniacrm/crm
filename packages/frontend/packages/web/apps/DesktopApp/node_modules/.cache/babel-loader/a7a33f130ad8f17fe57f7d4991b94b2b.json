{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/users/modals/LinkUserProfileModal/LinkUserProfileModal.js\";\nimport React, { useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport I18n, { useT } from '@britania-crm/i18n';\nimport * as crmApiRoutes from '@britania-crm/services/apis/crmApi/resources/routes';\nimport useCrmApi from '@britania-crm/services/hooks/useCrmApi';\nimport Button from '@britania-crm/web-components/Button';\nimport Modal from '@britania-crm/web-components/Modal';\nimport TransferList from '@britania-crm/web-components/TransferList';\nimport { BindContainer, ButtonContainer } from '../styles';\n\nconst LinkUserProfileModal = props => {\n  const {\n    id,\n    open,\n    handleClose,\n    onSave,\n    initialProfiles,\n    username,\n    enableLoading\n  } = props;\n  const t = useT();\n  const {\n    data: profiles,\n    loading: loadingProfiles\n  } = useCrmApi(crmApiRoutes.profiles.list);\n  const [loading, setLoading] = useState(false);\n  const [selectedProfiles, setSelectedProfiles] = useState(initialProfiles);\n  const handleConfirm = useCallback(() => {\n    if (enableLoading) setLoading(true);\n    onSave(selectedProfiles, handleClose, () => enableLoading && setLoading(false));\n  }, [enableLoading, handleClose, onSave, selectedProfiles]);\n  return /*#__PURE__*/React.createElement(Modal, {\n    id: id,\n    title: t('link profile', {\n      howMany: 1\n    }),\n    open: open,\n    maxWidth: \"md\",\n    loading: loading,\n    fullWidth: true,\n    FooterComponent: () => /*#__PURE__*/React.createElement(ButtonContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"secondary\",\n      variant: \"outlined\",\n      onClick: handleClose,\n      disabled: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(I18n, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, \"cancel\")), /*#__PURE__*/React.createElement(Button, {\n      color: \"secondary\",\n      variant: \"contained\",\n      onClick: handleConfirm,\n      disabled: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(I18n, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, \"save\"))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(BindContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TransferList, {\n    detached: true,\n    title: t('profile', {\n      howMany: 2\n    }),\n    options: profiles,\n    value: selectedProfiles,\n    onChange: setSelectedProfiles,\n    loading: loadingProfiles,\n    header: username,\n    type: t('user', {\n      howMany: 1\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  })));\n};\n\nLinkUserProfileModal.propTypes = {\n  id: PropTypes.string.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  onSave: PropTypes.func.isRequired,\n  initialProfiles: PropTypes.array,\n  username: PropTypes.string,\n  enableLoading: PropTypes.bool\n};\nLinkUserProfileModal.defaultProps = {\n  initialProfiles: [],\n  username: '',\n  enableLoading: false\n};\nexport default LinkUserProfileModal;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/users/modals/LinkUserProfileModal/LinkUserProfileModal.js"],"names":["React","useCallback","useState","PropTypes","I18n","useT","crmApiRoutes","useCrmApi","Button","Modal","TransferList","BindContainer","ButtonContainer","LinkUserProfileModal","props","id","open","handleClose","onSave","initialProfiles","username","enableLoading","t","data","profiles","loading","loadingProfiles","list","setLoading","selectedProfiles","setSelectedProfiles","handleConfirm","howMany","propTypes","string","isRequired","func","bool","array","defaultProps"],"mappings":"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","sourcesContent":["import React, {\n  useCallback,\n  useState\n} from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport I18n, { useT } from '@britania-crm/i18n'\nimport * as crmApiRoutes from '@britania-crm/services/apis/crmApi/resources/routes'\nimport useCrmApi from '@britania-crm/services/hooks/useCrmApi'\nimport Button from '@britania-crm/web-components/Button'\nimport Modal from '@britania-crm/web-components/Modal'\nimport TransferList from '@britania-crm/web-components/TransferList'\n\nimport {\n  BindContainer,\n  ButtonContainer\n} from '../styles'\n\nconst LinkUserProfileModal = (props) => {\n  const {\n    id,\n    open,\n    handleClose,\n    onSave,\n    initialProfiles,\n    username,\n    enableLoading\n  } = props\n\n  const t = useT()\n  const { data: profiles, loading: loadingProfiles } = useCrmApi(crmApiRoutes.profiles.list)\n\n  const [loading, setLoading] = useState(false)\n  const [selectedProfiles, setSelectedProfiles] = useState(initialProfiles)\n\n  const handleConfirm = useCallback(\n    () => {\n      if (enableLoading) setLoading(true)\n      onSave(\n        selectedProfiles,\n        handleClose,\n        () => enableLoading && setLoading(false)\n      )\n    },\n    [enableLoading, handleClose, onSave, selectedProfiles]\n  )\n\n  return (\n    <Modal\n      id={ id }\n      title={ t('link profile', { howMany: 1 }) }\n      open={ open }\n      maxWidth=\"md\"\n      loading={ loading }\n      fullWidth\n      FooterComponent={ () => (\n        <ButtonContainer>\n          <Button\n            color=\"secondary\"\n            variant=\"outlined\"\n            onClick={ handleClose }\n            disabled={ loading }\n          >\n            <I18n>cancel</I18n>\n          </Button>\n          <Button\n            color=\"secondary\"\n            variant=\"contained\"\n            onClick={ handleConfirm }\n            disabled={ loading }\n          >\n            <I18n>save</I18n>\n          </Button>\n        </ButtonContainer>\n      ) }\n    >\n      <BindContainer>\n        <TransferList\n          detached\n          title={ t('profile', { howMany: 2 }) }\n          options={ profiles }\n          value={ selectedProfiles }\n          onChange={ setSelectedProfiles }\n          loading={ loadingProfiles }\n          header={ username }\n          type={ t('user', { howMany: 1 }) }\n        />\n      </BindContainer>\n    </Modal>\n  )\n}\n\nLinkUserProfileModal.propTypes = {\n  id: PropTypes.string.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  onSave: PropTypes.func.isRequired,\n  initialProfiles: PropTypes.array,\n  username: PropTypes.string,\n  enableLoading: PropTypes.bool\n}\n\nLinkUserProfileModal.defaultProps = {\n  initialProfiles: [],\n  username: '',\n  enableLoading: false\n}\n\nexport default LinkUserProfileModal\n"]},"metadata":{},"sourceType":"module"}