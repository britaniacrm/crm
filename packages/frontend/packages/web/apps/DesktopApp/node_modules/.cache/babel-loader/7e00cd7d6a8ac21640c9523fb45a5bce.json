{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/components/ButtonUploadFile/ButtonUploadFileStyled.js\";\nimport React, { useCallback, useMemo, useRef } from 'react'; // import { useDispatch } from 'react-redux'\n\nimport PropTypes from 'prop-types';\nimport uuid from 'short-uuid';\nimport { find } from 'lodash';\nimport filter from 'lodash/filter';\nimport isEmpty from 'lodash/isEmpty';\nimport map from 'lodash/map';\nimport reduce from 'lodash/reduce';\nimport size from 'lodash/size';\nimport Box from '@material-ui/core/Box';\nimport Chip from '@material-ui/core/Chip';\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport ImageOutlined from '@material-ui/icons/ImageOutlined';\nimport InfoIcon from '@material-ui/icons/Info'; // import { MSG025 } from '@britania-crm/constants/feedbackMessages.constants'\n// import { AppActions } from '@britania-crm/stores/app'\n\nimport colors from '@britania-crm/styles/colors';\nimport Button from '@britania-crm/web-components/Button';\nimport DeleteIcon from '@britania-crm/web-components/Icons/DeleteIcon';\nimport DownloadIcon from '@britania-crm/web-components/Icons/DownloadIcon';\nimport useStyles, { ErrorBox } from './styles';\n\nconst ButtonUploadFileStyled = ({\n  onChange,\n  error,\n  types,\n  value,\n  className,\n  variant,\n  buttonLabel,\n  label,\n  required,\n  isLoading,\n  disabled,\n  multiple,\n  toDownload,\n  toDelete,\n  toUpload,\n  name,\n  max\n}) => {\n  // const dispatch = useCallback(useDispatch(), [])\n  const classes = useStyles();\n  const inputRef = useRef(null);\n  const hasFile = useMemo(() => value instanceof File || !isEmpty(value), [value]);\n  const inputKey = useMemo(() => uuid().new(), // eslint-disable-next-line react-hooks/exhaustive-deps\n  [value]);\n  const canAddMoreFiles = useMemo(() => {\n    if (multiple) {\n      return max ? size(value) < max : true;\n    }\n\n    return !hasFile;\n  }, [hasFile, max, multiple, value]);\n  const handleUpload = useCallback(e => {\n    let file = e && e[0];\n\n    if (file) {\n      // if (!types.includes(e[0].type)) {\n      //   dispatch(AppActions.addAlert({\n      //     type: 'error',\n      //     message: MSG025\n      //   }))\n      //   onChange(multiple ? [] : '')\n      //   return\n      // }\n      if (multiple) {\n        const getExtension = str => {\n          const strBreaked = str.split('.');\n          return `.${strBreaked[strBreaked.length - 1]}`;\n        };\n\n        const getNameWithoutExtension = str => {\n          const strBreaked = str.split('.');\n          return strBreaked.slice(0, strBreaked.length - 1).join('.');\n        };\n\n        const {\n          name\n        } = file;\n\n        if (find(value, item => {\n          var _item$file;\n\n          return ((_item$file = item.file) === null || _item$file === void 0 ? void 0 : _item$file.filename) === name || item.name === name;\n        })) {\n          const nameWithoutExtension = getNameWithoutExtension(name);\n          const extension = getExtension(name);\n          const newCounter = reduce(value, (acc, item) => {\n            var _item$file2;\n\n            const filename = ((_item$file2 = item.file) === null || _item$file2 === void 0 ? void 0 : _item$file2.filename) || item.name;\n            const fileExtension = getExtension(filename);\n\n            if (fileExtension === extension) {\n              const filenameWithoutExtension = getNameWithoutExtension(filename);\n              const filenameBreaked = filenameWithoutExtension.split('(');\n              const filenameOriginal = filenameBreaked.slice(0, filenameBreaked.length > 1 ? filenameBreaked.length - 1 : 1).join('(');\n\n              if (nameWithoutExtension.trim() === filenameOriginal.trim()) {\n                return acc + 1;\n              }\n            }\n\n            return acc;\n          }, 0);\n\n          if (newCounter > 0) {\n            file = new File([file], `${nameWithoutExtension} (${newCounter})${extension}`);\n          }\n        }\n      }\n\n      onChange(multiple ? [...value, file] : file);\n      toUpload(file, name);\n    }\n  }, [multiple, name, onChange, toUpload, value]);\n  const removeFile = useCallback((file, index) => {\n    const newValue = multiple ? filter(value, (_, i) => i !== index) : '';\n    onChange(newValue);\n    toDelete(file);\n  }, [multiple, onChange, toDelete, value]);\n  const createChip = useCallback((file, index) => /*#__PURE__*/React.createElement(Chip, {\n    key: `${file.filename || file.name}-${index}`,\n    label: file.filename || file.name,\n    variant: \"outlined\",\n    deleteIcon: /*#__PURE__*/React.createElement(React.Fragment, null, file.id && /*#__PURE__*/React.createElement(DownloadIcon, {\n      className: classes.iconImage,\n      onClick: () => toDownload(name, file),\n      color: colors.secondary.main,\n      colorHover: colors.info.main,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 15\n      }\n    }), !disabled && /*#__PURE__*/React.createElement(DeleteIcon, {\n      className: classes.iconImage,\n      onClick: () => removeFile(file, index),\n      color: colors.secondary.main,\n      colorHover: colors.info.main,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 15\n      }\n    })),\n    onDelete: () => {},\n    icon: /*#__PURE__*/React.createElement(ImageOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 16\n      }\n    }),\n    classes: {\n      root: classes.chip,\n      label: classes.labelChip\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }\n  }), [classes.chip, classes.iconImage, classes.labelChip, disabled, name, removeFile, toDownload]);\n  const showChip = useMemo(() => {\n    if (multiple) {\n      return map(value, (file, index) => createChip(file.file || file, index));\n    }\n\n    return hasFile && createChip(value);\n  }, [createChip, hasFile, multiple, value]);\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    style: {\n      marginBottom: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    required: required,\n    error: !!error,\n    style: {\n      color: error ? colors.error.main : colors.black,\n      paddingBottom: 5,\n      paddingLeft: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }\n  }, label), /*#__PURE__*/React.createElement(\"input\", {\n    key: inputKey,\n    ref: inputRef,\n    accept: types.toString(),\n    className: classes.input,\n    id: `button-file-${name}`,\n    multiple: multiple,\n    type: \"file\",\n    name: name,\n    onChange: e => handleUpload(e.target.files),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }\n  }), !disabled && canAddMoreFiles && /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: `button-file-${name}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    id: name,\n    component: \"span\",\n    size: \"small\",\n    variant: variant,\n    className: className,\n    isLoading: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }\n  }, buttonLabel))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: classes.cardImage,\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'flex-start',\n      justifyContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }\n  }, showChip), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ErrorBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 9\n    }\n  }, !!error && /*#__PURE__*/React.createElement(Box, {\n    style: {\n      color: colors.error.main\n    },\n    component: \"span\",\n    display: \"flex\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InfoIcon, {\n    fontSize: \"small\",\n    style: {\n      marginRight: '8px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 15\n    }\n  }), ' ', error))));\n};\n\nButtonUploadFileStyled.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string,\n  types: PropTypes.array,\n  value: PropTypes.oneOfType([PropTypes.array, PropTypes.object, PropTypes.string]).isRequired,\n  className: PropTypes.string,\n  variant: PropTypes.oneOf(['outlined', 'contained', 'text']),\n  isLoading: PropTypes.bool,\n  disabled: PropTypes.bool,\n  required: PropTypes.bool,\n  buttonLabel: PropTypes.any,\n  label: PropTypes.any,\n  multiple: PropTypes.bool,\n  toDownload: PropTypes.func,\n  toDelete: PropTypes.func,\n  toUpload: PropTypes.func,\n  name: PropTypes.string.isRequired,\n  max: PropTypes.number\n};\nButtonUploadFileStyled.defaultProps = {\n  onChange() {},\n\n  error: null,\n  types: ['image/png', 'image/jpg', 'image/jpeg', 'image/gif'],\n  value: '',\n  className: null,\n  variant: 'contained',\n  buttonLabel: null,\n  label: null,\n  isLoading: false,\n  required: false,\n  disabled: false,\n  multiple: false,\n\n  toDelete() {},\n\n  toDownload() {},\n\n  toUpload() {},\n\n  max: undefined\n};\nexport default ButtonUploadFileStyled;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/components/ButtonUploadFile/ButtonUploadFileStyled.js"],"names":["React","useCallback","useMemo","useRef","PropTypes","uuid","find","filter","isEmpty","map","reduce","size","Box","Chip","Grid","InputLabel","ImageOutlined","InfoIcon","colors","Button","DeleteIcon","DownloadIcon","useStyles","ErrorBox","ButtonUploadFileStyled","onChange","error","types","value","className","variant","buttonLabel","label","required","isLoading","disabled","multiple","toDownload","toDelete","toUpload","name","max","classes","inputRef","hasFile","File","inputKey","new","canAddMoreFiles","handleUpload","e","file","getExtension","str","strBreaked","split","length","getNameWithoutExtension","slice","join","item","filename","nameWithoutExtension","extension","newCounter","acc","fileExtension","filenameWithoutExtension","filenameBreaked","filenameOriginal","trim","removeFile","index","newValue","_","i","createChip","id","iconImage","secondary","main","info","root","chip","labelChip","showChip","marginBottom","color","black","paddingBottom","paddingLeft","toString","input","target","files","cardImage","display","flexDirection","alignItems","justifyContent","marginRight","propTypes","func","isRequired","string","array","oneOfType","object","oneOf","bool","any","number","defaultProps","undefined"],"mappings":"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","sourcesContent":["import React, {\n  useCallback,\n  useMemo,\n  useRef\n} from 'react'\n// import { useDispatch } from 'react-redux'\n\nimport PropTypes from 'prop-types'\nimport uuid from 'short-uuid'\n\nimport { find } from 'lodash'\nimport filter from 'lodash/filter'\nimport isEmpty from 'lodash/isEmpty'\nimport map from 'lodash/map'\nimport reduce from 'lodash/reduce'\nimport size from 'lodash/size'\n\nimport Box from '@material-ui/core/Box'\nimport Chip from '@material-ui/core/Chip'\nimport Grid from '@material-ui/core/Grid'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport ImageOutlined from '@material-ui/icons/ImageOutlined'\nimport InfoIcon from '@material-ui/icons/Info'\n\n// import { MSG025 } from '@britania-crm/constants/feedbackMessages.constants'\n// import { AppActions } from '@britania-crm/stores/app'\nimport colors from '@britania-crm/styles/colors'\nimport Button from '@britania-crm/web-components/Button'\nimport DeleteIcon from '@britania-crm/web-components/Icons/DeleteIcon'\nimport DownloadIcon from '@britania-crm/web-components/Icons/DownloadIcon'\n\nimport useStyles, { ErrorBox } from './styles'\n\nconst ButtonUploadFileStyled = ({\n  onChange,\n  error,\n  types,\n  value,\n  className,\n  variant,\n  buttonLabel,\n  label,\n  required,\n  isLoading,\n  disabled,\n  multiple,\n  toDownload,\n  toDelete,\n  toUpload,\n  name,\n  max\n}) => {\n  // const dispatch = useCallback(useDispatch(), [])\n  const classes = useStyles()\n\n  const inputRef = useRef(null)\n\n  const hasFile = useMemo(\n    () => value instanceof File || !isEmpty(value),\n    [value]\n  )\n\n  const inputKey = useMemo(\n    () => uuid().new(),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [value]\n  )\n\n  const canAddMoreFiles = useMemo(\n    () => {\n      if (multiple) {\n        return max ? size(value) < max : true\n      }\n      return !hasFile\n    }\n    ,\n    [hasFile, max, multiple, value]\n  )\n\n  const handleUpload = useCallback(\n    (e) => {\n      let file = e && e[0]\n\n      if (file) {\n        // if (!types.includes(e[0].type)) {\n        //   dispatch(AppActions.addAlert({\n        //     type: 'error',\n        //     message: MSG025\n        //   }))\n        //   onChange(multiple ? [] : '')\n        //   return\n        // }\n\n        if (multiple) {\n          const getExtension = (str) => {\n            const strBreaked = str.split('.')\n            return `.${ strBreaked[strBreaked.length - 1] }`\n          }\n          const getNameWithoutExtension = (str) => {\n            const strBreaked = str.split('.')\n            return strBreaked\n              .slice(0, strBreaked.length - 1)\n              .join('.')\n          }\n          const { name } = file\n\n          if (find(value, (item) => item.file?.filename === name || item.name === name)) {\n            const nameWithoutExtension = getNameWithoutExtension(name)\n            const extension = getExtension(name)\n\n            const newCounter = reduce(\n              value,\n              (acc, item) => {\n                const filename = item.file?.filename || item.name\n                const fileExtension = getExtension(filename)\n\n                if (fileExtension === extension) {\n                  const filenameWithoutExtension = getNameWithoutExtension(filename)\n                  const filenameBreaked = filenameWithoutExtension.split('(')\n\n                  const filenameOriginal = filenameBreaked\n                    .slice(0, filenameBreaked.length > 1 ? filenameBreaked.length - 1 : 1)\n                    .join('(')\n\n                  if (nameWithoutExtension.trim() === filenameOriginal.trim()) {\n                    return acc + 1\n                  }\n                }\n                return acc\n              },\n              0\n            )\n            if (newCounter > 0) {\n              file = new File([file], `${ nameWithoutExtension } (${ newCounter })${ extension }`)\n            }\n          }\n        }\n\n        onChange(multiple ? [...value, file] : file)\n        toUpload(file, name)\n      }\n    },\n    [multiple, name, onChange, toUpload, value]\n  )\n\n  const removeFile = useCallback(\n    (file, index) => {\n      const newValue = multiple ? filter(value, (_, i) => i !== index) : ''\n\n      onChange(newValue)\n      toDelete(file)\n    },\n    [multiple, onChange, toDelete, value]\n  )\n\n  const createChip = useCallback(\n    (file, index) => (\n      <Chip\n        key={ `${ file.filename || file.name }-${ index }` }\n        label={ file.filename || file.name }\n        variant=\"outlined\"\n        deleteIcon={\n          <>\n            {file.id && (\n              <DownloadIcon\n                className={ classes.iconImage }\n                onClick={ () => toDownload(name, file) }\n                color={ colors.secondary.main }\n                colorHover={ colors.info.main }\n              />\n            )}\n            {!disabled && (\n              <DeleteIcon\n                className={ classes.iconImage }\n                onClick={ () => removeFile(file, index) }\n                color={ colors.secondary.main }\n                colorHover={ colors.info.main }\n              />\n            )}\n          </>\n        }\n        onDelete={ () => {} }\n        icon={ <ImageOutlined /> }\n        classes={ { root: classes.chip, label: classes.labelChip } }\n      />\n    ),\n    [classes.chip, classes.iconImage, classes.labelChip, disabled, name, removeFile, toDownload]\n  )\n\n  const showChip = useMemo(\n    () => {\n      if (multiple) {\n        return map(value, (file, index) => createChip(file.file || file, index))\n      }\n      return hasFile && createChip(value)\n    },\n    [createChip, hasFile, multiple, value]\n  )\n\n  return (\n    <Grid container style={ { marginBottom: 5 } }>\n      <Grid item xs={ 12 } >\n        <InputLabel\n          required={ required }\n          error={ !!error }\n          style={ {\n            color: error ? colors.error.main : colors.black,\n            paddingBottom: 5,\n            paddingLeft: 5\n          } }\n        >\n          {label}\n        </InputLabel>\n\n        <input\n          key={ inputKey }\n          ref={ inputRef }\n          accept={ types.toString() }\n          className={ classes.input }\n          id={ `button-file-${ name }` }\n          multiple={ multiple }\n          type=\"file\"\n          name={ name }\n          onChange={ (e) => handleUpload(e.target.files) }\n        />\n\n        {!disabled && canAddMoreFiles && (\n          <label htmlFor={ `button-file-${ name }` }>\n            <Button\n              id={ name }\n              component=\"span\"\n              size=\"small\"\n              variant={ variant }\n              className={ className }\n              isLoading={ isLoading }\n            >\n              {buttonLabel}\n            </Button>\n          </label>\n        )}\n      </Grid>\n\n      <Grid\n        item\n        xs={ 12 }\n        className={ classes.cardImage }\n        style={ {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'flex-start',\n          justifyContent: 'center'\n        } }\n      >\n        { showChip }\n      </Grid>\n\n      <Grid item xs={ 12 }>\n        <ErrorBox>\n          {!!error && (\n            <Box style={ { color: colors.error.main } } component=\"span\" display=\"flex\" alignItems=\"center\">\n              <InfoIcon fontSize=\"small\" style={ { marginRight: '8px' } } />\n              {' '}{ error }\n            </Box>\n          )}\n        </ErrorBox>\n      </Grid>\n\n    </Grid>\n  )\n}\n\nButtonUploadFileStyled.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string,\n  types: PropTypes.array,\n  value: PropTypes.oneOfType([\n    PropTypes.array,\n    PropTypes.object,\n    PropTypes.string\n  ]).isRequired,\n  className: PropTypes.string,\n  variant: PropTypes.oneOf(['outlined', 'contained', 'text']),\n  isLoading: PropTypes.bool,\n  disabled: PropTypes.bool,\n  required: PropTypes.bool,\n  buttonLabel: PropTypes.any,\n  label: PropTypes.any,\n  multiple: PropTypes.bool,\n  toDownload: PropTypes.func,\n  toDelete: PropTypes.func,\n  toUpload: PropTypes.func,\n  name: PropTypes.string.isRequired,\n  max: PropTypes.number\n}\n\nButtonUploadFileStyled.defaultProps = {\n  onChange () {},\n  error: null,\n  types: ['image/png', 'image/jpg', 'image/jpeg', 'image/gif'],\n  value: '',\n  className: null,\n  variant: 'contained',\n  buttonLabel: null,\n  label: null,\n  isLoading: false,\n  required: false,\n  disabled: false,\n  multiple: false,\n  toDelete () {},\n  toDownload () {},\n  toUpload () {},\n  max: undefined\n}\n\nexport default ButtonUploadFileStyled\n"]},"metadata":{},"sourceType":"module"}