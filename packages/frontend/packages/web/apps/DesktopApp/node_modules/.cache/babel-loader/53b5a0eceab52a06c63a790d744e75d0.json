{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/vpc/modals/NewNdModal/NewNdModal.js\";\nimport React, { useCallback, useRef, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport ndSchema, { INITIAL_VALUES } from '@britania-crm/forms/schemas/vpc/vpc.nd.schema';\nimport I18n, { useT } from '@britania-crm/i18n';\nimport { establishments as establishmentsRoutes } from '@britania-crm/services/apis/crmApi/resources/routes';\nimport Button from '@britania-crm/web-components/Button';\nimport Form from '@britania-crm/web-components/Form';\nimport InputAutocomplete from '@britania-crm/web-components/InputAutocomplete';\nimport InputDate from '@britania-crm/web-components/InputDate';\nimport InputHidden from '@britania-crm/web-components/InputHidden';\nimport InputMoney from '@britania-crm/web-components/InputMoney';\nimport InputNumber from '@britania-crm/web-components/InputNumber';\nimport InputSelect from '@britania-crm/web-components/InputSelect';\nimport Modal from '@britania-crm/web-components/Modal';\nimport TextArea from '@britania-crm/web-components/TextArea';\nimport useStyles from '../styles';\n\nconst NewNdModal = props => {\n  const {\n    id,\n    open,\n    handleClose,\n    onSubmit\n  } = props;\n  const t = useT();\n  const formRef = useRef(null);\n  const classes = useStyles();\n  const companyOptions = useMemo(() => [{\n    id: 'BRIT ELETRO',\n    name: 'BRIT ELETRO'\n  }, {\n    id: 'PHILCO',\n    name: 'PHILCO'\n  }], []);\n  const establishmentsParams = useMemo(() => ({\n    page: 1,\n    pageSize: 10\n  }), []);\n  const handleChangeIssuerCompany = useCallback(value => {\n    formRef.current.setFieldValue('issuerCompanyCode', value.establishmentCode);\n    formRef.current.setFieldValue('issuerCompanyName', value.establishmentDescription);\n  }, []);\n  const handleSubmit = useCallback(values => {\n    onSubmit(values);\n    handleClose();\n  }, [handleClose, onSubmit]);\n  return /*#__PURE__*/React.createElement(Modal, {\n    id: id,\n    open: open,\n    maxWidth: \"md\",\n    title: t('nd number'),\n    variant: \"space\",\n    fullWidth: true,\n    FooterComponent: () => /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      className: classes.buttons,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(I18n, {\n      as: Button,\n      onClick: () => formRef.current.reset(),\n      variant: \"text\",\n      color: \"secondary\",\n      type: \"reset\",\n      className: classes.resetBtn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, \"clean\")), /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(I18n, {\n      as: Button,\n      onClick: handleClose,\n      color: \"secondary\",\n      variant: \"outlined\",\n      className: classes.btnCancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, \"cancel\"), /*#__PURE__*/React.createElement(I18n, {\n      as: Button,\n      onClick: () => formRef.current.submit(),\n      color: \"secondary\",\n      className: classes.btnSave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, \"save\"))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    ref: formRef,\n    schemaConstructor: ndSchema,\n    defaultValues: INITIAL_VALUES,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputNumber, {\n    label: t('nd number'),\n    name: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputAutocomplete, {\n    url: establishmentsRoutes.getAll,\n    valueKey: \"establishmentDescription\",\n    paramName: \"description\",\n    params: establishmentsParams,\n    label: t('issuing company nd'),\n    name: \"issuerCompany\",\n    onValueChange: handleChangeIssuerCompany,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(InputHidden, {\n    name: \"issuerCompanyName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(InputHidden, {\n    name: \"issuerCompanyCode\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputDate, {\n    label: `${t('issue date')} ${t('nd')}`,\n    name: \"issueDate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputDate, {\n    label: `${t('due date')} ${t('nd')}`,\n    name: \"dueDate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputMoney, {\n    label: t('value'),\n    name: \"value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputSelect, {\n    label: t('company'),\n    name: \"company\",\n    options: companyOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextArea, {\n    label: t('observation', {\n      howMany: 1\n    }),\n    name: \"observation\",\n    rows: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  })))));\n};\n\nNewNdModal.propTypes = {\n  id: PropTypes.string.isRequired,\n  open: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired\n};\nexport default NewNdModal;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/vpc/modals/NewNdModal/NewNdModal.js"],"names":["React","useCallback","useRef","useMemo","PropTypes","Grid","ndSchema","INITIAL_VALUES","I18n","useT","establishments","establishmentsRoutes","Button","Form","InputAutocomplete","InputDate","InputHidden","InputMoney","InputNumber","InputSelect","Modal","TextArea","useStyles","NewNdModal","props","id","open","handleClose","onSubmit","t","formRef","classes","companyOptions","name","establishmentsParams","page","pageSize","handleChangeIssuerCompany","value","current","setFieldValue","establishmentCode","establishmentDescription","handleSubmit","values","buttons","reset","resetBtn","btnCancel","submit","btnSave","getAll","howMany","propTypes","string","isRequired","bool","func"],"mappings":"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","sourcesContent":["import React, {\n  useCallback,\n  useRef,\n  useMemo\n} from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport Grid from '@material-ui/core/Grid'\n\nimport ndSchema, { INITIAL_VALUES } from '@britania-crm/forms/schemas/vpc/vpc.nd.schema'\nimport I18n, { useT } from '@britania-crm/i18n'\nimport { establishments as establishmentsRoutes } from '@britania-crm/services/apis/crmApi/resources/routes'\nimport Button from '@britania-crm/web-components/Button'\nimport Form from '@britania-crm/web-components/Form'\nimport InputAutocomplete from '@britania-crm/web-components/InputAutocomplete'\nimport InputDate from '@britania-crm/web-components/InputDate'\nimport InputHidden from '@britania-crm/web-components/InputHidden'\nimport InputMoney from '@britania-crm/web-components/InputMoney'\nimport InputNumber from '@britania-crm/web-components/InputNumber'\nimport InputSelect from '@britania-crm/web-components/InputSelect'\nimport Modal from '@britania-crm/web-components/Modal'\nimport TextArea from '@britania-crm/web-components/TextArea'\n\nimport useStyles from '../styles'\n\nconst NewNdModal = (props) => {\n  const {\n    id,\n    open,\n    handleClose,\n    onSubmit\n  } = props\n\n  const t = useT()\n  const formRef = useRef(null)\n  const classes = useStyles()\n\n  const companyOptions = useMemo(\n    () => [\n      { id: 'BRIT ELETRO', name: 'BRIT ELETRO' },\n      { id: 'PHILCO', name: 'PHILCO' }\n    ],\n    []\n  )\n\n  const establishmentsParams = useMemo(\n    () => ({\n      page: 1,\n      pageSize: 10\n    }),\n    [])\n\n  const handleChangeIssuerCompany = useCallback(\n    (value) => {\n      formRef.current.setFieldValue('issuerCompanyCode', value.establishmentCode)\n      formRef.current.setFieldValue('issuerCompanyName', value.establishmentDescription)\n    },\n    []\n  )\n\n  const handleSubmit = useCallback(\n    (values) => {\n      onSubmit(values)\n      handleClose()\n    },\n    [handleClose, onSubmit]\n  )\n\n  return (\n    <Modal\n      id={ id }\n      open={ open }\n      maxWidth=\"md\"\n      title={ t('nd number') }\n      variant=\"space\"\n      fullWidth\n      FooterComponent={ () => (\n        <Grid item xs={ 12 } className={ classes.buttons }>\n          <Grid>\n            <I18n as={ Button }\n              onClick={ () => formRef.current.reset() }\n              variant=\"text\"\n              color=\"secondary\"\n              type=\"reset\"\n              className={ classes.resetBtn }\n            >\n            clean\n            </I18n>\n          </Grid>\n          <Grid>\n            <I18n as={ Button }\n              onClick={ handleClose }\n              color=\"secondary\"\n              variant=\"outlined\"\n              className={ classes.btnCancel }\n            >\n            cancel\n            </I18n>\n            <I18n as={ Button }\n              onClick={ () => formRef.current.submit() }\n              color=\"secondary\"\n              className={ classes.btnSave }\n            >\n            save\n            </I18n>\n          </Grid>\n        </Grid>\n      ) }\n    >\n      <Form\n        ref={ formRef }\n        schemaConstructor={ ndSchema }\n        defaultValues={ INITIAL_VALUES }\n        onSubmit={ handleSubmit }\n      >\n        <Grid container spacing={ 1 }>\n          <Grid item xs={ 12 } md={ 3 }>\n            <InputNumber\n              label={ t('nd number') }\n              name=\"number\"\n            />\n          </Grid>\n          <Grid item xs={ 12 } md={ 6 }>\n            <InputAutocomplete\n              url={ establishmentsRoutes.getAll }\n              valueKey=\"establishmentDescription\"\n              paramName=\"description\"\n              params={ establishmentsParams }\n              label={ t('issuing company nd') }\n              name=\"issuerCompany\"\n              onValueChange={ handleChangeIssuerCompany }\n            />\n            <InputHidden name=\"issuerCompanyName\" />\n            <InputHidden name=\"issuerCompanyCode\" />\n          </Grid>\n          <Grid item xs={ 12 } md={ 3 }>\n            <InputDate\n              label={ `${ t('issue date') } ${ t('nd') }` }\n              name=\"issueDate\"\n            />\n          </Grid>\n          <Grid item xs={ 12 } md={ 3 }>\n            <InputDate\n              label={ `${ t('due date') } ${ t('nd') }` }\n              name=\"dueDate\"\n            />\n          </Grid>\n          <Grid item xs={ 12 } md={ 3 }>\n            <InputMoney\n              label={ t('value') }\n              name=\"value\"\n            />\n          </Grid>\n          <Grid item xs={ 12 } md={ 3 }>\n            <InputSelect\n              label={ t('company') }\n              name=\"company\"\n              options={ companyOptions }\n            />\n          </Grid>\n          <Grid item xs={ 12 }>\n            <TextArea\n              label={ t('observation', { howMany: 1 }) }\n              name=\"observation\"\n              rows={ 2 }\n            />\n          </Grid>\n        </Grid>\n      </Form>\n    </Modal>\n  )\n}\n\nNewNdModal.propTypes = {\n  id: PropTypes.string.isRequired,\n  open: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired\n}\n\nexport default NewNdModal\n"]},"metadata":{},"sourceType":"module"}