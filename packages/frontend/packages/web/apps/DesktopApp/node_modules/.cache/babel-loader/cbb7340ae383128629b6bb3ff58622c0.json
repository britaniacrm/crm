{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/fan/containers/MainData/MainData.js\";\nimport React, { useMemo, useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport find from 'lodash/find';\nimport isEmpty from 'lodash/isEmpty';\nimport isEqual from 'lodash/isEqual';\nimport map from 'lodash/map';\nimport remove from 'lodash/remove';\nimport Grid from '@material-ui/core/Grid';\nimport { useFormEffect } from '@britania-crm/forms';\nimport { useT } from '@britania-crm/i18n';\nimport { representative as representativeRoutes, clients as clientsCrmRoutes, customer as customerCrmRoutes, lines as linesCrmRoutes } from '@britania-crm/services/apis/crmApi/resources/routes';\nimport useCrmApi from '@britania-crm/services/hooks/useCrmApi';\nimport { useSnackbar } from '@britania-crm/snackbar';\nimport { getErrorMessage } from '@britania-crm/utils/error';\nimport InputAutocomplete from '@britania-crm/web-components/InputAutocomplete';\nimport InputDateRange from '@britania-crm/web-components/InputDateRange';\nimport InputHidden from '@britania-crm/web-components/InputHidden';\nimport InputSelect from '@britania-crm/web-components/InputSelect';\nimport StatusSwitch from '@britania-crm/web-components/StatusSwitch';\nimport useStyles from './styles';\n\nconst MainData = ({\n  isDisabled,\n  formRef,\n  lineMasterOptions,\n  isEdit\n}) => {\n  const t = useT();\n  const classes = useStyles();\n  const snackbar = useSnackbar();\n  const [lineMaster, setLineMaster] = useState('');\n  const [lines, setLines] = useState('');\n  const [familiesOptions, setFamiliesOptions] = useState([]);\n  const [code, setCode] = useState('');\n  const {\n    data: linesFromApi,\n    loading: loadingLines\n  } = useCrmApi(lineMaster ? [linesCrmRoutes.getAll, lineMaster] : null, {\n    params: {\n      lineMasterCode: lineMaster\n    }\n  });\n  const familiesParams = useMemo(() => {\n    if (!isEmpty(lines)) {\n      return {\n        clientTotvsCode: code,\n        lines: lines.toString()\n      };\n    }\n  }, [code, lines]);\n  const {\n    data: familiesFromApi,\n    loading: familiesFromApiLoading\n  } = useCrmApi(familiesParams ? [linesCrmRoutes.getFamilies, familiesParams] : null, {\n    params: familiesParams\n  }, {\n    onErrorRetry(error) {\n      if (error.response.status === 500) {\n        snackbar.error(getErrorMessage(error));\n      }\n    },\n\n    revalidateOnFocus: false\n  });\n  const regionalParams = useMemo(() => {\n    if (!isEmpty(lines)) {\n      return {\n        page: 1,\n        pageSize: 10,\n        lineCodes: lines\n      };\n    }\n\n    return {};\n  }, [lines]);\n  const {\n    data: regionalFromApi,\n    loading: regionalFromApiLoading\n  } = useCrmApi(code ? [customerCrmRoutes.getRegional.replace(':clientCode', code), regionalParams] : null, {\n    params: regionalParams\n  }, {\n    onErrorRetry(error) {\n      if (error.response.status === 500) {\n        snackbar.error(getErrorMessage(error));\n      }\n    },\n\n    revalidateOnFocus: false\n  });\n  const COMPANY = useMemo(() => [{\n    id: 'BRITÂNIA ELETRODOMÉSTICOS S/A',\n    name: 'BRITÂNIA ELETRODOMÉSTICOS S/A'\n  }, {\n    id: 'BRITÂNIA ELETRÔNICOS S/A',\n    name: 'BRITÂNIA ELETRÔNICOS S/A'\n  }, {\n    id: 'PHILCO ELETRÔNICOS S/A',\n    name: 'PHILCO ELETRÔNICOS S/A'\n  }, {\n    id: 'TODAS AS EMPRESAS DO GRUPO',\n    name: 'TODAS AS EMPRESAS DO GRUPO'\n  }], []);\n  const respresentativeParams = useMemo(() => ({\n    page: 1,\n    pageSize: 10\n  }), []);\n  const clientParams = useMemo(() => ({\n    page: 1,\n    pageSize: 10,\n    clientRegistrationType: 'REGISTER'\n  }), []);\n  const setNameMatrix = useCallback(value => formRef.current.setFieldValue('fan.matrix', value), [formRef]);\n  const setCodeMatrix = useCallback(value => {\n    formRef.current.setFieldValue('fan.code', value);\n    setCode(value === null || value === void 0 ? void 0 : value.parentCompanyCode);\n  }, [formRef]);\n  const handleLineMaster = useCallback(value => {\n    setLineMaster(value);\n    setFamiliesOptions([]);\n    formRef.current.setData(old => ({ ...old,\n      fan: { ...old.fan,\n        lines: [],\n        linesFromBack: [],\n        linesExceptions: [],\n        families: [],\n        familiesExceptions: [],\n        familiesFromBack: [],\n        familiesExceptionsFromBack: []\n      }\n    }));\n  }, [formRef]);\n  const handleLines = useCallback(values => {\n    if (isEmpty(values)) {\n      setFamiliesOptions([]);\n      formRef.current.setData(old => ({ ...old,\n        fan: { ...old.fan,\n          families: [],\n          familiesExceptions: [],\n          familiesFromBack: [],\n          familiesExceptionsFromBack: []\n        }\n      }));\n    } else {\n      setLines(values);\n      formRef.current.setFieldValue('fan.linesFromBack', map(values, item => {\n        const newArray = find(linesFromApi, option => option.lineCode === item);\n        return {\n          code: newArray === null || newArray === void 0 ? void 0 : newArray.lineCode,\n          description: newArray === null || newArray === void 0 ? void 0 : newArray.lineDescription\n        };\n      }));\n    }\n  }, [formRef, linesFromApi]);\n  const handleFamilies = useCallback(values => {\n    if (!isEmpty(values)) {\n      formRef.current.setFieldValue('fan.familiesFromBack', remove(map(values, item => {\n        const newArray = find(familiesOptions, option => option.familyCode === item);\n        return {\n          code: newArray === null || newArray === void 0 ? void 0 : newArray.familyCode,\n          description: newArray === null || newArray === void 0 ? void 0 : newArray.familyDescription\n        };\n      }), s => isEqual(s, {})));\n    }\n  }, [familiesOptions, formRef]);\n  const handleLinesExceptions = useCallback(values => {\n    if (!isEmpty(values)) {\n      formRef.current.setFieldValue('fan.linesExceptionsFromBack', map(values, item => {\n        const newArray = find(linesFromApi, option => option.lineCode === item);\n        return {\n          code: newArray === null || newArray === void 0 ? void 0 : newArray.lineCode,\n          description: newArray === null || newArray === void 0 ? void 0 : newArray.lineDescription\n        };\n      }));\n    }\n  }, [formRef, linesFromApi]);\n  const handleFamiliesExceptions = useCallback(values => {\n    if (!isEmpty(values)) {\n      formRef.current.setFieldValue('fan.familiesExceptionsFromBack', map(values, item => {\n        const newArray = find(familiesOptions, option => option.familyCode === item);\n        return {\n          code: newArray === null || newArray === void 0 ? void 0 : newArray.familyCode,\n          description: newArray === null || newArray === void 0 ? void 0 : newArray.familyDescription\n        };\n      }));\n    }\n  }, [familiesOptions, formRef]);\n  useFormEffect(() => {\n    if (!isEmpty(familiesFromApi)) {\n      setFamiliesOptions(old => {\n        if (lines.length > 1) {\n          return [...old, ...familiesFromApi];\n        } else {\n          return familiesFromApi;\n        }\n      });\n    }\n  }, [familiesFromApi, formRef, isDisabled, lines]);\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputSelect, {\n    valueKey: \"name\",\n    idKey: \"id\",\n    name: \"company\",\n    label: t('company'),\n    required: true,\n    options: COMPANY,\n    disabled: isDisabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputAutocomplete, {\n    url: clientsCrmRoutes.get,\n    params: clientParams,\n    valueKey: \"parentCompanyCode\",\n    paramName: \"parentCompanyCode\",\n    name: \"code\",\n    label: t('matrix code', {\n      abbreviation: false\n    }),\n    disabled: isDisabled,\n    onValueChange: setNameMatrix,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputAutocomplete, {\n    url: clientsCrmRoutes.get,\n    params: clientParams,\n    valueKey: \"parentCompany\",\n    paramName: \"parentCompany\",\n    name: \"matrix\",\n    label: t('matrix', {\n      howMany: 1\n    }),\n    disabled: isDisabled,\n    onValueChange: setCodeMatrix,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputAutocomplete, {\n    url: representativeRoutes.getRepresentativeList,\n    params: respresentativeParams,\n    valueKey: \"name\",\n    paramName: \"name\",\n    name: \"responsible\",\n    label: t('responsible', {\n      howMany: 1\n    }),\n    disabled: isDisabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputAutocomplete, {\n    options: regionalFromApi,\n    loading: regionalFromApiLoading,\n    valueKey: \"approverDescription\",\n    paramName: \"approverCode\",\n    name: \"regionalManager\",\n    label: t('regional manager'),\n    disabled: isDisabled,\n    infoDescription: t('more than one regional manager can be included.'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputDateRange, {\n    labelTo: t('end date'),\n    labelFrom: t('start date'),\n    name: \"date\",\n    disabled: isDisabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputSelect, {\n    valueKey: \"masterLineDescription\",\n    idKey: \"masterLineCode\",\n    name: \"directorship\",\n    label: t('board of Directors'),\n    options: lineMasterOptions,\n    disabled: isDisabled,\n    onValueChange: handleLineMaster,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 9\n    }\n  })), isEdit && /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 2,\n    className: classes.status,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(StatusSwitch, {\n    name: \"active\",\n    disabled: isDisabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputSelect, {\n    valueKey: \"lineDescription\",\n    idKey: \"lineCode\",\n    name: \"lines\",\n    label: t('line', {\n      howMany: 1\n    }),\n    options: linesFromApi,\n    disabled: isDisabled || !lineMaster,\n    loading: loadingLines,\n    onValueChange: handleLines,\n    multiple: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(InputHidden, {\n    name: \"linesFromBack\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputSelect, {\n    valueKey: \"familyDescription\",\n    idKey: \"familyCode\",\n    disabled: isDisabled || isEmpty(lines),\n    name: \"families\",\n    label: t('family', {\n      howMany: 1\n    }),\n    options: familiesOptions,\n    loading: familiesFromApiLoading,\n    onValueChange: handleFamilies,\n    multiple: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(InputHidden, {\n    name: \"familiesFromBack\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputSelect, {\n    valueKey: \"lineDescription\",\n    idKey: \"lineCode\",\n    name: \"linesExceptions\",\n    label: t('exception line', {\n      howMany: 1\n    }),\n    options: linesFromApi,\n    disabled: isDisabled || isEmpty(linesFromApi),\n    loading: loadingLines,\n    multiple: true,\n    onValueChange: handleLinesExceptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(InputHidden, {\n    name: \"linesExceptionsFromBack\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputSelect, {\n    valueKey: \"familyDescription\",\n    idKey: \"familyCode\",\n    disabled: isDisabled || isEmpty(familiesOptions),\n    name: \"familiesExceptions\",\n    label: t('exception family', {\n      howMany: 1\n    }),\n    options: familiesOptions,\n    loading: familiesFromApiLoading,\n    multiple: true,\n    onValueChange: handleFamiliesExceptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(InputHidden, {\n    name: \"familiesExceptionsFromBack\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 9\n    }\n  })));\n};\n\nMainData.propTypes = {\n  isDisabled: PropTypes.bool.isRequired,\n  formRef: PropTypes.any.isRequired,\n  lineMasterOptions: PropTypes.array.isRequired,\n  isEdit: PropTypes.bool.isRequired\n};\nexport default MainData;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/fan/containers/MainData/MainData.js"],"names":["React","useMemo","useCallback","useState","PropTypes","find","isEmpty","isEqual","map","remove","Grid","useFormEffect","useT","representative","representativeRoutes","clients","clientsCrmRoutes","customer","customerCrmRoutes","lines","linesCrmRoutes","useCrmApi","useSnackbar","getErrorMessage","InputAutocomplete","InputDateRange","InputHidden","InputSelect","StatusSwitch","useStyles","MainData","isDisabled","formRef","lineMasterOptions","isEdit","t","classes","snackbar","lineMaster","setLineMaster","setLines","familiesOptions","setFamiliesOptions","code","setCode","data","linesFromApi","loading","loadingLines","getAll","params","lineMasterCode","familiesParams","clientTotvsCode","toString","familiesFromApi","familiesFromApiLoading","getFamilies","onErrorRetry","error","response","status","revalidateOnFocus","regionalParams","page","pageSize","lineCodes","regionalFromApi","regionalFromApiLoading","getRegional","replace","COMPANY","id","name","respresentativeParams","clientParams","clientRegistrationType","setNameMatrix","value","current","setFieldValue","setCodeMatrix","parentCompanyCode","handleLineMaster","setData","old","fan","linesFromBack","linesExceptions","families","familiesExceptions","familiesFromBack","familiesExceptionsFromBack","handleLines","values","item","newArray","option","lineCode","description","lineDescription","handleFamilies","familyCode","familyDescription","s","handleLinesExceptions","handleFamiliesExceptions","length","container","get","abbreviation","howMany","getRepresentativeList","propTypes","bool","isRequired","any","array"],"mappings":"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","sourcesContent":["import React, {\n  useMemo,\n  useCallback,\n  useState\n} from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport find from 'lodash/find'\nimport isEmpty from 'lodash/isEmpty'\nimport isEqual from 'lodash/isEqual'\nimport map from 'lodash/map'\nimport remove from 'lodash/remove'\n\nimport Grid from '@material-ui/core/Grid'\n\nimport { useFormEffect } from '@britania-crm/forms'\nimport { useT } from '@britania-crm/i18n'\nimport {\n  representative as representativeRoutes,\n  clients as clientsCrmRoutes,\n  customer as customerCrmRoutes,\n  lines as linesCrmRoutes\n} from '@britania-crm/services/apis/crmApi/resources/routes'\nimport useCrmApi from '@britania-crm/services/hooks/useCrmApi'\nimport { useSnackbar } from '@britania-crm/snackbar'\nimport { getErrorMessage } from '@britania-crm/utils/error'\nimport InputAutocomplete from '@britania-crm/web-components/InputAutocomplete'\nimport InputDateRange from '@britania-crm/web-components/InputDateRange'\nimport InputHidden from '@britania-crm/web-components/InputHidden'\nimport InputSelect from '@britania-crm/web-components/InputSelect'\nimport StatusSwitch from '@britania-crm/web-components/StatusSwitch'\n\nimport useStyles from './styles'\n\nconst MainData = ({\n  isDisabled,\n  formRef,\n  lineMasterOptions,\n  isEdit\n}) => {\n  const t = useT()\n  const classes = useStyles()\n  const snackbar = useSnackbar()\n\n  const [lineMaster, setLineMaster] = useState('')\n  const [lines, setLines] = useState('')\n  const [familiesOptions, setFamiliesOptions] = useState([])\n\n  const [code, setCode] = useState('')\n\n  const { data: linesFromApi, loading: loadingLines } = useCrmApi(\n    lineMaster ? [linesCrmRoutes.getAll, lineMaster] : null,\n    { params: { lineMasterCode: lineMaster } }\n  )\n\n  const familiesParams = useMemo(\n    () => {\n      if (!isEmpty(lines)) {\n        return { clientTotvsCode: code, lines: lines.toString() }\n      }\n    },\n    [code, lines]\n  )\n\n  const { data: familiesFromApi, loading: familiesFromApiLoading } = useCrmApi(\n    familiesParams ? [linesCrmRoutes.getFamilies, familiesParams] : null,\n    { params: familiesParams },\n    {\n      onErrorRetry (error) {\n        if (error.response.status === 500) {\n          snackbar.error(getErrorMessage(error))\n        }\n      },\n      revalidateOnFocus: false\n    }\n  )\n\n  const regionalParams = useMemo(\n    () => {\n      if (!isEmpty(lines)) {\n        return {\n          page: 1,\n          pageSize: 10,\n          lineCodes: lines\n        }\n      }\n      return {}\n    }\n    , [lines])\n\n  const { data: regionalFromApi, loading: regionalFromApiLoading } = useCrmApi(\n    code ? [customerCrmRoutes.getRegional.replace(':clientCode', code), regionalParams] : null,\n    { params: regionalParams },\n    {\n      onErrorRetry (error) {\n        if (error.response.status === 500) {\n          snackbar.error(getErrorMessage(error))\n        }\n      },\n      revalidateOnFocus: false\n    }\n  )\n\n  const COMPANY = useMemo(\n    () =>\n      [{ id: 'BRITÂNIA ELETRODOMÉSTICOS S/A', name: 'BRITÂNIA ELETRODOMÉSTICOS S/A' },\n        { id: 'BRITÂNIA ELETRÔNICOS S/A', name: 'BRITÂNIA ELETRÔNICOS S/A' },\n        { id: 'PHILCO ELETRÔNICOS S/A', name: 'PHILCO ELETRÔNICOS S/A' },\n        { id: 'TODAS AS EMPRESAS DO GRUPO', name: 'TODAS AS EMPRESAS DO GRUPO' }\n      ]\n    , [])\n\n  const respresentativeParams = useMemo(\n    () => ({\n      page: 1,\n      pageSize: 10\n    }),\n    []\n  )\n\n  const clientParams = useMemo(\n    () => ({\n      page: 1,\n      pageSize: 10,\n      clientRegistrationType: 'REGISTER'\n    }),\n    []\n  )\n\n  const setNameMatrix = useCallback(\n    (value) =>\n      formRef.current.setFieldValue('fan.matrix', value)\n    ,\n    [formRef]\n  )\n\n  const setCodeMatrix = useCallback(\n    (value) => {\n      formRef.current.setFieldValue('fan.code', value)\n      setCode(value?.parentCompanyCode)\n    },\n    [formRef]\n  )\n\n  const handleLineMaster = useCallback(\n    (value) => {\n      setLineMaster(value)\n      setFamiliesOptions([])\n      formRef.current.setData(\n        (old) => ({\n          ...old,\n          fan: {\n            ...old.fan,\n            lines: [],\n            linesFromBack: [],\n            linesExceptions: [],\n            families: [],\n            familiesExceptions: [],\n            familiesFromBack: [],\n            familiesExceptionsFromBack: []\n          }\n        }))\n    },\n    [formRef]\n  )\n\n  const handleLines = useCallback(\n    (values) => {\n      if (isEmpty(values)) {\n        setFamiliesOptions([])\n        formRef.current.setData(\n          (old) => ({\n            ...old,\n            fan: {\n              ...old.fan,\n              families: [],\n              familiesExceptions: [],\n              familiesFromBack: [],\n              familiesExceptionsFromBack: []\n            }\n          }))\n      } else {\n        setLines(values)\n        formRef.current.setFieldValue('fan.linesFromBack',\n          map(values, (item) => {\n            const newArray = find(linesFromApi, (option) => option.lineCode === item)\n            return { code: newArray?.lineCode, description: newArray?.lineDescription }\n          })\n        )\n      }\n    },\n    [formRef, linesFromApi]\n  )\n\n  const handleFamilies = useCallback(\n    (values) => {\n      if (!isEmpty(values)) {\n        formRef.current.setFieldValue('fan.familiesFromBack',\n          remove(\n            map(values, (item) => {\n              const newArray = find(familiesOptions, (option) => option.familyCode === item)\n              return { code: newArray?.familyCode, description: newArray?.familyDescription }\n            }),\n            (s) => isEqual(s, {})\n          )\n        )\n      }\n    },\n    [familiesOptions, formRef]\n  )\n\n  const handleLinesExceptions = useCallback(\n    (values) => {\n      if (!isEmpty(values)) {\n        formRef.current.setFieldValue('fan.linesExceptionsFromBack',\n          map(values, (item) => {\n            const newArray = find(linesFromApi, (option) => option.lineCode === item)\n            return { code: newArray?.lineCode, description: newArray?.lineDescription }\n          })\n        )\n      }\n    },\n    [formRef, linesFromApi]\n  )\n\n  const handleFamiliesExceptions = useCallback(\n    (values) => {\n      if (!isEmpty(values)) {\n        formRef.current.setFieldValue('fan.familiesExceptionsFromBack',\n          map(values, (item) => {\n            const newArray = find(familiesOptions, (option) => option.familyCode === item)\n            return { code: newArray?.familyCode, description: newArray?.familyDescription }\n          })\n        )\n      }\n    },\n    [familiesOptions, formRef]\n  )\n\n  useFormEffect(() => {\n    if (!isEmpty(familiesFromApi)) {\n      setFamiliesOptions(\n        (old) => {\n          if (lines.length > 1) {\n            return [...old, ...familiesFromApi]\n          } else {\n            return familiesFromApi\n          }\n        })\n    }\n  }, [familiesFromApi, formRef, isDisabled, lines])\n\n  return (\n    <Grid container spacing={ 1 } className={ classes.container }>\n      <Grid item sm={ 12 } md={ 4 } >\n        <InputSelect\n          valueKey=\"name\"\n          idKey=\"id\"\n          name=\"company\"\n          label={ t('company') }\n          required\n          options={ COMPANY }\n          disabled={ isDisabled }\n        />\n      </Grid>\n      <Grid item sm={ 12 } md={ 4 } >\n        <InputAutocomplete\n          url={ clientsCrmRoutes.get }\n          params={ clientParams }\n          valueKey=\"parentCompanyCode\"\n          paramName=\"parentCompanyCode\"\n          name=\"code\"\n          label={ t('matrix code', { abbreviation: false }) }\n          disabled={ isDisabled }\n          onValueChange={ setNameMatrix }\n        />\n      </Grid>\n      <Grid item sm={ 12 } md={ 4 } >\n        <InputAutocomplete\n          url={ clientsCrmRoutes.get }\n          params={ clientParams }\n          valueKey=\"parentCompany\"\n          paramName=\"parentCompany\"\n          name=\"matrix\"\n          label={ t('matrix', { howMany: 1 }) }\n          disabled={ isDisabled }\n          onValueChange={ setCodeMatrix }\n        />\n      </Grid>\n      <Grid item sm={ 12 } md={ 4 } >\n        <InputAutocomplete\n          url={ representativeRoutes.getRepresentativeList }\n          params={ respresentativeParams }\n          valueKey=\"name\"\n          paramName=\"name\"\n          name=\"responsible\"\n          label={ t('responsible', { howMany: 1 }) }\n          disabled={ isDisabled }\n        />\n      </Grid>\n      <Grid item sm={ 12 } md={ 8 } >\n        <InputAutocomplete\n          options={ regionalFromApi }\n          loading={ regionalFromApiLoading }\n          valueKey=\"approverDescription\"\n          paramName=\"approverCode\"\n          name=\"regionalManager\"\n          label={ t('regional manager') }\n          disabled={ isDisabled }\n          infoDescription={ t('more than one regional manager can be included.') }\n        />\n      </Grid>\n      <Grid item sm={ 12 } md={ 6 } >\n        <InputDateRange\n          labelTo={ t('end date') }\n          labelFrom={ t('start date') }\n          name=\"date\"\n          disabled={ isDisabled }\n        />\n      </Grid>\n      <Grid item sm={ 12 } md={ 4 } >\n        <InputSelect\n          valueKey=\"masterLineDescription\"\n          idKey=\"masterLineCode\"\n          name=\"directorship\"\n          label={ t('board of Directors') }\n          options={ lineMasterOptions }\n          disabled={ isDisabled }\n          onValueChange={ handleLineMaster }\n        />\n      </Grid>\n      {isEdit && (\n        <Grid item sm={ 12 } md={ 2 } className={ classes.status }>\n          <StatusSwitch\n            name=\"active\"\n            disabled={ isDisabled }\n          />\n        </Grid>)}\n      <Grid item sm={ 12 } md={ 6 } >\n        <InputSelect\n          valueKey=\"lineDescription\"\n          idKey=\"lineCode\"\n          name=\"lines\"\n          label={ t('line', { howMany: 1 }) }\n          options={ linesFromApi }\n          disabled={ isDisabled || !lineMaster }\n          loading={ loadingLines }\n          onValueChange={ handleLines }\n          multiple\n        />\n        <InputHidden name=\"linesFromBack\" />\n      </Grid>\n      <Grid item sm={ 12 } md={ 6 }>\n        <InputSelect\n          valueKey=\"familyDescription\"\n          idKey=\"familyCode\"\n          disabled={ isDisabled || isEmpty(lines) }\n          name=\"families\"\n          label={ t('family', { howMany: 1 }) }\n          options={ familiesOptions }\n          loading={ familiesFromApiLoading }\n          onValueChange={ handleFamilies }\n          multiple\n        />\n        <InputHidden name=\"familiesFromBack\" />\n      </Grid>\n\n      <Grid item sm={ 12 } md={ 6 } >\n        <InputSelect\n          valueKey=\"lineDescription\"\n          idKey=\"lineCode\"\n          name=\"linesExceptions\"\n          label={ t('exception line', { howMany: 1 }) }\n          options={ linesFromApi }\n          disabled={ isDisabled || isEmpty(linesFromApi) }\n          loading={ loadingLines }\n          multiple\n          onValueChange={ handleLinesExceptions }\n        />\n        <InputHidden name=\"linesExceptionsFromBack\" />\n      </Grid>\n      <Grid item sm={ 12 } md={ 6 }>\n        <InputSelect\n          valueKey=\"familyDescription\"\n          idKey=\"familyCode\"\n          disabled={ isDisabled || isEmpty(familiesOptions) }\n          name=\"familiesExceptions\"\n          label={ t('exception family', { howMany: 1 }) }\n          options={ familiesOptions }\n          loading={ familiesFromApiLoading }\n          multiple\n          onValueChange={ handleFamiliesExceptions }\n        />\n        <InputHidden name=\"familiesExceptionsFromBack\" />\n      </Grid>\n    </Grid>\n  )\n}\n\nMainData.propTypes = {\n  isDisabled: PropTypes.bool.isRequired,\n  formRef: PropTypes.any.isRequired,\n  lineMasterOptions: PropTypes.array.isRequired,\n  isEdit: PropTypes.bool.isRequired\n}\n\nexport default MainData\n"]},"metadata":{},"sourceType":"module"}