{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/src/layouts/MainLayout/components/Navbar/Navbar.js\";\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types'; // import Select from '@material-ui/core/Select'\n\nimport AppBar from '@material-ui/core/AppBar'; // import FormControl from '@material-ui/core/FormControl'\n// import IconButton from '@material-ui/core/IconButton'\n// import InputBase from '@material-ui/core/InputBase'\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'; // import GroupIcon from '@material-ui/icons/GroupWork'\n\nimport HomeIcon from '@material-ui/icons/Home'; // import NotificationsIcon from '@material-ui/icons/Notifications'\n// import SearchIcon from '@material-ui/icons/Search'\n// import StarIcon from '@material-ui/icons/Star'\n\nimport { selectUser } from '@britania-crm/stores/auth/auth.selectors';\nimport { formatPathToCloudStorageUrl } from '@britania-crm/utils/files';\nimport Avatar from '@britania-crm/web-components/Avatar';\nimport Popover from '@britania-crm/web-components/Popover';\nimport { useRoutes } from '@britania-crm/web-src/routes/authenticated.routes';\nimport { useStyles, Container, HomeButton // Info,\n, Profile } from './styles';\nimport UserMenu from './UserMenu'; // const ContextIcon = () => <GroupIcon color=\"primary\" />\n\nconst MenuNavbar = ({\n  openLeftDrawer,\n  drawerWidth,\n  memorizedValue\n}) => {\n  const classes = useStyles();\n  const {\n    routes\n  } = useRoutes();\n  const {\n    username,\n    file\n  } = useSelector(selectUser); // const [, setFilter] = useState({\n  //   description: '',\n  //   start: '',\n  //   end: ''\n  // })\n  // const handleField = useCallback(\n  //   (event) => {\n  //     const { value: description } = event.target\n  //     setFilter((filters) => ({ ...filters, description }))\n  //   },\n  //   []\n  // )\n  // const handleTypeSearch = value => setTypeSearch(value)\n  // const submit = useCallback(\n  //   () => {\n  //     //\n  //   },\n  //   []\n  // )\n\n  return /*#__PURE__*/React.createElement(AppBar, {\n    position: \"fixed\",\n    style: {\n      border: 0,\n      backgroundColor: 'white',\n      width: `calc(100vw - ${memorizedValue}px)`,\n      left: openLeftDrawer ? `${drawerWidth}px` : '73px',\n      zIndex: 1200\n    },\n    className: classes.appBarShift,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    style: {\n      paddingLeft: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: routes.home.path,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(HomeButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(HomeIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Popover, {\n    popoverId: \"user-menu\",\n    Component: p => /*#__PURE__*/React.createElement(Profile, Object.assign({}, p, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }\n    }, \"Ol\\xE1, \", /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 28\n      }\n    }, username)), /*#__PURE__*/React.createElement(ExpandMoreIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Avatar, {\n      src: formatPathToCloudStorageUrl(file === null || file === void 0 ? void 0 : file.path),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(UserMenu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  })))));\n};\n\nMenuNavbar.propTypes = {\n  openLeftDrawer: PropTypes.bool.isRequired,\n  drawerWidth: PropTypes.number.isRequired,\n  memorizedValue: PropTypes.number.isRequired\n};\nexport default MenuNavbar;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/src/layouts/MainLayout/components/Navbar/Navbar.js"],"names":["React","useSelector","Link","PropTypes","AppBar","Toolbar","ExpandMoreIcon","HomeIcon","selectUser","formatPathToCloudStorageUrl","Avatar","Popover","useRoutes","useStyles","Container","HomeButton","Profile","UserMenu","MenuNavbar","openLeftDrawer","drawerWidth","memorizedValue","classes","routes","username","file","border","backgroundColor","width","left","zIndex","appBarShift","paddingLeft","home","path","p","propTypes","bool","isRequired","number"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\n\nimport PropTypes from 'prop-types'\n\n// import Select from '@material-ui/core/Select'\nimport AppBar from '@material-ui/core/AppBar'\n// import FormControl from '@material-ui/core/FormControl'\n// import IconButton from '@material-ui/core/IconButton'\n// import InputBase from '@material-ui/core/InputBase'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\n// import GroupIcon from '@material-ui/icons/GroupWork'\nimport HomeIcon from '@material-ui/icons/Home'\n// import NotificationsIcon from '@material-ui/icons/Notifications'\n// import SearchIcon from '@material-ui/icons/Search'\n// import StarIcon from '@material-ui/icons/Star'\n\nimport { selectUser } from '@britania-crm/stores/auth/auth.selectors'\nimport { formatPathToCloudStorageUrl } from '@britania-crm/utils/files'\nimport Avatar from '@britania-crm/web-components/Avatar'\nimport Popover from '@britania-crm/web-components/Popover'\nimport { useRoutes } from '@britania-crm/web-src/routes/authenticated.routes'\n\nimport {\n  useStyles,\n  Container,\n  HomeButton,\n  // Info,\n  Profile\n} from './styles'\nimport UserMenu from './UserMenu'\n\n// const ContextIcon = () => <GroupIcon color=\"primary\" />\n\nconst MenuNavbar = ({\n  openLeftDrawer,\n  drawerWidth,\n  memorizedValue\n}) => {\n  const classes = useStyles()\n  const { routes } = useRoutes()\n\n  const { username, file } = useSelector(selectUser)\n\n  // const [, setFilter] = useState({\n  //   description: '',\n  //   start: '',\n  //   end: ''\n  // })\n\n  // const handleField = useCallback(\n  //   (event) => {\n  //     const { value: description } = event.target\n  //     setFilter((filters) => ({ ...filters, description }))\n  //   },\n  //   []\n  // )\n\n  // const handleTypeSearch = value => setTypeSearch(value)\n\n  // const submit = useCallback(\n  //   () => {\n  //     //\n  //   },\n  //   []\n  // )\n\n  return (\n    <AppBar\n      position=\"fixed\"\n      style={ {\n        border: 0,\n        backgroundColor: 'white',\n        width: `calc(100vw - ${ memorizedValue }px)`,\n        left: openLeftDrawer ? `${ drawerWidth }px` : '73px',\n        zIndex: 1200\n      } }\n      className={ classes.appBarShift }\n    >\n      <Toolbar style={ { paddingLeft: 10 } }>\n        <Link to={ routes.home.path }>\n          <HomeButton>\n            <HomeIcon />\n          </HomeButton>\n        </Link>\n\n        {/*\n        <FormControl className={ classes.customSelect }>\n          <ContextIcon />\n\n          <Select\n            onChange={ () => {\n              // handleTypeSearch(e.target.value)\n              // dispatch(pageAction.setSearchType(e.target.value))\n            } }\n            native\n            classes={ {\n              root: classes.grayColor,\n              icon: classes.grayColor\n            } }\n          >\n            <option value=\"all\">Todos</option>\n          </Select>\n        </FormControl> */}\n\n        {/* <div className={ classes.search }>\n          <div className={ classes.searchBox }>\n            <IconButton className={ classes.searchIcon } onClick={ submit }>\n              <SearchIcon />\n            </IconButton>\n            <InputBase\n              spellCheck\n              placeholder=\"Faça sua busca aqui\"\n              classes={ {\n                root: classes.inputRoot,\n                input: classes.inputInput\n              } }\n              inputProps={ { 'aria-label': 'search' } }\n              onChange={ handleField }\n              onKeyPress={ submit }\n            />\n          </div>\n        </div> */}\n\n        <Container>\n          {/* <Info>\n            <StarIcon />\n            <div>\n              <NotificationsIcon />\n              <div />\n            </div>\n          </Info> */}\n\n          <Popover\n            popoverId=\"user-menu\"\n            Component={ (p) => (\n              <Profile { ...p }>\n                <span>Olá, <strong>{username}</strong></span>\n                <ExpandMoreIcon />\n                <Avatar\n                  src={ formatPathToCloudStorageUrl(file?.path) }\n                />\n              </Profile>\n            ) }\n          >\n            <UserMenu />\n          </Popover>\n\n        </Container>\n      </Toolbar>\n    </AppBar>\n  )\n}\n\nMenuNavbar.propTypes = {\n  openLeftDrawer: PropTypes.bool.isRequired,\n  drawerWidth: PropTypes.number.isRequired,\n  memorizedValue: PropTypes.number.isRequired\n}\n\nexport default MenuNavbar\n"]},"metadata":{},"sourceType":"module"}