{"ast":null,"code":"import { put, call, takeLatest } from 'redux-saga/effects';\nimport { MSG0270 } from '@britania-crm/constants/feedbackMessages.constants';\nimport { getFields } from '@britania-crm/services/apis/crmApi/resources/fields.service';\nimport { AppActions } from '../app/app.actions';\nimport { FieldTypes } from './field.actions';\n\nfunction* doGetFields({\n  accessId,\n  onSuccess,\n  onLoader\n}) {\n  try {\n    const response = yield call(getFields, accessId);\n    yield call(onSuccess, response);\n  } catch (error) {\n    yield put(AppActions.addAlert({\n      type: 'error',\n      message: MSG0270\n    }));\n    console.error(error);\n  } finally {\n    onLoader(false);\n  }\n}\n\nexport default [takeLatest(FieldTypes.GET_FIELDS, doGetFields)];","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/core/stores/field/field.sagas.js"],"names":["put","call","takeLatest","MSG0270","getFields","AppActions","FieldTypes","doGetFields","accessId","onSuccess","onLoader","response","error","addAlert","type","message","console","GET_FIELDS"],"mappings":"AAAA,SACEA,GADF,EAEEC,IAFF,EAGEC,UAHF,QAIO,oBAJP;AAMA,SAASC,OAAT,QAAwB,oDAAxB;AACA,SAASC,SAAT,QAA0B,6DAA1B;AAEA,SAASC,UAAT,QAA2B,oBAA3B;AACA,SAASC,UAAT,QAA2B,iBAA3B;;AAEA,UAAUC,WAAV,CAAuB;AACrBC,EAAAA,QADqB;AACXC,EAAAA,SADW;AACAC,EAAAA;AADA,CAAvB,EAEG;AACD,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMV,IAAI,CAACG,SAAD,EAAYI,QAAZ,CAA3B;AACA,UAAMP,IAAI,CAACQ,SAAD,EAAYE,QAAZ,CAAV;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACd,UAAMZ,GAAG,CAACK,UAAU,CAACQ,QAAX,CAAoB;AAAEC,MAAAA,IAAI,EAAE,OAAR;AAAiBC,MAAAA,OAAO,EAAEZ;AAA1B,KAApB,CAAD,CAAT;AACAa,IAAAA,OAAO,CAACJ,KAAR,CAAcA,KAAd;AACD,GAND,SAMU;AACRF,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACD;AACF;;AAED,eAAe,CACbR,UAAU,CAACI,UAAU,CAACW,UAAZ,EAAwBV,WAAxB,CADG,CAAf","sourcesContent":["import {\n  put,\n  call,\n  takeLatest\n} from 'redux-saga/effects'\n\nimport { MSG0270 } from '@britania-crm/constants/feedbackMessages.constants'\nimport { getFields } from '@britania-crm/services/apis/crmApi/resources/fields.service'\n\nimport { AppActions } from '../app/app.actions'\nimport { FieldTypes } from './field.actions'\n\nfunction* doGetFields ({\n  accessId, onSuccess, onLoader\n}) {\n  try {\n    const response = yield call(getFields, accessId)\n    yield call(onSuccess, response)\n  } catch (error) {\n    yield put(AppActions.addAlert({ type: 'error', message: MSG0270 }))\n    console.error(error)\n  } finally {\n    onLoader(false)\n  }\n}\n\nexport default [\n  takeLatest(FieldTypes.GET_FIELDS, doGetFields)\n]\n"]},"metadata":{},"sourceType":"module"}