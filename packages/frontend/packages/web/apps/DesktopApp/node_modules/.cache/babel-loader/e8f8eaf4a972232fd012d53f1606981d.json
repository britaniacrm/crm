{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/components/IconButton/IconButton.js\";\nimport React, { useRef, useMemo, useCallback, forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport capitalize from 'lodash/capitalize';\nimport debounce from 'lodash/debounce';\nimport isEmpty from 'lodash/isEmpty';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Popover from '@britania-crm/web-components/Popover';\nimport Tooltip from '@britania-crm/web-components/Tooltip';\nimport useStyles, { StyledIconButton } from './styles';\nconst IconButton = forwardRef((props, ref) => {\n  const {\n    children,\n    tooltip,\n    popover,\n    popoverProps,\n    marginVertical,\n    marginHorizontal,\n    className: externalClassName,\n    loading,\n    placement,\n    debounce: _,\n    debounceReverse,\n    onClick,\n    color: externalColor,\n    ...rest\n  } = props;\n  const btnRef = useRef(null);\n  const classes = useStyles();\n  const popoverId = useMemo(() => props.popover ? Math.floor(Math.random() * 1000).toString() : null, [props.popover]);\n  const debounceConfig = useMemo(() => {\n    if (props.debounceReverse) {\n      return {\n        leading: true,\n        trailing: false\n      };\n    }\n\n    return {};\n  }, [props.debounceReverse]);\n  const handleClick = useCallback(debounce((...e) => onClick(...e), props.debounce || 1, debounceConfig), [onClick]);\n  const isDefaultColor = useMemo(() => ['default', 'inherit', 'primary', 'secondary'].indexOf(externalColor) > -1, [externalColor]);\n  const color = useMemo(() => isDefaultColor ? externalColor : undefined, [externalColor, isDefaultColor]);\n  const className = useMemo(() => [!isDefaultColor ? classes[`color-${capitalize(externalColor)}`] : undefined, externalClassName].join(' '), [classes, externalClassName, externalColor, isDefaultColor]);\n  const button = useMemo(() => {\n    let btn = /*#__PURE__*/React.createElement(\"span\", {\n      key: \"iconButton\",\n      ref: btnRef,\n      \"aria-owns\": popoverId,\n      \"aria-haspopup\": popover.toString(),\n      className: classes.spanIconButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(StyledIconButton, Object.assign({\n      ref: ref\n    }, rest, {\n      color: color,\n      className: className,\n      onClick: loading ? undefined : handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }), loading ? /*#__PURE__*/React.createElement(CircularProgress, {\n      color: \"inherit\",\n      size: 22,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 19\n      }\n    }) : children));\n\n    if (!isEmpty(tooltip)) {\n      btn = /*#__PURE__*/React.createElement(Tooltip, {\n        title: tooltip,\n        placement: placement,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }\n      }, btn);\n    }\n\n    if (marginVertical || marginHorizontal) {\n      btn = /*#__PURE__*/React.createElement(\"div\", {\n        className: [marginHorizontal ? classes.iconButtonMarginHorizontal : null, marginVertical ? classes.iconButtonMarginVertical : null].join(' '),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }\n      }, btn);\n    }\n\n    return btn;\n  }, [children, className, classes.iconButtonMarginHorizontal, classes.iconButtonMarginVertical, classes.spanIconButton, color, handleClick, loading, marginHorizontal, marginVertical, placement, popover, popoverId, ref, rest, tooltip]);\n  return popover ? /*#__PURE__*/React.createElement(React.Fragment, null, button, /*#__PURE__*/React.createElement(Popover, Object.assign({\n    key: \"popover\",\n    popoverId: popoverId\n  }, popoverProps, {\n    anchorEl: btnRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }))) : button;\n});\nIconButton.propTypes = {\n  children: PropTypes.any,\n  onClick: PropTypes.func,\n  popover: PropTypes.bool,\n  popoverProps: PropTypes.shape(),\n  tooltip: PropTypes.string,\n  className: PropTypes.string,\n  marginVertical: PropTypes.bool,\n  marginHorizontal: PropTypes.bool,\n  loading: PropTypes.bool,\n  debounce: PropTypes.oneOfType([PropTypes.number, PropTypes.bool]),\n  debounceReverse: PropTypes.bool,\n  placement: PropTypes.string,\n\n  /** Used to control the button's purpose,\n   This property passes the value to the type attribute of the native button component. */\n  type: PropTypes.oneOf(['button', 'submit', 'reset']),\n  color: PropTypes.string\n};\nIconButton.defaultProps = {\n  children: '',\n\n  onClick() {},\n\n  popover: false,\n  popoverProps: {},\n  tooltip: null,\n  className: null,\n  marginVertical: false,\n  marginHorizontal: true,\n  loading: false,\n  debounce: 200,\n  debounceReverse: false,\n  placement: 'bottom',\n  type: 'button',\n  color: 'default'\n};\nexport default IconButton;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/components/IconButton/IconButton.js"],"names":["React","useRef","useMemo","useCallback","forwardRef","PropTypes","capitalize","debounce","isEmpty","CircularProgress","Popover","Tooltip","useStyles","StyledIconButton","IconButton","props","ref","children","tooltip","popover","popoverProps","marginVertical","marginHorizontal","className","externalClassName","loading","placement","_","debounceReverse","onClick","color","externalColor","rest","btnRef","classes","popoverId","Math","floor","random","toString","debounceConfig","leading","trailing","handleClick","e","isDefaultColor","indexOf","undefined","join","button","btn","spanIconButton","iconButtonMarginHorizontal","iconButtonMarginVertical","propTypes","any","func","bool","shape","string","oneOfType","number","type","oneOf","defaultProps"],"mappings":"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","sourcesContent":["import React, {\n  useRef,\n  useMemo,\n  useCallback,\n  forwardRef\n} from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport capitalize from 'lodash/capitalize'\nimport debounce from 'lodash/debounce'\nimport isEmpty from 'lodash/isEmpty'\n\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport Popover from '@britania-crm/web-components/Popover'\nimport Tooltip from '@britania-crm/web-components/Tooltip'\n\nimport useStyles, { StyledIconButton } from './styles'\n\nconst IconButton = forwardRef((props, ref) => {\n  const {\n    children,\n    tooltip,\n    popover,\n    popoverProps,\n    marginVertical,\n    marginHorizontal,\n    className: externalClassName,\n    loading,\n    placement,\n    debounce: _,\n    debounceReverse,\n    onClick,\n    color: externalColor,\n    ...rest\n  } = props\n\n  const btnRef = useRef(null)\n\n  const classes = useStyles()\n\n  const popoverId = useMemo(\n    () => props.popover ? Math.floor(Math.random() * 1000).toString() : null,\n    [props.popover]\n  )\n\n  const debounceConfig = useMemo(\n    () => {\n      if (props.debounceReverse) {\n        return {\n          leading: true,\n          trailing: false\n        }\n      }\n      return {}\n    },\n    [props.debounceReverse]\n  )\n\n  const handleClick = useCallback(\n    debounce(\n      (...e) => onClick(...e),\n      props.debounce || 1,\n      debounceConfig\n    ),\n    [onClick]\n  )\n\n  const isDefaultColor = useMemo(\n    () => ['default', 'inherit', 'primary', 'secondary'].indexOf(externalColor) > -1,\n    [externalColor]\n  )\n\n  const color = useMemo(\n    () => isDefaultColor ? externalColor : undefined,\n    [externalColor, isDefaultColor]\n  )\n\n  const className = useMemo(\n    () => [\n      !isDefaultColor ? classes[`color-${ capitalize(externalColor) }`] : undefined,\n      externalClassName\n    ].join(' '),\n    [classes, externalClassName, externalColor, isDefaultColor]\n  )\n\n  const button = useMemo(\n    () => {\n      let btn = (\n        <span\n          key=\"iconButton\"\n          ref={ btnRef }\n          aria-owns={ popoverId }\n          aria-haspopup={ popover.toString() }\n          className={ classes.spanIconButton }\n        >\n          <StyledIconButton\n            ref={ ref }\n            { ...rest }\n            color={ color }\n            className={ className }\n            onClick={ loading ? undefined : handleClick }\n          >\n            {\n              loading\n                ? <CircularProgress color=\"inherit\" size={ 22 } />\n                : children\n            }\n          </StyledIconButton>\n        </span>\n      )\n\n      if (!isEmpty(tooltip)) {\n        btn = (\n          <Tooltip title={ tooltip } placement={ placement }>\n            {btn}\n          </Tooltip>\n        )\n      }\n      if (marginVertical || marginHorizontal) {\n        btn = (\n          <div\n            className={ [\n              marginHorizontal ? classes.iconButtonMarginHorizontal : null,\n              marginVertical ? classes.iconButtonMarginVertical : null\n            ].join(' ') }\n          >\n            {btn}\n          </div>\n        )\n      }\n      return btn\n    },\n    [children, className, classes.iconButtonMarginHorizontal, classes.iconButtonMarginVertical, classes.spanIconButton, color, handleClick, loading, marginHorizontal, marginVertical, placement, popover, popoverId, ref, rest, tooltip]\n  )\n\n  return popover\n    ? (\n      <>\n        {button}\n        <Popover key=\"popover\" popoverId={ popoverId } { ...popoverProps } anchorEl={ btnRef } />\n      </>\n    )\n    : button\n})\n\nIconButton.propTypes = {\n  children: PropTypes.any,\n  onClick: PropTypes.func,\n  popover: PropTypes.bool,\n  popoverProps: PropTypes.shape(),\n  tooltip: PropTypes.string,\n  className: PropTypes.string,\n  marginVertical: PropTypes.bool,\n  marginHorizontal: PropTypes.bool,\n  loading: PropTypes.bool,\n  debounce: PropTypes.oneOfType([PropTypes.number, PropTypes.bool]),\n  debounceReverse: PropTypes.bool,\n  placement: PropTypes.string,\n  /** Used to control the button's purpose,\n   This property passes the value to the type attribute of the native button component. */\n  type: PropTypes.oneOf(['button', 'submit', 'reset']),\n  color: PropTypes.string\n}\n\nIconButton.defaultProps = {\n  children: '',\n  onClick () {},\n  popover: false,\n  popoverProps: {},\n  tooltip: null,\n  className: null,\n  marginVertical: false,\n  marginHorizontal: true,\n  loading: false,\n  debounce: 200,\n  debounceReverse: false,\n  placement: 'bottom',\n  type: 'button',\n  color: 'default'\n}\n\nexport default IconButton\n"]},"metadata":{},"sourceType":"module"}