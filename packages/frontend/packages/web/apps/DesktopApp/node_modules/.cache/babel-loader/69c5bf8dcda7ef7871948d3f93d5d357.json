{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/buyer/screens/BuyerFormScreen/MainData.js\";\nimport React, { useMemo, useCallback, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport filter from 'lodash/filter';\nimport find from 'lodash/find';\nimport first from 'lodash/first';\nimport isEmpty from 'lodash/isEmpty';\nimport map from 'lodash/map';\nimport Grid from '@material-ui/core/Grid';\nimport Add from '@material-ui/icons/Add';\nimport { useDialog } from '@britania-crm/dialog';\nimport I18n, { useT } from '@britania-crm/i18n';\nimport { lines as linesCrmRoutes, customer as customerCrmRoutes } from '@britania-crm/services/apis/crmApi/resources/routes';\nimport useCrmApi from '@britania-crm/services/hooks/useCrmApi';\nimport { useSnackbar } from '@britania-crm/snackbar';\nimport { AppActions } from '@britania-crm/stores/app';\nimport { getErrorMessage } from '@britania-crm/utils/error';\nimport Button from '@britania-crm/web-components/Button';\nimport CustomAccordion from '@britania-crm/web-components/CustomAccordion';\nimport DataTable from '@britania-crm/web-components/DataTable';\nimport InputAutocomplete from '@britania-crm/web-components/InputAutocomplete';\nimport InputCpfCnpj from '@britania-crm/web-components/InputCpfCnpj';\nimport InputDayMonth from '@britania-crm/web-components/InputDayMonth';\nimport InputHidden from '@britania-crm/web-components/InputHidden';\nimport InputPhone from '@britania-crm/web-components/InputPhone';\nimport InputSelect from '@britania-crm/web-components/InputSelect';\nimport InputText from '@britania-crm/web-components/InputText';\nimport ConfirmModal from '@britania-crm/web-components/Modal/ConfirmModal';\nimport StatusSwitch from '@britania-crm/web-components/StatusSwitch';\nimport Tooltip from '@britania-crm/web-components/Tooltip';\nimport useStyles from './styles';\n\nconst MainData = ({\n  isEdit,\n  isDisabled,\n  formRef,\n  setCpf,\n  cpfAlreadyExists,\n  isView\n}) => {\n  const t = useT();\n  const classes = useStyles();\n  const {\n    createDialog\n  } = useDialog();\n  const dispatch = useCallback(useDispatch(), []);\n  const snackbar = useSnackbar();\n  const [line, setLine] = useState('');\n  const [family, setFamily] = useState([]);\n  const [listByLineOfFamily, setListByLineOfFamily] = useState([]);\n  const [matrixCode, setMatrixCode] = useState('');\n  const [disabledButton, setDisabledButton] = useState(false);\n  const mockVoltage = useMemo(() => [{\n    id: '110',\n    name: '110'\n  }, {\n    id: '220',\n    name: '220'\n  }], []);\n  const familiesParams = useMemo(() => {\n    if (line) {\n      return {\n        clientTotvsCode: matrixCode,\n        lines: line\n      };\n    }\n  }, [line, matrixCode]);\n  const {\n    data: linesFromApi,\n    loading: linesFromApiLoading\n  } = useCrmApi(matrixCode ? [linesCrmRoutes.getAll, matrixCode] : null, {\n    params: {\n      clientTotvsCode: matrixCode\n    }\n  }, {\n    onErrorRetry(error, key, config, revalidate, {\n      retryCount\n    }) {\n      if (error.response.status === 500 && retryCount < 5 && !isView) {\n        createDialog({\n          id: 'new-request-modal',\n          Component: ConfirmModal,\n          props: {\n            onConfirm() {\n              revalidate({\n                retryCount\n              });\n            },\n\n            text: t('search error line')\n          }\n        });\n      } else {\n        dispatch(AppActions.addAlert({\n          type: 'error',\n          message: t('maximum number of attempts reached')\n        }));\n      }\n    },\n\n    revalidateOnFocus: false\n  });\n  const {\n    data: familiesFromApi,\n    loading: familiesFromApiLoading\n  } = useCrmApi(matrixCode && line ? [linesCrmRoutes.getFamilies, familiesParams] : null, {\n    params: familiesParams\n  }, {\n    onErrorRetry(error, key, config, revalidate, {\n      retryCount\n    }) {\n      if (error.response.status === 500 && retryCount < 5 && !isView) {\n        createDialog({\n          id: 'new-request-family-modal',\n          Component: ConfirmModal,\n          props: {\n            onConfirm() {\n              revalidate({\n                retryCount\n              });\n            },\n\n            text: t('search error family')\n          }\n        });\n      } else {\n        dispatch(AppActions.addAlert({\n          type: 'error',\n          message: t('maximum number of attempts reached')\n        }));\n      }\n    },\n\n    revalidateOnFocus: false\n  });\n  const columns = useMemo(() => [{\n    title: t('line', {\n      howMany: 1\n    }),\n    field: 'lineDescription',\n    width: '50%'\n  }, {\n    title: t('family', {\n      howMany: 1\n    }),\n    field: 'family',\n    width: '50%',\n\n    render(row) {\n      if (row === null || row === void 0 ? void 0 : row.family) {\n        const listFamilyString = map(row.family, ({\n          familyDescription\n        }) => familyDescription);\n        const shortListFamilyString = listFamilyString.slice(0, 4).join(', ');\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Tooltip, {\n          title: listFamilyString.join(', '),\n          arrow: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }\n        }, listFamilyString.length > 4 ? shortListFamilyString.concat('...') : shortListFamilyString));\n      }\n\n      return '';\n    }\n\n  }], [t]);\n  const OPTIONS_LINE = useMemo(() => filter(linesFromApi, item => !find(listByLineOfFamily, ({\n    lineCode\n  }) => lineCode === item.lineCode)), [linesFromApi, listByLineOfFamily]);\n  const doAddItemTable = useCallback(() => {\n    const arrayFamily = map(family, item => find(familiesFromApi, ({\n      familyCode\n    }) => familyCode === item));\n    const arrayLine = find(linesFromApi, ({\n      lineCode\n    }) => lineCode === line);\n    formRef.current.setFieldValue('linesFamilies', old => [...old, {\n      family: [...arrayFamily],\n      ...arrayLine\n    }]);\n    setFamily([]);\n    setLine('');\n  }, [familiesFromApi, family, formRef, line, linesFromApi]);\n  const handleLineFamily = useCallback(value => {\n    setListByLineOfFamily(value);\n\n    if (isEmpty(value)) {\n      formRef.current.setFieldValue('responsible', {});\n      formRef.current.setFieldValue('regionalManager', {});\n    }\n  }, [formRef]);\n  const clientParams = useMemo(() => ({\n    page: 1,\n    pageSize: 10,\n    clientRegistrationType: 'REGISTER'\n  }), []);\n  const linesAndFamilies = useMemo(() => {\n    const linesFamilies = [];\n\n    if (!isEmpty(family) && line) {\n      map(family, item => {\n        linesFamilies.push(`${line},${item}`);\n      });\n    }\n\n    return linesFamilies;\n  }, [family, line]);\n  const regionalParams = useMemo(() => ({\n    page: 1,\n    pageSize: 10,\n    linesAndFamilies\n  }), [linesAndFamilies]);\n  const respresentativeParams = useMemo(() => ({\n    page: 1,\n    pageSize: 10,\n    linesAndFamilies\n  }), [linesAndFamilies]);\n  const {\n    loading: regionalFromApiLoading\n  } = useCrmApi(matrixCode && !isEmpty(linesAndFamilies) ? [customerCrmRoutes.getRegional.replace(':clientCode', matrixCode, linesAndFamilies), regionalParams] : null, {\n    params: regionalParams\n  }, {\n    onSuccess(data) {\n      var _first;\n\n      const regional = formRef.current.getFieldValue('regionalManager');\n\n      if (((_first = first(data)) === null || _first === void 0 ? void 0 : _first.approverCode) !== regional.approverCode && !isEmpty(regional)) {\n        setDisabledButton(true);\n        setFamily([]);\n        setLine('');\n        snackbar.error(t('many managers found'));\n      } else {\n        setDisabledButton(false);\n      }\n\n      if (isEmpty(regional)) {\n        formRef.current.setFieldValue('regionalManager', first(data));\n      }\n    },\n\n    onErrorRetry(error) {\n      if (error.response.status === 500) {\n        snackbar.error(getErrorMessage(error));\n      }\n    },\n\n    revalidateOnFocus: false\n  });\n  const {\n    loading: representativeFromApiLoading\n  } = useCrmApi(matrixCode && !isEmpty(listByLineOfFamily) ? [customerCrmRoutes.getResponsible.replace(':clientCode', matrixCode, listByLineOfFamily), respresentativeParams] : null, {\n    params: respresentativeParams\n  }, {\n    revalidateOnFocus: false,\n\n    onSuccess(data) {\n      const responsible = formRef.current.getFieldValue('responsible');\n\n      if (isEmpty(responsible)) {\n        formRef.current.setFieldValue('responsible', first(data));\n      }\n    },\n\n    onErrorRetry(error) {\n      if (error.response.status === 500) {\n        snackbar.error(getErrorMessage(error));\n      }\n    }\n\n  });\n  const isDisabledButton = useMemo(() => isEmpty(family) && isEmpty(line) || isDisabled || disabledButton || regionalFromApiLoading, [disabledButton, family, isDisabled, line, regionalFromApiLoading]);\n  const setNameMatrix = useCallback(value => {\n    setLine('');\n    formRef.current.setFieldValue('clientTotvsDescription', value);\n    setMatrixCode(value.parentCompanyCode);\n  }, [formRef]);\n  const setCodeMatrix = useCallback(value => {\n    setLine('');\n    formRef.current.setFieldValue('clientTotvsCode', value);\n    setMatrixCode(value.parentCompanyCode);\n  }, [formRef]);\n  const handleDeleteItem = useCallback((event, row) => formRef.current.setFieldValue('linesFamilies', filter(listByLineOfFamily, (option, index) => index !== row.tableData.id)), [formRef, listByLineOfFamily]);\n  return /*#__PURE__*/React.createElement(CustomAccordion, {\n    header: t('main data'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    className: classes.containerMain,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputAutocomplete, {\n    url: customerCrmRoutes.getInfoCustomer,\n    params: clientParams,\n    valueKey: \"parentCompanyCode\",\n    paramName: \"parentCompanyCode\",\n    name: \"clientTotvsCode\",\n    label: t('matrix code', {\n      abbreviation: false\n    }),\n    disabled: isEdit || isDisabled,\n    onValueChange: setNameMatrix,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputAutocomplete, {\n    url: customerCrmRoutes.getInfoCustomer,\n    params: clientParams,\n    valueKey: \"parentCompanyName\",\n    paramName: \"parentCompany\",\n    name: \"clientTotvsDescription\",\n    label: t('matrix', {\n      howMany: 1\n    }),\n    disabled: isEdit || isDisabled,\n    onValueChange: setCodeMatrix,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputCpfCnpj, {\n    name: \"cpf\",\n    label: \"CPF\",\n    mode: \"cpf\",\n    disabled: isDisabled,\n    onValueChange: setCpf,\n    helperText: cpfAlreadyExists ? 'CPF já cadastrado em outra Matriz' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputText, {\n    name: \"name\",\n    label: t('name', {\n      howMany: 1\n    }),\n    disabled: isDisabled,\n    inputProps: {\n      maxLength: 200\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputText, {\n    name: \"category\",\n    label: t('category', {\n      howMany: 1\n    }),\n    disabled: isDisabled,\n    inputProps: {\n      maxLength: 200\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputSelect, {\n    detached: true,\n    valueKey: \"lineDescription\",\n    idKey: \"lineCode\",\n    value: line,\n    loading: linesFromApiLoading,\n    onChange: ({\n      target\n    }) => {\n      setLine(target.value);\n      setFamily([]);\n    },\n    name: \"line\",\n    label: t('line', {\n      howMany: 1\n    }),\n    id: \"select-line\",\n    required: true,\n    options: OPTIONS_LINE,\n    disabled: isDisabled || !linesFromApi,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputSelect, {\n    detached: true,\n    valueKey: \"familyDescription\",\n    idKey: \"familyCode\",\n    disabled: isDisabled || isEmpty(familiesFromApi),\n    value: family,\n    onChange: ({\n      target\n    }) => setFamily(target.value),\n    name: \"family\",\n    label: t('family', {\n      howMany: 1\n    }),\n    id: \"select-family\",\n    loading: familiesFromApiLoading,\n    required: true,\n    options: familiesFromApi,\n    multiple: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 2,\n    className: classes.containerAddButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(I18n, {\n    id: \"add-button\",\n    as: Button,\n    size: \"small\",\n    startIcon: /*#__PURE__*/React.createElement(Add, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 25\n      }\n    }),\n    variant: \"contained\",\n    onClick: doAddItemTable,\n    className: classes.addButton,\n    disabled: isDisabledButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 11\n    }\n  }, \"datagrid body add tooltip\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    className: classes.containerTable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.table,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(DataTable, {\n    data: listByLineOfFamily,\n    columns: columns,\n    loading: false,\n    onDeleteClick: !isDisabled && handleDeleteItem,\n    options: {\n      search: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(InputHidden, {\n    name: \"linesFamilies\",\n    onValueChange: handleLineFamily,\n    showError: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputAutocomplete, {\n    valueKey: \"approverDescription\",\n    name: \"responsible\",\n    label: t('responsible', {\n      howMany: 1\n    }),\n    disabled: true,\n    loading: representativeFromApiLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputAutocomplete, {\n    loading: regionalFromApiLoading,\n    valueKey: \"approverDescription\",\n    name: \"regionalManager\",\n    label: t('regional manager'),\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputSelect, {\n    name: \"voltage\",\n    label: t('voltage', {\n      howMany: 1\n    }),\n    options: mockVoltage,\n    disabled: isDisabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputText, {\n    name: \"role\",\n    label: t('office', {\n      howMany: 1\n    }),\n    disabled: isDisabled,\n    inputProps: {\n      maxLength: 50\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputDayMonth, {\n    label: t('birthday', {\n      howMany: 1\n    }),\n    type: \"tel\",\n    mode: \"dd/mm\",\n    name: \"birthday\",\n    disabled: isDisabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputText, {\n    name: \"email\",\n    label: t('email'),\n    disabled: isDisabled,\n    inputProps: {\n      maxLength: 40\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputPhone, {\n    name: \"telephone\",\n    label: t('phone', {\n      howMany: 1\n    }),\n    disabled: isDisabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 11\n    }\n  })), isEdit && /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 2,\n    className: classes.status,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(StatusSwitch, {\n    name: \"active\",\n    disabled: isDisabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 13\n    }\n  }))));\n};\n\nMainData.propTypes = {\n  isEdit: PropTypes.bool,\n  isDisabled: PropTypes.bool.isRequired,\n  formRef: PropTypes.any.isRequired,\n  setCpf: PropTypes.func.isRequired,\n  cpfAlreadyExists: PropTypes.bool,\n  isView: PropTypes.bool\n};\nMainData.defaultProps = {\n  isEdit: false,\n  cpfAlreadyExists: false,\n  isView: false\n};\nexport default MainData;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/buyer/screens/BuyerFormScreen/MainData.js"],"names":["React","useMemo","useCallback","useState","useDispatch","PropTypes","filter","find","first","isEmpty","map","Grid","Add","useDialog","I18n","useT","lines","linesCrmRoutes","customer","customerCrmRoutes","useCrmApi","useSnackbar","AppActions","getErrorMessage","Button","CustomAccordion","DataTable","InputAutocomplete","InputCpfCnpj","InputDayMonth","InputHidden","InputPhone","InputSelect","InputText","ConfirmModal","StatusSwitch","Tooltip","useStyles","MainData","isEdit","isDisabled","formRef","setCpf","cpfAlreadyExists","isView","t","classes","createDialog","dispatch","snackbar","line","setLine","family","setFamily","listByLineOfFamily","setListByLineOfFamily","matrixCode","setMatrixCode","disabledButton","setDisabledButton","mockVoltage","id","name","familiesParams","clientTotvsCode","data","linesFromApi","loading","linesFromApiLoading","getAll","params","onErrorRetry","error","key","config","revalidate","retryCount","response","status","Component","props","onConfirm","text","addAlert","type","message","revalidateOnFocus","familiesFromApi","familiesFromApiLoading","getFamilies","columns","title","howMany","field","width","render","row","listFamilyString","familyDescription","shortListFamilyString","slice","join","length","concat","OPTIONS_LINE","item","lineCode","doAddItemTable","arrayFamily","familyCode","arrayLine","current","setFieldValue","old","handleLineFamily","value","clientParams","page","pageSize","clientRegistrationType","linesAndFamilies","linesFamilies","push","regionalParams","respresentativeParams","regionalFromApiLoading","getRegional","replace","onSuccess","regional","getFieldValue","approverCode","representativeFromApiLoading","getResponsible","responsible","isDisabledButton","setNameMatrix","parentCompanyCode","setCodeMatrix","handleDeleteItem","event","option","index","tableData","containerMain","getInfoCustomer","abbreviation","maxLength","target","containerAddButton","addButton","containerTable","table","search","propTypes","bool","isRequired","any","func","defaultProps"],"mappings":"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","sourcesContent":["import React, {\n  useMemo,\n  useCallback,\n  useState\n} from 'react'\nimport { useDispatch } from 'react-redux'\n\nimport PropTypes from 'prop-types'\n\nimport filter from 'lodash/filter'\nimport find from 'lodash/find'\nimport first from 'lodash/first'\nimport isEmpty from 'lodash/isEmpty'\nimport map from 'lodash/map'\n\nimport Grid from '@material-ui/core/Grid'\nimport Add from '@material-ui/icons/Add'\n\nimport { useDialog } from '@britania-crm/dialog'\nimport I18n, { useT } from '@britania-crm/i18n'\nimport {\n  lines as linesCrmRoutes,\n  customer as customerCrmRoutes\n} from '@britania-crm/services/apis/crmApi/resources/routes'\nimport useCrmApi from '@britania-crm/services/hooks/useCrmApi'\nimport { useSnackbar } from '@britania-crm/snackbar'\nimport { AppActions } from '@britania-crm/stores/app'\nimport { getErrorMessage } from '@britania-crm/utils/error'\nimport Button from '@britania-crm/web-components/Button'\nimport CustomAccordion from '@britania-crm/web-components/CustomAccordion'\nimport DataTable from '@britania-crm/web-components/DataTable'\nimport InputAutocomplete from '@britania-crm/web-components/InputAutocomplete'\nimport InputCpfCnpj from '@britania-crm/web-components/InputCpfCnpj'\nimport InputDayMonth from '@britania-crm/web-components/InputDayMonth'\nimport InputHidden from '@britania-crm/web-components/InputHidden'\nimport InputPhone from '@britania-crm/web-components/InputPhone'\nimport InputSelect from '@britania-crm/web-components/InputSelect'\nimport InputText from '@britania-crm/web-components/InputText'\nimport ConfirmModal from '@britania-crm/web-components/Modal/ConfirmModal'\nimport StatusSwitch from '@britania-crm/web-components/StatusSwitch'\nimport Tooltip from '@britania-crm/web-components/Tooltip'\n\nimport useStyles from './styles'\n\nconst MainData = ({\n  isEdit,\n  isDisabled,\n  formRef,\n  setCpf,\n  cpfAlreadyExists,\n  isView\n}) => {\n  const t = useT()\n  const classes = useStyles()\n  const { createDialog } = useDialog()\n  const dispatch = useCallback(useDispatch(), [])\n  const snackbar = useSnackbar()\n\n  const [line, setLine] = useState('')\n  const [family, setFamily] = useState([])\n  const [listByLineOfFamily, setListByLineOfFamily] = useState([])\n  const [matrixCode, setMatrixCode] = useState('')\n  const [disabledButton, setDisabledButton] = useState(false)\n  const mockVoltage = useMemo(() => [{ id: '110', name: '110' }, { id: '220', name: '220' }], [])\n\n  const familiesParams = useMemo(\n    () => {\n      if (line) {\n        return {\n          clientTotvsCode: matrixCode,\n          lines: line\n        }\n      }\n    },\n    [line, matrixCode]\n  )\n\n  const {\n    data: linesFromApi,\n    loading: linesFromApiLoading\n  } = useCrmApi(\n    matrixCode ? [linesCrmRoutes.getAll, matrixCode] : null,\n    { params: { clientTotvsCode: matrixCode } },\n    {\n      onErrorRetry (error, key, config, revalidate, { retryCount }) {\n        if (error.response.status === 500 && retryCount < 5 && !isView) {\n          createDialog({\n            id: 'new-request-modal',\n            Component: ConfirmModal,\n            props: {\n              onConfirm () {\n                revalidate({ retryCount })\n              },\n              text: t('search error line')\n            }\n          })\n        } else {\n          dispatch(AppActions.addAlert({ type: 'error', message: t('maximum number of attempts reached') }))\n        }\n      },\n      revalidateOnFocus: false\n    })\n\n  const {\n    data: familiesFromApi,\n    loading: familiesFromApiLoading\n  } = useCrmApi(\n    (matrixCode && line) ? [linesCrmRoutes.getFamilies, familiesParams] : null,\n    { params: familiesParams },\n    {\n      onErrorRetry (error, key, config, revalidate, { retryCount }) {\n        if (error.response.status === 500 && retryCount < 5 && !isView) {\n          createDialog({\n            id: 'new-request-family-modal',\n            Component: ConfirmModal,\n            props: {\n              onConfirm () {\n                revalidate({ retryCount })\n              },\n              text: t('search error family')\n            }\n          })\n        } else {\n          dispatch(AppActions.addAlert({ type: 'error', message: t('maximum number of attempts reached') }))\n        }\n      },\n      revalidateOnFocus: false\n    })\n\n  const columns = useMemo(() => [\n    {\n      title: t('line', { howMany: 1 }),\n      field: 'lineDescription',\n      width: '50%'\n    },\n    {\n      title: t('family', { howMany: 1 }),\n      field: 'family',\n      width: '50%',\n      render (row) {\n        if (row?.family) {\n          const listFamilyString = map(row.family, ({ familyDescription }) => familyDescription)\n          const shortListFamilyString = listFamilyString.slice(0, 4).join(', ')\n          return (\n            <div>\n              <Tooltip title={ listFamilyString.join(', ') } arrow>\n                {\n                  listFamilyString.length > 4\n                    ? shortListFamilyString.concat('...')\n                    : shortListFamilyString\n                }\n              </Tooltip>\n            </div>\n          )\n        }\n        return ''\n      }\n    }\n  ], [t])\n\n  const OPTIONS_LINE = useMemo(\n    () => filter(\n      linesFromApi,\n      (item) => !find(listByLineOfFamily, ({ lineCode }) => lineCode === item.lineCode)\n    ),\n    [linesFromApi, listByLineOfFamily]\n  )\n\n  const doAddItemTable = useCallback(\n    () => {\n      const arrayFamily = map(family, (item) => find(familiesFromApi, ({ familyCode }) => familyCode === item))\n      const arrayLine = find(linesFromApi, ({ lineCode }) => lineCode === line)\n\n      formRef.current.setFieldValue('linesFamilies', (old) => [\n        ...old,\n        {\n          family: [...arrayFamily],\n          ...arrayLine\n        }\n      ])\n      setFamily([])\n      setLine('')\n    },\n    [familiesFromApi, family, formRef, line, linesFromApi]\n  )\n\n  const handleLineFamily = useCallback(\n    (value) => {\n      setListByLineOfFamily(value)\n      if (isEmpty(value)) {\n        formRef.current.setFieldValue('responsible', {})\n        formRef.current.setFieldValue('regionalManager', {})\n      }\n    },\n    [formRef]\n  )\n\n  const clientParams = useMemo(\n    () => ({\n      page: 1,\n      pageSize: 10,\n      clientRegistrationType: 'REGISTER'\n    }),\n    []\n  )\n\n  const linesAndFamilies = useMemo(\n    () => {\n      const linesFamilies = []\n      if (!isEmpty(family) && line) {\n        map(family, (item) => {\n          linesFamilies.push(`${ line },${ item }`)\n        })\n      }\n      return linesFamilies\n    }\n    , [family, line])\n\n  const regionalParams = useMemo(\n    () => ({\n      page: 1,\n      pageSize: 10,\n      linesAndFamilies\n    }),\n    [linesAndFamilies]\n  )\n\n  const respresentativeParams = useMemo(\n    () => ({\n      page: 1,\n      pageSize: 10,\n      linesAndFamilies\n    }),\n    [linesAndFamilies]\n  )\n\n  const { loading: regionalFromApiLoading } = useCrmApi(\n    matrixCode && !isEmpty(linesAndFamilies) ? [customerCrmRoutes.getRegional.replace(':clientCode', matrixCode, linesAndFamilies), regionalParams] : null,\n    { params: regionalParams },\n    {\n      onSuccess (data) {\n        const regional = formRef.current.getFieldValue('regionalManager')\n\n        if (first(data)?.approverCode !== regional.approverCode && !isEmpty(regional)) {\n          setDisabledButton(true)\n          setFamily([])\n          setLine('')\n          snackbar.error(t('many managers found'))\n        } else {\n          setDisabledButton(false)\n        }\n\n        if (isEmpty(regional)) {\n          formRef.current.setFieldValue('regionalManager', first(data))\n        }\n      },\n      onErrorRetry (error) {\n        if (error.response.status === 500) {\n          snackbar.error(getErrorMessage(error))\n        }\n      },\n      revalidateOnFocus: false\n    }\n  )\n\n  const { loading: representativeFromApiLoading } = useCrmApi(\n    matrixCode && !isEmpty(listByLineOfFamily) ? [customerCrmRoutes.getResponsible.replace(':clientCode', matrixCode, listByLineOfFamily), respresentativeParams] : null,\n    { params: respresentativeParams },\n    {\n      revalidateOnFocus: false,\n      onSuccess (data) {\n        const responsible = formRef.current.getFieldValue('responsible')\n        if (isEmpty(responsible)) {\n          formRef.current.setFieldValue('responsible', first(data))\n        }\n      },\n      onErrorRetry (error) {\n        if (error.response.status === 500) {\n          snackbar.error(getErrorMessage(error))\n        }\n      }\n    }\n  )\n\n  const isDisabledButton = useMemo(\n    () =>\n      (isEmpty(family) && isEmpty(line)) ||\n      isDisabled ||\n      disabledButton ||\n      regionalFromApiLoading\n    , [disabledButton, family, isDisabled, line, regionalFromApiLoading])\n\n  const setNameMatrix = useCallback(\n    (value) => {\n      setLine('')\n      formRef.current.setFieldValue('clientTotvsDescription', value)\n      setMatrixCode(value.parentCompanyCode)\n    },\n    [formRef]\n  )\n\n  const setCodeMatrix = useCallback(\n    (value) => {\n      setLine('')\n      formRef.current.setFieldValue('clientTotvsCode', value)\n      setMatrixCode(value.parentCompanyCode)\n    },\n    [formRef]\n  )\n\n  const handleDeleteItem = useCallback((event, row) =>\n    formRef.current.setFieldValue('linesFamilies', filter(listByLineOfFamily, (option, index) => index !== row.tableData.id))\n  , [formRef, listByLineOfFamily])\n\n  return (\n    <CustomAccordion header={ t('main data') }>\n      <Grid container spacing={ 1 } className={ classes.containerMain }>\n        <Grid item sm={ 12 } md={ 4 } >\n          <InputAutocomplete\n            url={ customerCrmRoutes.getInfoCustomer }\n            params={ clientParams }\n            valueKey=\"parentCompanyCode\"\n            paramName=\"parentCompanyCode\"\n            name=\"clientTotvsCode\"\n            label={ t('matrix code', { abbreviation: false }) }\n            disabled={ isEdit || isDisabled }\n            onValueChange={ setNameMatrix }\n          />\n        </Grid>\n        <Grid item sm={ 12 } md={ 4 } >\n          <InputAutocomplete\n            url={ customerCrmRoutes.getInfoCustomer }\n            params={ clientParams }\n            valueKey=\"parentCompanyName\"\n            paramName=\"parentCompany\"\n            name=\"clientTotvsDescription\"\n            label={ t('matrix', { howMany: 1 }) }\n            disabled={ isEdit || isDisabled }\n            onValueChange={ setCodeMatrix }\n          />\n        </Grid>\n        <Grid item sm={ 12 } md={ 4 } >\n          <InputCpfCnpj\n            name=\"cpf\"\n            label=\"CPF\"\n            mode=\"cpf\"\n            disabled={ isDisabled }\n            onValueChange={ setCpf }\n            helperText={ cpfAlreadyExists ? 'CPF já cadastrado em outra Matriz' : '' }\n          />\n        </Grid>\n        <Grid item sm={ 12 }>\n          <InputText\n            name=\"name\"\n            label={ t('name', { howMany: 1 }) }\n            disabled={ isDisabled }\n            inputProps={ { maxLength: 200 } }\n          />\n        </Grid>\n        <Grid item sm={ 12 }>\n          <InputText\n            name=\"category\"\n            label={ t('category', { howMany: 1 }) }\n            disabled={ isDisabled }\n            inputProps={ { maxLength: 200 } }\n          />\n        </Grid>\n        <Grid item sm={ 12 } md={ 5 } >\n          <InputSelect\n            detached\n            valueKey=\"lineDescription\"\n            idKey=\"lineCode\"\n            value={ line }\n            loading={ linesFromApiLoading }\n            onChange={ ({ target }) => {\n              setLine(target.value)\n              setFamily([])\n            } }\n            name=\"line\"\n            label={ t('line', { howMany: 1 }) }\n            id=\"select-line\"\n            required\n            options={ OPTIONS_LINE }\n            disabled={ isDisabled || !linesFromApi }\n          />\n        </Grid>\n        <Grid item sm={ 12 } md={ 5 }>\n          <InputSelect\n            detached\n            valueKey=\"familyDescription\"\n            idKey=\"familyCode\"\n            disabled={ isDisabled || isEmpty(familiesFromApi) }\n            value={ family }\n            onChange={ ({ target }) => setFamily(target.value) }\n            name=\"family\"\n            label={ t('family', { howMany: 1 }) }\n            id=\"select-family\"\n            loading={ familiesFromApiLoading }\n            required\n            options={ familiesFromApi }\n            multiple\n          />\n        </Grid>\n        <Grid item sm={ 12 } md={ 2 } className={ classes.containerAddButton }>\n          <I18n\n            id=\"add-button\"\n            as={ Button }\n            size=\"small\"\n            startIcon={ <Add /> }\n            variant=\"contained\"\n            onClick={ doAddItemTable }\n            className={ classes.addButton }\n            disabled={ isDisabledButton }\n          >\n            datagrid body add tooltip\n          </I18n>\n        </Grid>\n        <Grid item sm={ 12 } className={ classes.containerTable }>\n          <div className={ classes.table }>\n            <DataTable\n              data={ listByLineOfFamily }\n              columns={ columns }\n              loading={ false }\n              onDeleteClick={ !isDisabled && handleDeleteItem }\n              options={ { search: false } }\n            />\n            <InputHidden\n              name=\"linesFamilies\"\n              onValueChange={ handleLineFamily }\n              showError\n            />\n          </div>\n        </Grid>\n        <Grid item sm={ 12 } md={ 6 } >\n          <InputAutocomplete\n            valueKey=\"approverDescription\"\n            name=\"responsible\"\n            label={ t('responsible', { howMany: 1 }) }\n            disabled={ true }\n            loading={ representativeFromApiLoading }\n          />\n        </Grid>\n        <Grid item sm={ 12 } md={ 6 } >\n          <InputAutocomplete\n            loading={ regionalFromApiLoading }\n            valueKey=\"approverDescription\"\n            name=\"regionalManager\"\n            label={ t('regional manager') }\n            disabled={ true }\n          />\n        </Grid>\n        <Grid item sm={ 12 } md={ 2 } >\n          <InputSelect\n            name=\"voltage\"\n            label={ t('voltage', { howMany: 1 }) }\n            options={ mockVoltage }\n            disabled={ isDisabled }\n          />\n        </Grid>\n        <Grid item sm={ 12 } md={ 4 } >\n          <InputText\n            name=\"role\"\n            label={ t('office', { howMany: 1 }) }\n            disabled={ isDisabled }\n            inputProps={ { maxLength: 50 } }\n          />\n        </Grid>\n        <Grid item sm={ 12 } md={ 2 } >\n          <InputDayMonth\n            label={ t('birthday', { howMany: 1 }) }\n            type=\"tel\"\n            mode=\"dd/mm\"\n            name=\"birthday\"\n            disabled={ isDisabled }\n          />\n        </Grid>\n        <Grid item sm={ 12 } md={ 4 } >\n          <InputText\n            name=\"email\"\n            label={ t('email') }\n            disabled={ isDisabled }\n            inputProps={ { maxLength: 40 } }\n          />\n        </Grid>\n        <Grid item sm={ 12 } md={ 4 } >\n          <InputPhone\n            name=\"telephone\"\n            label={ t('phone', { howMany: 1 }) }\n            disabled={ isDisabled }\n          />\n        </Grid>\n        {isEdit && (\n          <Grid item sm={ 12 } md={ 2 } className={ classes.status }>\n            <StatusSwitch\n              name=\"active\"\n              disabled={ isDisabled }\n            />\n          </Grid>)}\n      </Grid>\n    </CustomAccordion>\n  )\n}\n\nMainData.propTypes = {\n  isEdit: PropTypes.bool,\n  isDisabled: PropTypes.bool.isRequired,\n  formRef: PropTypes.any.isRequired,\n  setCpf: PropTypes.func.isRequired,\n  cpfAlreadyExists: PropTypes.bool,\n  isView: PropTypes.bool\n}\n\nMainData.defaultProps = {\n  isEdit: false,\n  cpfAlreadyExists: false,\n  isView: false\n}\n\nexport default MainData\n"]},"metadata":{},"sourceType":"module"}