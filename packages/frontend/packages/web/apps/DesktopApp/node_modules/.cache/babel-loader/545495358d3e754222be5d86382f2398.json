{"ast":null,"code":"import * as Yup from 'yup';\nimport flow from 'lodash/fp/flow';\nimport date from '@britania-crm/forms/validators/date.validator';\nimport maxLength from '@britania-crm/forms/validators/maxLength.validator';\nimport required from '@britania-crm/forms/validators/required.validator';\nexport const INITIAL_VALUES = {\n  number: '',\n  issuerCompany: {},\n  issuerCompanyCode: '',\n  issuerCompanyName: '',\n  issueDate: '',\n  dueDate: '',\n  value: '',\n  company: '',\n  observation: '',\n  active: true\n};\nexport default (({\n  t\n}) => Yup.object().shape({\n  number: required({\n    t\n  })(Yup.string()),\n  issuerCompany: required({\n    t,\n    isNotText: true\n  })(Yup.object()),\n  issuerCompanyCode: required({\n    t\n  })(Yup.string()),\n  issuerCompanyName: Yup.string(),\n  issueDate: flow(date({\n    t\n  }), required({\n    t\n  }))(Yup.string()),\n  dueDate: flow(date({\n    t\n  }), required({\n    t\n  }))(Yup.string()),\n  value: required({\n    t\n  })(Yup.string()),\n  company: required({\n    t\n  })(Yup.string()),\n  observation: flow(maxLength({\n    t,\n    length: 500,\n    type: t('characters', {\n      howMany: 1\n    }),\n    field: t('observation', {\n      howMany: 1\n    })\n  }), required({\n    t\n  }))(Yup.string())\n}));","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/core/forms/schemas/vpc/vpc.nd.schema.js"],"names":["Yup","flow","date","maxLength","required","INITIAL_VALUES","number","issuerCompany","issuerCompanyCode","issuerCompanyName","issueDate","dueDate","value","company","observation","active","t","object","shape","string","isNotText","length","type","howMany","field"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;AAEA,OAAOC,IAAP,MAAiB,gBAAjB;AAEA,OAAOC,IAAP,MAAiB,+CAAjB;AACA,OAAOC,SAAP,MAAsB,oDAAtB;AACA,OAAOC,QAAP,MAAqB,mDAArB;AAEA,OAAO,MAAMC,cAAc,GAAG;AAC5BC,EAAAA,MAAM,EAAE,EADoB;AAE5BC,EAAAA,aAAa,EAAE,EAFa;AAG5BC,EAAAA,iBAAiB,EAAE,EAHS;AAI5BC,EAAAA,iBAAiB,EAAE,EAJS;AAK5BC,EAAAA,SAAS,EAAE,EALiB;AAM5BC,EAAAA,OAAO,EAAE,EANmB;AAO5BC,EAAAA,KAAK,EAAE,EAPqB;AAQ5BC,EAAAA,OAAO,EAAE,EARmB;AAS5BC,EAAAA,WAAW,EAAE,EATe;AAU5BC,EAAAA,MAAM,EAAE;AAVoB,CAAvB;AAaP,gBAAe,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAWhB,GAAG,CAACiB,MAAJ,GAAaC,KAAb,CAAmB;AAC3CZ,EAAAA,MAAM,EAAEF,QAAQ,CAAC;AAAEY,IAAAA;AAAF,GAAD,CAAR,CAAgBhB,GAAG,CAACmB,MAAJ,EAAhB,CADmC;AAE3CZ,EAAAA,aAAa,EAAEH,QAAQ,CAAC;AAAEY,IAAAA,CAAF;AAAKI,IAAAA,SAAS,EAAE;AAAhB,GAAD,CAAR,CAAiCpB,GAAG,CAACiB,MAAJ,EAAjC,CAF4B;AAG3CT,EAAAA,iBAAiB,EAAEJ,QAAQ,CAAC;AAAEY,IAAAA;AAAF,GAAD,CAAR,CAAgBhB,GAAG,CAACmB,MAAJ,EAAhB,CAHwB;AAI3CV,EAAAA,iBAAiB,EAAET,GAAG,CAACmB,MAAJ,EAJwB;AAK3CT,EAAAA,SAAS,EAAET,IAAI,CACbC,IAAI,CAAC;AAAEc,IAAAA;AAAF,GAAD,CADS,EAEbZ,QAAQ,CAAC;AAAEY,IAAAA;AAAF,GAAD,CAFK,CAAJ,CAGThB,GAAG,CAACmB,MAAJ,EAHS,CALgC;AAS3CR,EAAAA,OAAO,EAAEV,IAAI,CACXC,IAAI,CAAC;AAAEc,IAAAA;AAAF,GAAD,CADO,EAEXZ,QAAQ,CAAC;AAAEY,IAAAA;AAAF,GAAD,CAFG,CAAJ,CAGPhB,GAAG,CAACmB,MAAJ,EAHO,CATkC;AAa3CP,EAAAA,KAAK,EAAER,QAAQ,CAAC;AAAEY,IAAAA;AAAF,GAAD,CAAR,CAAgBhB,GAAG,CAACmB,MAAJ,EAAhB,CAboC;AAc3CN,EAAAA,OAAO,EAAET,QAAQ,CAAC;AAAEY,IAAAA;AAAF,GAAD,CAAR,CAAgBhB,GAAG,CAACmB,MAAJ,EAAhB,CAdkC;AAe3CL,EAAAA,WAAW,EAAEb,IAAI,CACfE,SAAS,CAAC;AACRa,IAAAA,CADQ;AAERK,IAAAA,MAAM,EAAE,GAFA;AAGRC,IAAAA,IAAI,EAAEN,CAAC,CAAC,YAAD,EAAe;AAAEO,MAAAA,OAAO,EAAE;AAAX,KAAf,CAHC;AAIRC,IAAAA,KAAK,EAAER,CAAC,CAAC,aAAD,EAAgB;AAAEO,MAAAA,OAAO,EAAE;AAAX,KAAhB;AAJA,GAAD,CADM,EAOfnB,QAAQ,CAAC;AAAEY,IAAAA;AAAF,GAAD,CAPO,CAAJ,CAQXhB,GAAG,CAACmB,MAAJ,EARW;AAf8B,CAAnB,CAA1B","sourcesContent":["import * as Yup from 'yup'\n\nimport flow from 'lodash/fp/flow'\n\nimport date from '@britania-crm/forms/validators/date.validator'\nimport maxLength from '@britania-crm/forms/validators/maxLength.validator'\nimport required from '@britania-crm/forms/validators/required.validator'\n\nexport const INITIAL_VALUES = {\n  number: '',\n  issuerCompany: {},\n  issuerCompanyCode: '',\n  issuerCompanyName: '',\n  issueDate: '',\n  dueDate: '',\n  value: '',\n  company: '',\n  observation: '',\n  active: true\n}\n\nexport default ({ t }) => Yup.object().shape({\n  number: required({ t })(Yup.string()),\n  issuerCompany: required({ t, isNotText: true })(Yup.object()),\n  issuerCompanyCode: required({ t })(Yup.string()),\n  issuerCompanyName: Yup.string(),\n  issueDate: flow(\n    date({ t }),\n    required({ t })\n  )(Yup.string()),\n  dueDate: flow(\n    date({ t }),\n    required({ t })\n  )(Yup.string()),\n  value: required({ t })(Yup.string()),\n  company: required({ t })(Yup.string()),\n  observation: flow(\n    maxLength({\n      t,\n      length: 500,\n      type: t('characters', { howMany: 1 }),\n      field: t('observation', { howMany: 1 })\n    }),\n    required({ t })\n  )(Yup.string())\n})\n"]},"metadata":{},"sourceType":"module"}