{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/sla/screens/Sla/Sla.js\";\nimport React, { useMemo, useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport { useT } from '@britania-crm/i18n';\nimport { sla as SlaRoutes } from '@britania-crm/services/apis/crmApi/resources/routes';\nimport { colors } from '@britania-crm/styles';\nimport { formatBackDateToFriendlyFormat } from '@britania-crm/utils/date';\nimport DataTable from '@britania-crm/web-components/DataTable';\nimport { useRoutes } from '@britania-crm/web-src/routes/authenticated.routes';\nimport { Container, TableText } from './styles';\n\nconst Sla = () => {\n  const t = useT();\n  const history = useHistory();\n  const {\n    routes\n  } = useRoutes();\n  const columns = useMemo(() => [{\n    title: 'SLA',\n    field: 'expirationTime',\n\n    render(row) {\n      let color = colors.error.main;\n\n      if (row.expirationTime === 'GREEN') {\n        color = colors.success.main;\n      }\n\n      if (row.expirationTime === 'YELLOW') {\n        color = colors.warning.main;\n      }\n\n      return /*#__PURE__*/React.createElement(AccessTimeIcon, {\n        htmlColor: color,\n        fontSize: \"default\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }\n      });\n    }\n\n  }, {\n    title: 'Data de vencimento',\n    field: 'dueDate',\n    render: row => /*#__PURE__*/React.createElement(TableText, {\n      expirationTime: row.expirationTime,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, formatBackDateToFriendlyFormat(row.dueDate))\n  }, {\n    title: 'Tipo de pendência',\n    field: 'workflowType',\n    render: row => /*#__PURE__*/React.createElement(TableText, {\n      expirationTime: row.expirationTime,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, row.workflowType)\n  }, {\n    title: 'Tarefa',\n    field: 'taskName'\n  }, {\n    title: 'Matriz',\n    field: 'parentCompanyName'\n  }], []);\n  const onRowClick = useCallback((event, row) => {\n    if (routes.editCustomer) {\n      history.push(routes.editCustomer.path, {\n        params: {\n          id: row.workflowIdentifier,\n          mode: 'edit'\n        }\n      });\n    }\n  }, [history, routes]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DataTable, {\n    data: SlaRoutes.getAll,\n    columns: columns,\n    title: t('all slas'),\n    onGoBack: history.goBack,\n    addFilterTitle: t('filter data'),\n    emptyMessage: t('buyer datagrid body empty data source message'),\n    options: {\n      search: false\n    },\n    onRowClick: onRowClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Sla;","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/src/modules/sla/screens/Sla/Sla.js"],"names":["React","useMemo","useCallback","useHistory","AccessTimeIcon","useT","sla","SlaRoutes","colors","formatBackDateToFriendlyFormat","DataTable","useRoutes","Container","TableText","Sla","t","history","routes","columns","title","field","render","row","color","error","main","expirationTime","success","warning","dueDate","workflowType","onRowClick","event","editCustomer","push","path","params","id","workflowIdentifier","mode","getAll","goBack","search"],"mappings":"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","sourcesContent":["import React, {\n  useMemo,\n  useCallback\n} from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport AccessTimeIcon from '@material-ui/icons/AccessTime'\n\nimport { useT } from '@britania-crm/i18n'\nimport { sla as SlaRoutes } from '@britania-crm/services/apis/crmApi/resources/routes'\nimport { colors } from '@britania-crm/styles'\nimport { formatBackDateToFriendlyFormat } from '@britania-crm/utils/date'\nimport DataTable from '@britania-crm/web-components/DataTable'\nimport { useRoutes } from '@britania-crm/web-src/routes/authenticated.routes'\n\nimport {\n  Container,\n  TableText\n} from './styles'\n\nconst Sla = () => {\n  const t = useT()\n  const history = useHistory()\n  const { routes } = useRoutes()\n\n  const columns = useMemo(() => [\n    {\n      title: 'SLA',\n      field: 'expirationTime',\n      render (row) {\n        let color = colors.error.main\n        if (row.expirationTime === 'GREEN') {\n          color = colors.success.main\n        }\n        if (row.expirationTime === 'YELLOW') {\n          color = colors.warning.main\n        }\n\n        return (\n          <AccessTimeIcon\n            htmlColor={ color }\n            fontSize=\"default\"\n          />\n        )\n      }\n    },\n    {\n      title: 'Data de vencimento',\n      field: 'dueDate',\n      render: (row) => (\n        <TableText expirationTime={ row.expirationTime }>{\n          formatBackDateToFriendlyFormat(row.dueDate)\n        }</TableText>\n      )\n    },\n    {\n      title: 'Tipo de pendência',\n      field: 'workflowType',\n      render: (row) => (\n        <TableText expirationTime={ row.expirationTime }>{\n          row.workflowType\n        }</TableText>\n      )\n    },\n    {\n      title: 'Tarefa',\n      field: 'taskName'\n    },\n    {\n      title: 'Matriz',\n      field: 'parentCompanyName'\n    }\n\n  ], [])\n\n  const onRowClick = useCallback((event, row) => {\n    if (routes.editCustomer) {\n      history.push(routes.editCustomer.path, { params: { id: row.workflowIdentifier, mode: 'edit' } })\n    }\n  }, [history, routes])\n\n  return (\n    <>\n      <Container>\n        <DataTable\n          data={ SlaRoutes.getAll }\n          columns={ columns }\n          title={ t('all slas') }\n          onGoBack={ history.goBack }\n          addFilterTitle={ t('filter data') }\n          emptyMessage={ t('buyer datagrid body empty data source message') }\n          options={ { search: false } }\n          onRowClick={ onRowClick }\n        />\n      </Container>\n    </>\n  )\n}\n\nexport default Sla\n"]},"metadata":{},"sourceType":"module"}