{"ast":null,"code":"import { put, call, all, takeLatest } from 'redux-saga/effects';\nimport doDownloadFile from 'js-file-download';\nimport map from 'lodash/map';\nimport { MSG003, MSG033 } from '@britania-crm/constants/feedbackMessages.constants';\nimport { download } from '@britania-crm/services/apis/crmApi/resources/app.service';\nimport { deleteFile, uploadSingleFile } from '@britania-crm/services/apis/crmApi/resources/file.service';\nimport { postVpc, putVpc, startWorkflowVpc } from '@britania-crm/services/apis/crmApi/resources/vpc.service';\nimport { AppActions } from '../app/app.actions';\nimport { VpcTypes, VpcActions } from './vpc.actions';\n\nconst doUploadFileVpc = async (file, description) => {\n  const formData = new FormData();\n  formData.append('file', file);\n  const {\n    id\n  } = await uploadSingleFile(formData);\n  return {\n    fileId: id,\n    description\n  };\n};\n\nfunction* saveVpc({\n  vpc,\n  startWorkflow,\n  onSuccess = () => {},\n  onError = () => {}\n}) {\n  try {\n    const infoFileUpload = yield all(map(vpc.attachments, item => call(doUploadFileVpc, item.file, item.description)));\n    const newVpc = { ...vpc,\n      attachments: infoFileUpload\n    };\n    const response = yield call(postVpc, newVpc);\n\n    if (startWorkflow) {\n      yield put(VpcActions.startWorkflowVpc(response === null || response === void 0 ? void 0 : response.id));\n    }\n\n    yield call(onSuccess);\n    yield put(AppActions.addAlert({\n      type: 'success',\n      message: MSG003\n    }));\n  } catch (error) {\n    yield put(AppActions.addAlert({\n      type: 'error',\n      message: 'Falha ao cadastrar VPC.'\n    }));\n    yield call(onError, error);\n  }\n}\n\nfunction* editVpc({\n  id,\n  vpc,\n  startWorkflow,\n  onSuccess = () => {},\n  onError = () => {}\n}) {\n  try {\n    const infoFileUpload = yield all(map(vpc.attachments, item => {\n      if ((item === null || item === void 0 ? void 0 : item.file) instanceof File) {\n        return call(doUploadFileVpc, item.file, item.description);\n      }\n\n      return item;\n    }));\n    const newVpc = { ...vpc,\n      attachments: infoFileUpload\n    };\n    yield call(putVpc, id, newVpc);\n\n    if (startWorkflow) {\n      yield put(VpcActions.startWorkflowVpc(id));\n    }\n\n    yield call(onSuccess);\n    yield put(AppActions.addAlert({\n      type: 'success',\n      message: MSG003\n    }));\n  } catch (error) {\n    yield put(AppActions.addAlert({\n      type: 'error',\n      message: 'Falha ao editar VPC.'\n    }));\n    yield call(onError, error);\n  }\n}\n\nfunction* doStartWorkflowVpc({\n  id\n}) {\n  try {\n    yield call(startWorkflowVpc, id);\n  } catch (error) {\n    yield put(AppActions.addAlert({\n      type: 'error',\n      message: 'Falha ao iniciar fluxo de tarefas do VPC atual.'\n    }));\n  }\n}\n\nfunction* doDeleteFileVpc({\n  data,\n  onSuccess\n}) {\n  try {\n    yield call(deleteFile, data);\n    yield call(onSuccess);\n  } catch (error) {\n    yield put(AppActions.addAlert({\n      type: 'error',\n      message: MSG033\n    }));\n  }\n}\n\nfunction* doDowloadFileVpc({\n  url,\n  filename,\n  onSuccess\n}) {\n  try {\n    const response = yield call(download, encodeURIComponent(url));\n    yield call(doDownloadFile, response, filename);\n    yield call(onSuccess, false);\n  } catch (error) {\n    yield put(AppActions.addAlert({\n      type: 'error',\n      message: 'Falha ao baixar arquivo!'\n    }));\n  }\n}\n\nexport default [takeLatest(VpcTypes.SAVE_VPC, saveVpc), takeLatest(VpcTypes.EDIT_VPC, editVpc), takeLatest(VpcTypes.START_WORKFLOW_VPC, doStartWorkflowVpc), takeLatest(VpcTypes.UPLOAD_FILE_VPC, doUploadFileVpc), takeLatest(VpcTypes.DOWNLOAD_FILE_VPC, doDowloadFileVpc), takeLatest(VpcTypes.DELETE_FILE_VPC, doDeleteFileVpc)];","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/core/stores/vpc/vpc.sagas.js"],"names":["put","call","all","takeLatest","doDownloadFile","map","MSG003","MSG033","download","deleteFile","uploadSingleFile","postVpc","putVpc","startWorkflowVpc","AppActions","VpcTypes","VpcActions","doUploadFileVpc","file","description","formData","FormData","append","id","fileId","saveVpc","vpc","startWorkflow","onSuccess","onError","infoFileUpload","attachments","item","newVpc","response","addAlert","type","message","error","editVpc","File","doStartWorkflowVpc","doDeleteFileVpc","data","doDowloadFileVpc","url","filename","encodeURIComponent","SAVE_VPC","EDIT_VPC","START_WORKFLOW_VPC","UPLOAD_FILE_VPC","DOWNLOAD_FILE_VPC","DELETE_FILE_VPC"],"mappings":"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","sourcesContent":["import {\n  put,\n  call,\n  all,\n  takeLatest\n} from 'redux-saga/effects'\n\nimport doDownloadFile from 'js-file-download'\n\nimport map from 'lodash/map'\n\nimport {\n  MSG003,\n  MSG033\n} from '@britania-crm/constants/feedbackMessages.constants'\nimport { download } from '@britania-crm/services/apis/crmApi/resources/app.service'\nimport {\n  deleteFile,\n  uploadSingleFile\n} from '@britania-crm/services/apis/crmApi/resources/file.service'\nimport {\n  postVpc,\n  putVpc,\n  startWorkflowVpc\n} from '@britania-crm/services/apis/crmApi/resources/vpc.service'\n\nimport { AppActions } from '../app/app.actions'\nimport {\n  VpcTypes,\n  VpcActions\n} from './vpc.actions'\n\nconst doUploadFileVpc = async (file, description) => {\n  const formData = new FormData()\n  formData.append('file', file)\n  const { id } = await uploadSingleFile(formData)\n\n  return { fileId: id, description }\n}\n\nfunction* saveVpc ({\n  vpc, startWorkflow, onSuccess = () => {}, onError = () => {}\n}) {\n  try {\n    const infoFileUpload = yield all(map(\n      vpc.attachments,\n      (item) => call(doUploadFileVpc, item.file, item.description)\n    ))\n\n    const newVpc = {\n      ...vpc,\n      attachments: infoFileUpload\n    }\n\n    const response = yield call(postVpc, newVpc)\n\n    if (startWorkflow) {\n      yield put(VpcActions.startWorkflowVpc(response?.id))\n    }\n\n    yield call(onSuccess)\n    yield put(AppActions.addAlert({ type: 'success', message: MSG003 }))\n  } catch (error) {\n    yield put(AppActions.addAlert({ type: 'error', message: 'Falha ao cadastrar VPC.' }))\n    yield call(onError, error)\n  }\n}\n\nfunction* editVpc ({\n  id, vpc, startWorkflow, onSuccess = () => {}, onError = () => {}\n}) {\n  try {\n    const infoFileUpload = yield all(map(\n      vpc.attachments,\n      (item) => {\n        if (item?.file instanceof File) {\n          return call(doUploadFileVpc, item.file, item.description)\n        }\n        return item\n      }\n    ))\n\n    const newVpc = {\n      ...vpc,\n      attachments: infoFileUpload\n    }\n\n    yield call(putVpc, id, newVpc)\n\n    if (startWorkflow) {\n      yield put(VpcActions.startWorkflowVpc(id))\n    }\n\n    yield call(onSuccess)\n    yield put(AppActions.addAlert({ type: 'success', message: MSG003 }))\n  } catch (error) {\n    yield put(AppActions.addAlert({ type: 'error', message: 'Falha ao editar VPC.' }))\n    yield call(onError, error)\n  }\n}\n\nfunction* doStartWorkflowVpc ({ id }) {\n  try {\n    yield call(startWorkflowVpc, id)\n  } catch (error) {\n    yield put(AppActions.addAlert({ type: 'error', message: 'Falha ao iniciar fluxo de tarefas do VPC atual.' }))\n  }\n}\n\nfunction* doDeleteFileVpc ({ data, onSuccess }) {\n  try {\n    yield call(deleteFile, data)\n    yield call(onSuccess)\n  } catch (error) {\n    yield put(AppActions.addAlert({ type: 'error', message: MSG033 }))\n  }\n}\n\nfunction* doDowloadFileVpc ({\n  url, filename, onSuccess\n}) {\n  try {\n    const response = yield call(download, encodeURIComponent(url))\n\n    yield call(doDownloadFile, response, filename)\n    yield call(onSuccess, false)\n  } catch (error) {\n    yield put(AppActions.addAlert({ type: 'error', message: 'Falha ao baixar arquivo!' }))\n  }\n}\n\nexport default [\n  takeLatest(VpcTypes.SAVE_VPC, saveVpc),\n  takeLatest(VpcTypes.EDIT_VPC, editVpc),\n  takeLatest(VpcTypes.START_WORKFLOW_VPC, doStartWorkflowVpc),\n  takeLatest(VpcTypes.UPLOAD_FILE_VPC, doUploadFileVpc),\n  takeLatest(VpcTypes.DOWNLOAD_FILE_VPC, doDowloadFileVpc),\n  takeLatest(VpcTypes.DELETE_FILE_VPC, doDeleteFileVpc)\n]\n"]},"metadata":{},"sourceType":"module"}