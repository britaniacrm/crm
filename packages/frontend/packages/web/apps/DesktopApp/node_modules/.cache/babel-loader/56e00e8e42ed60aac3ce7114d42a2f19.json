{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documentos/britania/COM-front/packages/web/components/Checkbox/CheckboxStyled.js\";\nimport React, { forwardRef, memo } from 'react';\nimport PropTypes from 'prop-types';\nimport Brightness1Icon from '@material-ui/icons/Brightness1';\nimport CircleCheckedFilled from '@material-ui/icons/CheckCircle';\nimport { colors } from '@britania-crm/styles';\nimport { areEqual } from '@britania-crm/utils/memo';\nimport { Checkbox, FormControlLabel } from './styles';\nconst CheckboxStyled = forwardRef((props, fieldRef) => {\n  const {\n    label,\n    value,\n    style,\n    ...rest\n  } = props;\n  return /*#__PURE__*/React.createElement(FormControlLabel, {\n    label: label,\n    style: {\n      marginBottom: 10,\n      ...style\n    },\n    control: /*#__PURE__*/React.createElement(Checkbox, Object.assign({\n      ref: fieldRef,\n      checked: value,\n      color: \"primary\",\n      icon: /*#__PURE__*/React.createElement(Brightness1Icon, {\n        htmlColor: colors.grey4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 18\n        }\n      }),\n      checkedIcon: /*#__PURE__*/React.createElement(CircleCheckedFilled, {\n        htmlColor: colors.primary.main,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }\n      })\n    }, rest, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  });\n});\nCheckboxStyled.propTypes = {\n  label: PropTypes.string,\n  value: PropTypes.bool,\n  style: PropTypes.object\n};\nCheckboxStyled.defaultProps = {\n  label: null,\n  value: false,\n  style: {}\n};\nexport default memo(CheckboxStyled, areEqual);","map":{"version":3,"sources":["/home/rafael/Documentos/britania/COM-front/packages/web/components/Checkbox/CheckboxStyled.js"],"names":["React","forwardRef","memo","PropTypes","Brightness1Icon","CircleCheckedFilled","colors","areEqual","Checkbox","FormControlLabel","CheckboxStyled","props","fieldRef","label","value","style","rest","marginBottom","grey4","primary","main","propTypes","string","bool","object","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IACEC,UADF,EAEEC,IAFF,QAGO,OAHP;AAKA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,OAAOC,mBAAP,MAAgC,gCAAhC;AAEA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,QAAT,QAAyB,0BAAzB;AAEA,SACEC,QADF,EAEEC,gBAFF,QAGO,UAHP;AAKA,MAAMC,cAAc,GAAGT,UAAU,CAAC,CAACU,KAAD,EAAQC,QAAR,KAAqB;AACrD,QAAM;AACJC,IAAAA,KADI;AAEJC,IAAAA,KAFI;AAGJC,IAAAA,KAHI;AAIJ,OAAGC;AAJC,MAKFL,KALJ;AAOA,sBACE,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAGE,KADV;AAEE,IAAA,KAAK,EAAG;AAAEI,MAAAA,YAAY,EAAE,EAAhB;AAAoB,SAAGF;AAAvB,KAFV;AAGE,IAAA,OAAO,eACL,oBAAC,QAAD;AACE,MAAA,GAAG,EAAGH,QADR;AAEE,MAAA,OAAO,EAAGE,KAFZ;AAGE,MAAA,KAAK,EAAC,SAHR;AAIE,MAAA,IAAI,eAAG,oBAAC,eAAD;AAAiB,QAAA,SAAS,EAAGR,MAAM,CAACY,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJT;AAKE,MAAA,WAAW,eAAG,oBAAC,mBAAD;AAAqB,QAAA,SAAS,EAAGZ,MAAM,CAACa,OAAP,CAAeC,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALhB,OAMOJ,IANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAgBD,CAxBgC,CAAjC;AA0BAN,cAAc,CAACW,SAAf,GAA2B;AACzBR,EAAAA,KAAK,EAAEV,SAAS,CAACmB,MADQ;AAEzBR,EAAAA,KAAK,EAAEX,SAAS,CAACoB,IAFQ;AAGzBR,EAAAA,KAAK,EAAEZ,SAAS,CAACqB;AAHQ,CAA3B;AAMAd,cAAc,CAACe,YAAf,GAA8B;AAC5BZ,EAAAA,KAAK,EAAE,IADqB;AAE5BC,EAAAA,KAAK,EAAE,KAFqB;AAG5BC,EAAAA,KAAK,EAAE;AAHqB,CAA9B;AAMA,eAAeb,IAAI,CAACQ,cAAD,EAAiBH,QAAjB,CAAnB","sourcesContent":["import React, {\n  forwardRef,\n  memo\n} from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport Brightness1Icon from '@material-ui/icons/Brightness1'\nimport CircleCheckedFilled from '@material-ui/icons/CheckCircle'\n\nimport { colors } from '@britania-crm/styles'\nimport { areEqual } from '@britania-crm/utils/memo'\n\nimport {\n  Checkbox,\n  FormControlLabel\n} from './styles'\n\nconst CheckboxStyled = forwardRef((props, fieldRef) => {\n  const {\n    label,\n    value,\n    style,\n    ...rest\n  } = props\n\n  return (\n    <FormControlLabel\n      label={ label }\n      style={ { marginBottom: 10, ...style } }\n      control={\n        <Checkbox\n          ref={ fieldRef }\n          checked={ value }\n          color=\"primary\"\n          icon={ <Brightness1Icon htmlColor={ colors.grey4 } /> }\n          checkedIcon={ <CircleCheckedFilled htmlColor={ colors.primary.main } /> }\n          { ...rest }\n        />\n      }\n    />\n  )\n})\n\nCheckboxStyled.propTypes = {\n  label: PropTypes.string,\n  value: PropTypes.bool,\n  style: PropTypes.object\n}\n\nCheckboxStyled.defaultProps = {\n  label: null,\n  value: false,\n  style: {}\n}\n\nexport default memo(CheckboxStyled, areEqual)\n"]},"metadata":{},"sourceType":"module"}